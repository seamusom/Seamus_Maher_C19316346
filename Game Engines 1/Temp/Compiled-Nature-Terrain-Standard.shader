// Compiled shader for PC, Mac & Linux Standalone

//////////////////////////////////////////////////////////////////////////
// 
// NOTE: This is *not* a valid shader file, the contents are provided just
// for information and for debugging purposes only.
// 
//////////////////////////////////////////////////////////////////////////
// Skipping shader variants that would not be included into build of current scene.

Shader "Nature/Terrain/Standard" {
Properties {
[HideInInspector]  _MainTex ("BaseMap (RGB)", 2D) = "white" { }
[HideInInspector]  _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
[HideInInspector]  _TerrainHolesTexture ("Holes Map (RGB)", 2D) = "white" { }
}
SubShader { 
 Tags { "QUEUE"="Geometry-100" "RenderType"="Opaque" }


 // Stats for Vertex shader:
 //        d3d11: 34 avg math (15..61)
 // Stats for Fragment shader:
 //        d3d11: 199 avg math (155..248), 11 avg texture (6..16), 7 avg branch (6..8)
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry-100" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 15 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerDraw" (176 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[4], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb0[3].xyzw
   4: mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb1[18].xyzw
   6: mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
   9: mul r0.xyz, v2.yyyy, cb0[1].xyzx
  10: mad r0.xyz, cb0[0].xyzx, v2.xxxx, r0.xyzx
  11: mad r0.xyz, cb0[2].xyzx, v2.zzzz, r0.xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mov o3.xy, v3.xyxx
  16: mov o3.zw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mov o5.xyzw, l(0,0,0,0)
  19: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 155 math, 12 temp registers, 6 textures, 6 branches
Set 2D Texture "_Control" to slot 0 sampler slot 2
Set 2D Texture "_Splat0" to slot 1 sampler slot 3
Set 2D Texture "_Splat1" to slot 2 sampler slot 4
Set 2D Texture "_Splat2" to slot 3 sampler slot 5
Set 2D Texture "_Splat3" to slot 4 sampler slot 6
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 1

Constant Buffer "$Globals" (192 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 160
  Float _Metallic1 at 164
  Float _Metallic2 at 168
  Float _Metallic3 at 172
  Float _Smoothness0 at 176
  Float _Smoothness1 at 180
  Float _Smoothness2 at 184
  Float _Smoothness3 at 188
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float       
// TEXCOORD                 5   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[8], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 12
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: mad r2.xy, v3.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: mul r2.xy, r2.xyxx, cb0[5].xyxx
   7: sample r2.xyzw, r2.xyxx, t0.xyzw, s2
   8: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   9: add r3.x, r1.w, l(0.001000)
  10: div r2.xyzw, r2.xyzw, r3.xxxx
  11: mad r3.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mad r3.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad r4.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
  14: mad r4.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
  15: sample r5.xyzw, r3.xyxx, t1.xyzw, s3
  16: mul r5.xyzw, r2.xxxx, r5.xyzw
  17: mul r5.w, r5.w, cb0[11].x
  18: sample r3.xyzw, r3.zwzz, t2.xyzw, s4
  19: mul r3.xyzw, r2.yyyy, r3.xyzw
  20: mul r3.w, r3.w, cb0[11].y
  21: add r3.xyzw, r3.xyzw, r5.xyzw
  22: sample r5.xyzw, r4.xyxx, t3.xyzw, s5
  23: mul r5.xyzw, r2.zzzz, r5.xyzw
  24: mul r5.w, r5.w, cb0[11].z
  25: add r3.xyzw, r3.xyzw, r5.xyzw
  26: sample r4.xyzw, r4.zwzz, t4.xyzw, s6
  27: mul r4.xyzw, r2.wwww, r4.xyzw
  28: mul r4.w, r4.w, cb0[11].w
  29: add r3.xyzw, r3.xyzw, r4.xyzw
  30: dp4 r2.x, r2.xyzw, cb0[10].xyzw
  31: eq r2.y, cb4[0].x, l(1.000000)
  32: if_nz r2.y
  33:   eq r2.y, cb4[0].y, l(1.000000)
  34:   mul r4.xyz, v2.yyyy, cb4[2].xyzx
  35:   mad r4.xyz, cb4[1].xyzx, v2.xxxx, r4.xyzx
  36:   mad r4.xyz, cb4[3].xyzx, v2.zzzz, r4.xyzx
  37:   add r4.xyz, r4.xyzx, cb4[4].xyzx
  38:   movc r2.yzw, r2.yyyy, r4.xxyz, v2.xxyz
  39:   add r2.yzw, r2.yyzw, -cb4[6].xxyz
  40:   mul r4.yzw, r2.yyzw, cb4[5].xxyz
  41:   mad r2.y, r4.y, l(0.250000), l(0.750000)
  42:   mad r2.z, cb4[0].z, l(0.500000), l(0.750000)
  43:   max r4.x, r2.z, r2.y
  44:   sample r4.xyzw, r4.xzwx, t7.xyzw, s1
  45: else 
  46:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  47: endif 
  48: dp4_sat r2.y, r4.xyzw, cb2[46].xyzw
  49: add r2.z, -r3.w, l(1.000000)
  50: dp3 r2.w, -r1.xyzx, v1.xyzx
  51: add r2.w, r2.w, r2.w
  52: mad r4.xyz, v1.xyzx, -r2.wwww, -r1.xyzx
  53: mul r5.xyz, r2.yyyy, cb0[2].xyzx
  54: lt r2.y, l(0.000000), cb3[2].w
  55: if_nz r2.y
  56:   dp3 r2.y, r4.xyzx, r4.xyzx
  57:   rsq r2.y, r2.y
  58:   mul r6.xyz, r2.yyyy, r4.xyzx
  59:   add r7.xyz, -v2.xyzx, cb3[0].xyzx
  60:   div r7.xyz, r7.xyzx, r6.xyzx
  61:   add r8.xyz, -v2.xyzx, cb3[1].xyzx
  62:   div r8.xyz, r8.xyzx, r6.xyzx
  63:   lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  64:   movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  65:   min r2.y, r7.y, r7.x
  66:   min r2.y, r7.z, r2.y
  67:   add r7.xyz, v2.xyzx, -cb3[2].xyzx
  68:   mad r6.xyz, r6.xyzx, r2.yyyy, r7.xyzx
  69: else 
  70:   mov r6.xyz, r4.xyzx
  71: endif 
  72: mad r2.y, -r2.z, l(0.700000), l(1.700000)
  73: mul r2.y, r2.y, r2.z
  74: mul r2.y, r2.y, l(6.000000)
  75: sample_l r6.xyzw, r6.xyzx, t5.xyzw, s0, r2.y
  76: add r2.w, r6.w, l(-1.000000)
  77: mad r2.w, cb3[3].w, r2.w, l(1.000000)
  78: mul r2.w, r2.w, cb3[3].x
  79: mul r7.xyz, r6.xyzx, r2.wwww
  80: lt r4.w, cb3[1].w, l(0.999990)
  81: if_nz r4.w
  82:   lt r4.w, l(0.000000), cb3[6].w
  83:   if_nz r4.w
  84:     dp3 r4.w, r4.xyzx, r4.xyzx
  85:     rsq r4.w, r4.w
  86:     mul r8.xyz, r4.wwww, r4.xyzx
  87:     add r9.xyz, -v2.xyzx, cb3[4].xyzx
  88:     div r9.xyz, r9.xyzx, r8.xyzx
  89:     add r10.xyz, -v2.xyzx, cb3[5].xyzx
  90:     div r10.xyz, r10.xyzx, r8.xyzx
  91:     lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  92:     movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  93:     min r4.w, r9.y, r9.x
  94:     min r4.w, r9.z, r4.w
  95:     add r9.xyz, v2.xyzx, -cb3[6].xyzx
  96:     mad r4.xyz, r8.xyzx, r4.wwww, r9.xyzx
  97:   endif 
  98:   sample_l r4.xyzw, r4.xyzx, t6.xyzw, s0, r2.y
  99:   add r2.y, r4.w, l(-1.000000)
 100:   mad r2.y, cb3[7].w, r2.y, l(1.000000)
 101:   mul r2.y, r2.y, cb3[7].x
 102:   mul r4.xyz, r4.xyzx, r2.yyyy
 103:   mad r6.xyz, r2.wwww, r6.xyzx, -r4.xyzx
 104:   mad r7.xyz, cb3[1].wwww, r6.xyzx, r4.xyzx
 105: endif 
 106: dp3 r2.y, v1.xyzx, v1.xyzx
 107: rsq r2.y, r2.y
 108: mul r4.xyz, r2.yyyy, v1.xyzx
 109: add r6.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 110: mad r6.xyz, r2.xxxx, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 111: mad r2.x, -r2.x, l(0.779084), l(0.779084)
 112: mul r3.xyz, r2.xxxx, r3.xyzx
 113: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 114: dp3 r0.w, r0.xyzx, r0.xyzx
 115: max r0.w, r0.w, l(0.001000)
 116: rsq r0.w, r0.w
 117: mul r0.xyz, r0.wwww, r0.xyzx
 118: dp3 r0.w, r4.xyzx, r1.xyzx
 119: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
 120: dp3_sat r1.y, r4.xyzx, r0.xyzx
 121: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 122: mul r0.y, r0.x, r0.x
 123: dp2 r0.y, r0.yyyy, r2.zzzz
 124: add r0.y, r0.y, l(-0.500000)
 125: add r0.z, -r1.x, l(1.000000)
 126: mul r1.z, r0.z, r0.z
 127: mul r1.z, r1.z, r1.z
 128: mul r0.z, r0.z, r1.z
 129: mad r0.z, r0.y, r0.z, l(1.000000)
 130: add r1.z, -|r0.w|, l(1.000000)
 131: mul r2.y, r1.z, r1.z
 132: mul r2.y, r2.y, r2.y
 133: mul r1.z, r1.z, r2.y
 134: mad r0.y, r0.y, r1.z, l(1.000000)
 135: mul r0.y, r0.y, r0.z
 136: mul r0.z, r2.z, r2.z
 137: max r0.z, r0.z, l(0.002000)
 138: add r2.y, -r0.z, l(1.000000)
 139: mad r2.w, |r0.w|, r2.y, r0.z
 140: mad r2.y, r1.x, r2.y, r0.z
 141: mul r0.w, |r0.w|, r2.y
 142: mad r0.w, r1.x, r2.w, r0.w
 143: add r0.w, r0.w, l(0.000010)
 144: div r0.w, l(0.500000), r0.w
 145: mul r2.y, r0.z, r0.z
 146: mad r2.w, r1.y, r2.y, -r1.y
 147: mad r1.y, r2.w, r1.y, l(1.000000)
 148: mul r2.y, r2.y, l(0.318310)
 149: mad r1.y, r1.y, r1.y, l(0.000000)
 150: div r1.y, r2.y, r1.y
 151: mul r0.w, r0.w, r1.y
 152: mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.280000, 3.141593)
 153: max r0.w, r0.w, l(0.000100)
 154: sqrt r0.w, r0.w
 155: mul r0.yw, r1.xxxx, r0.yyyw
 156: mad r0.z, -r0.z, r2.z, l(1.000000)
 157: dp3 r1.x, r6.xyzx, r6.xyzx
 158: ne r1.x, r1.x, l(0.000000)
 159: and r1.x, r1.x, l(0x3f800000)
 160: mul r0.w, r0.w, r1.x
 161: add r1.x, -r2.x, r3.w
 162: add_sat r1.x, r1.x, l(1.000000)
 163: mul r2.xyz, r0.yyyy, r5.xyzx
 164: mul r4.xyz, r5.xyzx, r0.wwww
 165: add r0.x, -r0.x, l(1.000000)
 166: mul r0.y, r0.x, r0.x
 167: mul r0.y, r0.y, r0.y
 168: mul r0.x, r0.x, r0.y
 169: add r5.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 170: mad r0.xyw, r5.xyxz, r0.xxxx, r6.xyxz
 171: mul r0.xyw, r0.xyxw, r4.xyxz
 172: mad r0.xyw, r3.xyxz, r2.xyxz, r0.xyxw
 173: mul r2.xyz, r7.xyzx, r0.zzzz
 174: add r3.xyz, -r6.xyzx, r1.xxxx
 175: mad r1.xyz, r1.zzzz, r3.xyzx, r6.xyzx
 176: mad r0.xyz, r2.xyzx, r1.xyzx, r0.xywx
 177: mul o0.xyz, r1.wwww, r0.xyzx
 178: mov o0.w, l(1.000000)
 179: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[46], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  10: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  11: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul r0.xyz, r0.wwww, r0.xyzx
  15: mov o1.xyz, r0.xyzx
  16: mov o3.xy, v3.xyxx
  17: mov o3.zw, l(0,0,0,0)
  18: mul r0.w, r0.y, r0.y
  19: mad r0.w, r0.x, r0.x, -r0.w
  20: mul r1.xyzw, r0.yzzx, r0.xyzz
  21: dp4 r0.x, cb0[42].xyzw, r1.xyzw
  22: dp4 r0.y, cb0[43].xyzw, r1.xyzw
  23: dp4 r0.z, cb0[44].xyzw, r1.xyzw
  24: mad o4.xyz, cb0[45].xyzx, r0.wwww, r0.xyzx
  25: mov o5.xyzw, l(0,0,0,0)
  26: mov o6.xyzw, l(0,0,0,0)
  27: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 182 math, 13 temp registers, 9 textures, 8 branches
Set 2D Texture "_Control" to slot 0 sampler slot 2
Set 2D Texture "_Splat0" to slot 1 sampler slot 3
Set 2D Texture "_Splat1" to slot 2 sampler slot 4
Set 2D Texture "_Splat2" to slot 3 sampler slot 5
Set 2D Texture "_Splat3" to slot 4 sampler slot 6
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 1

Constant Buffer "$Globals" (192 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 160
  Float _Metallic1 at 164
  Float _Metallic2 at 168
  Float _Metallic3 at 172
  Float _Smoothness0 at 176
  Float _Smoothness1 at 180
  Float _Smoothness2 at 184
  Float _Smoothness3 at 188
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[8], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 13
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: mad r2.xy, v3.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: mul r2.xy, r2.xyxx, cb0[5].xyxx
   7: sample r2.xyzw, r2.xyxx, t0.xyzw, s2
   8: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   9: add r3.x, r1.w, l(0.001000)
  10: div r2.xyzw, r2.xyzw, r3.xxxx
  11: mad r3.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mad r3.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad r4.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
  14: mad r4.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
  15: sample r5.xyzw, r3.xyxx, t1.xyzw, s3
  16: mul r5.xyzw, r2.xxxx, r5.xyzw
  17: mul r5.w, r5.w, cb0[11].x
  18: sample r3.xyzw, r3.zwzz, t2.xyzw, s4
  19: mul r3.xyzw, r2.yyyy, r3.xyzw
  20: mul r3.w, r3.w, cb0[11].y
  21: add r3.xyzw, r3.xyzw, r5.xyzw
  22: sample r5.xyzw, r4.xyxx, t3.xyzw, s5
  23: mul r5.xyzw, r2.zzzz, r5.xyzw
  24: mul r5.w, r5.w, cb0[11].z
  25: add r3.xyzw, r3.xyzw, r5.xyzw
  26: sample r4.xyzw, r4.zwzz, t4.xyzw, s6
  27: mul r4.xyzw, r2.wwww, r4.xyzw
  28: mul r4.w, r4.w, cb0[11].w
  29: add r3.xyzw, r3.xyzw, r4.xyzw
  30: dp4 r2.x, r2.xyzw, cb0[10].xyzw
  31: eq r2.y, cb4[0].x, l(1.000000)
  32: if_nz r2.y
  33:   eq r2.z, cb4[0].y, l(1.000000)
  34:   mul r4.xyz, v2.yyyy, cb4[2].xyzx
  35:   mad r4.xyz, cb4[1].xyzx, v2.xxxx, r4.xyzx
  36:   mad r4.xyz, cb4[3].xyzx, v2.zzzz, r4.xyzx
  37:   add r4.xyz, r4.xyzx, cb4[4].xyzx
  38:   movc r4.xyz, r2.zzzz, r4.xyzx, v2.xyzx
  39:   add r4.xyz, r4.xyzx, -cb4[6].xyzx
  40:   mul r4.yzw, r4.xxyz, cb4[5].xxyz
  41:   mad r2.z, r4.y, l(0.250000), l(0.750000)
  42:   mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
  43:   max r4.x, r2.w, r2.z
  44:   sample r4.xyzw, r4.xzwx, t7.xyzw, s1
  45: else 
  46:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  47: endif 
  48: dp4_sat r2.z, r4.xyzw, cb2[46].xyzw
  49: add r2.w, -r3.w, l(1.000000)
  50: dp3 r4.x, -r1.xyzx, v1.xyzx
  51: add r4.x, r4.x, r4.x
  52: mad r4.xyz, v1.xyzx, -r4.xxxx, -r1.xyzx
  53: mul r5.xyz, r2.zzzz, cb0[2].xyzx
  54: if_nz r2.y
  55:   eq r2.y, cb4[0].y, l(1.000000)
  56:   mul r6.xyz, v2.yyyy, cb4[2].xyzx
  57:   mad r6.xyz, cb4[1].xyzx, v2.xxxx, r6.xyzx
  58:   mad r6.xyz, cb4[3].xyzx, v2.zzzz, r6.xyzx
  59:   add r6.xyz, r6.xyzx, cb4[4].xyzx
  60:   movc r6.xyz, r2.yyyy, r6.xyzx, v2.xyzx
  61:   add r6.xyz, r6.xyzx, -cb4[6].xyzx
  62:   mul r6.yzw, r6.xxyz, cb4[5].xxyz
  63:   mul r2.y, r6.y, l(0.250000)
  64:   mul r2.z, cb4[0].z, l(0.500000)
  65:   mad r4.w, -cb4[0].z, l(0.500000), l(0.250000)
  66:   max r2.y, r2.z, r2.y
  67:   min r6.x, r4.w, r2.y
  68:   sample r7.xyzw, r6.xzwx, t7.xyzw, s1
  69:   add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  70:   sample r8.xyzw, r8.xyzx, t7.xyzw, s1
  71:   add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  72:   sample r6.xyzw, r6.xyzx, t7.xyzw, s1
  73:   mov r9.xyz, v1.xyzx
  74:   mov r9.w, l(1.000000)
  75:   dp4 r7.x, r7.xyzw, r9.xyzw
  76:   dp4 r7.y, r8.xyzw, r9.xyzw
  77:   dp4 r7.z, r6.xyzw, r9.xyzw
  78: else 
  79:   mov r6.xyz, v1.xyzx
  80:   mov r6.w, l(1.000000)
  81:   dp4 r7.x, cb2[39].xyzw, r6.xyzw
  82:   dp4 r7.y, cb2[40].xyzw, r6.xyzw
  83:   dp4 r7.z, cb2[41].xyzw, r6.xyzw
  84: endif 
  85: add r6.xyz, r7.xyzx, v4.xyzx
  86: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  87: log r6.xyz, r6.xyzx
  88: mul r6.xyz, r6.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  89: exp r6.xyz, r6.xyzx
  90: mad r6.xyz, r6.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  91: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  92: lt r2.y, l(0.000000), cb3[2].w
  93: if_nz r2.y
  94:   dp3 r2.y, r4.xyzx, r4.xyzx
  95:   rsq r2.y, r2.y
  96:   mul r7.xyz, r2.yyyy, r4.xyzx
  97:   add r8.xyz, -v2.xyzx, cb3[0].xyzx
  98:   div r8.xyz, r8.xyzx, r7.xyzx
  99:   add r9.xyz, -v2.xyzx, cb3[1].xyzx
 100:   div r9.xyz, r9.xyzx, r7.xyzx
 101:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
 102:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
 103:   min r2.y, r8.y, r8.x
 104:   min r2.y, r8.z, r2.y
 105:   add r8.xyz, v2.xyzx, -cb3[2].xyzx
 106:   mad r7.xyz, r7.xyzx, r2.yyyy, r8.xyzx
 107: else 
 108:   mov r7.xyz, r4.xyzx
 109: endif 
 110: mad r2.y, -r2.w, l(0.700000), l(1.700000)
 111: mul r2.y, r2.y, r2.w
 112: mul r2.y, r2.y, l(6.000000)
 113: sample_l r7.xyzw, r7.xyzx, t5.xyzw, s0, r2.y
 114: add r2.z, r7.w, l(-1.000000)
 115: mad r2.z, cb3[3].w, r2.z, l(1.000000)
 116: mul r2.z, r2.z, cb3[3].x
 117: mul r8.xyz, r7.xyzx, r2.zzzz
 118: lt r4.w, cb3[1].w, l(0.999990)
 119: if_nz r4.w
 120:   lt r4.w, l(0.000000), cb3[6].w
 121:   if_nz r4.w
 122:     dp3 r4.w, r4.xyzx, r4.xyzx
 123:     rsq r4.w, r4.w
 124:     mul r9.xyz, r4.wwww, r4.xyzx
 125:     add r10.xyz, -v2.xyzx, cb3[4].xyzx
 126:     div r10.xyz, r10.xyzx, r9.xyzx
 127:     add r11.xyz, -v2.xyzx, cb3[5].xyzx
 128:     div r11.xyz, r11.xyzx, r9.xyzx
 129:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 130:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 131:     min r4.w, r10.y, r10.x
 132:     min r4.w, r10.z, r4.w
 133:     add r10.xyz, v2.xyzx, -cb3[6].xyzx
 134:     mad r4.xyz, r9.xyzx, r4.wwww, r10.xyzx
 135:   endif 
 136:   sample_l r4.xyzw, r4.xyzx, t6.xyzw, s0, r2.y
 137:   add r2.y, r4.w, l(-1.000000)
 138:   mad r2.y, cb3[7].w, r2.y, l(1.000000)
 139:   mul r2.y, r2.y, cb3[7].x
 140:   mul r4.xyz, r4.xyzx, r2.yyyy
 141:   mad r7.xyz, r2.zzzz, r7.xyzx, -r4.xyzx
 142:   mad r8.xyz, cb3[1].wwww, r7.xyzx, r4.xyzx
 143: endif 
 144: dp3 r2.y, v1.xyzx, v1.xyzx
 145: rsq r2.y, r2.y
 146: mul r4.xyz, r2.yyyy, v1.xyzx
 147: add r7.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 148: mad r7.xyz, r2.xxxx, r7.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 149: mad r2.x, -r2.x, l(0.779084), l(0.779084)
 150: mul r3.xyz, r2.xxxx, r3.xyzx
 151: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 152: dp3 r0.w, r0.xyzx, r0.xyzx
 153: max r0.w, r0.w, l(0.001000)
 154: rsq r0.w, r0.w
 155: mul r0.xyz, r0.wwww, r0.xyzx
 156: dp3 r0.w, r4.xyzx, r1.xyzx
 157: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
 158: dp3_sat r1.y, r4.xyzx, r0.xyzx
 159: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 160: mul r0.y, r0.x, r0.x
 161: dp2 r0.y, r0.yyyy, r2.wwww
 162: add r0.y, r0.y, l(-0.500000)
 163: add r0.z, -r1.x, l(1.000000)
 164: mul r1.z, r0.z, r0.z
 165: mul r1.z, r1.z, r1.z
 166: mul r0.z, r0.z, r1.z
 167: mad r0.z, r0.y, r0.z, l(1.000000)
 168: add r1.z, -|r0.w|, l(1.000000)
 169: mul r2.y, r1.z, r1.z
 170: mul r2.y, r2.y, r2.y
 171: mul r1.z, r1.z, r2.y
 172: mad r0.y, r0.y, r1.z, l(1.000000)
 173: mul r0.y, r0.y, r0.z
 174: mul r0.z, r2.w, r2.w
 175: max r0.z, r0.z, l(0.002000)
 176: add r2.y, -r0.z, l(1.000000)
 177: mad r2.z, |r0.w|, r2.y, r0.z
 178: mad r2.y, r1.x, r2.y, r0.z
 179: mul r0.w, |r0.w|, r2.y
 180: mad r0.w, r1.x, r2.z, r0.w
 181: add r0.w, r0.w, l(0.000010)
 182: div r0.w, l(0.500000), r0.w
 183: mul r2.y, r0.z, r0.z
 184: mad r2.z, r1.y, r2.y, -r1.y
 185: mad r1.y, r2.z, r1.y, l(1.000000)
 186: mul r2.y, r2.y, l(0.318310)
 187: mad r1.y, r1.y, r1.y, l(0.000000)
 188: div r1.y, r2.y, r1.y
 189: mul r0.w, r0.w, r1.y
 190: mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.280000, 3.141593)
 191: max r0.w, r0.w, l(0.000100)
 192: sqrt r0.w, r0.w
 193: mul r0.yw, r1.xxxx, r0.yyyw
 194: mad r0.z, -r0.z, r2.w, l(1.000000)
 195: dp3 r1.x, r7.xyzx, r7.xyzx
 196: ne r1.x, r1.x, l(0.000000)
 197: and r1.x, r1.x, l(0x3f800000)
 198: mul r0.w, r0.w, r1.x
 199: add r1.x, -r2.x, r3.w
 200: add_sat r1.x, r1.x, l(1.000000)
 201: mad r2.xyz, r5.xyzx, r0.yyyy, r6.xyzx
 202: mul r4.xyz, r5.xyzx, r0.wwww
 203: add r0.x, -r0.x, l(1.000000)
 204: mul r0.y, r0.x, r0.x
 205: mul r0.y, r0.y, r0.y
 206: mul r0.x, r0.x, r0.y
 207: add r5.xyz, -r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 208: mad r0.xyw, r5.xyxz, r0.xxxx, r7.xyxz
 209: mul r0.xyw, r0.xyxw, r4.xyxz
 210: mad r0.xyw, r3.xyxz, r2.xyxz, r0.xyxw
 211: mul r2.xyz, r8.xyzx, r0.zzzz
 212: add r3.xyz, -r7.xyzx, r1.xxxx
 213: mad r1.xyz, r1.zzzz, r3.xyzx, r7.xyzx
 214: mad r0.xyz, r2.xyzx, r1.xyzx, r0.xywx
 215: mul o0.xyz, r1.wwww, r0.xyzx
 216: mov o0.w, l(1.000000)
 217: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 18 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerCamera" (144 bytes) on slot 0 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  11: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  12: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  13: dp3 r1.w, r1.xyzx, r1.xyzx
  14: rsq r1.w, r1.w
  15: mul o1.xyz, r1.wwww, r1.xyzx
  16: mov o3.xy, v3.xyxx
  17: mov o3.zw, l(0,0,0,0)
  18: mul r0.y, r0.y, cb0[5].x
  19: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  20: mov o4.zw, r0.zzzw
  21: add o4.xy, r1.zzzz, r1.xwxx
  22: mov o5.xyzw, l(0,0,0,0)
  23: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 165 math, 12 temp registers, 7 textures, 6 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_ShadowMapTexture" to slot 5 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 6 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 7 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 1

Constant Buffer "$Globals" (192 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 160
  Float _Metallic1 at 164
  Float _Metallic2 at 168
  Float _Metallic3 at 172
  Float _Smoothness0 at 176
  Float _Smoothness1 at 180
  Float _Smoothness2 at 184
  Float _Smoothness3 at 188
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float   xy w
// TEXCOORD                 5   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_input_ps linear v4.xyw
      dcl_output o0.xyzw
      dcl_temps 12
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: mad r2.xy, v3.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: mul r2.xy, r2.xyxx, cb0[5].xyxx
   7: sample r2.xyzw, r2.xyxx, t0.xyzw, s3
   8: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   9: add r3.x, r1.w, l(0.001000)
  10: div r2.xyzw, r2.xyzw, r3.xxxx
  11: mad r3.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mad r3.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad r4.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
  14: mad r4.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
  15: sample r5.xyzw, r3.xyxx, t1.xyzw, s4
  16: mul r5.xyzw, r2.xxxx, r5.xyzw
  17: mul r5.w, r5.w, cb0[11].x
  18: sample r3.xyzw, r3.zwzz, t2.xyzw, s5
  19: mul r3.xyzw, r2.yyyy, r3.xyzw
  20: mul r3.w, r3.w, cb0[11].y
  21: add r3.xyzw, r3.xyzw, r5.xyzw
  22: sample r5.xyzw, r4.xyxx, t3.xyzw, s6
  23: mul r5.xyzw, r2.zzzz, r5.xyzw
  24: mul r5.w, r5.w, cb0[11].z
  25: add r3.xyzw, r3.xyzw, r5.xyzw
  26: sample r4.xyzw, r4.zwzz, t4.xyzw, s7
  27: mul r4.xyzw, r2.wwww, r4.xyzw
  28: mul r4.w, r4.w, cb0[11].w
  29: add r3.xyzw, r3.xyzw, r4.xyzw
  30: dp4 r2.x, r2.xyzw, cb0[10].xyzw
  31: mov r4.x, cb4[9].z
  32: mov r4.y, cb4[10].z
  33: mov r4.z, cb4[11].z
  34: dp3 r2.y, r0.xyzx, r4.xyzx
  35: add r4.xyz, v2.xyzx, -cb3[25].xyzx
  36: dp3 r2.z, r4.xyzx, r4.xyzx
  37: sqrt r2.z, r2.z
  38: add r2.z, -r2.y, r2.z
  39: mad r2.y, cb3[25].w, r2.z, r2.y
  40: mad_sat r2.y, r2.y, cb3[24].z, cb3[24].w
  41: eq r2.z, cb6[0].x, l(1.000000)
  42: if_nz r2.z
  43:   eq r2.z, cb6[0].y, l(1.000000)
  44:   mul r4.xyz, v2.yyyy, cb6[2].xyzx
  45:   mad r4.xyz, cb6[1].xyzx, v2.xxxx, r4.xyzx
  46:   mad r4.xyz, cb6[3].xyzx, v2.zzzz, r4.xyzx
  47:   add r4.xyz, r4.xyzx, cb6[4].xyzx
  48:   movc r4.xyz, r2.zzzz, r4.xyzx, v2.xyzx
  49:   add r4.xyz, r4.xyzx, -cb6[6].xyzx
  50:   mul r4.yzw, r4.xxyz, cb6[5].xxyz
  51:   mad r2.z, r4.y, l(0.250000), l(0.750000)
  52:   mad r2.w, cb6[0].z, l(0.500000), l(0.750000)
  53:   max r4.x, r2.w, r2.z
  54:   sample r4.xyzw, r4.xzwx, t8.xyzw, s1
  55: else 
  56:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  57: endif 
  58: dp4_sat r2.z, r4.xyzw, cb2[46].xyzw
  59: div r4.xy, v4.xyxx, v4.wwww
  60: sample r4.xyzw, r4.xyxx, t5.xyzw, s2
  61: add r2.z, r2.z, -r4.x
  62: mad r2.y, r2.y, r2.z, r4.x
  63: add r2.z, -r3.w, l(1.000000)
  64: dp3 r2.w, -r1.xyzx, v1.xyzx
  65: add r2.w, r2.w, r2.w
  66: mad r4.xyz, v1.xyzx, -r2.wwww, -r1.xyzx
  67: mul r5.xyz, r2.yyyy, cb0[2].xyzx
  68: lt r2.y, l(0.000000), cb5[2].w
  69: if_nz r2.y
  70:   dp3 r2.y, r4.xyzx, r4.xyzx
  71:   rsq r2.y, r2.y
  72:   mul r6.xyz, r2.yyyy, r4.xyzx
  73:   add r7.xyz, -v2.xyzx, cb5[0].xyzx
  74:   div r7.xyz, r7.xyzx, r6.xyzx
  75:   add r8.xyz, -v2.xyzx, cb5[1].xyzx
  76:   div r8.xyz, r8.xyzx, r6.xyzx
  77:   lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  78:   movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  79:   min r2.y, r7.y, r7.x
  80:   min r2.y, r7.z, r2.y
  81:   add r7.xyz, v2.xyzx, -cb5[2].xyzx
  82:   mad r6.xyz, r6.xyzx, r2.yyyy, r7.xyzx
  83: else 
  84:   mov r6.xyz, r4.xyzx
  85: endif 
  86: mad r2.y, -r2.z, l(0.700000), l(1.700000)
  87: mul r2.y, r2.y, r2.z
  88: mul r2.y, r2.y, l(6.000000)
  89: sample_l r6.xyzw, r6.xyzx, t6.xyzw, s0, r2.y
  90: add r2.w, r6.w, l(-1.000000)
  91: mad r2.w, cb5[3].w, r2.w, l(1.000000)
  92: mul r2.w, r2.w, cb5[3].x
  93: mul r7.xyz, r6.xyzx, r2.wwww
  94: lt r4.w, cb5[1].w, l(0.999990)
  95: if_nz r4.w
  96:   lt r4.w, l(0.000000), cb5[6].w
  97:   if_nz r4.w
  98:     dp3 r4.w, r4.xyzx, r4.xyzx
  99:     rsq r4.w, r4.w
 100:     mul r8.xyz, r4.wwww, r4.xyzx
 101:     add r9.xyz, -v2.xyzx, cb5[4].xyzx
 102:     div r9.xyz, r9.xyzx, r8.xyzx
 103:     add r10.xyz, -v2.xyzx, cb5[5].xyzx
 104:     div r10.xyz, r10.xyzx, r8.xyzx
 105:     lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
 106:     movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
 107:     min r4.w, r9.y, r9.x
 108:     min r4.w, r9.z, r4.w
 109:     add r9.xyz, v2.xyzx, -cb5[6].xyzx
 110:     mad r4.xyz, r8.xyzx, r4.wwww, r9.xyzx
 111:   endif 
 112:   sample_l r4.xyzw, r4.xyzx, t7.xyzw, s0, r2.y
 113:   add r2.y, r4.w, l(-1.000000)
 114:   mad r2.y, cb5[7].w, r2.y, l(1.000000)
 115:   mul r2.y, r2.y, cb5[7].x
 116:   mul r4.xyz, r4.xyzx, r2.yyyy
 117:   mad r6.xyz, r2.wwww, r6.xyzx, -r4.xyzx
 118:   mad r7.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 119: endif 
 120: dp3 r2.y, v1.xyzx, v1.xyzx
 121: rsq r2.y, r2.y
 122: mul r4.xyz, r2.yyyy, v1.xyzx
 123: add r6.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 124: mad r6.xyz, r2.xxxx, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 125: mad r2.x, -r2.x, l(0.779084), l(0.779084)
 126: mul r3.xyz, r2.xxxx, r3.xyzx
 127: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 128: dp3 r0.w, r0.xyzx, r0.xyzx
 129: max r0.w, r0.w, l(0.001000)
 130: rsq r0.w, r0.w
 131: mul r0.xyz, r0.wwww, r0.xyzx
 132: dp3 r0.w, r4.xyzx, r1.xyzx
 133: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
 134: dp3_sat r1.y, r4.xyzx, r0.xyzx
 135: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 136: mul r0.y, r0.x, r0.x
 137: dp2 r0.y, r0.yyyy, r2.zzzz
 138: add r0.y, r0.y, l(-0.500000)
 139: add r0.z, -r1.x, l(1.000000)
 140: mul r1.z, r0.z, r0.z
 141: mul r1.z, r1.z, r1.z
 142: mul r0.z, r0.z, r1.z
 143: mad r0.z, r0.y, r0.z, l(1.000000)
 144: add r1.z, -|r0.w|, l(1.000000)
 145: mul r2.y, r1.z, r1.z
 146: mul r2.y, r2.y, r2.y
 147: mul r1.z, r1.z, r2.y
 148: mad r0.y, r0.y, r1.z, l(1.000000)
 149: mul r0.y, r0.y, r0.z
 150: mul r0.z, r2.z, r2.z
 151: max r0.z, r0.z, l(0.002000)
 152: add r2.y, -r0.z, l(1.000000)
 153: mad r2.w, |r0.w|, r2.y, r0.z
 154: mad r2.y, r1.x, r2.y, r0.z
 155: mul r0.w, |r0.w|, r2.y
 156: mad r0.w, r1.x, r2.w, r0.w
 157: add r0.w, r0.w, l(0.000010)
 158: div r0.w, l(0.500000), r0.w
 159: mul r2.y, r0.z, r0.z
 160: mad r2.w, r1.y, r2.y, -r1.y
 161: mad r1.y, r2.w, r1.y, l(1.000000)
 162: mul r2.y, r2.y, l(0.318310)
 163: mad r1.y, r1.y, r1.y, l(0.000000)
 164: div r1.y, r2.y, r1.y
 165: mul r0.w, r0.w, r1.y
 166: mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.280000, 3.141593)
 167: max r0.w, r0.w, l(0.000100)
 168: sqrt r0.w, r0.w
 169: mul r0.yw, r1.xxxx, r0.yyyw
 170: mad r0.z, -r0.z, r2.z, l(1.000000)
 171: dp3 r1.x, r6.xyzx, r6.xyzx
 172: ne r1.x, r1.x, l(0.000000)
 173: and r1.x, r1.x, l(0x3f800000)
 174: mul r0.w, r0.w, r1.x
 175: add r1.x, -r2.x, r3.w
 176: add_sat r1.x, r1.x, l(1.000000)
 177: mul r2.xyz, r0.yyyy, r5.xyzx
 178: mul r4.xyz, r5.xyzx, r0.wwww
 179: add r0.x, -r0.x, l(1.000000)
 180: mul r0.y, r0.x, r0.x
 181: mul r0.y, r0.y, r0.y
 182: mul r0.x, r0.x, r0.y
 183: add r5.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 184: mad r0.xyw, r5.xyxz, r0.xxxx, r6.xyxz
 185: mul r0.xyw, r0.xyxw, r4.xyxz
 186: mad r0.xyw, r3.xyxz, r2.xyxz, r0.xyxw
 187: mul r2.xyz, r7.xyzx, r0.zzzz
 188: add r3.xyz, -r6.xyzx, r1.xxxx
 189: mad r1.xyz, r1.zzzz, r3.xyzx, r6.xyzx
 190: mad r0.xyz, r2.xyzx, r1.xyzx, r0.xywx
 191: mul o0.xyz, r1.wwww, r0.xyzx
 192: mov o0.w, l(1.000000)
 193: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerCamera" (144 bytes) on slot 0 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad o2.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb3[18].xyzw
   6: mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
   8: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: mul r1.xyz, v2.yyyy, cb2[1].xyzx
  11: mad r1.xyz, cb2[0].xyzx, v2.xxxx, r1.xyzx
  12: mad r1.xyz, cb2[2].xyzx, v2.zzzz, r1.xyzx
  13: dp3 r1.w, r1.xyzx, r1.xyzx
  14: rsq r1.w, r1.w
  15: mul r1.xyz, r1.wwww, r1.xyzx
  16: mov o1.xyz, r1.xyzx
  17: mov o3.xy, v3.xyxx
  18: mov o3.zw, l(0,0,0,0)
  19: mul r1.w, r1.y, r1.y
  20: mad r1.w, r1.x, r1.x, -r1.w
  21: mul r2.xyzw, r1.yzzx, r1.xyzz
  22: dp4 r1.x, cb1[42].xyzw, r2.xyzw
  23: dp4 r1.y, cb1[43].xyzw, r2.xyzw
  24: dp4 r1.z, cb1[44].xyzw, r2.xyzw
  25: mad o4.xyz, cb1[45].xyzx, r1.wwww, r1.xyzx
  26: mul r0.y, r0.y, cb0[5].x
  27: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  28: mov o5.zw, r0.zzzw
  29: add o5.xy, r1.zzzz, r1.xwxx
  30: mov o6.xyzw, l(0,0,0,0)
  31: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 192 math, 13 temp registers, 10 textures, 8 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_ShadowMapTexture" to slot 5 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 6 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 7 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 1

Constant Buffer "$Globals" (192 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 160
  Float _Metallic1 at 164
  Float _Metallic2 at 168
  Float _Metallic3 at 172
  Float _Smoothness0 at 176
  Float _Smoothness1 at 180
  Float _Smoothness2 at 184
  Float _Smoothness3 at 188
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy w
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: mad r2.xy, v3.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: mul r2.xy, r2.xyxx, cb0[5].xyxx
   7: sample r2.xyzw, r2.xyxx, t0.xyzw, s3
   8: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   9: add r3.x, r1.w, l(0.001000)
  10: div r2.xyzw, r2.xyzw, r3.xxxx
  11: mad r3.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mad r3.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad r4.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
  14: mad r4.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
  15: sample r5.xyzw, r3.xyxx, t1.xyzw, s4
  16: mul r5.xyzw, r2.xxxx, r5.xyzw
  17: mul r5.w, r5.w, cb0[11].x
  18: sample r3.xyzw, r3.zwzz, t2.xyzw, s5
  19: mul r3.xyzw, r2.yyyy, r3.xyzw
  20: mul r3.w, r3.w, cb0[11].y
  21: add r3.xyzw, r3.xyzw, r5.xyzw
  22: sample r5.xyzw, r4.xyxx, t3.xyzw, s6
  23: mul r5.xyzw, r2.zzzz, r5.xyzw
  24: mul r5.w, r5.w, cb0[11].z
  25: add r3.xyzw, r3.xyzw, r5.xyzw
  26: sample r4.xyzw, r4.zwzz, t4.xyzw, s7
  27: mul r4.xyzw, r2.wwww, r4.xyzw
  28: mul r4.w, r4.w, cb0[11].w
  29: add r3.xyzw, r3.xyzw, r4.xyzw
  30: dp4 r2.x, r2.xyzw, cb0[10].xyzw
  31: mov r4.x, cb4[9].z
  32: mov r4.y, cb4[10].z
  33: mov r4.z, cb4[11].z
  34: dp3 r2.y, r0.xyzx, r4.xyzx
  35: add r4.xyz, v2.xyzx, -cb3[25].xyzx
  36: dp3 r2.z, r4.xyzx, r4.xyzx
  37: sqrt r2.z, r2.z
  38: add r2.z, -r2.y, r2.z
  39: mad r2.y, cb3[25].w, r2.z, r2.y
  40: mad_sat r2.y, r2.y, cb3[24].z, cb3[24].w
  41: eq r2.z, cb6[0].x, l(1.000000)
  42: if_nz r2.z
  43:   eq r2.w, cb6[0].y, l(1.000000)
  44:   mul r4.xyz, v2.yyyy, cb6[2].xyzx
  45:   mad r4.xyz, cb6[1].xyzx, v2.xxxx, r4.xyzx
  46:   mad r4.xyz, cb6[3].xyzx, v2.zzzz, r4.xyzx
  47:   add r4.xyz, r4.xyzx, cb6[4].xyzx
  48:   movc r4.xyz, r2.wwww, r4.xyzx, v2.xyzx
  49:   add r4.xyz, r4.xyzx, -cb6[6].xyzx
  50:   mul r4.yzw, r4.xxyz, cb6[5].xxyz
  51:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  52:   mad r4.y, cb6[0].z, l(0.500000), l(0.750000)
  53:   max r4.x, r2.w, r4.y
  54:   sample r4.xyzw, r4.xzwx, t8.xyzw, s1
  55: else 
  56:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  57: endif 
  58: dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
  59: div r4.xy, v5.xyxx, v5.wwww
  60: sample r4.xyzw, r4.xyxx, t5.xyzw, s2
  61: add r2.w, r2.w, -r4.x
  62: mad r2.y, r2.y, r2.w, r4.x
  63: add r2.w, -r3.w, l(1.000000)
  64: dp3 r4.x, -r1.xyzx, v1.xyzx
  65: add r4.x, r4.x, r4.x
  66: mad r4.xyz, v1.xyzx, -r4.xxxx, -r1.xyzx
  67: mul r5.xyz, r2.yyyy, cb0[2].xyzx
  68: if_nz r2.z
  69:   eq r2.y, cb6[0].y, l(1.000000)
  70:   mul r6.xyz, v2.yyyy, cb6[2].xyzx
  71:   mad r6.xyz, cb6[1].xyzx, v2.xxxx, r6.xyzx
  72:   mad r6.xyz, cb6[3].xyzx, v2.zzzz, r6.xyzx
  73:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  74:   movc r6.xyz, r2.yyyy, r6.xyzx, v2.xyzx
  75:   add r6.xyz, r6.xyzx, -cb6[6].xyzx
  76:   mul r6.yzw, r6.xxyz, cb6[5].xxyz
  77:   mul r2.y, r6.y, l(0.250000)
  78:   mul r2.z, cb6[0].z, l(0.500000)
  79:   mad r4.w, -cb6[0].z, l(0.500000), l(0.250000)
  80:   max r2.y, r2.z, r2.y
  81:   min r6.x, r4.w, r2.y
  82:   sample r7.xyzw, r6.xzwx, t8.xyzw, s1
  83:   add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  84:   sample r8.xyzw, r8.xyzx, t8.xyzw, s1
  85:   add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  86:   sample r6.xyzw, r6.xyzx, t8.xyzw, s1
  87:   mov r9.xyz, v1.xyzx
  88:   mov r9.w, l(1.000000)
  89:   dp4 r7.x, r7.xyzw, r9.xyzw
  90:   dp4 r7.y, r8.xyzw, r9.xyzw
  91:   dp4 r7.z, r6.xyzw, r9.xyzw
  92: else 
  93:   mov r6.xyz, v1.xyzx
  94:   mov r6.w, l(1.000000)
  95:   dp4 r7.x, cb2[39].xyzw, r6.xyzw
  96:   dp4 r7.y, cb2[40].xyzw, r6.xyzw
  97:   dp4 r7.z, cb2[41].xyzw, r6.xyzw
  98: endif 
  99: add r6.xyz, r7.xyzx, v4.xyzx
 100: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
 101: log r6.xyz, r6.xyzx
 102: mul r6.xyz, r6.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
 103: exp r6.xyz, r6.xyzx
 104: mad r6.xyz, r6.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
 105: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
 106: lt r2.y, l(0.000000), cb5[2].w
 107: if_nz r2.y
 108:   dp3 r2.y, r4.xyzx, r4.xyzx
 109:   rsq r2.y, r2.y
 110:   mul r7.xyz, r2.yyyy, r4.xyzx
 111:   add r8.xyz, -v2.xyzx, cb5[0].xyzx
 112:   div r8.xyz, r8.xyzx, r7.xyzx
 113:   add r9.xyz, -v2.xyzx, cb5[1].xyzx
 114:   div r9.xyz, r9.xyzx, r7.xyzx
 115:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
 116:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
 117:   min r2.y, r8.y, r8.x
 118:   min r2.y, r8.z, r2.y
 119:   add r8.xyz, v2.xyzx, -cb5[2].xyzx
 120:   mad r7.xyz, r7.xyzx, r2.yyyy, r8.xyzx
 121: else 
 122:   mov r7.xyz, r4.xyzx
 123: endif 
 124: mad r2.y, -r2.w, l(0.700000), l(1.700000)
 125: mul r2.y, r2.y, r2.w
 126: mul r2.y, r2.y, l(6.000000)
 127: sample_l r7.xyzw, r7.xyzx, t6.xyzw, s0, r2.y
 128: add r2.z, r7.w, l(-1.000000)
 129: mad r2.z, cb5[3].w, r2.z, l(1.000000)
 130: mul r2.z, r2.z, cb5[3].x
 131: mul r8.xyz, r7.xyzx, r2.zzzz
 132: lt r4.w, cb5[1].w, l(0.999990)
 133: if_nz r4.w
 134:   lt r4.w, l(0.000000), cb5[6].w
 135:   if_nz r4.w
 136:     dp3 r4.w, r4.xyzx, r4.xyzx
 137:     rsq r4.w, r4.w
 138:     mul r9.xyz, r4.wwww, r4.xyzx
 139:     add r10.xyz, -v2.xyzx, cb5[4].xyzx
 140:     div r10.xyz, r10.xyzx, r9.xyzx
 141:     add r11.xyz, -v2.xyzx, cb5[5].xyzx
 142:     div r11.xyz, r11.xyzx, r9.xyzx
 143:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 144:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 145:     min r4.w, r10.y, r10.x
 146:     min r4.w, r10.z, r4.w
 147:     add r10.xyz, v2.xyzx, -cb5[6].xyzx
 148:     mad r4.xyz, r9.xyzx, r4.wwww, r10.xyzx
 149:   endif 
 150:   sample_l r4.xyzw, r4.xyzx, t7.xyzw, s0, r2.y
 151:   add r2.y, r4.w, l(-1.000000)
 152:   mad r2.y, cb5[7].w, r2.y, l(1.000000)
 153:   mul r2.y, r2.y, cb5[7].x
 154:   mul r4.xyz, r4.xyzx, r2.yyyy
 155:   mad r7.xyz, r2.zzzz, r7.xyzx, -r4.xyzx
 156:   mad r8.xyz, cb5[1].wwww, r7.xyzx, r4.xyzx
 157: endif 
 158: dp3 r2.y, v1.xyzx, v1.xyzx
 159: rsq r2.y, r2.y
 160: mul r4.xyz, r2.yyyy, v1.xyzx
 161: add r7.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 162: mad r7.xyz, r2.xxxx, r7.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 163: mad r2.x, -r2.x, l(0.779084), l(0.779084)
 164: mul r3.xyz, r2.xxxx, r3.xyzx
 165: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 166: dp3 r0.w, r0.xyzx, r0.xyzx
 167: max r0.w, r0.w, l(0.001000)
 168: rsq r0.w, r0.w
 169: mul r0.xyz, r0.wwww, r0.xyzx
 170: dp3 r0.w, r4.xyzx, r1.xyzx
 171: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
 172: dp3_sat r1.y, r4.xyzx, r0.xyzx
 173: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 174: mul r0.y, r0.x, r0.x
 175: dp2 r0.y, r0.yyyy, r2.wwww
 176: add r0.y, r0.y, l(-0.500000)
 177: add r0.z, -r1.x, l(1.000000)
 178: mul r1.z, r0.z, r0.z
 179: mul r1.z, r1.z, r1.z
 180: mul r0.z, r0.z, r1.z
 181: mad r0.z, r0.y, r0.z, l(1.000000)
 182: add r1.z, -|r0.w|, l(1.000000)
 183: mul r2.y, r1.z, r1.z
 184: mul r2.y, r2.y, r2.y
 185: mul r1.z, r1.z, r2.y
 186: mad r0.y, r0.y, r1.z, l(1.000000)
 187: mul r0.y, r0.y, r0.z
 188: mul r0.z, r2.w, r2.w
 189: max r0.z, r0.z, l(0.002000)
 190: add r2.y, -r0.z, l(1.000000)
 191: mad r2.z, |r0.w|, r2.y, r0.z
 192: mad r2.y, r1.x, r2.y, r0.z
 193: mul r0.w, |r0.w|, r2.y
 194: mad r0.w, r1.x, r2.z, r0.w
 195: add r0.w, r0.w, l(0.000010)
 196: div r0.w, l(0.500000), r0.w
 197: mul r2.y, r0.z, r0.z
 198: mad r2.z, r1.y, r2.y, -r1.y
 199: mad r1.y, r2.z, r1.y, l(1.000000)
 200: mul r2.y, r2.y, l(0.318310)
 201: mad r1.y, r1.y, r1.y, l(0.000000)
 202: div r1.y, r2.y, r1.y
 203: mul r0.w, r0.w, r1.y
 204: mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.280000, 3.141593)
 205: max r0.w, r0.w, l(0.000100)
 206: sqrt r0.w, r0.w
 207: mul r0.yw, r1.xxxx, r0.yyyw
 208: mad r0.z, -r0.z, r2.w, l(1.000000)
 209: dp3 r1.x, r7.xyzx, r7.xyzx
 210: ne r1.x, r1.x, l(0.000000)
 211: and r1.x, r1.x, l(0x3f800000)
 212: mul r0.w, r0.w, r1.x
 213: add r1.x, -r2.x, r3.w
 214: add_sat r1.x, r1.x, l(1.000000)
 215: mad r2.xyz, r5.xyzx, r0.yyyy, r6.xyzx
 216: mul r4.xyz, r5.xyzx, r0.wwww
 217: add r0.x, -r0.x, l(1.000000)
 218: mul r0.y, r0.x, r0.x
 219: mul r0.y, r0.y, r0.y
 220: mul r0.x, r0.x, r0.y
 221: add r5.xyz, -r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 222: mad r0.xyw, r5.xyxz, r0.xxxx, r7.xyxz
 223: mul r0.xyw, r0.xyxw, r4.xyxz
 224: mad r0.xyw, r3.xyxz, r2.xyxz, r0.xyxw
 225: mul r2.xyz, r8.xyzx, r0.zzzz
 226: add r3.xyz, -r7.xyzx, r1.xxxx
 227: mad r1.xyz, r1.zzzz, r3.xyzx, r7.xyzx
 228: mad r0.xyz, r2.xyzx, r1.xyzx, r0.xywx
 229: mul o0.xyz, r1.wwww, r0.xyzx
 230: mov o0.w, l(1.000000)
 231: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 15 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerDraw" (176 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[4], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb0[3].xyzw
   4: mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb1[18].xyzw
   6: mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
   9: mul r0.xyz, v2.yyyy, cb0[1].xyzx
  10: mad r0.xyz, cb0[0].xyzx, v2.xxxx, r0.xyzx
  11: mad r0.xyz, cb0[2].xyzx, v2.zzzz, r0.xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mov o3.xy, v3.xyxx
  16: mov o3.zw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: mov o5.xyzw, l(0,0,0,0)
  19: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 45 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[46], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   9: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  10: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  11: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  12: dp3 r0.w, r1.xyzx, r1.xyzx
  13: rsq r0.w, r0.w
  14: mul r1.xyz, r0.wwww, r1.xyzx
  15: mov o1.xyz, r1.xyzx
  16: mov o2.xyz, r0.xyzx
  17: mov o3.xy, v3.xyxx
  18: mov o3.zw, l(0,0,0,0)
  19: add r2.xyzw, -r0.xxxx, cb0[3].xyzw
  20: add r3.xyzw, -r0.yyyy, cb0[4].xyzw
  21: add r0.xyzw, -r0.zzzz, cb0[5].xyzw
  22: mul r4.xyzw, r1.yyyy, r3.xyzw
  23: mul r3.xyzw, r3.xyzw, r3.xyzw
  24: mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
  25: mad r2.xyzw, r2.xyzw, r1.xxxx, r4.xyzw
  26: mad r2.xyzw, r0.xyzw, r1.zzzz, r2.xyzw
  27: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  28: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  29: rsq r3.xyzw, r0.xyzw
  30: mad r0.xyzw, r0.xyzw, cb0[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  31: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  32: mul r2.xyzw, r2.xyzw, r3.xyzw
  33: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  34: mul r0.xyzw, r0.xyzw, r2.xyzw
  35: mul r2.xyz, r0.yyyy, cb0[8].xyzx
  36: mad r2.xyz, cb0[7].xyzx, r0.xxxx, r2.xyzx
  37: mad r0.xyz, cb0[9].xyzx, r0.zzzz, r2.xyzx
  38: mad r0.xyz, cb0[10].xyzx, r0.wwww, r0.xyzx
  39: mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  40: mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  41: mul r0.w, r1.y, r1.y
  42: mad r0.w, r1.x, r1.x, -r0.w
  43: mul r1.xyzw, r1.yzzx, r1.xyzz
  44: dp4 r3.x, cb0[42].xyzw, r1.xyzw
  45: dp4 r3.y, cb0[43].xyzw, r1.xyzw
  46: dp4 r3.z, cb0[44].xyzw, r1.xyzw
  47: mad r1.xyz, cb0[45].xyzx, r0.wwww, r3.xyzx
  48: mad o4.xyz, r0.xyzx, r2.xyzx, r1.xyzx
  49: mov o5.xyzw, l(0,0,0,0)
  50: mov o6.xyzw, l(0,0,0,0)
  51: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 18 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerCamera" (144 bytes) on slot 0 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  11: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  12: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  13: dp3 r1.w, r1.xyzx, r1.xyzx
  14: rsq r1.w, r1.w
  15: mul o1.xyz, r1.wwww, r1.xyzx
  16: mov o3.xy, v3.xyxx
  17: mov o3.zw, l(0,0,0,0)
  18: mul r0.y, r0.y, cb0[5].x
  19: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  20: mov o4.zw, r0.zzzw
  21: add o4.xy, r1.zzzz, r1.xwxx
  22: mov o5.xyzw, l(0,0,0,0)
  23: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 49 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerCamera" (144 bytes) on slot 0 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb3[18].xyzw
   6: mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
   8: mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  11: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  12: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  13: dp3 r0.w, r2.xyzx, r2.xyzx
  14: rsq r0.w, r0.w
  15: mul r2.xyz, r0.wwww, r2.xyzx
  16: mov o1.xyz, r2.xyzx
  17: mov o2.xyz, r0.xyzx
  18: mov o3.xy, v3.xyxx
  19: mov o3.zw, l(0,0,0,0)
  20: add r3.xyzw, -r0.xxxx, cb1[3].xyzw
  21: add r4.xyzw, -r0.yyyy, cb1[4].xyzw
  22: add r0.xyzw, -r0.zzzz, cb1[5].xyzw
  23: mul r5.xyzw, r2.yyyy, r4.xyzw
  24: mul r4.xyzw, r4.xyzw, r4.xyzw
  25: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  26: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  27: mad r3.xyzw, r0.xyzw, r2.zzzz, r3.xyzw
  28: mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
  29: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  30: rsq r4.xyzw, r0.xyzw
  31: mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  32: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  33: mul r3.xyzw, r3.xyzw, r4.xyzw
  34: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  35: mul r0.xyzw, r0.xyzw, r3.xyzw
  36: mul r3.xyz, r0.yyyy, cb1[8].xyzx
  37: mad r3.xyz, cb1[7].xyzx, r0.xxxx, r3.xyzx
  38: mad r0.xyz, cb1[9].xyzx, r0.zzzz, r3.xyzx
  39: mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
  40: mad r3.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  41: mad r3.xyz, r0.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  42: mul r0.w, r2.y, r2.y
  43: mad r0.w, r2.x, r2.x, -r0.w
  44: mul r2.xyzw, r2.yzzx, r2.xyzz
  45: dp4 r4.x, cb1[42].xyzw, r2.xyzw
  46: dp4 r4.y, cb1[43].xyzw, r2.xyzw
  47: dp4 r4.z, cb1[44].xyzw, r2.xyzw
  48: mad r2.xyz, cb1[45].xyzx, r0.wwww, r4.xyzx
  49: mad o4.xyz, r0.xyzx, r3.xyzx, r2.xyzx
  50: mul r0.x, r1.y, cb0[5].x
  51: mul r0.w, r0.x, l(0.500000)
  52: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  53: mov o5.zw, r1.zzzw
  54: add o5.xy, r0.zzzz, r0.xwxx
  55: mov o6.xyzw, l(0,0,0,0)
  56: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerDraw" (176 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb0[3].xyzw
   4: mad r0.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb1[18].xyzw
   6: mad r2.xyzw, cb1[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb1[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb1[20].xyzw, r1.wwww, r2.xyzw
   9: mov o1.w, r0.x
  10: mul r0.xw, v2.zzzx, l(0.000000, 0.000000, 0.000000, 1.000000)
  11: mad r0.xw, v2.yyyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xxxw
  12: mul r1.xyz, r0.wwww, cb0[1].yzxy
  13: mad r1.xyz, cb0[0].yzxy, r0.xxxx, r1.xyzx
  14: dp3 r0.x, r1.xyzx, r1.xyzx
  15: rsq r0.x, r0.x
  16: mul r1.xyz, r0.xxxx, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb0[1].zxyz
  18: mad r2.xyz, cb0[0].zxyz, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb0[2].zxyz, v2.zzzz, r2.xyzx
  20: dp3 r0.x, r2.xyzx, r2.xyzx
  21: rsq r0.x, r0.x
  22: mul r2.xyz, r0.xxxx, r2.xyzx
  23: mul r3.xyz, r1.xyzx, r2.xyzx
  24: mad r3.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
  25: mul r3.xyz, r3.xyzx, -cb0[9].wwww
  26: mov o1.y, r3.x
  27: mov o1.x, r1.z
  28: mov o1.z, r2.y
  29: mov o2.x, r1.x
  30: mov o3.x, r1.y
  31: mov o2.z, r2.z
  32: mov o3.z, r2.x
  33: mov o2.w, r0.y
  34: mov o3.w, r0.z
  35: mov o2.y, r3.y
  36: mov o3.y, r3.z
  37: mov o4.xy, v3.xyxx
  38: mov o4.zw, l(0,0,0,0)
  39: mov o5.xyzw, l(0,0,0,0)
  40: mov o6.xyzw, l(0,0,0,0)
  41: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 193 math, 13 temp registers, 10 textures, 6 branches
Set 2D Texture "_Control" to slot 0 sampler slot 2
Set 2D Texture "_Splat0" to slot 1 sampler slot 3
Set 2D Texture "_Splat1" to slot 2 sampler slot 4
Set 2D Texture "_Splat2" to slot 3 sampler slot 5
Set 2D Texture "_Splat3" to slot 4 sampler slot 6
Set 2D Texture "_Normal0" to slot 5 sampler slot 7
Set 2D Texture "_Normal1" to slot 6 sampler slot 8
Set 2D Texture "_Normal2" to slot 7 sampler slot 9
Set 2D Texture "_Normal3" to slot 8 sampler slot 10
Set CUBE Texture "unity_SpecCube0" to slot 9 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 10 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 11 sampler slot 1

Constant Buffer "$Globals" (208 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 160
  Float _NormalScale1 at 164
  Float _NormalScale2 at 168
  Float _NormalScale3 at 172
  Float _Metallic0 at 176
  Float _Metallic1 at 180
  Float _Metallic2 at 184
  Float _Metallic3 at 188
  Float _Smoothness0 at 192
  Float _Smoothness1 at 196
  Float _Smoothness2 at 200
  Float _Smoothness3 at 204
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 5   xyzw        5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[13], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[8], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texturecube (float,float,float,float) t9
      dcl_resource_texturecube (float,float,float,float) t10
      dcl_resource_texture3d (float,float,float,float) t11
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xy
      dcl_output o0.xyzw
      dcl_temps 13
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r3.xy, r3.xyxx, cb0[5].xyxx
  10: sample r3.xyzw, r3.xyxx, t0.xyzw, s2
  11: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r2.w, r1.w, l(0.001000)
  13: div r3.xyzw, r3.xyzw, r2.wwww
  14: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r6.xyzw, r4.xyxx, t1.xyzw, s3
  19: mul r6.xyzw, r3.xxxx, r6.xyzw
  20: mul r6.w, r6.w, cb0[12].x
  21: sample r7.xyzw, r4.zwzz, t2.xyzw, s4
  22: mul r7.xyzw, r3.yyyy, r7.xyzw
  23: mul r7.w, r7.w, cb0[12].y
  24: add r6.xyzw, r6.xyzw, r7.xyzw
  25: sample r7.xyzw, r5.xyxx, t3.xyzw, s5
  26: mul r7.xyzw, r3.zzzz, r7.xyzw
  27: mul r7.w, r7.w, cb0[12].z
  28: add r6.xyzw, r6.xyzw, r7.xyzw
  29: sample r7.xyzw, r5.zwzz, t4.xyzw, s6
  30: mul r7.xyzw, r3.wwww, r7.xyzw
  31: mul r7.w, r7.w, cb0[12].w
  32: add r6.xyzw, r6.xyzw, r7.xyzw
  33: sample r7.xyzw, r4.xyxx, t5.xyzw, s7
  34: mul r7.x, r7.w, r7.x
  35: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  36: mul r7.xy, r4.xyxx, cb0[10].xxxx
  37: dp2 r2.w, r7.xyxx, r7.xyxx
  38: min r2.w, r2.w, l(1.000000)
  39: add r2.w, -r2.w, l(1.000000)
  40: sqrt r7.z, r2.w
  41: sample r4.xyzw, r4.zwzz, t6.xyzw, s8
  42: mul r4.x, r4.w, r4.x
  43: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  44: mul r4.xy, r4.xyxx, cb0[10].yyyy
  45: dp2 r2.w, r4.xyxx, r4.xyxx
  46: min r2.w, r2.w, l(1.000000)
  47: add r2.w, -r2.w, l(1.000000)
  48: sqrt r4.z, r2.w
  49: mul r4.xyz, r3.yyyy, r4.xyzx
  50: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  51: sample r7.xyzw, r5.xyxx, t7.xyzw, s9
  52: mul r7.x, r7.w, r7.x
  53: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  54: mul r7.xy, r5.xyxx, cb0[10].zzzz
  55: dp2 r2.w, r7.xyxx, r7.xyxx
  56: min r2.w, r2.w, l(1.000000)
  57: add r2.w, -r2.w, l(1.000000)
  58: sqrt r7.z, r2.w
  59: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  60: sample r5.xyzw, r5.zwzz, t8.xyzw, s10
  61: mul r5.x, r5.w, r5.x
  62: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  63: mul r5.xy, r5.xyxx, cb0[10].wwww
  64: dp2 r2.w, r5.xyxx, r5.xyxx
  65: min r2.w, r2.w, l(1.000000)
  66: add r2.w, -r2.w, l(1.000000)
  67: sqrt r5.z, r2.w
  68: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  69: dp4 r2.w, r3.xyzw, cb0[11].xyzw
  70: eq r3.x, cb4[0].x, l(1.000000)
  71: if_nz r3.x
  72:   eq r3.x, cb4[0].y, l(1.000000)
  73:   mul r3.yzw, v2.wwww, cb4[2].xxyz
  74:   mad r3.yzw, cb4[1].xxyz, v1.wwww, r3.yyzw
  75:   mad r3.yzw, cb4[3].xxyz, v3.wwww, r3.yyzw
  76:   add r3.yzw, r3.yyzw, cb4[4].xxyz
  77:   movc r3.xyz, r3.xxxx, r3.yzwy, r0.xyzx
  78:   add r3.xyz, r3.xyzx, -cb4[6].xyzx
  79:   mul r3.yzw, r3.xxyz, cb4[5].xxyz
  80:   mad r3.y, r3.y, l(0.250000), l(0.750000)
  81:   mad r5.x, cb4[0].z, l(0.500000), l(0.750000)
  82:   max r3.x, r3.y, r5.x
  83:   sample r3.xyzw, r3.xzwx, t11.xyzw, s1
  84: else 
  85:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  86: endif 
  87: dp4_sat r3.x, r3.xyzw, cb2[46].xyzw
  88: add r4.w, r4.z, l(0.000010)
  89: dp3 r5.x, v1.xyzx, r4.xywx
  90: dp3 r5.y, v2.xyzx, r4.xywx
  91: dp3 r5.z, v3.xyzx, r4.xywx
  92: dp3 r3.y, r5.xyzx, r5.xyzx
  93: rsq r3.y, r3.y
  94: mul r3.yzw, r3.yyyy, r5.xxyz
  95: add r4.x, -r6.w, l(1.000000)
  96: dp3 r4.y, -r2.xyzx, r3.yzwy
  97: add r4.y, r4.y, r4.y
  98: mad r4.yzw, r3.yyzw, -r4.yyyy, -r2.xxyz
  99: mul r5.xyz, r3.xxxx, cb0[2].xyzx
 100: lt r3.x, l(0.000000), cb3[2].w
 101: if_nz r3.x
 102:   dp3 r3.x, r4.yzwy, r4.yzwy
 103:   rsq r3.x, r3.x
 104:   mul r7.xyz, r3.xxxx, r4.yzwy
 105:   add r8.xyz, -r0.xyzx, cb3[0].xyzx
 106:   div r8.xyz, r8.xyzx, r7.xyzx
 107:   add r9.xyz, -r0.xyzx, cb3[1].xyzx
 108:   div r9.xyz, r9.xyzx, r7.xyzx
 109:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
 110:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
 111:   min r3.x, r8.y, r8.x
 112:   min r3.x, r8.z, r3.x
 113:   add r8.xyz, r0.xyzx, -cb3[2].xyzx
 114:   mad r7.xyz, r7.xyzx, r3.xxxx, r8.xyzx
 115: else 
 116:   mov r7.xyz, r4.yzwy
 117: endif 
 118: mad r3.x, -r4.x, l(0.700000), l(1.700000)
 119: mul r3.x, r3.x, r4.x
 120: mul r3.x, r3.x, l(6.000000)
 121: sample_l r7.xyzw, r7.xyzx, t9.xyzw, s0, r3.x
 122: add r5.w, r7.w, l(-1.000000)
 123: mad r5.w, cb3[3].w, r5.w, l(1.000000)
 124: mul r5.w, r5.w, cb3[3].x
 125: mul r8.xyz, r7.xyzx, r5.wwww
 126: lt r7.w, cb3[1].w, l(0.999990)
 127: if_nz r7.w
 128:   lt r7.w, l(0.000000), cb3[6].w
 129:   if_nz r7.w
 130:     dp3 r7.w, r4.yzwy, r4.yzwy
 131:     rsq r7.w, r7.w
 132:     mul r9.xyz, r4.yzwy, r7.wwww
 133:     add r10.xyz, -r0.xyzx, cb3[4].xyzx
 134:     div r10.xyz, r10.xyzx, r9.xyzx
 135:     add r11.xyz, -r0.xyzx, cb3[5].xyzx
 136:     div r11.xyz, r11.xyzx, r9.xyzx
 137:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 138:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 139:     min r7.w, r10.y, r10.x
 140:     min r7.w, r10.z, r7.w
 141:     add r0.xyz, r0.xyzx, -cb3[6].xyzx
 142:     mad r4.yzw, r9.xxyz, r7.wwww, r0.xxyz
 143:   endif 
 144:   sample_l r9.xyzw, r4.yzwy, t10.xyzw, s0, r3.x
 145:   add r0.x, r9.w, l(-1.000000)
 146:   mad r0.x, cb3[7].w, r0.x, l(1.000000)
 147:   mul r0.x, r0.x, cb3[7].x
 148:   mul r0.xyz, r9.xyzx, r0.xxxx
 149:   mad r4.yzw, r5.wwww, r7.xxyz, -r0.xxyz
 150:   mad r8.xyz, cb3[1].wwww, r4.yzwy, r0.xyzx
 151: endif 
 152: add r0.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 153: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 154: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 155: mul r4.yzw, r2.wwww, r6.xxyz
 156: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 157: dp3 r0.w, r1.xyzx, r1.xyzx
 158: max r0.w, r0.w, l(0.001000)
 159: rsq r0.w, r0.w
 160: mul r1.xyz, r0.wwww, r1.xyzx
 161: dp3 r0.w, r3.yzwy, r2.xyzx
 162: dp3_sat r2.x, r3.yzwy, cb2[0].xyzx
 163: dp3_sat r2.y, r3.yzwy, r1.xyzx
 164: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 165: mul r1.y, r1.x, r1.x
 166: dp2 r1.y, r1.yyyy, r4.xxxx
 167: add r1.y, r1.y, l(-0.500000)
 168: add r1.z, -r2.x, l(1.000000)
 169: mul r2.z, r1.z, r1.z
 170: mul r2.z, r2.z, r2.z
 171: mul r1.z, r1.z, r2.z
 172: mad r1.z, r1.y, r1.z, l(1.000000)
 173: add r2.z, -|r0.w|, l(1.000000)
 174: mul r3.x, r2.z, r2.z
 175: mul r3.x, r3.x, r3.x
 176: mul r2.z, r2.z, r3.x
 177: mad r1.y, r1.y, r2.z, l(1.000000)
 178: mul r1.y, r1.y, r1.z
 179: mul r1.y, r2.x, r1.y
 180: mul r1.z, r4.x, r4.x
 181: max r1.z, r1.z, l(0.002000)
 182: add r3.x, -r1.z, l(1.000000)
 183: mad r3.y, |r0.w|, r3.x, r1.z
 184: mad r3.x, r2.x, r3.x, r1.z
 185: mul r0.w, |r0.w|, r3.x
 186: mad r0.w, r2.x, r3.y, r0.w
 187: add r0.w, r0.w, l(0.000010)
 188: div r0.w, l(0.500000), r0.w
 189: mul r3.x, r1.z, r1.z
 190: mad r3.y, r2.y, r3.x, -r2.y
 191: mad r2.y, r3.y, r2.y, l(1.000000)
 192: mul r3.x, r3.x, l(0.318310)
 193: mad r2.y, r2.y, r2.y, l(0.000000)
 194: div r2.y, r3.x, r2.y
 195: mul r0.w, r0.w, r2.y
 196: mul r0.w, r0.w, l(3.141593)
 197: max r0.w, r0.w, l(0.000100)
 198: sqrt r0.w, r0.w
 199: mul r0.w, r2.x, r0.w
 200: mul r1.z, r1.z, l(0.280000)
 201: mad r1.z, -r1.z, r4.x, l(1.000000)
 202: dp3 r2.x, r0.xyzx, r0.xyzx
 203: ne r2.x, r2.x, l(0.000000)
 204: and r2.x, r2.x, l(0x3f800000)
 205: mul r0.w, r0.w, r2.x
 206: add r2.x, -r2.w, r6.w
 207: add_sat r2.x, r2.x, l(1.000000)
 208: mul r3.xyz, r1.yyyy, r5.xyzx
 209: mul r5.xyz, r5.xyzx, r0.wwww
 210: add r0.w, -r1.x, l(1.000000)
 211: mul r1.x, r0.w, r0.w
 212: mul r1.x, r1.x, r1.x
 213: mul r0.w, r0.w, r1.x
 214: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 215: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 216: mul r5.xyz, r5.xyzx, r6.xyzx
 217: mad r3.xyz, r4.yzwy, r3.xyzx, r5.xyzx
 218: mul r1.xyz, r8.xyzx, r1.zzzz
 219: add r2.xyw, -r0.xyxz, r2.xxxx
 220: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 221: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 222: mul o0.xyz, r1.wwww, r0.xyzx
 223: mov o0.w, l(1.000000)
 224: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[46], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   9: mov o1.w, r0.x
  10: mul r0.xw, v2.zzzx, l(0.000000, 0.000000, 0.000000, 1.000000)
  11: mad r0.xw, v2.yyyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xxxw
  12: mul r1.xyz, r0.wwww, cb1[1].yzxy
  13: mad r1.xyz, cb1[0].yzxy, r0.xxxx, r1.xyzx
  14: dp3 r0.x, r1.xyzx, r1.xyzx
  15: rsq r0.x, r0.x
  16: mul r1.xyz, r0.xxxx, r1.xyzx
  17: mov o1.x, r1.z
  18: mul r2.xyzw, v2.yyyy, cb1[1].xyzz
  19: mad r2.xyzw, cb1[0].xyzz, v2.xxxx, r2.xyzw
  20: mad r2.xyzw, cb1[2].xyzz, v2.zzzz, r2.xyzw
  21: dp3 r0.x, r2.xywx, r2.xywx
  22: rsq r0.x, r0.x
  23: mul r2.xyzw, r0.xxxx, r2.xyzw
  24: mul r3.xyz, r1.xyzx, r2.wxyw
  25: mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
  26: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  27: mov o1.y, r3.x
  28: mov o1.z, r2.x
  29: mov o2.x, r1.x
  30: mov o3.x, r1.y
  31: mov o2.w, r0.y
  32: mov o3.w, r0.z
  33: mov o2.y, r3.y
  34: mov o3.y, r3.z
  35: mov o2.z, r2.y
  36: mov o3.z, r2.w
  37: mov o4.xy, v3.xyxx
  38: mov o4.zw, l(0,0,0,0)
  39: mul r0.x, r2.y, r2.y
  40: mad r0.x, r2.x, r2.x, -r0.x
  41: mul r1.xyzw, r2.ywzx, r2.xyzw
  42: dp4 r2.x, cb0[42].xyzw, r1.xyzw
  43: dp4 r2.y, cb0[43].xyzw, r1.xyzw
  44: dp4 r2.z, cb0[44].xyzw, r1.xyzw
  45: mad o5.xyz, cb0[45].xyzx, r0.xxxx, r2.xyzx
  46: mov o6.xyzw, l(0,0,0,0)
  47: mov o7.xyzw, l(0,0,0,0)
  48: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 220 math, 14 temp registers, 13 textures, 8 branches
Set 2D Texture "_Control" to slot 0 sampler slot 2
Set 2D Texture "_Splat0" to slot 1 sampler slot 3
Set 2D Texture "_Splat1" to slot 2 sampler slot 4
Set 2D Texture "_Splat2" to slot 3 sampler slot 5
Set 2D Texture "_Splat3" to slot 4 sampler slot 6
Set 2D Texture "_Normal0" to slot 5 sampler slot 7
Set 2D Texture "_Normal1" to slot 6 sampler slot 8
Set 2D Texture "_Normal2" to slot 7 sampler slot 9
Set 2D Texture "_Normal3" to slot 8 sampler slot 10
Set CUBE Texture "unity_SpecCube0" to slot 9 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 10 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 11 sampler slot 1

Constant Buffer "$Globals" (208 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 160
  Float _NormalScale1 at 164
  Float _NormalScale2 at 168
  Float _NormalScale3 at 172
  Float _Metallic0 at 176
  Float _Metallic1 at 180
  Float _Metallic2 at 184
  Float _Metallic3 at 188
  Float _Smoothness0 at 192
  Float _Smoothness1 at 196
  Float _Smoothness2 at 200
  Float _Smoothness3 at 204
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[13], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[8], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texturecube (float,float,float,float) t9
      dcl_resource_texturecube (float,float,float,float) t10
      dcl_resource_texture3d (float,float,float,float) t11
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_temps 14
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r3.xy, r3.xyxx, cb0[5].xyxx
  10: sample r3.xyzw, r3.xyxx, t0.xyzw, s2
  11: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r2.w, r1.w, l(0.001000)
  13: div r3.xyzw, r3.xyzw, r2.wwww
  14: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r6.xyzw, r4.xyxx, t1.xyzw, s3
  19: mul r6.xyzw, r3.xxxx, r6.xyzw
  20: mul r6.w, r6.w, cb0[12].x
  21: sample r7.xyzw, r4.zwzz, t2.xyzw, s4
  22: mul r7.xyzw, r3.yyyy, r7.xyzw
  23: mul r7.w, r7.w, cb0[12].y
  24: add r6.xyzw, r6.xyzw, r7.xyzw
  25: sample r7.xyzw, r5.xyxx, t3.xyzw, s5
  26: mul r7.xyzw, r3.zzzz, r7.xyzw
  27: mul r7.w, r7.w, cb0[12].z
  28: add r6.xyzw, r6.xyzw, r7.xyzw
  29: sample r7.xyzw, r5.zwzz, t4.xyzw, s6
  30: mul r7.xyzw, r3.wwww, r7.xyzw
  31: mul r7.w, r7.w, cb0[12].w
  32: add r6.xyzw, r6.xyzw, r7.xyzw
  33: sample r7.xyzw, r4.xyxx, t5.xyzw, s7
  34: mul r7.x, r7.w, r7.x
  35: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  36: mul r7.xy, r4.xyxx, cb0[10].xxxx
  37: dp2 r2.w, r7.xyxx, r7.xyxx
  38: min r2.w, r2.w, l(1.000000)
  39: add r2.w, -r2.w, l(1.000000)
  40: sqrt r7.z, r2.w
  41: sample r4.xyzw, r4.zwzz, t6.xyzw, s8
  42: mul r4.x, r4.w, r4.x
  43: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  44: mul r4.xy, r4.xyxx, cb0[10].yyyy
  45: dp2 r2.w, r4.xyxx, r4.xyxx
  46: min r2.w, r2.w, l(1.000000)
  47: add r2.w, -r2.w, l(1.000000)
  48: sqrt r4.z, r2.w
  49: mul r4.xyz, r3.yyyy, r4.xyzx
  50: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  51: sample r7.xyzw, r5.xyxx, t7.xyzw, s9
  52: mul r7.x, r7.w, r7.x
  53: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  54: mul r7.xy, r5.xyxx, cb0[10].zzzz
  55: dp2 r2.w, r7.xyxx, r7.xyxx
  56: min r2.w, r2.w, l(1.000000)
  57: add r2.w, -r2.w, l(1.000000)
  58: sqrt r7.z, r2.w
  59: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  60: sample r5.xyzw, r5.zwzz, t8.xyzw, s10
  61: mul r5.x, r5.w, r5.x
  62: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  63: mul r5.xy, r5.xyxx, cb0[10].wwww
  64: dp2 r2.w, r5.xyxx, r5.xyxx
  65: min r2.w, r2.w, l(1.000000)
  66: add r2.w, -r2.w, l(1.000000)
  67: sqrt r5.z, r2.w
  68: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  69: dp4 r2.w, r3.xyzw, cb0[11].xyzw
  70: eq r3.x, cb4[0].x, l(1.000000)
  71: if_nz r3.x
  72:   eq r3.y, cb4[0].y, l(1.000000)
  73:   mul r5.xyz, v2.wwww, cb4[2].xyzx
  74:   mad r5.xyz, cb4[1].xyzx, v1.wwww, r5.xyzx
  75:   mad r5.xyz, cb4[3].xyzx, v3.wwww, r5.xyzx
  76:   add r5.xyz, r5.xyzx, cb4[4].xyzx
  77:   movc r3.yzw, r3.yyyy, r5.xxyz, r0.xxyz
  78:   add r3.yzw, r3.yyzw, -cb4[6].xxyz
  79:   mul r5.yzw, r3.yyzw, cb4[5].xxyz
  80:   mad r3.y, r5.y, l(0.250000), l(0.750000)
  81:   mad r3.z, cb4[0].z, l(0.500000), l(0.750000)
  82:   max r5.x, r3.z, r3.y
  83:   sample r5.xyzw, r5.xzwx, t11.xyzw, s1
  84: else 
  85:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  86: endif 
  87: dp4_sat r3.y, r5.xyzw, cb2[46].xyzw
  88: add r4.w, r4.z, l(0.000010)
  89: dp3 r5.x, v1.xyzx, r4.xywx
  90: dp3 r5.y, v2.xyzx, r4.xywx
  91: dp3 r5.z, v3.xyzx, r4.xywx
  92: dp3 r3.z, r5.xyzx, r5.xyzx
  93: rsq r3.z, r3.z
  94: mul r4.xyz, r3.zzzz, r5.xyzx
  95: add r3.z, -r6.w, l(1.000000)
  96: dp3 r3.w, -r2.xyzx, r4.xyzx
  97: add r3.w, r3.w, r3.w
  98: mad r5.xyz, r4.xyzx, -r3.wwww, -r2.xyzx
  99: mul r7.xyz, r3.yyyy, cb0[2].xyzx
 100: if_nz r3.x
 101:   eq r3.x, cb4[0].y, l(1.000000)
 102:   mul r8.xyz, v2.wwww, cb4[2].xyzx
 103:   mad r8.xyz, cb4[1].xyzx, v1.wwww, r8.xyzx
 104:   mad r8.xyz, cb4[3].xyzx, v3.wwww, r8.xyzx
 105:   add r8.xyz, r8.xyzx, cb4[4].xyzx
 106:   movc r3.xyw, r3.xxxx, r8.xyxz, r0.xyxz
 107:   add r3.xyw, r3.xyxw, -cb4[6].xyxz
 108:   mul r8.yzw, r3.xxyw, cb4[5].xxyz
 109:   mul r3.x, r8.y, l(0.250000)
 110:   mul r3.y, cb4[0].z, l(0.500000)
 111:   mad r3.w, -cb4[0].z, l(0.500000), l(0.250000)
 112:   max r3.x, r3.y, r3.x
 113:   min r8.x, r3.w, r3.x
 114:   sample r9.xyzw, r8.xzwx, t11.xyzw, s1
 115:   add r3.xyw, r8.xzxw, l(0.250000, 0.000000, 0.000000, 0.000000)
 116:   sample r10.xyzw, r3.xywx, t11.xyzw, s1
 117:   add r3.xyw, r8.xzxw, l(0.500000, 0.000000, 0.000000, 0.000000)
 118:   sample r8.xyzw, r3.xywx, t11.xyzw, s1
 119:   mov r4.w, l(1.000000)
 120:   dp4 r9.x, r9.xyzw, r4.xyzw
 121:   dp4 r9.y, r10.xyzw, r4.xyzw
 122:   dp4 r9.z, r8.xyzw, r4.xyzw
 123: else 
 124:   mov r4.w, l(1.000000)
 125:   dp4 r9.x, cb2[39].xyzw, r4.xyzw
 126:   dp4 r9.y, cb2[40].xyzw, r4.xyzw
 127:   dp4 r9.z, cb2[41].xyzw, r4.xyzw
 128: endif 
 129: add r3.xyw, r9.xyxz, v5.xyxz
 130: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
 131: log r3.xyw, r3.xyxw
 132: mul r3.xyw, r3.xyxw, l(0.416667, 0.416667, 0.000000, 0.416667)
 133: exp r3.xyw, r3.xyxw
 134: mad r3.xyw, r3.xyxw, l(1.055000, 1.055000, 0.000000, 1.055000), l(-0.055000, -0.055000, 0.000000, -0.055000)
 135: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
 136: lt r4.w, l(0.000000), cb3[2].w
 137: if_nz r4.w
 138:   dp3 r4.w, r5.xyzx, r5.xyzx
 139:   rsq r4.w, r4.w
 140:   mul r8.xyz, r4.wwww, r5.xyzx
 141:   add r9.xyz, -r0.xyzx, cb3[0].xyzx
 142:   div r9.xyz, r9.xyzx, r8.xyzx
 143:   add r10.xyz, -r0.xyzx, cb3[1].xyzx
 144:   div r10.xyz, r10.xyzx, r8.xyzx
 145:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
 146:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
 147:   min r4.w, r9.y, r9.x
 148:   min r4.w, r9.z, r4.w
 149:   add r9.xyz, r0.xyzx, -cb3[2].xyzx
 150:   mad r8.xyz, r8.xyzx, r4.wwww, r9.xyzx
 151: else 
 152:   mov r8.xyz, r5.xyzx
 153: endif 
 154: mad r4.w, -r3.z, l(0.700000), l(1.700000)
 155: mul r4.w, r3.z, r4.w
 156: mul r4.w, r4.w, l(6.000000)
 157: sample_l r8.xyzw, r8.xyzx, t9.xyzw, s0, r4.w
 158: add r5.w, r8.w, l(-1.000000)
 159: mad r5.w, cb3[3].w, r5.w, l(1.000000)
 160: mul r5.w, r5.w, cb3[3].x
 161: mul r9.xyz, r8.xyzx, r5.wwww
 162: lt r7.w, cb3[1].w, l(0.999990)
 163: if_nz r7.w
 164:   lt r7.w, l(0.000000), cb3[6].w
 165:   if_nz r7.w
 166:     dp3 r7.w, r5.xyzx, r5.xyzx
 167:     rsq r7.w, r7.w
 168:     mul r10.xyz, r5.xyzx, r7.wwww
 169:     add r11.xyz, -r0.xyzx, cb3[4].xyzx
 170:     div r11.xyz, r11.xyzx, r10.xyzx
 171:     add r12.xyz, -r0.xyzx, cb3[5].xyzx
 172:     div r12.xyz, r12.xyzx, r10.xyzx
 173:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 174:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 175:     min r7.w, r11.y, r11.x
 176:     min r7.w, r11.z, r7.w
 177:     add r0.xyz, r0.xyzx, -cb3[6].xyzx
 178:     mad r5.xyz, r10.xyzx, r7.wwww, r0.xyzx
 179:   endif 
 180:   sample_l r10.xyzw, r5.xyzx, t10.xyzw, s0, r4.w
 181:   add r0.x, r10.w, l(-1.000000)
 182:   mad r0.x, cb3[7].w, r0.x, l(1.000000)
 183:   mul r0.x, r0.x, cb3[7].x
 184:   mul r0.xyz, r10.xyzx, r0.xxxx
 185:   mad r5.xyz, r5.wwww, r8.xyzx, -r0.xyzx
 186:   mad r9.xyz, cb3[1].wwww, r5.xyzx, r0.xyzx
 187: endif 
 188: add r0.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 189: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 190: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 191: mul r5.xyz, r2.wwww, r6.xyzx
 192: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 193: dp3 r0.w, r1.xyzx, r1.xyzx
 194: max r0.w, r0.w, l(0.001000)
 195: rsq r0.w, r0.w
 196: mul r1.xyz, r0.wwww, r1.xyzx
 197: dp3 r0.w, r4.xyzx, r2.xyzx
 198: dp3_sat r2.x, r4.xyzx, cb2[0].xyzx
 199: dp3_sat r2.y, r4.xyzx, r1.xyzx
 200: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 201: mul r1.y, r1.x, r1.x
 202: dp2 r1.y, r1.yyyy, r3.zzzz
 203: add r1.y, r1.y, l(-0.500000)
 204: add r1.z, -r2.x, l(1.000000)
 205: mul r2.z, r1.z, r1.z
 206: mul r2.z, r2.z, r2.z
 207: mul r1.z, r1.z, r2.z
 208: mad r1.z, r1.y, r1.z, l(1.000000)
 209: add r2.z, -|r0.w|, l(1.000000)
 210: mul r4.x, r2.z, r2.z
 211: mul r4.x, r4.x, r4.x
 212: mul r2.z, r2.z, r4.x
 213: mad r1.y, r1.y, r2.z, l(1.000000)
 214: mul r1.y, r1.y, r1.z
 215: mul r1.y, r2.x, r1.y
 216: mul r1.z, r3.z, r3.z
 217: max r1.z, r1.z, l(0.002000)
 218: add r4.x, -r1.z, l(1.000000)
 219: mad r4.y, |r0.w|, r4.x, r1.z
 220: mad r4.x, r2.x, r4.x, r1.z
 221: mul r0.w, |r0.w|, r4.x
 222: mad r0.w, r2.x, r4.y, r0.w
 223: add r0.w, r0.w, l(0.000010)
 224: div r0.w, l(0.500000), r0.w
 225: mul r4.x, r1.z, r1.z
 226: mad r4.y, r2.y, r4.x, -r2.y
 227: mad r2.y, r4.y, r2.y, l(1.000000)
 228: mul r4.x, r4.x, l(0.318310)
 229: mad r2.y, r2.y, r2.y, l(0.000000)
 230: div r2.y, r4.x, r2.y
 231: mul r0.w, r0.w, r2.y
 232: mul r0.w, r0.w, l(3.141593)
 233: max r0.w, r0.w, l(0.000100)
 234: sqrt r0.w, r0.w
 235: mul r0.w, r2.x, r0.w
 236: mul r1.z, r1.z, l(0.280000)
 237: mad r1.z, -r1.z, r3.z, l(1.000000)
 238: dp3 r2.x, r0.xyzx, r0.xyzx
 239: ne r2.x, r2.x, l(0.000000)
 240: and r2.x, r2.x, l(0x3f800000)
 241: mul r0.w, r0.w, r2.x
 242: add r2.x, -r2.w, r6.w
 243: add_sat r2.x, r2.x, l(1.000000)
 244: mad r3.xyz, r7.xyzx, r1.yyyy, r3.xywx
 245: mul r4.xyz, r7.xyzx, r0.wwww
 246: add r0.w, -r1.x, l(1.000000)
 247: mul r1.x, r0.w, r0.w
 248: mul r1.x, r1.x, r1.x
 249: mul r0.w, r0.w, r1.x
 250: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 251: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 252: mul r4.xyz, r4.xyzx, r6.xyzx
 253: mad r3.xyz, r5.xyzx, r3.xyzx, r4.xyzx
 254: mul r1.xyz, r9.xyzx, r1.zzzz
 255: add r2.xyw, -r0.xyxz, r2.xxxx
 256: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 257: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 258: mul o0.xyz, r1.wwww, r0.xyzx
 259: mov o0.w, l(1.000000)
 260: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerCamera" (144 bytes) on slot 0 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   8: mad r1.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: mov o1.w, r0.x
  11: mul r0.xw, v2.zzzx, l(0.000000, 0.000000, 0.000000, 1.000000)
  12: mad r0.xw, v2.yyyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xxxw
  13: mul r2.xyz, r0.wwww, cb1[1].yzxy
  14: mad r2.xyz, cb1[0].yzxy, r0.xxxx, r2.xyzx
  15: dp3 r0.x, r2.xyzx, r2.xyzx
  16: rsq r0.x, r0.x
  17: mul r2.xyz, r0.xxxx, r2.xyzx
  18: mul r3.xyz, v2.yyyy, cb1[1].zxyz
  19: mad r3.xyz, cb1[0].zxyz, v2.xxxx, r3.xyzx
  20: mad r3.xyz, cb1[2].zxyz, v2.zzzz, r3.xyzx
  21: dp3 r0.x, r3.xyzx, r3.xyzx
  22: rsq r0.x, r0.x
  23: mul r3.xyz, r0.xxxx, r3.xyzx
  24: mul r4.xyz, r2.xyzx, r3.xyzx
  25: mad r4.xyz, r3.zxyz, r2.yzxy, -r4.xyzx
  26: mul r4.xyz, r4.xyzx, -cb1[9].wwww
  27: mov o1.y, r4.x
  28: mov o1.x, r2.z
  29: mov o1.z, r3.y
  30: mov o2.x, r2.x
  31: mov o3.x, r2.y
  32: mov o2.z, r3.z
  33: mov o3.z, r3.x
  34: mov o2.w, r0.y
  35: mov o3.w, r0.z
  36: mov o2.y, r4.y
  37: mov o3.y, r4.z
  38: mov o4.xy, v3.xyxx
  39: mov o4.zw, l(0,0,0,0)
  40: mul r0.x, r1.y, cb0[5].x
  41: mul r0.w, r0.x, l(0.500000)
  42: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  43: mov o5.zw, r1.zzzw
  44: add o5.xy, r0.zzzz, r0.xwxx
  45: mov o6.xyzw, l(0,0,0,0)
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 203 math, 13 temp registers, 11 textures, 6 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_Normal0" to slot 5 sampler slot 8
Set 2D Texture "_Normal1" to slot 6 sampler slot 9
Set 2D Texture "_Normal2" to slot 7 sampler slot 10
Set 2D Texture "_Normal3" to slot 8 sampler slot 11
Set 2D Texture "_ShadowMapTexture" to slot 9 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 10 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 11 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 1

Constant Buffer "$Globals" (208 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 160
  Float _NormalScale1 at 164
  Float _NormalScale2 at 168
  Float _NormalScale3 at 172
  Float _Metallic0 at 176
  Float _Metallic1 at 180
  Float _Metallic2 at 184
  Float _Metallic3 at 188
  Float _Smoothness0 at 192
  Float _Smoothness1 at 196
  Float _Smoothness2 at 200
  Float _Smoothness3 at 204
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 5   xyzw        5     NONE   float   xy w
// TEXCOORD                 6   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[13], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texturecube (float,float,float,float) t10
      dcl_resource_texturecube (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r3.xy, r3.xyxx, cb0[5].xyxx
  10: sample r3.xyzw, r3.xyxx, t0.xyzw, s3
  11: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r2.w, r1.w, l(0.001000)
  13: div r3.xyzw, r3.xyzw, r2.wwww
  14: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r6.xyzw, r4.xyxx, t1.xyzw, s4
  19: mul r6.xyzw, r3.xxxx, r6.xyzw
  20: mul r6.w, r6.w, cb0[12].x
  21: sample r7.xyzw, r4.zwzz, t2.xyzw, s5
  22: mul r7.xyzw, r3.yyyy, r7.xyzw
  23: mul r7.w, r7.w, cb0[12].y
  24: add r6.xyzw, r6.xyzw, r7.xyzw
  25: sample r7.xyzw, r5.xyxx, t3.xyzw, s6
  26: mul r7.xyzw, r3.zzzz, r7.xyzw
  27: mul r7.w, r7.w, cb0[12].z
  28: add r6.xyzw, r6.xyzw, r7.xyzw
  29: sample r7.xyzw, r5.zwzz, t4.xyzw, s7
  30: mul r7.xyzw, r3.wwww, r7.xyzw
  31: mul r7.w, r7.w, cb0[12].w
  32: add r6.xyzw, r6.xyzw, r7.xyzw
  33: sample r7.xyzw, r4.xyxx, t5.xyzw, s8
  34: mul r7.x, r7.w, r7.x
  35: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  36: mul r7.xy, r4.xyxx, cb0[10].xxxx
  37: dp2 r2.w, r7.xyxx, r7.xyxx
  38: min r2.w, r2.w, l(1.000000)
  39: add r2.w, -r2.w, l(1.000000)
  40: sqrt r7.z, r2.w
  41: sample r4.xyzw, r4.zwzz, t6.xyzw, s9
  42: mul r4.x, r4.w, r4.x
  43: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  44: mul r4.xy, r4.xyxx, cb0[10].yyyy
  45: dp2 r2.w, r4.xyxx, r4.xyxx
  46: min r2.w, r2.w, l(1.000000)
  47: add r2.w, -r2.w, l(1.000000)
  48: sqrt r4.z, r2.w
  49: mul r4.xyz, r3.yyyy, r4.xyzx
  50: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  51: sample r7.xyzw, r5.xyxx, t7.xyzw, s10
  52: mul r7.x, r7.w, r7.x
  53: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  54: mul r7.xy, r5.xyxx, cb0[10].zzzz
  55: dp2 r2.w, r7.xyxx, r7.xyxx
  56: min r2.w, r2.w, l(1.000000)
  57: add r2.w, -r2.w, l(1.000000)
  58: sqrt r7.z, r2.w
  59: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  60: sample r5.xyzw, r5.zwzz, t8.xyzw, s11
  61: mul r5.x, r5.w, r5.x
  62: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  63: mul r5.xy, r5.xyxx, cb0[10].wwww
  64: dp2 r2.w, r5.xyxx, r5.xyxx
  65: min r2.w, r2.w, l(1.000000)
  66: add r2.w, -r2.w, l(1.000000)
  67: sqrt r5.z, r2.w
  68: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  69: dp4 r2.w, r3.xyzw, cb0[11].xyzw
  70: mov r3.x, cb4[9].z
  71: mov r3.y, cb4[10].z
  72: mov r3.z, cb4[11].z
  73: dp3 r3.x, r1.xyzx, r3.xyzx
  74: add r3.yzw, r0.xxyz, -cb3[25].xxyz
  75: dp3 r3.y, r3.yzwy, r3.yzwy
  76: sqrt r3.y, r3.y
  77: add r3.y, -r3.x, r3.y
  78: mad r3.x, cb3[25].w, r3.y, r3.x
  79: mad_sat r3.x, r3.x, cb3[24].z, cb3[24].w
  80: eq r3.y, cb6[0].x, l(1.000000)
  81: if_nz r3.y
  82:   eq r3.y, cb6[0].y, l(1.000000)
  83:   mul r5.xyz, v2.wwww, cb6[2].xyzx
  84:   mad r5.xyz, cb6[1].xyzx, v1.wwww, r5.xyzx
  85:   mad r5.xyz, cb6[3].xyzx, v3.wwww, r5.xyzx
  86:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  87:   movc r3.yzw, r3.yyyy, r5.xxyz, r0.xxyz
  88:   add r3.yzw, r3.yyzw, -cb6[6].xxyz
  89:   mul r5.yzw, r3.yyzw, cb6[5].xxyz
  90:   mad r3.y, r5.y, l(0.250000), l(0.750000)
  91:   mad r3.z, cb6[0].z, l(0.500000), l(0.750000)
  92:   max r5.x, r3.z, r3.y
  93:   sample r5.xyzw, r5.xzwx, t12.xyzw, s1
  94: else 
  95:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  96: endif 
  97: dp4_sat r3.y, r5.xyzw, cb2[46].xyzw
  98: div r3.zw, v5.xxxy, v5.wwww
  99: sample r5.xyzw, r3.zwzz, t9.xyzw, s2
 100: add r3.y, r3.y, -r5.x
 101: mad r3.x, r3.x, r3.y, r5.x
 102: add r4.w, r4.z, l(0.000010)
 103: dp3 r5.x, v1.xyzx, r4.xywx
 104: dp3 r5.y, v2.xyzx, r4.xywx
 105: dp3 r5.z, v3.xyzx, r4.xywx
 106: dp3 r3.y, r5.xyzx, r5.xyzx
 107: rsq r3.y, r3.y
 108: mul r3.yzw, r3.yyyy, r5.xxyz
 109: add r4.x, -r6.w, l(1.000000)
 110: dp3 r4.y, -r2.xyzx, r3.yzwy
 111: add r4.y, r4.y, r4.y
 112: mad r4.yzw, r3.yyzw, -r4.yyyy, -r2.xxyz
 113: mul r5.xyz, r3.xxxx, cb0[2].xyzx
 114: lt r3.x, l(0.000000), cb5[2].w
 115: if_nz r3.x
 116:   dp3 r3.x, r4.yzwy, r4.yzwy
 117:   rsq r3.x, r3.x
 118:   mul r7.xyz, r3.xxxx, r4.yzwy
 119:   add r8.xyz, -r0.xyzx, cb5[0].xyzx
 120:   div r8.xyz, r8.xyzx, r7.xyzx
 121:   add r9.xyz, -r0.xyzx, cb5[1].xyzx
 122:   div r9.xyz, r9.xyzx, r7.xyzx
 123:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
 124:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
 125:   min r3.x, r8.y, r8.x
 126:   min r3.x, r8.z, r3.x
 127:   add r8.xyz, r0.xyzx, -cb5[2].xyzx
 128:   mad r7.xyz, r7.xyzx, r3.xxxx, r8.xyzx
 129: else 
 130:   mov r7.xyz, r4.yzwy
 131: endif 
 132: mad r3.x, -r4.x, l(0.700000), l(1.700000)
 133: mul r3.x, r3.x, r4.x
 134: mul r3.x, r3.x, l(6.000000)
 135: sample_l r7.xyzw, r7.xyzx, t10.xyzw, s0, r3.x
 136: add r5.w, r7.w, l(-1.000000)
 137: mad r5.w, cb5[3].w, r5.w, l(1.000000)
 138: mul r5.w, r5.w, cb5[3].x
 139: mul r8.xyz, r7.xyzx, r5.wwww
 140: lt r7.w, cb5[1].w, l(0.999990)
 141: if_nz r7.w
 142:   lt r7.w, l(0.000000), cb5[6].w
 143:   if_nz r7.w
 144:     dp3 r7.w, r4.yzwy, r4.yzwy
 145:     rsq r7.w, r7.w
 146:     mul r9.xyz, r4.yzwy, r7.wwww
 147:     add r10.xyz, -r0.xyzx, cb5[4].xyzx
 148:     div r10.xyz, r10.xyzx, r9.xyzx
 149:     add r11.xyz, -r0.xyzx, cb5[5].xyzx
 150:     div r11.xyz, r11.xyzx, r9.xyzx
 151:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 152:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 153:     min r7.w, r10.y, r10.x
 154:     min r7.w, r10.z, r7.w
 155:     add r0.xyz, r0.xyzx, -cb5[6].xyzx
 156:     mad r4.yzw, r9.xxyz, r7.wwww, r0.xxyz
 157:   endif 
 158:   sample_l r9.xyzw, r4.yzwy, t11.xyzw, s0, r3.x
 159:   add r0.x, r9.w, l(-1.000000)
 160:   mad r0.x, cb5[7].w, r0.x, l(1.000000)
 161:   mul r0.x, r0.x, cb5[7].x
 162:   mul r0.xyz, r9.xyzx, r0.xxxx
 163:   mad r4.yzw, r5.wwww, r7.xxyz, -r0.xxyz
 164:   mad r8.xyz, cb5[1].wwww, r4.yzwy, r0.xyzx
 165: endif 
 166: add r0.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 167: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 168: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 169: mul r4.yzw, r2.wwww, r6.xxyz
 170: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 171: dp3 r0.w, r1.xyzx, r1.xyzx
 172: max r0.w, r0.w, l(0.001000)
 173: rsq r0.w, r0.w
 174: mul r1.xyz, r0.wwww, r1.xyzx
 175: dp3 r0.w, r3.yzwy, r2.xyzx
 176: dp3_sat r2.x, r3.yzwy, cb2[0].xyzx
 177: dp3_sat r2.y, r3.yzwy, r1.xyzx
 178: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 179: mul r1.y, r1.x, r1.x
 180: dp2 r1.y, r1.yyyy, r4.xxxx
 181: add r1.y, r1.y, l(-0.500000)
 182: add r1.z, -r2.x, l(1.000000)
 183: mul r2.z, r1.z, r1.z
 184: mul r2.z, r2.z, r2.z
 185: mul r1.z, r1.z, r2.z
 186: mad r1.z, r1.y, r1.z, l(1.000000)
 187: add r2.z, -|r0.w|, l(1.000000)
 188: mul r3.x, r2.z, r2.z
 189: mul r3.x, r3.x, r3.x
 190: mul r2.z, r2.z, r3.x
 191: mad r1.y, r1.y, r2.z, l(1.000000)
 192: mul r1.y, r1.y, r1.z
 193: mul r1.y, r2.x, r1.y
 194: mul r1.z, r4.x, r4.x
 195: max r1.z, r1.z, l(0.002000)
 196: add r3.x, -r1.z, l(1.000000)
 197: mad r3.y, |r0.w|, r3.x, r1.z
 198: mad r3.x, r2.x, r3.x, r1.z
 199: mul r0.w, |r0.w|, r3.x
 200: mad r0.w, r2.x, r3.y, r0.w
 201: add r0.w, r0.w, l(0.000010)
 202: div r0.w, l(0.500000), r0.w
 203: mul r3.x, r1.z, r1.z
 204: mad r3.y, r2.y, r3.x, -r2.y
 205: mad r2.y, r3.y, r2.y, l(1.000000)
 206: mul r3.x, r3.x, l(0.318310)
 207: mad r2.y, r2.y, r2.y, l(0.000000)
 208: div r2.y, r3.x, r2.y
 209: mul r0.w, r0.w, r2.y
 210: mul r0.w, r0.w, l(3.141593)
 211: max r0.w, r0.w, l(0.000100)
 212: sqrt r0.w, r0.w
 213: mul r0.w, r2.x, r0.w
 214: mul r1.z, r1.z, l(0.280000)
 215: mad r1.z, -r1.z, r4.x, l(1.000000)
 216: dp3 r2.x, r0.xyzx, r0.xyzx
 217: ne r2.x, r2.x, l(0.000000)
 218: and r2.x, r2.x, l(0x3f800000)
 219: mul r0.w, r0.w, r2.x
 220: add r2.x, -r2.w, r6.w
 221: add_sat r2.x, r2.x, l(1.000000)
 222: mul r3.xyz, r1.yyyy, r5.xyzx
 223: mul r5.xyz, r5.xyzx, r0.wwww
 224: add r0.w, -r1.x, l(1.000000)
 225: mul r1.x, r0.w, r0.w
 226: mul r1.x, r1.x, r1.x
 227: mul r0.w, r0.w, r1.x
 228: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 229: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 230: mul r5.xyz, r5.xyzx, r6.xyzx
 231: mad r3.xyz, r4.yzwy, r3.xyzx, r5.xyzx
 232: mul r1.xyz, r8.xyzx, r1.zzzz
 233: add r2.xyw, -r0.xyxz, r2.xxxx
 234: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 235: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 236: mul o0.xyz, r1.wwww, r0.xyzx
 237: mov o0.w, l(1.000000)
 238: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 36 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerCamera" (144 bytes) on slot 0 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb3[18].xyzw
   6: mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
   8: mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: mov o1.w, r0.x
  11: mul r0.xw, v2.zzzx, l(0.000000, 0.000000, 0.000000, 1.000000)
  12: mad r0.xw, v2.yyyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xxxw
  13: mul r2.xyz, r0.wwww, cb2[1].yzxy
  14: mad r2.xyz, cb2[0].yzxy, r0.xxxx, r2.xyzx
  15: dp3 r0.x, r2.xyzx, r2.xyzx
  16: rsq r0.x, r0.x
  17: mul r2.xyz, r0.xxxx, r2.xyzx
  18: mov o1.x, r2.z
  19: mul r3.xyzw, v2.yyyy, cb2[1].xyzz
  20: mad r3.xyzw, cb2[0].xyzz, v2.xxxx, r3.xyzw
  21: mad r3.xyzw, cb2[2].xyzz, v2.zzzz, r3.xyzw
  22: dp3 r0.x, r3.xywx, r3.xywx
  23: rsq r0.x, r0.x
  24: mul r3.xyzw, r0.xxxx, r3.xyzw
  25: mul r4.xyz, r2.xyzx, r3.wxyw
  26: mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
  27: mul r4.xyz, r4.xyzx, -cb2[9].wwww
  28: mov o1.y, r4.x
  29: mov o1.z, r3.x
  30: mov o2.x, r2.x
  31: mov o3.x, r2.y
  32: mov o2.w, r0.y
  33: mov o3.w, r0.z
  34: mov o2.y, r4.y
  35: mov o3.y, r4.z
  36: mov o2.z, r3.y
  37: mov o3.z, r3.w
  38: mov o4.xy, v3.xyxx
  39: mov o4.zw, l(0,0,0,0)
  40: mul r0.x, r3.y, r3.y
  41: mad r0.x, r3.x, r3.x, -r0.x
  42: mul r2.xyzw, r3.ywzx, r3.xyzw
  43: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  44: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  45: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  46: mad o5.xyz, cb1[45].xyzx, r0.xxxx, r3.xyzx
  47: mul r0.x, r1.y, cb0[5].x
  48: mul r0.w, r0.x, l(0.500000)
  49: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  50: mov o6.zw, r1.zzzw
  51: add o6.xy, r0.zzzz, r0.xwxx
  52: mov o7.xyzw, l(0,0,0,0)
  53: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 230 math, 14 temp registers, 14 textures, 8 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_Normal0" to slot 5 sampler slot 8
Set 2D Texture "_Normal1" to slot 6 sampler slot 9
Set 2D Texture "_Normal2" to slot 7 sampler slot 10
Set 2D Texture "_Normal3" to slot 8 sampler slot 11
Set 2D Texture "_ShadowMapTexture" to slot 9 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 10 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 11 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 1

Constant Buffer "$Globals" (208 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 160
  Float _NormalScale1 at 164
  Float _NormalScale2 at 168
  Float _NormalScale3 at 172
  Float _Metallic0 at 176
  Float _Metallic1 at 180
  Float _Metallic2 at 184
  Float _Metallic3 at 188
  Float _Smoothness0 at 192
  Float _Smoothness1 at 196
  Float _Smoothness2 at 200
  Float _Smoothness3 at 204
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[13], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texturecube (float,float,float,float) t10
      dcl_resource_texturecube (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r3.xy, r3.xyxx, cb0[5].xyxx
  10: sample r3.xyzw, r3.xyxx, t0.xyzw, s3
  11: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r2.w, r1.w, l(0.001000)
  13: div r3.xyzw, r3.xyzw, r2.wwww
  14: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r6.xyzw, r4.xyxx, t1.xyzw, s4
  19: mul r6.xyzw, r3.xxxx, r6.xyzw
  20: mul r6.w, r6.w, cb0[12].x
  21: sample r7.xyzw, r4.zwzz, t2.xyzw, s5
  22: mul r7.xyzw, r3.yyyy, r7.xyzw
  23: mul r7.w, r7.w, cb0[12].y
  24: add r6.xyzw, r6.xyzw, r7.xyzw
  25: sample r7.xyzw, r5.xyxx, t3.xyzw, s6
  26: mul r7.xyzw, r3.zzzz, r7.xyzw
  27: mul r7.w, r7.w, cb0[12].z
  28: add r6.xyzw, r6.xyzw, r7.xyzw
  29: sample r7.xyzw, r5.zwzz, t4.xyzw, s7
  30: mul r7.xyzw, r3.wwww, r7.xyzw
  31: mul r7.w, r7.w, cb0[12].w
  32: add r6.xyzw, r6.xyzw, r7.xyzw
  33: sample r7.xyzw, r4.xyxx, t5.xyzw, s8
  34: mul r7.x, r7.w, r7.x
  35: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  36: mul r7.xy, r4.xyxx, cb0[10].xxxx
  37: dp2 r2.w, r7.xyxx, r7.xyxx
  38: min r2.w, r2.w, l(1.000000)
  39: add r2.w, -r2.w, l(1.000000)
  40: sqrt r7.z, r2.w
  41: sample r4.xyzw, r4.zwzz, t6.xyzw, s9
  42: mul r4.x, r4.w, r4.x
  43: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  44: mul r4.xy, r4.xyxx, cb0[10].yyyy
  45: dp2 r2.w, r4.xyxx, r4.xyxx
  46: min r2.w, r2.w, l(1.000000)
  47: add r2.w, -r2.w, l(1.000000)
  48: sqrt r4.z, r2.w
  49: mul r4.xyz, r3.yyyy, r4.xyzx
  50: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  51: sample r7.xyzw, r5.xyxx, t7.xyzw, s10
  52: mul r7.x, r7.w, r7.x
  53: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  54: mul r7.xy, r5.xyxx, cb0[10].zzzz
  55: dp2 r2.w, r7.xyxx, r7.xyxx
  56: min r2.w, r2.w, l(1.000000)
  57: add r2.w, -r2.w, l(1.000000)
  58: sqrt r7.z, r2.w
  59: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  60: sample r5.xyzw, r5.zwzz, t8.xyzw, s11
  61: mul r5.x, r5.w, r5.x
  62: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  63: mul r5.xy, r5.xyxx, cb0[10].wwww
  64: dp2 r2.w, r5.xyxx, r5.xyxx
  65: min r2.w, r2.w, l(1.000000)
  66: add r2.w, -r2.w, l(1.000000)
  67: sqrt r5.z, r2.w
  68: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  69: dp4 r2.w, r3.xyzw, cb0[11].xyzw
  70: mov r3.x, cb4[9].z
  71: mov r3.y, cb4[10].z
  72: mov r3.z, cb4[11].z
  73: dp3 r3.x, r1.xyzx, r3.xyzx
  74: add r3.yzw, r0.xxyz, -cb3[25].xxyz
  75: dp3 r3.y, r3.yzwy, r3.yzwy
  76: sqrt r3.y, r3.y
  77: add r3.y, -r3.x, r3.y
  78: mad r3.x, cb3[25].w, r3.y, r3.x
  79: mad_sat r3.x, r3.x, cb3[24].z, cb3[24].w
  80: eq r3.y, cb6[0].x, l(1.000000)
  81: if_nz r3.y
  82:   eq r3.z, cb6[0].y, l(1.000000)
  83:   mul r5.xyz, v2.wwww, cb6[2].xyzx
  84:   mad r5.xyz, cb6[1].xyzx, v1.wwww, r5.xyzx
  85:   mad r5.xyz, cb6[3].xyzx, v3.wwww, r5.xyzx
  86:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  87:   movc r5.xyz, r3.zzzz, r5.xyzx, r0.xyzx
  88:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  89:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  90:   mad r3.z, r5.y, l(0.250000), l(0.750000)
  91:   mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
  92:   max r5.x, r3.w, r3.z
  93:   sample r5.xyzw, r5.xzwx, t12.xyzw, s1
  94: else 
  95:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  96: endif 
  97: dp4_sat r3.z, r5.xyzw, cb2[46].xyzw
  98: div r5.xy, v6.xyxx, v6.wwww
  99: sample r5.xyzw, r5.xyxx, t9.xyzw, s2
 100: add r3.z, r3.z, -r5.x
 101: mad r3.x, r3.x, r3.z, r5.x
 102: add r4.w, r4.z, l(0.000010)
 103: dp3 r5.x, v1.xyzx, r4.xywx
 104: dp3 r5.y, v2.xyzx, r4.xywx
 105: dp3 r5.z, v3.xyzx, r4.xywx
 106: dp3 r3.z, r5.xyzx, r5.xyzx
 107: rsq r3.z, r3.z
 108: mul r4.xyz, r3.zzzz, r5.xyzx
 109: add r3.z, -r6.w, l(1.000000)
 110: dp3 r3.w, -r2.xyzx, r4.xyzx
 111: add r3.w, r3.w, r3.w
 112: mad r5.xyz, r4.xyzx, -r3.wwww, -r2.xyzx
 113: mul r7.xyz, r3.xxxx, cb0[2].xyzx
 114: if_nz r3.y
 115:   eq r3.x, cb6[0].y, l(1.000000)
 116:   mul r8.xyz, v2.wwww, cb6[2].xyzx
 117:   mad r8.xyz, cb6[1].xyzx, v1.wwww, r8.xyzx
 118:   mad r8.xyz, cb6[3].xyzx, v3.wwww, r8.xyzx
 119:   add r8.xyz, r8.xyzx, cb6[4].xyzx
 120:   movc r3.xyw, r3.xxxx, r8.xyxz, r0.xyxz
 121:   add r3.xyw, r3.xyxw, -cb6[6].xyxz
 122:   mul r8.yzw, r3.xxyw, cb6[5].xxyz
 123:   mul r3.x, r8.y, l(0.250000)
 124:   mul r3.y, cb6[0].z, l(0.500000)
 125:   mad r3.w, -cb6[0].z, l(0.500000), l(0.250000)
 126:   max r3.x, r3.y, r3.x
 127:   min r8.x, r3.w, r3.x
 128:   sample r9.xyzw, r8.xzwx, t12.xyzw, s1
 129:   add r3.xyw, r8.xzxw, l(0.250000, 0.000000, 0.000000, 0.000000)
 130:   sample r10.xyzw, r3.xywx, t12.xyzw, s1
 131:   add r3.xyw, r8.xzxw, l(0.500000, 0.000000, 0.000000, 0.000000)
 132:   sample r8.xyzw, r3.xywx, t12.xyzw, s1
 133:   mov r4.w, l(1.000000)
 134:   dp4 r9.x, r9.xyzw, r4.xyzw
 135:   dp4 r9.y, r10.xyzw, r4.xyzw
 136:   dp4 r9.z, r8.xyzw, r4.xyzw
 137: else 
 138:   mov r4.w, l(1.000000)
 139:   dp4 r9.x, cb2[39].xyzw, r4.xyzw
 140:   dp4 r9.y, cb2[40].xyzw, r4.xyzw
 141:   dp4 r9.z, cb2[41].xyzw, r4.xyzw
 142: endif 
 143: add r3.xyw, r9.xyxz, v5.xyxz
 144: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
 145: log r3.xyw, r3.xyxw
 146: mul r3.xyw, r3.xyxw, l(0.416667, 0.416667, 0.000000, 0.416667)
 147: exp r3.xyw, r3.xyxw
 148: mad r3.xyw, r3.xyxw, l(1.055000, 1.055000, 0.000000, 1.055000), l(-0.055000, -0.055000, 0.000000, -0.055000)
 149: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
 150: lt r4.w, l(0.000000), cb5[2].w
 151: if_nz r4.w
 152:   dp3 r4.w, r5.xyzx, r5.xyzx
 153:   rsq r4.w, r4.w
 154:   mul r8.xyz, r4.wwww, r5.xyzx
 155:   add r9.xyz, -r0.xyzx, cb5[0].xyzx
 156:   div r9.xyz, r9.xyzx, r8.xyzx
 157:   add r10.xyz, -r0.xyzx, cb5[1].xyzx
 158:   div r10.xyz, r10.xyzx, r8.xyzx
 159:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
 160:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
 161:   min r4.w, r9.y, r9.x
 162:   min r4.w, r9.z, r4.w
 163:   add r9.xyz, r0.xyzx, -cb5[2].xyzx
 164:   mad r8.xyz, r8.xyzx, r4.wwww, r9.xyzx
 165: else 
 166:   mov r8.xyz, r5.xyzx
 167: endif 
 168: mad r4.w, -r3.z, l(0.700000), l(1.700000)
 169: mul r4.w, r3.z, r4.w
 170: mul r4.w, r4.w, l(6.000000)
 171: sample_l r8.xyzw, r8.xyzx, t10.xyzw, s0, r4.w
 172: add r5.w, r8.w, l(-1.000000)
 173: mad r5.w, cb5[3].w, r5.w, l(1.000000)
 174: mul r5.w, r5.w, cb5[3].x
 175: mul r9.xyz, r8.xyzx, r5.wwww
 176: lt r7.w, cb5[1].w, l(0.999990)
 177: if_nz r7.w
 178:   lt r7.w, l(0.000000), cb5[6].w
 179:   if_nz r7.w
 180:     dp3 r7.w, r5.xyzx, r5.xyzx
 181:     rsq r7.w, r7.w
 182:     mul r10.xyz, r5.xyzx, r7.wwww
 183:     add r11.xyz, -r0.xyzx, cb5[4].xyzx
 184:     div r11.xyz, r11.xyzx, r10.xyzx
 185:     add r12.xyz, -r0.xyzx, cb5[5].xyzx
 186:     div r12.xyz, r12.xyzx, r10.xyzx
 187:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 188:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 189:     min r7.w, r11.y, r11.x
 190:     min r7.w, r11.z, r7.w
 191:     add r0.xyz, r0.xyzx, -cb5[6].xyzx
 192:     mad r5.xyz, r10.xyzx, r7.wwww, r0.xyzx
 193:   endif 
 194:   sample_l r10.xyzw, r5.xyzx, t11.xyzw, s0, r4.w
 195:   add r0.x, r10.w, l(-1.000000)
 196:   mad r0.x, cb5[7].w, r0.x, l(1.000000)
 197:   mul r0.x, r0.x, cb5[7].x
 198:   mul r0.xyz, r10.xyzx, r0.xxxx
 199:   mad r5.xyz, r5.wwww, r8.xyzx, -r0.xyzx
 200:   mad r9.xyz, cb5[1].wwww, r5.xyzx, r0.xyzx
 201: endif 
 202: add r0.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 203: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 204: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 205: mul r5.xyz, r2.wwww, r6.xyzx
 206: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 207: dp3 r0.w, r1.xyzx, r1.xyzx
 208: max r0.w, r0.w, l(0.001000)
 209: rsq r0.w, r0.w
 210: mul r1.xyz, r0.wwww, r1.xyzx
 211: dp3 r0.w, r4.xyzx, r2.xyzx
 212: dp3_sat r2.x, r4.xyzx, cb2[0].xyzx
 213: dp3_sat r2.y, r4.xyzx, r1.xyzx
 214: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 215: mul r1.y, r1.x, r1.x
 216: dp2 r1.y, r1.yyyy, r3.zzzz
 217: add r1.y, r1.y, l(-0.500000)
 218: add r1.z, -r2.x, l(1.000000)
 219: mul r2.z, r1.z, r1.z
 220: mul r2.z, r2.z, r2.z
 221: mul r1.z, r1.z, r2.z
 222: mad r1.z, r1.y, r1.z, l(1.000000)
 223: add r2.z, -|r0.w|, l(1.000000)
 224: mul r4.x, r2.z, r2.z
 225: mul r4.x, r4.x, r4.x
 226: mul r2.z, r2.z, r4.x
 227: mad r1.y, r1.y, r2.z, l(1.000000)
 228: mul r1.y, r1.y, r1.z
 229: mul r1.y, r2.x, r1.y
 230: mul r1.z, r3.z, r3.z
 231: max r1.z, r1.z, l(0.002000)
 232: add r4.x, -r1.z, l(1.000000)
 233: mad r4.y, |r0.w|, r4.x, r1.z
 234: mad r4.x, r2.x, r4.x, r1.z
 235: mul r0.w, |r0.w|, r4.x
 236: mad r0.w, r2.x, r4.y, r0.w
 237: add r0.w, r0.w, l(0.000010)
 238: div r0.w, l(0.500000), r0.w
 239: mul r4.x, r1.z, r1.z
 240: mad r4.y, r2.y, r4.x, -r2.y
 241: mad r2.y, r4.y, r2.y, l(1.000000)
 242: mul r4.x, r4.x, l(0.318310)
 243: mad r2.y, r2.y, r2.y, l(0.000000)
 244: div r2.y, r4.x, r2.y
 245: mul r0.w, r0.w, r2.y
 246: mul r0.w, r0.w, l(3.141593)
 247: max r0.w, r0.w, l(0.000100)
 248: sqrt r0.w, r0.w
 249: mul r0.w, r2.x, r0.w
 250: mul r1.z, r1.z, l(0.280000)
 251: mad r1.z, -r1.z, r3.z, l(1.000000)
 252: dp3 r2.x, r0.xyzx, r0.xyzx
 253: ne r2.x, r2.x, l(0.000000)
 254: and r2.x, r2.x, l(0x3f800000)
 255: mul r0.w, r0.w, r2.x
 256: add r2.x, -r2.w, r6.w
 257: add_sat r2.x, r2.x, l(1.000000)
 258: mad r3.xyz, r7.xyzx, r1.yyyy, r3.xywx
 259: mul r4.xyz, r7.xyzx, r0.wwww
 260: add r0.w, -r1.x, l(1.000000)
 261: mul r1.x, r0.w, r0.w
 262: mul r1.x, r1.x, r1.x
 263: mul r0.w, r0.w, r1.x
 264: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 265: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 266: mul r4.xyz, r4.xyzx, r6.xyzx
 267: mad r3.xyz, r5.xyzx, r3.xyzx, r4.xyzx
 268: mul r1.xyz, r9.xyzx, r1.zzzz
 269: add r2.xyw, -r0.xyxz, r2.xxxx
 270: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 271: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 272: mul o0.xyz, r1.wwww, r0.xyzx
 273: mov o0.w, l(1.000000)
 274: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerDraw" (176 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb0[3].xyzw
   4: mad r0.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb1[18].xyzw
   6: mad r2.xyzw, cb1[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb1[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb1[20].xyzw, r1.wwww, r2.xyzw
   9: mov o1.w, r0.x
  10: mul r0.xw, v2.zzzx, l(0.000000, 0.000000, 0.000000, 1.000000)
  11: mad r0.xw, v2.yyyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xxxw
  12: mul r1.xyz, r0.wwww, cb0[1].yzxy
  13: mad r1.xyz, cb0[0].yzxy, r0.xxxx, r1.xyzx
  14: dp3 r0.x, r1.xyzx, r1.xyzx
  15: rsq r0.x, r0.x
  16: mul r1.xyz, r0.xxxx, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb0[1].zxyz
  18: mad r2.xyz, cb0[0].zxyz, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb0[2].zxyz, v2.zzzz, r2.xyzx
  20: dp3 r0.x, r2.xyzx, r2.xyzx
  21: rsq r0.x, r0.x
  22: mul r2.xyz, r0.xxxx, r2.xyzx
  23: mul r3.xyz, r1.xyzx, r2.xyzx
  24: mad r3.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
  25: mul r3.xyz, r3.xyzx, -cb0[9].wwww
  26: mov o1.y, r3.x
  27: mov o1.x, r1.z
  28: mov o1.z, r2.y
  29: mov o2.x, r1.x
  30: mov o3.x, r1.y
  31: mov o2.z, r2.z
  32: mov o3.z, r2.x
  33: mov o2.w, r0.y
  34: mov o3.w, r0.z
  35: mov o2.y, r3.y
  36: mov o3.y, r3.z
  37: mov o4.xy, v3.xyxx
  38: mov o4.zw, l(0,0,0,0)
  39: mov o5.xyzw, l(0,0,0,0)
  40: mov o6.xyzw, l(0,0,0,0)
  41: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 55 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[46], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   9: mul r1.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
  10: mad r1.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r1.xyxx
  11: mul r1.yzw, r1.yyyy, cb1[1].yyzx
  12: mad r1.xyz, cb1[0].yzxy, r1.xxxx, r1.yzwy
  13: dp3 r0.w, r1.xyzx, r1.xyzx
  14: rsq r0.w, r0.w
  15: mul r1.xyz, r0.wwww, r1.xyzx
  16: mov o1.x, r1.z
  17: mul r2.xyzw, v2.yyyy, cb1[1].xyzz
  18: mad r2.xyzw, cb1[0].xyzz, v2.xxxx, r2.xyzw
  19: mad r2.xyzw, cb1[2].xyzz, v2.zzzz, r2.xyzw
  20: dp3 r0.w, r2.xywx, r2.xywx
  21: rsq r0.w, r0.w
  22: mul r2.xyzw, r0.wwww, r2.xyzw
  23: mul r3.xyz, r1.xyzx, r2.wxyw
  24: mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
  25: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  26: mov o1.y, r3.x
  27: mov o1.w, r0.x
  28: mov o1.z, r2.x
  29: mov o2.x, r1.x
  30: mov o3.x, r1.y
  31: mov o2.y, r3.y
  32: mov o3.y, r3.z
  33: mov o2.w, r0.y
  34: mov o2.z, r2.y
  35: mov o3.w, r0.z
  36: mov o3.z, r2.w
  37: mov o4.xy, v3.xyxx
  38: mov o4.zw, l(0,0,0,0)
  39: add r1.xyzw, -r0.xxxx, cb0[3].xyzw
  40: add r3.xyzw, -r0.yyyy, cb0[4].xyzw
  41: add r0.xyzw, -r0.zzzz, cb0[5].xyzw
  42: mul r4.xyzw, r2.yyyy, r3.xyzw
  43: mul r3.xyzw, r3.xyzw, r3.xyzw
  44: mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
  45: mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
  46: mad r1.xyzw, r0.xyzw, r2.wwzw, r1.xyzw
  47: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  48: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  49: rsq r3.xyzw, r0.xyzw
  50: mad r0.xyzw, r0.xyzw, cb0[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  51: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  52: mul r1.xyzw, r1.xyzw, r3.xyzw
  53: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  54: mul r0.xyzw, r0.xyzw, r1.xyzw
  55: mul r1.xyz, r0.yyyy, cb0[8].xyzx
  56: mad r1.xyz, cb0[7].xyzx, r0.xxxx, r1.xyzx
  57: mad r0.xyz, cb0[9].xyzx, r0.zzzz, r1.xyzx
  58: mad r0.xyz, cb0[10].xyzx, r0.wwww, r0.xyzx
  59: mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  60: mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  61: mul r0.w, r2.y, r2.y
  62: mad r0.w, r2.x, r2.x, -r0.w
  63: mul r2.xyzw, r2.ywzx, r2.xyzw
  64: dp4 r3.x, cb0[42].xyzw, r2.xyzw
  65: dp4 r3.y, cb0[43].xyzw, r2.xyzw
  66: dp4 r3.z, cb0[44].xyzw, r2.xyzw
  67: mad r2.xyz, cb0[45].xyzx, r0.wwww, r3.xyzx
  68: mad o5.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  69: mov o6.xyzw, l(0,0,0,0)
  70: mov o7.xyzw, l(0,0,0,0)
  71: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerCamera" (144 bytes) on slot 0 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   8: mad r1.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: mov o1.w, r0.x
  11: mul r0.xw, v2.zzzx, l(0.000000, 0.000000, 0.000000, 1.000000)
  12: mad r0.xw, v2.yyyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xxxw
  13: mul r2.xyz, r0.wwww, cb1[1].yzxy
  14: mad r2.xyz, cb1[0].yzxy, r0.xxxx, r2.xyzx
  15: dp3 r0.x, r2.xyzx, r2.xyzx
  16: rsq r0.x, r0.x
  17: mul r2.xyz, r0.xxxx, r2.xyzx
  18: mul r3.xyz, v2.yyyy, cb1[1].zxyz
  19: mad r3.xyz, cb1[0].zxyz, v2.xxxx, r3.xyzx
  20: mad r3.xyz, cb1[2].zxyz, v2.zzzz, r3.xyzx
  21: dp3 r0.x, r3.xyzx, r3.xyzx
  22: rsq r0.x, r0.x
  23: mul r3.xyz, r0.xxxx, r3.xyzx
  24: mul r4.xyz, r2.xyzx, r3.xyzx
  25: mad r4.xyz, r3.zxyz, r2.yzxy, -r4.xyzx
  26: mul r4.xyz, r4.xyzx, -cb1[9].wwww
  27: mov o1.y, r4.x
  28: mov o1.x, r2.z
  29: mov o1.z, r3.y
  30: mov o2.x, r2.x
  31: mov o3.x, r2.y
  32: mov o2.z, r3.z
  33: mov o3.z, r3.x
  34: mov o2.w, r0.y
  35: mov o3.w, r0.z
  36: mov o2.y, r4.y
  37: mov o3.y, r4.z
  38: mov o4.xy, v3.xyxx
  39: mov o4.zw, l(0,0,0,0)
  40: mul r0.x, r1.y, cb0[5].x
  41: mul r0.w, r0.x, l(0.500000)
  42: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  43: mov o5.zw, r1.zzzw
  44: add o5.xy, r0.zzzz, r0.xwxx
  45: mov o6.xyzw, l(0,0,0,0)
  46: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerCamera" (144 bytes) on slot 0 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb3[18].xyzw
   6: mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
   8: mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: mul r2.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
  11: mad r2.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r2.xyxx
  12: mul r2.yzw, r2.yyyy, cb2[1].yyzx
  13: mad r2.xyz, cb2[0].yzxy, r2.xxxx, r2.yzwy
  14: dp3 r0.w, r2.xyzx, r2.xyzx
  15: rsq r0.w, r0.w
  16: mul r2.xyz, r0.wwww, r2.xyzx
  17: mov o1.x, r2.z
  18: mul r3.xyzw, v2.yyyy, cb2[1].xyzz
  19: mad r3.xyzw, cb2[0].xyzz, v2.xxxx, r3.xyzw
  20: mad r3.xyzw, cb2[2].xyzz, v2.zzzz, r3.xyzw
  21: dp3 r0.w, r3.xywx, r3.xywx
  22: rsq r0.w, r0.w
  23: mul r3.xyzw, r0.wwww, r3.xyzw
  24: mul r4.xyz, r2.xyzx, r3.wxyw
  25: mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
  26: mul r4.xyz, r4.xyzx, -cb2[9].wwww
  27: mov o1.y, r4.x
  28: mov o1.w, r0.x
  29: mov o1.z, r3.x
  30: mov o2.x, r2.x
  31: mov o3.x, r2.y
  32: mov o2.y, r4.y
  33: mov o3.y, r4.z
  34: mov o2.w, r0.y
  35: mov o2.z, r3.y
  36: mov o3.w, r0.z
  37: mov o3.z, r3.w
  38: mov o4.xy, v3.xyxx
  39: mov o4.zw, l(0,0,0,0)
  40: add r2.xyzw, -r0.xxxx, cb1[3].xyzw
  41: add r4.xyzw, -r0.yyyy, cb1[4].xyzw
  42: add r0.xyzw, -r0.zzzz, cb1[5].xyzw
  43: mul r5.xyzw, r3.yyyy, r4.xyzw
  44: mul r4.xyzw, r4.xyzw, r4.xyzw
  45: mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
  46: mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
  47: mad r2.xyzw, r0.xyzw, r3.wwzw, r2.xyzw
  48: mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
  49: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  50: rsq r4.xyzw, r0.xyzw
  51: mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  52: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  53: mul r2.xyzw, r2.xyzw, r4.xyzw
  54: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: mul r0.xyzw, r0.xyzw, r2.xyzw
  56: mul r2.xyz, r0.yyyy, cb1[8].xyzx
  57: mad r2.xyz, cb1[7].xyzx, r0.xxxx, r2.xyzx
  58: mad r0.xyz, cb1[9].xyzx, r0.zzzz, r2.xyzx
  59: mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
  60: mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  61: mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  62: mul r0.w, r3.y, r3.y
  63: mad r0.w, r3.x, r3.x, -r0.w
  64: mul r3.xyzw, r3.ywzx, r3.xyzw
  65: dp4 r4.x, cb1[42].xyzw, r3.xyzw
  66: dp4 r4.y, cb1[43].xyzw, r3.xyzw
  67: dp4 r4.z, cb1[44].xyzw, r3.xyzw
  68: mad r3.xyz, cb1[45].xyzx, r0.wwww, r4.xyzx
  69: mad o5.xyz, r0.xyzx, r2.xyzx, r3.xyzx
  70: mul r0.x, r1.y, cb0[5].x
  71: mul r0.w, r0.x, l(0.500000)
  72: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  73: mov o6.zw, r1.zzzw
  74: add o6.xy, r0.zzzz, r0.xwxx
  75: mov o7.xyzw, l(0,0,0,0)
  76: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 27 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// SV_InstanceID            0   x           7     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: mov o1.w, r0.x
  21: dp3 r0.x, cb1[1].xyzx, cb1[1].xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, cb1[1].zxyz
  24: dp3 r0.x, cb1[0].xyzx, cb1[0].xyzx
  25: rsq r0.x, r0.x
  26: mul r2.xyz, r0.xxxx, cb1[0].yzxy
  27: mul r3.xyz, r1.xyzx, r2.xyzx
  28: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  29: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  30: mov o1.y, r3.x
  31: mov o1.x, r2.z
  32: mov o1.z, r1.y
  33: mov o2.w, r0.y
  34: mov o3.w, r0.z
  35: mov o2.x, r2.x
  36: mov o3.x, r2.y
  37: mov o2.z, r1.z
  38: mov o3.z, r1.x
  39: mov o2.y, r3.y
  40: mov o3.y, r3.z
  41: mov o5.xyzw, l(0,0,0,0)
  42: mov o6.xyzw, l(0,0,0,0)
  43: mov o7.x, v8.x
  44: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON LIGHTPROBE_SH 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 4 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 5 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb4[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb5[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb5[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  10: add r0.yz, v0.xxyx, cb5[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb5[r0.x + 0].zzzz
  13: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb2[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb2[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  17: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  20: mov o1.w, r0.x
  21: dp3 r0.x, cb2[0].xyzx, cb2[0].xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, cb2[0].yzxy
  24: mov o1.x, r1.z
  25: dp3 r0.x, cb2[1].xyzx, cb2[1].xyzx
  26: rsq r0.x, r0.x
  27: mul r2.xyzw, r0.xxxx, cb2[1].xyzz
  28: mul r3.xyz, r1.xyzx, r2.wxyw
  29: mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
  30: mul r3.xyz, r3.xyzx, -cb2[9].wwww
  31: mov o1.y, r3.x
  32: mov o1.z, r2.x
  33: mov o2.w, r0.y
  34: mov o3.w, r0.z
  35: mov o2.x, r1.x
  36: mov o3.x, r1.y
  37: mov o2.y, r3.y
  38: mov o3.y, r3.z
  39: mov o2.z, r2.y
  40: mov o3.z, r2.w
  41: mul r0.x, r2.y, r2.y
  42: mad r0.x, r2.x, r2.x, -r0.x
  43: mul r1.xyzw, r2.ywzx, r2.xyzw
  44: dp4 r2.x, cb1[42].xyzw, r1.xyzw
  45: dp4 r2.y, cb1[43].xyzw, r1.xyzw
  46: dp4 r2.z, cb1[44].xyzw, r1.xyzw
  47: mad o5.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
  48: mov o6.xyzw, l(0,0,0,0)
  49: mov o7.xyzw, l(0,0,0,0)
  50: mov o8.x, v8.x
  51: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 5 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 4 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 5 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// SV_InstanceID            0   x           7     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.x
      dcl_temps 5
   0: iadd r0.x, v8.x, cb4[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb5[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb5[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  10: add r0.yz, v0.xxyx, cb5[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb5[r0.x + 0].zzzz
  13: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb2[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb2[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  17: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  19: mad r1.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  20: mov o0.xyzw, r1.xyzw
  21: mov o1.w, r0.x
  22: dp3 r0.x, cb2[1].xyzx, cb2[1].xyzx
  23: rsq r0.x, r0.x
  24: mul r2.xyz, r0.xxxx, cb2[1].zxyz
  25: dp3 r0.x, cb2[0].xyzx, cb2[0].xyzx
  26: rsq r0.x, r0.x
  27: mul r3.xyz, r0.xxxx, cb2[0].yzxy
  28: mul r4.xyz, r2.xyzx, r3.xyzx
  29: mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
  30: mul r4.xyz, r4.xyzx, -cb2[9].wwww
  31: mov o1.y, r4.x
  32: mov o1.x, r3.z
  33: mov o1.z, r2.y
  34: mov o2.w, r0.y
  35: mov o3.w, r0.z
  36: mov o2.x, r3.x
  37: mov o3.x, r3.y
  38: mov o2.z, r2.z
  39: mov o3.z, r2.x
  40: mov o2.y, r4.y
  41: mov o3.y, r4.z
  42: mul r0.x, r1.y, cb1[5].x
  43: mul r0.w, r0.x, l(0.500000)
  44: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  45: mov o5.zw, r1.zzzw
  46: add o5.xy, r0.zzzz, r0.xwxx
  47: mov o6.xyzw, l(0,0,0,0)
  48: mov o7.x, v8.x
  49: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 5 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 6 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_constantbuffer CB6[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 5
   0: iadd r0.x, v8.x, cb5[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb6[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb6[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
  10: add r0.yz, v0.xxyx, cb6[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb6[r0.x + 0].zzzz
  13: mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb3[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb3[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  17: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  19: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  20: mov o0.xyzw, r1.xyzw
  21: mov o1.w, r0.x
  22: dp3 r0.x, cb3[0].xyzx, cb3[0].xyzx
  23: rsq r0.x, r0.x
  24: mul r2.xyz, r0.xxxx, cb3[0].yzxy
  25: mov o1.x, r2.z
  26: dp3 r0.x, cb3[1].xyzx, cb3[1].xyzx
  27: rsq r0.x, r0.x
  28: mul r3.xyzw, r0.xxxx, cb3[1].xyzz
  29: mul r4.xyz, r2.xyzx, r3.wxyw
  30: mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
  31: mul r4.xyz, r4.xyzx, -cb3[9].wwww
  32: mov o1.y, r4.x
  33: mov o1.z, r3.x
  34: mov o2.w, r0.y
  35: mov o3.w, r0.z
  36: mov o2.x, r2.x
  37: mov o3.x, r2.y
  38: mov o2.y, r4.y
  39: mov o3.y, r4.z
  40: mov o2.z, r3.y
  41: mov o3.z, r3.w
  42: mul r0.x, r3.y, r3.y
  43: mad r0.x, r3.x, r3.x, -r0.x
  44: mul r2.xyzw, r3.ywzx, r3.xyzw
  45: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  46: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  47: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  48: mad o5.xyz, cb2[45].xyzx, r0.xxxx, r3.xyzx
  49: mul r0.x, r1.y, cb1[5].x
  50: mul r0.w, r0.x, l(0.500000)
  51: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  52: mov o6.zw, r1.zzzw
  53: add o6.xy, r0.zzzz, r0.xwxx
  54: mov o7.xyzw, l(0,0,0,0)
  55: mov o8.x, v8.x
  56: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 27 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// SV_InstanceID            0   x           7     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: mov o1.w, r0.x
  21: dp3 r0.x, cb1[1].xyzx, cb1[1].xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, cb1[1].zxyz
  24: dp3 r0.x, cb1[0].xyzx, cb1[0].xyzx
  25: rsq r0.x, r0.x
  26: mul r2.xyz, r0.xxxx, cb1[0].yzxy
  27: mul r3.xyz, r1.xyzx, r2.xyzx
  28: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  29: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  30: mov o1.y, r3.x
  31: mov o1.x, r2.z
  32: mov o1.z, r1.y
  33: mov o2.w, r0.y
  34: mov o3.w, r0.z
  35: mov o2.x, r2.x
  36: mov o3.x, r2.y
  37: mov o2.z, r1.z
  38: mov o3.z, r1.x
  39: mov o2.y, r3.y
  40: mov o3.y, r3.z
  41: mov o5.xyzw, l(0,0,0,0)
  42: mov o6.xyzw, l(0,0,0,0)
  43: mov o7.x, v8.x
  44: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON LIGHTPROBE_SH VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 57 math, 5 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 4 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 5 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 5
   0: iadd r0.x, v8.x, cb4[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb5[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb5[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  10: add r0.yz, v0.xxyx, cb5[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb5[r0.x + 0].zzzz
  13: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb2[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb2[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  17: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  20: mov o1.w, r0.x
  21: dp3 r0.w, cb2[0].xyzx, cb2[0].xyzx
  22: rsq r0.w, r0.w
  23: mul r1.xyz, r0.wwww, cb2[0].yzxy
  24: mov o1.x, r1.z
  25: dp3 r0.w, cb2[1].xyzx, cb2[1].xyzx
  26: rsq r0.w, r0.w
  27: mul r2.xyzw, r0.wwww, cb2[1].xyzz
  28: mul r3.xyz, r1.xyzx, r2.wxyw
  29: mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
  30: mul r3.xyz, r3.xyzx, -cb2[9].wwww
  31: mov o1.y, r3.x
  32: mov o1.z, r2.x
  33: mov o2.x, r1.x
  34: mov o3.x, r1.y
  35: mov o2.w, r0.y
  36: mov o2.y, r3.y
  37: mov o3.y, r3.z
  38: mov o2.z, r2.y
  39: mov o3.w, r0.z
  40: mov o3.z, r2.w
  41: add r1.xyzw, -r0.xxxx, cb1[3].xyzw
  42: add r3.xyzw, -r0.yyyy, cb1[4].xyzw
  43: add r0.xyzw, -r0.zzzz, cb1[5].xyzw
  44: mul r4.xyzw, r2.yyyy, r3.xyzw
  45: mul r3.xyzw, r3.xyzw, r3.xyzw
  46: mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
  47: mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
  48: mad r1.xyzw, r0.xyzw, r2.wwzw, r1.xyzw
  49: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  50: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  51: rsq r3.xyzw, r0.xyzw
  52: mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  53: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  54: mul r1.xyzw, r1.xyzw, r3.xyzw
  55: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: mul r0.xyzw, r0.xyzw, r1.xyzw
  57: mul r1.xyz, r0.yyyy, cb1[8].xyzx
  58: mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
  59: mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
  60: mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
  61: mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  62: mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  63: mul r0.w, r2.y, r2.y
  64: mad r0.w, r2.x, r2.x, -r0.w
  65: mul r2.xyzw, r2.ywzx, r2.xyzw
  66: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  67: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  68: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  69: mad r2.xyz, cb1[45].xyzx, r0.wwww, r3.xyzx
  70: mad o5.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  71: mov o6.xyzw, l(0,0,0,0)
  72: mov o7.xyzw, l(0,0,0,0)
  73: mov o8.x, v8.x
  74: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 5 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 4 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 5 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// SV_InstanceID            0   x           7     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.x
      dcl_temps 5
   0: iadd r0.x, v8.x, cb4[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb5[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb5[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  10: add r0.yz, v0.xxyx, cb5[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb5[r0.x + 0].zzzz
  13: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb2[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb2[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  17: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  19: mad r1.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  20: mov o0.xyzw, r1.xyzw
  21: mov o1.w, r0.x
  22: dp3 r0.x, cb2[1].xyzx, cb2[1].xyzx
  23: rsq r0.x, r0.x
  24: mul r2.xyz, r0.xxxx, cb2[1].zxyz
  25: dp3 r0.x, cb2[0].xyzx, cb2[0].xyzx
  26: rsq r0.x, r0.x
  27: mul r3.xyz, r0.xxxx, cb2[0].yzxy
  28: mul r4.xyz, r2.xyzx, r3.xyzx
  29: mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
  30: mul r4.xyz, r4.xyzx, -cb2[9].wwww
  31: mov o1.y, r4.x
  32: mov o1.x, r3.z
  33: mov o1.z, r2.y
  34: mov o2.w, r0.y
  35: mov o3.w, r0.z
  36: mov o2.x, r3.x
  37: mov o3.x, r3.y
  38: mov o2.z, r2.z
  39: mov o3.z, r2.x
  40: mov o2.y, r4.y
  41: mov o3.y, r4.z
  42: mul r0.x, r1.y, cb1[5].x
  43: mul r0.w, r0.x, l(0.500000)
  44: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  45: mov o5.zw, r1.zzzw
  46: add o5.xy, r0.zzzz, r0.xwxx
  47: mov o6.xyzw, l(0,0,0,0)
  48: mov o7.x, v8.x
  49: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON LIGHTPROBE_SH SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 61 math, 6 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 5 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 6 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_constantbuffer CB6[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 6
   0: iadd r0.x, v8.x, cb5[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb6[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb6[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
  10: add r0.yz, v0.xxyx, cb6[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb6[r0.x + 0].zzzz
  13: mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb3[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb3[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  17: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  19: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  20: mov o0.xyzw, r1.xyzw
  21: mov o1.w, r0.x
  22: dp3 r0.w, cb3[0].xyzx, cb3[0].xyzx
  23: rsq r0.w, r0.w
  24: mul r2.xyz, r0.wwww, cb3[0].yzxy
  25: mov o1.x, r2.z
  26: dp3 r0.w, cb3[1].xyzx, cb3[1].xyzx
  27: rsq r0.w, r0.w
  28: mul r3.xyzw, r0.wwww, cb3[1].xyzz
  29: mul r4.xyz, r2.xyzx, r3.wxyw
  30: mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
  31: mul r4.xyz, r4.xyzx, -cb3[9].wwww
  32: mov o1.y, r4.x
  33: mov o1.z, r3.x
  34: mov o2.x, r2.x
  35: mov o3.x, r2.y
  36: mov o2.w, r0.y
  37: mov o2.y, r4.y
  38: mov o3.y, r4.z
  39: mov o2.z, r3.y
  40: mov o3.w, r0.z
  41: mov o3.z, r3.w
  42: add r2.xyzw, -r0.xxxx, cb2[3].xyzw
  43: add r4.xyzw, -r0.yyyy, cb2[4].xyzw
  44: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  45: mul r5.xyzw, r3.yyyy, r4.xyzw
  46: mul r4.xyzw, r4.xyzw, r4.xyzw
  47: mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
  48: mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
  49: mad r2.xyzw, r0.xyzw, r3.wwzw, r2.xyzw
  50: mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
  51: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  52: rsq r4.xyzw, r0.xyzw
  53: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  54: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  55: mul r2.xyzw, r2.xyzw, r4.xyzw
  56: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  57: mul r0.xyzw, r0.xyzw, r2.xyzw
  58: mul r2.xyz, r0.yyyy, cb2[8].xyzx
  59: mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
  60: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
  61: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  62: mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  63: mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  64: mul r0.w, r3.y, r3.y
  65: mad r0.w, r3.x, r3.x, -r0.w
  66: mul r3.xyzw, r3.ywzx, r3.xyzw
  67: dp4 r4.x, cb2[42].xyzw, r3.xyzw
  68: dp4 r4.y, cb2[43].xyzw, r3.xyzw
  69: dp4 r4.z, cb2[44].xyzw, r3.xyzw
  70: mad r3.xyz, cb2[45].xyzx, r0.wwww, r4.xyzx
  71: mad o5.xyz, r0.xyzx, r2.xyzx, r3.xyzx
  72: mul r0.x, r1.y, cb1[5].x
  73: mul r0.w, r0.x, l(0.500000)
  74: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  75: mov o6.zw, r1.zzzw
  76: add o6.xy, r0.zzzz, r0.xwxx
  77: mov o7.xyzw, l(0,0,0,0)
  78: mov o8.x, v8.x
  79: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 27 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// SV_InstanceID            0   x           7     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: mov o1.w, r0.x
  21: dp3 r0.x, cb1[1].xyzx, cb1[1].xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, cb1[1].zxyz
  24: dp3 r0.x, cb1[0].xyzx, cb1[0].xyzx
  25: rsq r0.x, r0.x
  26: mul r2.xyz, r0.xxxx, cb1[0].yzxy
  27: mul r3.xyz, r1.xyzx, r2.xyzx
  28: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  29: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  30: mov o1.y, r3.x
  31: mov o1.x, r2.z
  32: mov o1.z, r1.y
  33: mov o2.w, r0.y
  34: mov o3.w, r0.z
  35: mov o2.x, r2.x
  36: mov o3.x, r2.y
  37: mov o2.z, r1.z
  38: mov o3.z, r1.x
  39: mov o2.y, r3.y
  40: mov o3.y, r3.z
  41: mov o5.xyzw, l(0,0,0,0)
  42: mov o6.xyzw, l(0,0,0,0)
  43: mov o7.x, v8.x
  44: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON LIGHTPROBE_SH 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 4 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 5 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb4[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb5[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb5[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  10: add r0.yz, v0.xxyx, cb5[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb5[r0.x + 0].zzzz
  13: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb2[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb2[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  17: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  20: mov o1.w, r0.x
  21: dp3 r0.x, cb2[0].xyzx, cb2[0].xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, cb2[0].yzxy
  24: mov o1.x, r1.z
  25: dp3 r0.x, cb2[1].xyzx, cb2[1].xyzx
  26: rsq r0.x, r0.x
  27: mul r2.xyzw, r0.xxxx, cb2[1].xyzz
  28: mul r3.xyz, r1.xyzx, r2.wxyw
  29: mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
  30: mul r3.xyz, r3.xyzx, -cb2[9].wwww
  31: mov o1.y, r3.x
  32: mov o1.z, r2.x
  33: mov o2.w, r0.y
  34: mov o3.w, r0.z
  35: mov o2.x, r1.x
  36: mov o3.x, r1.y
  37: mov o2.y, r3.y
  38: mov o3.y, r3.z
  39: mov o2.z, r2.y
  40: mov o3.z, r2.w
  41: mul r0.x, r2.y, r2.y
  42: mad r0.x, r2.x, r2.x, -r0.x
  43: mul r1.xyzw, r2.ywzx, r2.xyzw
  44: dp4 r2.x, cb1[42].xyzw, r1.xyzw
  45: dp4 r2.y, cb1[43].xyzw, r1.xyzw
  46: dp4 r2.z, cb1[44].xyzw, r1.xyzw
  47: mad o5.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
  48: mov o6.xyzw, l(0,0,0,0)
  49: mov o7.xyzw, l(0,0,0,0)
  50: mov o8.x, v8.x
  51: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON SHADOWS_SCREEN 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 5 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 4 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 5 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// SV_InstanceID            0   x           7     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.x
      dcl_temps 5
   0: iadd r0.x, v8.x, cb4[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb5[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb5[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  10: add r0.yz, v0.xxyx, cb5[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb5[r0.x + 0].zzzz
  13: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb2[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb2[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  17: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  19: mad r1.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  20: mov o0.xyzw, r1.xyzw
  21: mov o1.w, r0.x
  22: dp3 r0.x, cb2[1].xyzx, cb2[1].xyzx
  23: rsq r0.x, r0.x
  24: mul r2.xyz, r0.xxxx, cb2[1].zxyz
  25: dp3 r0.x, cb2[0].xyzx, cb2[0].xyzx
  26: rsq r0.x, r0.x
  27: mul r3.xyz, r0.xxxx, cb2[0].yzxy
  28: mul r4.xyz, r2.xyzx, r3.xyzx
  29: mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
  30: mul r4.xyz, r4.xyzx, -cb2[9].wwww
  31: mov o1.y, r4.x
  32: mov o1.x, r3.z
  33: mov o1.z, r2.y
  34: mov o2.w, r0.y
  35: mov o3.w, r0.z
  36: mov o2.x, r3.x
  37: mov o3.x, r3.y
  38: mov o2.z, r2.z
  39: mov o3.z, r2.x
  40: mov o2.y, r4.y
  41: mov o3.y, r4.z
  42: mul r0.x, r1.y, cb1[5].x
  43: mul r0.w, r0.x, l(0.500000)
  44: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  45: mov o5.zw, r1.zzzw
  46: add o5.xy, r0.zzzz, r0.xwxx
  47: mov o6.xyzw, l(0,0,0,0)
  48: mov o7.x, v8.x
  49: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 5 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 6 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_constantbuffer CB6[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 5
   0: iadd r0.x, v8.x, cb5[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb6[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb6[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
  10: add r0.yz, v0.xxyx, cb6[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb6[r0.x + 0].zzzz
  13: mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb3[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb3[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  17: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  19: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  20: mov o0.xyzw, r1.xyzw
  21: mov o1.w, r0.x
  22: dp3 r0.x, cb3[0].xyzx, cb3[0].xyzx
  23: rsq r0.x, r0.x
  24: mul r2.xyz, r0.xxxx, cb3[0].yzxy
  25: mov o1.x, r2.z
  26: dp3 r0.x, cb3[1].xyzx, cb3[1].xyzx
  27: rsq r0.x, r0.x
  28: mul r3.xyzw, r0.xxxx, cb3[1].xyzz
  29: mul r4.xyz, r2.xyzx, r3.wxyw
  30: mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
  31: mul r4.xyz, r4.xyzx, -cb3[9].wwww
  32: mov o1.y, r4.x
  33: mov o1.z, r3.x
  34: mov o2.w, r0.y
  35: mov o3.w, r0.z
  36: mov o2.x, r2.x
  37: mov o3.x, r2.y
  38: mov o2.y, r4.y
  39: mov o3.y, r4.z
  40: mov o2.z, r3.y
  41: mov o3.z, r3.w
  42: mul r0.x, r3.y, r3.y
  43: mad r0.x, r3.x, r3.x, -r0.x
  44: mul r2.xyzw, r3.ywzx, r3.xyzw
  45: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  46: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  47: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  48: mad o5.xyz, cb2[45].xyzx, r0.xxxx, r3.xyzx
  49: mul r0.x, r1.y, cb1[5].x
  50: mul r0.w, r0.x, l(0.500000)
  51: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  52: mov o6.zw, r1.zzzw
  53: add o6.xy, r0.zzzz, r0.xwxx
  54: mov o7.xyzw, l(0,0,0,0)
  55: mov o8.x, v8.x
  56: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 27 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// SV_InstanceID            0   x           7     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: mov o1.w, r0.x
  21: dp3 r0.x, cb1[1].xyzx, cb1[1].xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, cb1[1].zxyz
  24: dp3 r0.x, cb1[0].xyzx, cb1[0].xyzx
  25: rsq r0.x, r0.x
  26: mul r2.xyz, r0.xxxx, cb1[0].yzxy
  27: mul r3.xyz, r1.xyzx, r2.xyzx
  28: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  29: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  30: mov o1.y, r3.x
  31: mov o1.x, r2.z
  32: mov o1.z, r1.y
  33: mov o2.w, r0.y
  34: mov o3.w, r0.z
  35: mov o2.x, r2.x
  36: mov o3.x, r2.y
  37: mov o2.z, r1.z
  38: mov o3.z, r1.x
  39: mov o2.y, r3.y
  40: mov o3.y, r3.z
  41: mov o5.xyzw, l(0,0,0,0)
  42: mov o6.xyzw, l(0,0,0,0)
  43: mov o7.x, v8.x
  44: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON LIGHTPROBE_SH VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 57 math, 5 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 4 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 5 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 5
   0: iadd r0.x, v8.x, cb4[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb5[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb5[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  10: add r0.yz, v0.xxyx, cb5[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb5[r0.x + 0].zzzz
  13: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb2[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb2[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  17: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  20: mov o1.w, r0.x
  21: dp3 r0.w, cb2[0].xyzx, cb2[0].xyzx
  22: rsq r0.w, r0.w
  23: mul r1.xyz, r0.wwww, cb2[0].yzxy
  24: mov o1.x, r1.z
  25: dp3 r0.w, cb2[1].xyzx, cb2[1].xyzx
  26: rsq r0.w, r0.w
  27: mul r2.xyzw, r0.wwww, cb2[1].xyzz
  28: mul r3.xyz, r1.xyzx, r2.wxyw
  29: mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
  30: mul r3.xyz, r3.xyzx, -cb2[9].wwww
  31: mov o1.y, r3.x
  32: mov o1.z, r2.x
  33: mov o2.x, r1.x
  34: mov o3.x, r1.y
  35: mov o2.w, r0.y
  36: mov o2.y, r3.y
  37: mov o3.y, r3.z
  38: mov o2.z, r2.y
  39: mov o3.w, r0.z
  40: mov o3.z, r2.w
  41: add r1.xyzw, -r0.xxxx, cb1[3].xyzw
  42: add r3.xyzw, -r0.yyyy, cb1[4].xyzw
  43: add r0.xyzw, -r0.zzzz, cb1[5].xyzw
  44: mul r4.xyzw, r2.yyyy, r3.xyzw
  45: mul r3.xyzw, r3.xyzw, r3.xyzw
  46: mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
  47: mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
  48: mad r1.xyzw, r0.xyzw, r2.wwzw, r1.xyzw
  49: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  50: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  51: rsq r3.xyzw, r0.xyzw
  52: mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  53: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  54: mul r1.xyzw, r1.xyzw, r3.xyzw
  55: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: mul r0.xyzw, r0.xyzw, r1.xyzw
  57: mul r1.xyz, r0.yyyy, cb1[8].xyzx
  58: mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
  59: mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
  60: mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
  61: mad r1.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  62: mad r1.xyz, r0.xyzx, r1.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  63: mul r0.w, r2.y, r2.y
  64: mad r0.w, r2.x, r2.x, -r0.w
  65: mul r2.xyzw, r2.ywzx, r2.xyzw
  66: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  67: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  68: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  69: mad r2.xyz, cb1[45].xyzx, r0.wwww, r3.xyzx
  70: mad o5.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  71: mov o6.xyzw, l(0,0,0,0)
  72: mov o7.xyzw, l(0,0,0,0)
  73: mov o8.x, v8.x
  74: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 5 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 4 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 5 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// SV_InstanceID            0   x           7     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.x
      dcl_temps 5
   0: iadd r0.x, v8.x, cb4[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb5[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb5[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  10: add r0.yz, v0.xxyx, cb5[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb5[r0.x + 0].zzzz
  13: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb2[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb2[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  17: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  19: mad r1.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  20: mov o0.xyzw, r1.xyzw
  21: mov o1.w, r0.x
  22: dp3 r0.x, cb2[1].xyzx, cb2[1].xyzx
  23: rsq r0.x, r0.x
  24: mul r2.xyz, r0.xxxx, cb2[1].zxyz
  25: dp3 r0.x, cb2[0].xyzx, cb2[0].xyzx
  26: rsq r0.x, r0.x
  27: mul r3.xyz, r0.xxxx, cb2[0].yzxy
  28: mul r4.xyz, r2.xyzx, r3.xyzx
  29: mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
  30: mul r4.xyz, r4.xyzx, -cb2[9].wwww
  31: mov o1.y, r4.x
  32: mov o1.x, r3.z
  33: mov o1.z, r2.y
  34: mov o2.w, r0.y
  35: mov o3.w, r0.z
  36: mov o2.x, r3.x
  37: mov o3.x, r3.y
  38: mov o2.z, r2.z
  39: mov o3.z, r2.x
  40: mov o2.y, r4.y
  41: mov o3.y, r4.z
  42: mul r0.x, r1.y, cb1[5].x
  43: mul r0.w, r0.x, l(0.500000)
  44: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  45: mov o5.zw, r1.zzzw
  46: add o5.xy, r0.zzzz, r0.xwxx
  47: mov o6.xyzw, l(0,0,0,0)
  48: mov o7.x, v8.x
  49: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON LIGHTPROBE_SH SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 61 math, 6 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 5 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 6 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_constantbuffer CB6[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 6
   0: iadd r0.x, v8.x, cb5[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb6[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb6[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb3[1].xyzw
  10: add r0.yz, v0.xxyx, cb6[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb6[r0.x + 0].zzzz
  13: mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb3[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb3[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
  17: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
  19: mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
  20: mov o0.xyzw, r1.xyzw
  21: mov o1.w, r0.x
  22: dp3 r0.w, cb3[0].xyzx, cb3[0].xyzx
  23: rsq r0.w, r0.w
  24: mul r2.xyz, r0.wwww, cb3[0].yzxy
  25: mov o1.x, r2.z
  26: dp3 r0.w, cb3[1].xyzx, cb3[1].xyzx
  27: rsq r0.w, r0.w
  28: mul r3.xyzw, r0.wwww, cb3[1].xyzz
  29: mul r4.xyz, r2.xyzx, r3.wxyw
  30: mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
  31: mul r4.xyz, r4.xyzx, -cb3[9].wwww
  32: mov o1.y, r4.x
  33: mov o1.z, r3.x
  34: mov o2.x, r2.x
  35: mov o3.x, r2.y
  36: mov o2.w, r0.y
  37: mov o2.y, r4.y
  38: mov o3.y, r4.z
  39: mov o2.z, r3.y
  40: mov o3.w, r0.z
  41: mov o3.z, r3.w
  42: add r2.xyzw, -r0.xxxx, cb2[3].xyzw
  43: add r4.xyzw, -r0.yyyy, cb2[4].xyzw
  44: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  45: mul r5.xyzw, r3.yyyy, r4.xyzw
  46: mul r4.xyzw, r4.xyzw, r4.xyzw
  47: mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
  48: mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
  49: mad r2.xyzw, r0.xyzw, r3.wwzw, r2.xyzw
  50: mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
  51: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  52: rsq r4.xyzw, r0.xyzw
  53: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  54: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  55: mul r2.xyzw, r2.xyzw, r4.xyzw
  56: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  57: mul r0.xyzw, r0.xyzw, r2.xyzw
  58: mul r2.xyz, r0.yyyy, cb2[8].xyzx
  59: mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
  60: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
  61: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  62: mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  63: mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  64: mul r0.w, r3.y, r3.y
  65: mad r0.w, r3.x, r3.x, -r0.w
  66: mul r3.xyzw, r3.ywzx, r3.xyzw
  67: dp4 r4.x, cb2[42].xyzw, r3.xyzw
  68: dp4 r4.y, cb2[43].xyzw, r3.xyzw
  69: dp4 r4.z, cb2[44].xyzw, r3.xyzw
  70: mad r3.xyz, cb2[45].xyzx, r0.wwww, r4.xyzx
  71: mad o5.xyz, r0.xyzx, r2.xyzx, r3.xyzx
  72: mul r0.x, r1.y, cb1[5].x
  73: mul r0.w, r0.x, l(0.500000)
  74: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  75: mov o6.zw, r1.zzzw
  76: add o6.xy, r0.zzzz, r0.xwxx
  77: mov o7.xyzw, l(0,0,0,0)
  78: mov o8.x, v8.x
  79: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 156 math, 12 temp registers, 7 textures, 6 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 7
Set 2D Texture "_Control" to slot 1 sampler slot 2
Set 2D Texture "_Splat0" to slot 2 sampler slot 3
Set 2D Texture "_Splat1" to slot 3 sampler slot 4
Set 2D Texture "_Splat2" to slot 4 sampler slot 5
Set 2D Texture "_Splat3" to slot 5 sampler slot 6
Set CUBE Texture "unity_SpecCube0" to slot 6 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 7 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 1

Constant Buffer "$Globals" (192 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 160
  Float _Metallic1 at 164
  Float _Metallic2 at 168
  Float _Metallic3 at 172
  Float _Smoothness0 at 176
  Float _Smoothness1 at 180
  Float _Smoothness2 at 184
  Float _Smoothness3 at 188
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float       
// TEXCOORD                 5   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[8], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 12
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v3.xyxx, t0.xyzw, s7
   5: eq r1.w, r2.x, l(0.000000)
   6: discard_nz r1.w
   7: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r2.xy, v3.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r2.xy, r2.xyxx, cb0[5].xyxx
  10: sample r2.xyzw, r2.xyxx, t1.xyzw, s2
  11: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r3.x, r1.w, l(0.001000)
  13: div r2.xyzw, r2.xyzw, r3.xxxx
  14: mad r3.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r3.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r4.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r4.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r5.xyzw, r3.xyxx, t2.xyzw, s3
  19: mul r5.xyzw, r2.xxxx, r5.xyzw
  20: mul r5.w, r5.w, cb0[11].x
  21: sample r3.xyzw, r3.zwzz, t3.xyzw, s4
  22: mul r3.xyzw, r2.yyyy, r3.xyzw
  23: mul r3.w, r3.w, cb0[11].y
  24: add r3.xyzw, r3.xyzw, r5.xyzw
  25: sample r5.xyzw, r4.xyxx, t4.xyzw, s5
  26: mul r5.xyzw, r2.zzzz, r5.xyzw
  27: mul r5.w, r5.w, cb0[11].z
  28: add r3.xyzw, r3.xyzw, r5.xyzw
  29: sample r4.xyzw, r4.zwzz, t5.xyzw, s6
  30: mul r4.xyzw, r2.wwww, r4.xyzw
  31: mul r4.w, r4.w, cb0[11].w
  32: add r3.xyzw, r3.xyzw, r4.xyzw
  33: dp4 r2.x, r2.xyzw, cb0[10].xyzw
  34: eq r2.y, cb4[0].x, l(1.000000)
  35: if_nz r2.y
  36:   eq r2.y, cb4[0].y, l(1.000000)
  37:   mul r4.xyz, v2.yyyy, cb4[2].xyzx
  38:   mad r4.xyz, cb4[1].xyzx, v2.xxxx, r4.xyzx
  39:   mad r4.xyz, cb4[3].xyzx, v2.zzzz, r4.xyzx
  40:   add r4.xyz, r4.xyzx, cb4[4].xyzx
  41:   movc r2.yzw, r2.yyyy, r4.xxyz, v2.xxyz
  42:   add r2.yzw, r2.yyzw, -cb4[6].xxyz
  43:   mul r4.yzw, r2.yyzw, cb4[5].xxyz
  44:   mad r2.y, r4.y, l(0.250000), l(0.750000)
  45:   mad r2.z, cb4[0].z, l(0.500000), l(0.750000)
  46:   max r4.x, r2.z, r2.y
  47:   sample r4.xyzw, r4.xzwx, t8.xyzw, s1
  48: else 
  49:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  50: endif 
  51: dp4_sat r2.y, r4.xyzw, cb2[46].xyzw
  52: add r2.z, -r3.w, l(1.000000)
  53: dp3 r2.w, -r1.xyzx, v1.xyzx
  54: add r2.w, r2.w, r2.w
  55: mad r4.xyz, v1.xyzx, -r2.wwww, -r1.xyzx
  56: mul r5.xyz, r2.yyyy, cb0[2].xyzx
  57: lt r2.y, l(0.000000), cb3[2].w
  58: if_nz r2.y
  59:   dp3 r2.y, r4.xyzx, r4.xyzx
  60:   rsq r2.y, r2.y
  61:   mul r6.xyz, r2.yyyy, r4.xyzx
  62:   add r7.xyz, -v2.xyzx, cb3[0].xyzx
  63:   div r7.xyz, r7.xyzx, r6.xyzx
  64:   add r8.xyz, -v2.xyzx, cb3[1].xyzx
  65:   div r8.xyz, r8.xyzx, r6.xyzx
  66:   lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  67:   movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  68:   min r2.y, r7.y, r7.x
  69:   min r2.y, r7.z, r2.y
  70:   add r7.xyz, v2.xyzx, -cb3[2].xyzx
  71:   mad r6.xyz, r6.xyzx, r2.yyyy, r7.xyzx
  72: else 
  73:   mov r6.xyz, r4.xyzx
  74: endif 
  75: mad r2.y, -r2.z, l(0.700000), l(1.700000)
  76: mul r2.y, r2.y, r2.z
  77: mul r2.y, r2.y, l(6.000000)
  78: sample_l r6.xyzw, r6.xyzx, t6.xyzw, s0, r2.y
  79: add r2.w, r6.w, l(-1.000000)
  80: mad r2.w, cb3[3].w, r2.w, l(1.000000)
  81: mul r2.w, r2.w, cb3[3].x
  82: mul r7.xyz, r6.xyzx, r2.wwww
  83: lt r4.w, cb3[1].w, l(0.999990)
  84: if_nz r4.w
  85:   lt r4.w, l(0.000000), cb3[6].w
  86:   if_nz r4.w
  87:     dp3 r4.w, r4.xyzx, r4.xyzx
  88:     rsq r4.w, r4.w
  89:     mul r8.xyz, r4.wwww, r4.xyzx
  90:     add r9.xyz, -v2.xyzx, cb3[4].xyzx
  91:     div r9.xyz, r9.xyzx, r8.xyzx
  92:     add r10.xyz, -v2.xyzx, cb3[5].xyzx
  93:     div r10.xyz, r10.xyzx, r8.xyzx
  94:     lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  95:     movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  96:     min r4.w, r9.y, r9.x
  97:     min r4.w, r9.z, r4.w
  98:     add r9.xyz, v2.xyzx, -cb3[6].xyzx
  99:     mad r4.xyz, r8.xyzx, r4.wwww, r9.xyzx
 100:   endif 
 101:   sample_l r4.xyzw, r4.xyzx, t7.xyzw, s0, r2.y
 102:   add r2.y, r4.w, l(-1.000000)
 103:   mad r2.y, cb3[7].w, r2.y, l(1.000000)
 104:   mul r2.y, r2.y, cb3[7].x
 105:   mul r4.xyz, r4.xyzx, r2.yyyy
 106:   mad r6.xyz, r2.wwww, r6.xyzx, -r4.xyzx
 107:   mad r7.xyz, cb3[1].wwww, r6.xyzx, r4.xyzx
 108: endif 
 109: dp3 r2.y, v1.xyzx, v1.xyzx
 110: rsq r2.y, r2.y
 111: mul r4.xyz, r2.yyyy, v1.xyzx
 112: add r6.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 113: mad r6.xyz, r2.xxxx, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 114: mad r2.x, -r2.x, l(0.779084), l(0.779084)
 115: mul r3.xyz, r2.xxxx, r3.xyzx
 116: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 117: dp3 r0.w, r0.xyzx, r0.xyzx
 118: max r0.w, r0.w, l(0.001000)
 119: rsq r0.w, r0.w
 120: mul r0.xyz, r0.wwww, r0.xyzx
 121: dp3 r0.w, r4.xyzx, r1.xyzx
 122: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
 123: dp3_sat r1.y, r4.xyzx, r0.xyzx
 124: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 125: mul r0.y, r0.x, r0.x
 126: dp2 r0.y, r0.yyyy, r2.zzzz
 127: add r0.y, r0.y, l(-0.500000)
 128: add r0.z, -r1.x, l(1.000000)
 129: mul r1.z, r0.z, r0.z
 130: mul r1.z, r1.z, r1.z
 131: mul r0.z, r0.z, r1.z
 132: mad r0.z, r0.y, r0.z, l(1.000000)
 133: add r1.z, -|r0.w|, l(1.000000)
 134: mul r2.y, r1.z, r1.z
 135: mul r2.y, r2.y, r2.y
 136: mul r1.z, r1.z, r2.y
 137: mad r0.y, r0.y, r1.z, l(1.000000)
 138: mul r0.y, r0.y, r0.z
 139: mul r0.z, r2.z, r2.z
 140: max r0.z, r0.z, l(0.002000)
 141: add r2.y, -r0.z, l(1.000000)
 142: mad r2.w, |r0.w|, r2.y, r0.z
 143: mad r2.y, r1.x, r2.y, r0.z
 144: mul r0.w, |r0.w|, r2.y
 145: mad r0.w, r1.x, r2.w, r0.w
 146: add r0.w, r0.w, l(0.000010)
 147: div r0.w, l(0.500000), r0.w
 148: mul r2.y, r0.z, r0.z
 149: mad r2.w, r1.y, r2.y, -r1.y
 150: mad r1.y, r2.w, r1.y, l(1.000000)
 151: mul r2.y, r2.y, l(0.318310)
 152: mad r1.y, r1.y, r1.y, l(0.000000)
 153: div r1.y, r2.y, r1.y
 154: mul r0.w, r0.w, r1.y
 155: mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.280000, 3.141593)
 156: max r0.w, r0.w, l(0.000100)
 157: sqrt r0.w, r0.w
 158: mul r0.yw, r1.xxxx, r0.yyyw
 159: mad r0.z, -r0.z, r2.z, l(1.000000)
 160: dp3 r1.x, r6.xyzx, r6.xyzx
 161: ne r1.x, r1.x, l(0.000000)
 162: and r1.x, r1.x, l(0x3f800000)
 163: mul r0.w, r0.w, r1.x
 164: add r1.x, -r2.x, r3.w
 165: add_sat r1.x, r1.x, l(1.000000)
 166: mul r2.xyz, r0.yyyy, r5.xyzx
 167: mul r4.xyz, r5.xyzx, r0.wwww
 168: add r0.x, -r0.x, l(1.000000)
 169: mul r0.y, r0.x, r0.x
 170: mul r0.y, r0.y, r0.y
 171: mul r0.x, r0.x, r0.y
 172: add r5.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 173: mad r0.xyw, r5.xyxz, r0.xxxx, r6.xyxz
 174: mul r0.xyw, r0.xyxw, r4.xyxz
 175: mad r0.xyw, r3.xyxz, r2.xyxz, r0.xyxw
 176: mul r2.xyz, r7.xyzx, r0.zzzz
 177: add r3.xyz, -r6.xyzx, r1.xxxx
 178: mad r1.xyz, r1.zzzz, r3.xyzx, r6.xyzx
 179: mad r0.xyz, r2.xyzx, r1.xyzx, r0.xywx
 180: mul o0.xyz, r1.wwww, r0.xyzx
 181: mov o0.w, l(1.000000)
 182: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 183 math, 13 temp registers, 10 textures, 8 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 7
Set 2D Texture "_Control" to slot 1 sampler slot 2
Set 2D Texture "_Splat0" to slot 2 sampler slot 3
Set 2D Texture "_Splat1" to slot 3 sampler slot 4
Set 2D Texture "_Splat2" to slot 4 sampler slot 5
Set 2D Texture "_Splat3" to slot 5 sampler slot 6
Set CUBE Texture "unity_SpecCube0" to slot 6 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 7 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 1

Constant Buffer "$Globals" (192 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 160
  Float _Metallic1 at 164
  Float _Metallic2 at 168
  Float _Metallic3 at 172
  Float _Smoothness0 at 176
  Float _Smoothness1 at 180
  Float _Smoothness2 at 184
  Float _Smoothness3 at 188
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[8], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 13
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v3.xyxx, t0.xyzw, s7
   5: eq r1.w, r2.x, l(0.000000)
   6: discard_nz r1.w
   7: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r2.xy, v3.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r2.xy, r2.xyxx, cb0[5].xyxx
  10: sample r2.xyzw, r2.xyxx, t1.xyzw, s2
  11: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r3.x, r1.w, l(0.001000)
  13: div r2.xyzw, r2.xyzw, r3.xxxx
  14: mad r3.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r3.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r4.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r4.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r5.xyzw, r3.xyxx, t2.xyzw, s3
  19: mul r5.xyzw, r2.xxxx, r5.xyzw
  20: mul r5.w, r5.w, cb0[11].x
  21: sample r3.xyzw, r3.zwzz, t3.xyzw, s4
  22: mul r3.xyzw, r2.yyyy, r3.xyzw
  23: mul r3.w, r3.w, cb0[11].y
  24: add r3.xyzw, r3.xyzw, r5.xyzw
  25: sample r5.xyzw, r4.xyxx, t4.xyzw, s5
  26: mul r5.xyzw, r2.zzzz, r5.xyzw
  27: mul r5.w, r5.w, cb0[11].z
  28: add r3.xyzw, r3.xyzw, r5.xyzw
  29: sample r4.xyzw, r4.zwzz, t5.xyzw, s6
  30: mul r4.xyzw, r2.wwww, r4.xyzw
  31: mul r4.w, r4.w, cb0[11].w
  32: add r3.xyzw, r3.xyzw, r4.xyzw
  33: dp4 r2.x, r2.xyzw, cb0[10].xyzw
  34: eq r2.y, cb4[0].x, l(1.000000)
  35: if_nz r2.y
  36:   eq r2.z, cb4[0].y, l(1.000000)
  37:   mul r4.xyz, v2.yyyy, cb4[2].xyzx
  38:   mad r4.xyz, cb4[1].xyzx, v2.xxxx, r4.xyzx
  39:   mad r4.xyz, cb4[3].xyzx, v2.zzzz, r4.xyzx
  40:   add r4.xyz, r4.xyzx, cb4[4].xyzx
  41:   movc r4.xyz, r2.zzzz, r4.xyzx, v2.xyzx
  42:   add r4.xyz, r4.xyzx, -cb4[6].xyzx
  43:   mul r4.yzw, r4.xxyz, cb4[5].xxyz
  44:   mad r2.z, r4.y, l(0.250000), l(0.750000)
  45:   mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
  46:   max r4.x, r2.w, r2.z
  47:   sample r4.xyzw, r4.xzwx, t8.xyzw, s1
  48: else 
  49:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  50: endif 
  51: dp4_sat r2.z, r4.xyzw, cb2[46].xyzw
  52: add r2.w, -r3.w, l(1.000000)
  53: dp3 r4.x, -r1.xyzx, v1.xyzx
  54: add r4.x, r4.x, r4.x
  55: mad r4.xyz, v1.xyzx, -r4.xxxx, -r1.xyzx
  56: mul r5.xyz, r2.zzzz, cb0[2].xyzx
  57: if_nz r2.y
  58:   eq r2.y, cb4[0].y, l(1.000000)
  59:   mul r6.xyz, v2.yyyy, cb4[2].xyzx
  60:   mad r6.xyz, cb4[1].xyzx, v2.xxxx, r6.xyzx
  61:   mad r6.xyz, cb4[3].xyzx, v2.zzzz, r6.xyzx
  62:   add r6.xyz, r6.xyzx, cb4[4].xyzx
  63:   movc r6.xyz, r2.yyyy, r6.xyzx, v2.xyzx
  64:   add r6.xyz, r6.xyzx, -cb4[6].xyzx
  65:   mul r6.yzw, r6.xxyz, cb4[5].xxyz
  66:   mul r2.y, r6.y, l(0.250000)
  67:   mul r2.z, cb4[0].z, l(0.500000)
  68:   mad r4.w, -cb4[0].z, l(0.500000), l(0.250000)
  69:   max r2.y, r2.z, r2.y
  70:   min r6.x, r4.w, r2.y
  71:   sample r7.xyzw, r6.xzwx, t8.xyzw, s1
  72:   add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  73:   sample r8.xyzw, r8.xyzx, t8.xyzw, s1
  74:   add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  75:   sample r6.xyzw, r6.xyzx, t8.xyzw, s1
  76:   mov r9.xyz, v1.xyzx
  77:   mov r9.w, l(1.000000)
  78:   dp4 r7.x, r7.xyzw, r9.xyzw
  79:   dp4 r7.y, r8.xyzw, r9.xyzw
  80:   dp4 r7.z, r6.xyzw, r9.xyzw
  81: else 
  82:   mov r6.xyz, v1.xyzx
  83:   mov r6.w, l(1.000000)
  84:   dp4 r7.x, cb2[39].xyzw, r6.xyzw
  85:   dp4 r7.y, cb2[40].xyzw, r6.xyzw
  86:   dp4 r7.z, cb2[41].xyzw, r6.xyzw
  87: endif 
  88: add r6.xyz, r7.xyzx, v4.xyzx
  89: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  90: log r6.xyz, r6.xyzx
  91: mul r6.xyz, r6.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  92: exp r6.xyz, r6.xyzx
  93: mad r6.xyz, r6.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  94: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  95: lt r2.y, l(0.000000), cb3[2].w
  96: if_nz r2.y
  97:   dp3 r2.y, r4.xyzx, r4.xyzx
  98:   rsq r2.y, r2.y
  99:   mul r7.xyz, r2.yyyy, r4.xyzx
 100:   add r8.xyz, -v2.xyzx, cb3[0].xyzx
 101:   div r8.xyz, r8.xyzx, r7.xyzx
 102:   add r9.xyz, -v2.xyzx, cb3[1].xyzx
 103:   div r9.xyz, r9.xyzx, r7.xyzx
 104:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
 105:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
 106:   min r2.y, r8.y, r8.x
 107:   min r2.y, r8.z, r2.y
 108:   add r8.xyz, v2.xyzx, -cb3[2].xyzx
 109:   mad r7.xyz, r7.xyzx, r2.yyyy, r8.xyzx
 110: else 
 111:   mov r7.xyz, r4.xyzx
 112: endif 
 113: mad r2.y, -r2.w, l(0.700000), l(1.700000)
 114: mul r2.y, r2.y, r2.w
 115: mul r2.y, r2.y, l(6.000000)
 116: sample_l r7.xyzw, r7.xyzx, t6.xyzw, s0, r2.y
 117: add r2.z, r7.w, l(-1.000000)
 118: mad r2.z, cb3[3].w, r2.z, l(1.000000)
 119: mul r2.z, r2.z, cb3[3].x
 120: mul r8.xyz, r7.xyzx, r2.zzzz
 121: lt r4.w, cb3[1].w, l(0.999990)
 122: if_nz r4.w
 123:   lt r4.w, l(0.000000), cb3[6].w
 124:   if_nz r4.w
 125:     dp3 r4.w, r4.xyzx, r4.xyzx
 126:     rsq r4.w, r4.w
 127:     mul r9.xyz, r4.wwww, r4.xyzx
 128:     add r10.xyz, -v2.xyzx, cb3[4].xyzx
 129:     div r10.xyz, r10.xyzx, r9.xyzx
 130:     add r11.xyz, -v2.xyzx, cb3[5].xyzx
 131:     div r11.xyz, r11.xyzx, r9.xyzx
 132:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 133:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 134:     min r4.w, r10.y, r10.x
 135:     min r4.w, r10.z, r4.w
 136:     add r10.xyz, v2.xyzx, -cb3[6].xyzx
 137:     mad r4.xyz, r9.xyzx, r4.wwww, r10.xyzx
 138:   endif 
 139:   sample_l r4.xyzw, r4.xyzx, t7.xyzw, s0, r2.y
 140:   add r2.y, r4.w, l(-1.000000)
 141:   mad r2.y, cb3[7].w, r2.y, l(1.000000)
 142:   mul r2.y, r2.y, cb3[7].x
 143:   mul r4.xyz, r4.xyzx, r2.yyyy
 144:   mad r7.xyz, r2.zzzz, r7.xyzx, -r4.xyzx
 145:   mad r8.xyz, cb3[1].wwww, r7.xyzx, r4.xyzx
 146: endif 
 147: dp3 r2.y, v1.xyzx, v1.xyzx
 148: rsq r2.y, r2.y
 149: mul r4.xyz, r2.yyyy, v1.xyzx
 150: add r7.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 151: mad r7.xyz, r2.xxxx, r7.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 152: mad r2.x, -r2.x, l(0.779084), l(0.779084)
 153: mul r3.xyz, r2.xxxx, r3.xyzx
 154: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 155: dp3 r0.w, r0.xyzx, r0.xyzx
 156: max r0.w, r0.w, l(0.001000)
 157: rsq r0.w, r0.w
 158: mul r0.xyz, r0.wwww, r0.xyzx
 159: dp3 r0.w, r4.xyzx, r1.xyzx
 160: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
 161: dp3_sat r1.y, r4.xyzx, r0.xyzx
 162: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 163: mul r0.y, r0.x, r0.x
 164: dp2 r0.y, r0.yyyy, r2.wwww
 165: add r0.y, r0.y, l(-0.500000)
 166: add r0.z, -r1.x, l(1.000000)
 167: mul r1.z, r0.z, r0.z
 168: mul r1.z, r1.z, r1.z
 169: mul r0.z, r0.z, r1.z
 170: mad r0.z, r0.y, r0.z, l(1.000000)
 171: add r1.z, -|r0.w|, l(1.000000)
 172: mul r2.y, r1.z, r1.z
 173: mul r2.y, r2.y, r2.y
 174: mul r1.z, r1.z, r2.y
 175: mad r0.y, r0.y, r1.z, l(1.000000)
 176: mul r0.y, r0.y, r0.z
 177: mul r0.z, r2.w, r2.w
 178: max r0.z, r0.z, l(0.002000)
 179: add r2.y, -r0.z, l(1.000000)
 180: mad r2.z, |r0.w|, r2.y, r0.z
 181: mad r2.y, r1.x, r2.y, r0.z
 182: mul r0.w, |r0.w|, r2.y
 183: mad r0.w, r1.x, r2.z, r0.w
 184: add r0.w, r0.w, l(0.000010)
 185: div r0.w, l(0.500000), r0.w
 186: mul r2.y, r0.z, r0.z
 187: mad r2.z, r1.y, r2.y, -r1.y
 188: mad r1.y, r2.z, r1.y, l(1.000000)
 189: mul r2.y, r2.y, l(0.318310)
 190: mad r1.y, r1.y, r1.y, l(0.000000)
 191: div r1.y, r2.y, r1.y
 192: mul r0.w, r0.w, r1.y
 193: mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.280000, 3.141593)
 194: max r0.w, r0.w, l(0.000100)
 195: sqrt r0.w, r0.w
 196: mul r0.yw, r1.xxxx, r0.yyyw
 197: mad r0.z, -r0.z, r2.w, l(1.000000)
 198: dp3 r1.x, r7.xyzx, r7.xyzx
 199: ne r1.x, r1.x, l(0.000000)
 200: and r1.x, r1.x, l(0x3f800000)
 201: mul r0.w, r0.w, r1.x
 202: add r1.x, -r2.x, r3.w
 203: add_sat r1.x, r1.x, l(1.000000)
 204: mad r2.xyz, r5.xyzx, r0.yyyy, r6.xyzx
 205: mul r4.xyz, r5.xyzx, r0.wwww
 206: add r0.x, -r0.x, l(1.000000)
 207: mul r0.y, r0.x, r0.x
 208: mul r0.y, r0.y, r0.y
 209: mul r0.x, r0.x, r0.y
 210: add r5.xyz, -r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 211: mad r0.xyw, r5.xyxz, r0.xxxx, r7.xyxz
 212: mul r0.xyw, r0.xyxw, r4.xyxz
 213: mad r0.xyw, r3.xyxz, r2.xyxz, r0.xyxw
 214: mul r2.xyz, r8.xyzx, r0.zzzz
 215: add r3.xyz, -r7.xyzx, r1.xxxx
 216: mad r1.xyz, r1.zzzz, r3.xyzx, r7.xyzx
 217: mad r0.xyz, r2.xyzx, r1.xyzx, r0.xywx
 218: mul o0.xyz, r1.wwww, r0.xyzx
 219: mov o0.w, l(1.000000)
 220: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 166 math, 12 temp registers, 8 textures, 6 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 8
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_ShadowMapTexture" to slot 6 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 7 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 8 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 9 sampler slot 1

Constant Buffer "$Globals" (192 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 160
  Float _Metallic1 at 164
  Float _Metallic2 at 168
  Float _Metallic3 at 172
  Float _Smoothness0 at 176
  Float _Smoothness1 at 180
  Float _Smoothness2 at 184
  Float _Smoothness3 at 188
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float   xy w
// TEXCOORD                 5   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_resource_texturecube (float,float,float,float) t8
      dcl_resource_texture3d (float,float,float,float) t9
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_input_ps linear v4.xyw
      dcl_output o0.xyzw
      dcl_temps 12
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v3.xyxx, t0.xyzw, s8
   5: eq r1.w, r2.x, l(0.000000)
   6: discard_nz r1.w
   7: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r2.xy, v3.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r2.xy, r2.xyxx, cb0[5].xyxx
  10: sample r2.xyzw, r2.xyxx, t1.xyzw, s3
  11: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r3.x, r1.w, l(0.001000)
  13: div r2.xyzw, r2.xyzw, r3.xxxx
  14: mad r3.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r3.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r4.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r4.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r5.xyzw, r3.xyxx, t2.xyzw, s4
  19: mul r5.xyzw, r2.xxxx, r5.xyzw
  20: mul r5.w, r5.w, cb0[11].x
  21: sample r3.xyzw, r3.zwzz, t3.xyzw, s5
  22: mul r3.xyzw, r2.yyyy, r3.xyzw
  23: mul r3.w, r3.w, cb0[11].y
  24: add r3.xyzw, r3.xyzw, r5.xyzw
  25: sample r5.xyzw, r4.xyxx, t4.xyzw, s6
  26: mul r5.xyzw, r2.zzzz, r5.xyzw
  27: mul r5.w, r5.w, cb0[11].z
  28: add r3.xyzw, r3.xyzw, r5.xyzw
  29: sample r4.xyzw, r4.zwzz, t5.xyzw, s7
  30: mul r4.xyzw, r2.wwww, r4.xyzw
  31: mul r4.w, r4.w, cb0[11].w
  32: add r3.xyzw, r3.xyzw, r4.xyzw
  33: dp4 r2.x, r2.xyzw, cb0[10].xyzw
  34: mov r4.x, cb4[9].z
  35: mov r4.y, cb4[10].z
  36: mov r4.z, cb4[11].z
  37: dp3 r2.y, r0.xyzx, r4.xyzx
  38: add r4.xyz, v2.xyzx, -cb3[25].xyzx
  39: dp3 r2.z, r4.xyzx, r4.xyzx
  40: sqrt r2.z, r2.z
  41: add r2.z, -r2.y, r2.z
  42: mad r2.y, cb3[25].w, r2.z, r2.y
  43: mad_sat r2.y, r2.y, cb3[24].z, cb3[24].w
  44: eq r2.z, cb6[0].x, l(1.000000)
  45: if_nz r2.z
  46:   eq r2.z, cb6[0].y, l(1.000000)
  47:   mul r4.xyz, v2.yyyy, cb6[2].xyzx
  48:   mad r4.xyz, cb6[1].xyzx, v2.xxxx, r4.xyzx
  49:   mad r4.xyz, cb6[3].xyzx, v2.zzzz, r4.xyzx
  50:   add r4.xyz, r4.xyzx, cb6[4].xyzx
  51:   movc r4.xyz, r2.zzzz, r4.xyzx, v2.xyzx
  52:   add r4.xyz, r4.xyzx, -cb6[6].xyzx
  53:   mul r4.yzw, r4.xxyz, cb6[5].xxyz
  54:   mad r2.z, r4.y, l(0.250000), l(0.750000)
  55:   mad r2.w, cb6[0].z, l(0.500000), l(0.750000)
  56:   max r4.x, r2.w, r2.z
  57:   sample r4.xyzw, r4.xzwx, t9.xyzw, s1
  58: else 
  59:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  60: endif 
  61: dp4_sat r2.z, r4.xyzw, cb2[46].xyzw
  62: div r4.xy, v4.xyxx, v4.wwww
  63: sample r4.xyzw, r4.xyxx, t6.xyzw, s2
  64: add r2.z, r2.z, -r4.x
  65: mad r2.y, r2.y, r2.z, r4.x
  66: add r2.z, -r3.w, l(1.000000)
  67: dp3 r2.w, -r1.xyzx, v1.xyzx
  68: add r2.w, r2.w, r2.w
  69: mad r4.xyz, v1.xyzx, -r2.wwww, -r1.xyzx
  70: mul r5.xyz, r2.yyyy, cb0[2].xyzx
  71: lt r2.y, l(0.000000), cb5[2].w
  72: if_nz r2.y
  73:   dp3 r2.y, r4.xyzx, r4.xyzx
  74:   rsq r2.y, r2.y
  75:   mul r6.xyz, r2.yyyy, r4.xyzx
  76:   add r7.xyz, -v2.xyzx, cb5[0].xyzx
  77:   div r7.xyz, r7.xyzx, r6.xyzx
  78:   add r8.xyz, -v2.xyzx, cb5[1].xyzx
  79:   div r8.xyz, r8.xyzx, r6.xyzx
  80:   lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  81:   movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  82:   min r2.y, r7.y, r7.x
  83:   min r2.y, r7.z, r2.y
  84:   add r7.xyz, v2.xyzx, -cb5[2].xyzx
  85:   mad r6.xyz, r6.xyzx, r2.yyyy, r7.xyzx
  86: else 
  87:   mov r6.xyz, r4.xyzx
  88: endif 
  89: mad r2.y, -r2.z, l(0.700000), l(1.700000)
  90: mul r2.y, r2.y, r2.z
  91: mul r2.y, r2.y, l(6.000000)
  92: sample_l r6.xyzw, r6.xyzx, t7.xyzw, s0, r2.y
  93: add r2.w, r6.w, l(-1.000000)
  94: mad r2.w, cb5[3].w, r2.w, l(1.000000)
  95: mul r2.w, r2.w, cb5[3].x
  96: mul r7.xyz, r6.xyzx, r2.wwww
  97: lt r4.w, cb5[1].w, l(0.999990)
  98: if_nz r4.w
  99:   lt r4.w, l(0.000000), cb5[6].w
 100:   if_nz r4.w
 101:     dp3 r4.w, r4.xyzx, r4.xyzx
 102:     rsq r4.w, r4.w
 103:     mul r8.xyz, r4.wwww, r4.xyzx
 104:     add r9.xyz, -v2.xyzx, cb5[4].xyzx
 105:     div r9.xyz, r9.xyzx, r8.xyzx
 106:     add r10.xyz, -v2.xyzx, cb5[5].xyzx
 107:     div r10.xyz, r10.xyzx, r8.xyzx
 108:     lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
 109:     movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
 110:     min r4.w, r9.y, r9.x
 111:     min r4.w, r9.z, r4.w
 112:     add r9.xyz, v2.xyzx, -cb5[6].xyzx
 113:     mad r4.xyz, r8.xyzx, r4.wwww, r9.xyzx
 114:   endif 
 115:   sample_l r4.xyzw, r4.xyzx, t8.xyzw, s0, r2.y
 116:   add r2.y, r4.w, l(-1.000000)
 117:   mad r2.y, cb5[7].w, r2.y, l(1.000000)
 118:   mul r2.y, r2.y, cb5[7].x
 119:   mul r4.xyz, r4.xyzx, r2.yyyy
 120:   mad r6.xyz, r2.wwww, r6.xyzx, -r4.xyzx
 121:   mad r7.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 122: endif 
 123: dp3 r2.y, v1.xyzx, v1.xyzx
 124: rsq r2.y, r2.y
 125: mul r4.xyz, r2.yyyy, v1.xyzx
 126: add r6.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 127: mad r6.xyz, r2.xxxx, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 128: mad r2.x, -r2.x, l(0.779084), l(0.779084)
 129: mul r3.xyz, r2.xxxx, r3.xyzx
 130: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 131: dp3 r0.w, r0.xyzx, r0.xyzx
 132: max r0.w, r0.w, l(0.001000)
 133: rsq r0.w, r0.w
 134: mul r0.xyz, r0.wwww, r0.xyzx
 135: dp3 r0.w, r4.xyzx, r1.xyzx
 136: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
 137: dp3_sat r1.y, r4.xyzx, r0.xyzx
 138: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 139: mul r0.y, r0.x, r0.x
 140: dp2 r0.y, r0.yyyy, r2.zzzz
 141: add r0.y, r0.y, l(-0.500000)
 142: add r0.z, -r1.x, l(1.000000)
 143: mul r1.z, r0.z, r0.z
 144: mul r1.z, r1.z, r1.z
 145: mul r0.z, r0.z, r1.z
 146: mad r0.z, r0.y, r0.z, l(1.000000)
 147: add r1.z, -|r0.w|, l(1.000000)
 148: mul r2.y, r1.z, r1.z
 149: mul r2.y, r2.y, r2.y
 150: mul r1.z, r1.z, r2.y
 151: mad r0.y, r0.y, r1.z, l(1.000000)
 152: mul r0.y, r0.y, r0.z
 153: mul r0.z, r2.z, r2.z
 154: max r0.z, r0.z, l(0.002000)
 155: add r2.y, -r0.z, l(1.000000)
 156: mad r2.w, |r0.w|, r2.y, r0.z
 157: mad r2.y, r1.x, r2.y, r0.z
 158: mul r0.w, |r0.w|, r2.y
 159: mad r0.w, r1.x, r2.w, r0.w
 160: add r0.w, r0.w, l(0.000010)
 161: div r0.w, l(0.500000), r0.w
 162: mul r2.y, r0.z, r0.z
 163: mad r2.w, r1.y, r2.y, -r1.y
 164: mad r1.y, r2.w, r1.y, l(1.000000)
 165: mul r2.y, r2.y, l(0.318310)
 166: mad r1.y, r1.y, r1.y, l(0.000000)
 167: div r1.y, r2.y, r1.y
 168: mul r0.w, r0.w, r1.y
 169: mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.280000, 3.141593)
 170: max r0.w, r0.w, l(0.000100)
 171: sqrt r0.w, r0.w
 172: mul r0.yw, r1.xxxx, r0.yyyw
 173: mad r0.z, -r0.z, r2.z, l(1.000000)
 174: dp3 r1.x, r6.xyzx, r6.xyzx
 175: ne r1.x, r1.x, l(0.000000)
 176: and r1.x, r1.x, l(0x3f800000)
 177: mul r0.w, r0.w, r1.x
 178: add r1.x, -r2.x, r3.w
 179: add_sat r1.x, r1.x, l(1.000000)
 180: mul r2.xyz, r0.yyyy, r5.xyzx
 181: mul r4.xyz, r5.xyzx, r0.wwww
 182: add r0.x, -r0.x, l(1.000000)
 183: mul r0.y, r0.x, r0.x
 184: mul r0.y, r0.y, r0.y
 185: mul r0.x, r0.x, r0.y
 186: add r5.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 187: mad r0.xyw, r5.xyxz, r0.xxxx, r6.xyxz
 188: mul r0.xyw, r0.xyxw, r4.xyxz
 189: mad r0.xyw, r3.xyxz, r2.xyxz, r0.xyxw
 190: mul r2.xyz, r7.xyzx, r0.zzzz
 191: add r3.xyz, -r6.xyzx, r1.xxxx
 192: mad r1.xyz, r1.zzzz, r3.xyzx, r6.xyzx
 193: mad r0.xyz, r2.xyzx, r1.xyzx, r0.xywx
 194: mul o0.xyz, r1.wwww, r0.xyzx
 195: mov o0.w, l(1.000000)
 196: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 193 math, 13 temp registers, 11 textures, 8 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 8
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_ShadowMapTexture" to slot 6 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 7 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 8 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 9 sampler slot 1

Constant Buffer "$Globals" (192 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 160
  Float _Metallic1 at 164
  Float _Metallic2 at 168
  Float _Metallic3 at 172
  Float _Smoothness0 at 176
  Float _Smoothness1 at 180
  Float _Smoothness2 at 184
  Float _Smoothness3 at 188
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy w
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_resource_texturecube (float,float,float,float) t8
      dcl_resource_texture3d (float,float,float,float) t9
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v3.xyxx, t0.xyzw, s8
   5: eq r1.w, r2.x, l(0.000000)
   6: discard_nz r1.w
   7: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r2.xy, v3.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r2.xy, r2.xyxx, cb0[5].xyxx
  10: sample r2.xyzw, r2.xyxx, t1.xyzw, s3
  11: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r3.x, r1.w, l(0.001000)
  13: div r2.xyzw, r2.xyzw, r3.xxxx
  14: mad r3.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r3.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r4.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r4.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r5.xyzw, r3.xyxx, t2.xyzw, s4
  19: mul r5.xyzw, r2.xxxx, r5.xyzw
  20: mul r5.w, r5.w, cb0[11].x
  21: sample r3.xyzw, r3.zwzz, t3.xyzw, s5
  22: mul r3.xyzw, r2.yyyy, r3.xyzw
  23: mul r3.w, r3.w, cb0[11].y
  24: add r3.xyzw, r3.xyzw, r5.xyzw
  25: sample r5.xyzw, r4.xyxx, t4.xyzw, s6
  26: mul r5.xyzw, r2.zzzz, r5.xyzw
  27: mul r5.w, r5.w, cb0[11].z
  28: add r3.xyzw, r3.xyzw, r5.xyzw
  29: sample r4.xyzw, r4.zwzz, t5.xyzw, s7
  30: mul r4.xyzw, r2.wwww, r4.xyzw
  31: mul r4.w, r4.w, cb0[11].w
  32: add r3.xyzw, r3.xyzw, r4.xyzw
  33: dp4 r2.x, r2.xyzw, cb0[10].xyzw
  34: mov r4.x, cb4[9].z
  35: mov r4.y, cb4[10].z
  36: mov r4.z, cb4[11].z
  37: dp3 r2.y, r0.xyzx, r4.xyzx
  38: add r4.xyz, v2.xyzx, -cb3[25].xyzx
  39: dp3 r2.z, r4.xyzx, r4.xyzx
  40: sqrt r2.z, r2.z
  41: add r2.z, -r2.y, r2.z
  42: mad r2.y, cb3[25].w, r2.z, r2.y
  43: mad_sat r2.y, r2.y, cb3[24].z, cb3[24].w
  44: eq r2.z, cb6[0].x, l(1.000000)
  45: if_nz r2.z
  46:   eq r2.w, cb6[0].y, l(1.000000)
  47:   mul r4.xyz, v2.yyyy, cb6[2].xyzx
  48:   mad r4.xyz, cb6[1].xyzx, v2.xxxx, r4.xyzx
  49:   mad r4.xyz, cb6[3].xyzx, v2.zzzz, r4.xyzx
  50:   add r4.xyz, r4.xyzx, cb6[4].xyzx
  51:   movc r4.xyz, r2.wwww, r4.xyzx, v2.xyzx
  52:   add r4.xyz, r4.xyzx, -cb6[6].xyzx
  53:   mul r4.yzw, r4.xxyz, cb6[5].xxyz
  54:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  55:   mad r4.y, cb6[0].z, l(0.500000), l(0.750000)
  56:   max r4.x, r2.w, r4.y
  57:   sample r4.xyzw, r4.xzwx, t9.xyzw, s1
  58: else 
  59:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  60: endif 
  61: dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
  62: div r4.xy, v5.xyxx, v5.wwww
  63: sample r4.xyzw, r4.xyxx, t6.xyzw, s2
  64: add r2.w, r2.w, -r4.x
  65: mad r2.y, r2.y, r2.w, r4.x
  66: add r2.w, -r3.w, l(1.000000)
  67: dp3 r4.x, -r1.xyzx, v1.xyzx
  68: add r4.x, r4.x, r4.x
  69: mad r4.xyz, v1.xyzx, -r4.xxxx, -r1.xyzx
  70: mul r5.xyz, r2.yyyy, cb0[2].xyzx
  71: if_nz r2.z
  72:   eq r2.y, cb6[0].y, l(1.000000)
  73:   mul r6.xyz, v2.yyyy, cb6[2].xyzx
  74:   mad r6.xyz, cb6[1].xyzx, v2.xxxx, r6.xyzx
  75:   mad r6.xyz, cb6[3].xyzx, v2.zzzz, r6.xyzx
  76:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  77:   movc r6.xyz, r2.yyyy, r6.xyzx, v2.xyzx
  78:   add r6.xyz, r6.xyzx, -cb6[6].xyzx
  79:   mul r6.yzw, r6.xxyz, cb6[5].xxyz
  80:   mul r2.y, r6.y, l(0.250000)
  81:   mul r2.z, cb6[0].z, l(0.500000)
  82:   mad r4.w, -cb6[0].z, l(0.500000), l(0.250000)
  83:   max r2.y, r2.z, r2.y
  84:   min r6.x, r4.w, r2.y
  85:   sample r7.xyzw, r6.xzwx, t9.xyzw, s1
  86:   add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  87:   sample r8.xyzw, r8.xyzx, t9.xyzw, s1
  88:   add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  89:   sample r6.xyzw, r6.xyzx, t9.xyzw, s1
  90:   mov r9.xyz, v1.xyzx
  91:   mov r9.w, l(1.000000)
  92:   dp4 r7.x, r7.xyzw, r9.xyzw
  93:   dp4 r7.y, r8.xyzw, r9.xyzw
  94:   dp4 r7.z, r6.xyzw, r9.xyzw
  95: else 
  96:   mov r6.xyz, v1.xyzx
  97:   mov r6.w, l(1.000000)
  98:   dp4 r7.x, cb2[39].xyzw, r6.xyzw
  99:   dp4 r7.y, cb2[40].xyzw, r6.xyzw
 100:   dp4 r7.z, cb2[41].xyzw, r6.xyzw
 101: endif 
 102: add r6.xyz, r7.xyzx, v4.xyzx
 103: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
 104: log r6.xyz, r6.xyzx
 105: mul r6.xyz, r6.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
 106: exp r6.xyz, r6.xyzx
 107: mad r6.xyz, r6.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
 108: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
 109: lt r2.y, l(0.000000), cb5[2].w
 110: if_nz r2.y
 111:   dp3 r2.y, r4.xyzx, r4.xyzx
 112:   rsq r2.y, r2.y
 113:   mul r7.xyz, r2.yyyy, r4.xyzx
 114:   add r8.xyz, -v2.xyzx, cb5[0].xyzx
 115:   div r8.xyz, r8.xyzx, r7.xyzx
 116:   add r9.xyz, -v2.xyzx, cb5[1].xyzx
 117:   div r9.xyz, r9.xyzx, r7.xyzx
 118:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
 119:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
 120:   min r2.y, r8.y, r8.x
 121:   min r2.y, r8.z, r2.y
 122:   add r8.xyz, v2.xyzx, -cb5[2].xyzx
 123:   mad r7.xyz, r7.xyzx, r2.yyyy, r8.xyzx
 124: else 
 125:   mov r7.xyz, r4.xyzx
 126: endif 
 127: mad r2.y, -r2.w, l(0.700000), l(1.700000)
 128: mul r2.y, r2.y, r2.w
 129: mul r2.y, r2.y, l(6.000000)
 130: sample_l r7.xyzw, r7.xyzx, t7.xyzw, s0, r2.y
 131: add r2.z, r7.w, l(-1.000000)
 132: mad r2.z, cb5[3].w, r2.z, l(1.000000)
 133: mul r2.z, r2.z, cb5[3].x
 134: mul r8.xyz, r7.xyzx, r2.zzzz
 135: lt r4.w, cb5[1].w, l(0.999990)
 136: if_nz r4.w
 137:   lt r4.w, l(0.000000), cb5[6].w
 138:   if_nz r4.w
 139:     dp3 r4.w, r4.xyzx, r4.xyzx
 140:     rsq r4.w, r4.w
 141:     mul r9.xyz, r4.wwww, r4.xyzx
 142:     add r10.xyz, -v2.xyzx, cb5[4].xyzx
 143:     div r10.xyz, r10.xyzx, r9.xyzx
 144:     add r11.xyz, -v2.xyzx, cb5[5].xyzx
 145:     div r11.xyz, r11.xyzx, r9.xyzx
 146:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 147:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 148:     min r4.w, r10.y, r10.x
 149:     min r4.w, r10.z, r4.w
 150:     add r10.xyz, v2.xyzx, -cb5[6].xyzx
 151:     mad r4.xyz, r9.xyzx, r4.wwww, r10.xyzx
 152:   endif 
 153:   sample_l r4.xyzw, r4.xyzx, t8.xyzw, s0, r2.y
 154:   add r2.y, r4.w, l(-1.000000)
 155:   mad r2.y, cb5[7].w, r2.y, l(1.000000)
 156:   mul r2.y, r2.y, cb5[7].x
 157:   mul r4.xyz, r4.xyzx, r2.yyyy
 158:   mad r7.xyz, r2.zzzz, r7.xyzx, -r4.xyzx
 159:   mad r8.xyz, cb5[1].wwww, r7.xyzx, r4.xyzx
 160: endif 
 161: dp3 r2.y, v1.xyzx, v1.xyzx
 162: rsq r2.y, r2.y
 163: mul r4.xyz, r2.yyyy, v1.xyzx
 164: add r7.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 165: mad r7.xyz, r2.xxxx, r7.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 166: mad r2.x, -r2.x, l(0.779084), l(0.779084)
 167: mul r3.xyz, r2.xxxx, r3.xyzx
 168: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 169: dp3 r0.w, r0.xyzx, r0.xyzx
 170: max r0.w, r0.w, l(0.001000)
 171: rsq r0.w, r0.w
 172: mul r0.xyz, r0.wwww, r0.xyzx
 173: dp3 r0.w, r4.xyzx, r1.xyzx
 174: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
 175: dp3_sat r1.y, r4.xyzx, r0.xyzx
 176: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 177: mul r0.y, r0.x, r0.x
 178: dp2 r0.y, r0.yyyy, r2.wwww
 179: add r0.y, r0.y, l(-0.500000)
 180: add r0.z, -r1.x, l(1.000000)
 181: mul r1.z, r0.z, r0.z
 182: mul r1.z, r1.z, r1.z
 183: mul r0.z, r0.z, r1.z
 184: mad r0.z, r0.y, r0.z, l(1.000000)
 185: add r1.z, -|r0.w|, l(1.000000)
 186: mul r2.y, r1.z, r1.z
 187: mul r2.y, r2.y, r2.y
 188: mul r1.z, r1.z, r2.y
 189: mad r0.y, r0.y, r1.z, l(1.000000)
 190: mul r0.y, r0.y, r0.z
 191: mul r0.z, r2.w, r2.w
 192: max r0.z, r0.z, l(0.002000)
 193: add r2.y, -r0.z, l(1.000000)
 194: mad r2.z, |r0.w|, r2.y, r0.z
 195: mad r2.y, r1.x, r2.y, r0.z
 196: mul r0.w, |r0.w|, r2.y
 197: mad r0.w, r1.x, r2.z, r0.w
 198: add r0.w, r0.w, l(0.000010)
 199: div r0.w, l(0.500000), r0.w
 200: mul r2.y, r0.z, r0.z
 201: mad r2.z, r1.y, r2.y, -r1.y
 202: mad r1.y, r2.z, r1.y, l(1.000000)
 203: mul r2.y, r2.y, l(0.318310)
 204: mad r1.y, r1.y, r1.y, l(0.000000)
 205: div r1.y, r2.y, r1.y
 206: mul r0.w, r0.w, r1.y
 207: mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.280000, 3.141593)
 208: max r0.w, r0.w, l(0.000100)
 209: sqrt r0.w, r0.w
 210: mul r0.yw, r1.xxxx, r0.yyyw
 211: mad r0.z, -r0.z, r2.w, l(1.000000)
 212: dp3 r1.x, r7.xyzx, r7.xyzx
 213: ne r1.x, r1.x, l(0.000000)
 214: and r1.x, r1.x, l(0x3f800000)
 215: mul r0.w, r0.w, r1.x
 216: add r1.x, -r2.x, r3.w
 217: add_sat r1.x, r1.x, l(1.000000)
 218: mad r2.xyz, r5.xyzx, r0.yyyy, r6.xyzx
 219: mul r4.xyz, r5.xyzx, r0.wwww
 220: add r0.x, -r0.x, l(1.000000)
 221: mul r0.y, r0.x, r0.x
 222: mul r0.y, r0.y, r0.y
 223: mul r0.x, r0.x, r0.y
 224: add r5.xyz, -r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 225: mad r0.xyw, r5.xyxz, r0.xxxx, r7.xyxz
 226: mul r0.xyw, r0.xyxw, r4.xyxz
 227: mad r0.xyw, r3.xyxz, r2.xyxz, r0.xyxw
 228: mul r2.xyz, r8.xyzx, r0.zzzz
 229: add r3.xyz, -r7.xyzx, r1.xxxx
 230: mad r1.xyz, r1.zzzz, r3.xyzx, r7.xyzx
 231: mad r0.xyz, r2.xyzx, r1.xyzx, r0.xywx
 232: mul o0.xyz, r1.wwww, r0.xyzx
 233: mov o0.w, l(1.000000)
 234: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 194 math, 13 temp registers, 11 textures, 6 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 11
Set 2D Texture "_Control" to slot 1 sampler slot 2
Set 2D Texture "_Splat0" to slot 2 sampler slot 3
Set 2D Texture "_Splat1" to slot 3 sampler slot 4
Set 2D Texture "_Splat2" to slot 4 sampler slot 5
Set 2D Texture "_Splat3" to slot 5 sampler slot 6
Set 2D Texture "_Normal0" to slot 6 sampler slot 7
Set 2D Texture "_Normal1" to slot 7 sampler slot 8
Set 2D Texture "_Normal2" to slot 8 sampler slot 9
Set 2D Texture "_Normal3" to slot 9 sampler slot 10
Set CUBE Texture "unity_SpecCube0" to slot 10 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 11 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 1

Constant Buffer "$Globals" (208 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 160
  Float _NormalScale1 at 164
  Float _NormalScale2 at 168
  Float _NormalScale3 at 172
  Float _Metallic0 at 176
  Float _Metallic1 at 180
  Float _Metallic2 at 184
  Float _Metallic3 at 188
  Float _Smoothness0 at 192
  Float _Smoothness1 at 196
  Float _Smoothness2 at 200
  Float _Smoothness3 at 204
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 5   xyzw        5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[13], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[8], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texturecube (float,float,float,float) t10
      dcl_resource_texturecube (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xy
      dcl_output o0.xyzw
      dcl_temps 13
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: sample r3.xyzw, v4.xyxx, t0.xyzw, s11
   8: eq r1.w, r3.x, l(0.000000)
   9: discard_nz r1.w
  10: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  12: mul r3.xy, r3.xyxx, cb0[5].xyxx
  13: sample r3.xyzw, r3.xyxx, t1.xyzw, s2
  14: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  15: add r2.w, r1.w, l(0.001000)
  16: div r3.xyzw, r3.xyzw, r2.wwww
  17: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  19: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  20: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  21: sample r6.xyzw, r4.xyxx, t2.xyzw, s3
  22: mul r6.xyzw, r3.xxxx, r6.xyzw
  23: mul r6.w, r6.w, cb0[12].x
  24: sample r7.xyzw, r4.zwzz, t3.xyzw, s4
  25: mul r7.xyzw, r3.yyyy, r7.xyzw
  26: mul r7.w, r7.w, cb0[12].y
  27: add r6.xyzw, r6.xyzw, r7.xyzw
  28: sample r7.xyzw, r5.xyxx, t4.xyzw, s5
  29: mul r7.xyzw, r3.zzzz, r7.xyzw
  30: mul r7.w, r7.w, cb0[12].z
  31: add r6.xyzw, r6.xyzw, r7.xyzw
  32: sample r7.xyzw, r5.zwzz, t5.xyzw, s6
  33: mul r7.xyzw, r3.wwww, r7.xyzw
  34: mul r7.w, r7.w, cb0[12].w
  35: add r6.xyzw, r6.xyzw, r7.xyzw
  36: sample r7.xyzw, r4.xyxx, t6.xyzw, s7
  37: mul r7.x, r7.w, r7.x
  38: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  39: mul r7.xy, r4.xyxx, cb0[10].xxxx
  40: dp2 r2.w, r7.xyxx, r7.xyxx
  41: min r2.w, r2.w, l(1.000000)
  42: add r2.w, -r2.w, l(1.000000)
  43: sqrt r7.z, r2.w
  44: sample r4.xyzw, r4.zwzz, t7.xyzw, s8
  45: mul r4.x, r4.w, r4.x
  46: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  47: mul r4.xy, r4.xyxx, cb0[10].yyyy
  48: dp2 r2.w, r4.xyxx, r4.xyxx
  49: min r2.w, r2.w, l(1.000000)
  50: add r2.w, -r2.w, l(1.000000)
  51: sqrt r4.z, r2.w
  52: mul r4.xyz, r3.yyyy, r4.xyzx
  53: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  54: sample r7.xyzw, r5.xyxx, t8.xyzw, s9
  55: mul r7.x, r7.w, r7.x
  56: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  57: mul r7.xy, r5.xyxx, cb0[10].zzzz
  58: dp2 r2.w, r7.xyxx, r7.xyxx
  59: min r2.w, r2.w, l(1.000000)
  60: add r2.w, -r2.w, l(1.000000)
  61: sqrt r7.z, r2.w
  62: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  63: sample r5.xyzw, r5.zwzz, t9.xyzw, s10
  64: mul r5.x, r5.w, r5.x
  65: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  66: mul r5.xy, r5.xyxx, cb0[10].wwww
  67: dp2 r2.w, r5.xyxx, r5.xyxx
  68: min r2.w, r2.w, l(1.000000)
  69: add r2.w, -r2.w, l(1.000000)
  70: sqrt r5.z, r2.w
  71: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  72: dp4 r2.w, r3.xyzw, cb0[11].xyzw
  73: eq r3.x, cb4[0].x, l(1.000000)
  74: if_nz r3.x
  75:   eq r3.x, cb4[0].y, l(1.000000)
  76:   mul r3.yzw, v2.wwww, cb4[2].xxyz
  77:   mad r3.yzw, cb4[1].xxyz, v1.wwww, r3.yyzw
  78:   mad r3.yzw, cb4[3].xxyz, v3.wwww, r3.yyzw
  79:   add r3.yzw, r3.yyzw, cb4[4].xxyz
  80:   movc r3.xyz, r3.xxxx, r3.yzwy, r0.xyzx
  81:   add r3.xyz, r3.xyzx, -cb4[6].xyzx
  82:   mul r3.yzw, r3.xxyz, cb4[5].xxyz
  83:   mad r3.y, r3.y, l(0.250000), l(0.750000)
  84:   mad r5.x, cb4[0].z, l(0.500000), l(0.750000)
  85:   max r3.x, r3.y, r5.x
  86:   sample r3.xyzw, r3.xzwx, t12.xyzw, s1
  87: else 
  88:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  89: endif 
  90: dp4_sat r3.x, r3.xyzw, cb2[46].xyzw
  91: add r4.w, r4.z, l(0.000010)
  92: dp3 r5.x, v1.xyzx, r4.xywx
  93: dp3 r5.y, v2.xyzx, r4.xywx
  94: dp3 r5.z, v3.xyzx, r4.xywx
  95: dp3 r3.y, r5.xyzx, r5.xyzx
  96: rsq r3.y, r3.y
  97: mul r3.yzw, r3.yyyy, r5.xxyz
  98: add r4.x, -r6.w, l(1.000000)
  99: dp3 r4.y, -r2.xyzx, r3.yzwy
 100: add r4.y, r4.y, r4.y
 101: mad r4.yzw, r3.yyzw, -r4.yyyy, -r2.xxyz
 102: mul r5.xyz, r3.xxxx, cb0[2].xyzx
 103: lt r3.x, l(0.000000), cb3[2].w
 104: if_nz r3.x
 105:   dp3 r3.x, r4.yzwy, r4.yzwy
 106:   rsq r3.x, r3.x
 107:   mul r7.xyz, r3.xxxx, r4.yzwy
 108:   add r8.xyz, -r0.xyzx, cb3[0].xyzx
 109:   div r8.xyz, r8.xyzx, r7.xyzx
 110:   add r9.xyz, -r0.xyzx, cb3[1].xyzx
 111:   div r9.xyz, r9.xyzx, r7.xyzx
 112:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
 113:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
 114:   min r3.x, r8.y, r8.x
 115:   min r3.x, r8.z, r3.x
 116:   add r8.xyz, r0.xyzx, -cb3[2].xyzx
 117:   mad r7.xyz, r7.xyzx, r3.xxxx, r8.xyzx
 118: else 
 119:   mov r7.xyz, r4.yzwy
 120: endif 
 121: mad r3.x, -r4.x, l(0.700000), l(1.700000)
 122: mul r3.x, r3.x, r4.x
 123: mul r3.x, r3.x, l(6.000000)
 124: sample_l r7.xyzw, r7.xyzx, t10.xyzw, s0, r3.x
 125: add r5.w, r7.w, l(-1.000000)
 126: mad r5.w, cb3[3].w, r5.w, l(1.000000)
 127: mul r5.w, r5.w, cb3[3].x
 128: mul r8.xyz, r7.xyzx, r5.wwww
 129: lt r7.w, cb3[1].w, l(0.999990)
 130: if_nz r7.w
 131:   lt r7.w, l(0.000000), cb3[6].w
 132:   if_nz r7.w
 133:     dp3 r7.w, r4.yzwy, r4.yzwy
 134:     rsq r7.w, r7.w
 135:     mul r9.xyz, r4.yzwy, r7.wwww
 136:     add r10.xyz, -r0.xyzx, cb3[4].xyzx
 137:     div r10.xyz, r10.xyzx, r9.xyzx
 138:     add r11.xyz, -r0.xyzx, cb3[5].xyzx
 139:     div r11.xyz, r11.xyzx, r9.xyzx
 140:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 141:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 142:     min r7.w, r10.y, r10.x
 143:     min r7.w, r10.z, r7.w
 144:     add r0.xyz, r0.xyzx, -cb3[6].xyzx
 145:     mad r4.yzw, r9.xxyz, r7.wwww, r0.xxyz
 146:   endif 
 147:   sample_l r9.xyzw, r4.yzwy, t11.xyzw, s0, r3.x
 148:   add r0.x, r9.w, l(-1.000000)
 149:   mad r0.x, cb3[7].w, r0.x, l(1.000000)
 150:   mul r0.x, r0.x, cb3[7].x
 151:   mul r0.xyz, r9.xyzx, r0.xxxx
 152:   mad r4.yzw, r5.wwww, r7.xxyz, -r0.xxyz
 153:   mad r8.xyz, cb3[1].wwww, r4.yzwy, r0.xyzx
 154: endif 
 155: add r0.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 156: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 157: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 158: mul r4.yzw, r2.wwww, r6.xxyz
 159: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 160: dp3 r0.w, r1.xyzx, r1.xyzx
 161: max r0.w, r0.w, l(0.001000)
 162: rsq r0.w, r0.w
 163: mul r1.xyz, r0.wwww, r1.xyzx
 164: dp3 r0.w, r3.yzwy, r2.xyzx
 165: dp3_sat r2.x, r3.yzwy, cb2[0].xyzx
 166: dp3_sat r2.y, r3.yzwy, r1.xyzx
 167: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 168: mul r1.y, r1.x, r1.x
 169: dp2 r1.y, r1.yyyy, r4.xxxx
 170: add r1.y, r1.y, l(-0.500000)
 171: add r1.z, -r2.x, l(1.000000)
 172: mul r2.z, r1.z, r1.z
 173: mul r2.z, r2.z, r2.z
 174: mul r1.z, r1.z, r2.z
 175: mad r1.z, r1.y, r1.z, l(1.000000)
 176: add r2.z, -|r0.w|, l(1.000000)
 177: mul r3.x, r2.z, r2.z
 178: mul r3.x, r3.x, r3.x
 179: mul r2.z, r2.z, r3.x
 180: mad r1.y, r1.y, r2.z, l(1.000000)
 181: mul r1.y, r1.y, r1.z
 182: mul r1.y, r2.x, r1.y
 183: mul r1.z, r4.x, r4.x
 184: max r1.z, r1.z, l(0.002000)
 185: add r3.x, -r1.z, l(1.000000)
 186: mad r3.y, |r0.w|, r3.x, r1.z
 187: mad r3.x, r2.x, r3.x, r1.z
 188: mul r0.w, |r0.w|, r3.x
 189: mad r0.w, r2.x, r3.y, r0.w
 190: add r0.w, r0.w, l(0.000010)
 191: div r0.w, l(0.500000), r0.w
 192: mul r3.x, r1.z, r1.z
 193: mad r3.y, r2.y, r3.x, -r2.y
 194: mad r2.y, r3.y, r2.y, l(1.000000)
 195: mul r3.x, r3.x, l(0.318310)
 196: mad r2.y, r2.y, r2.y, l(0.000000)
 197: div r2.y, r3.x, r2.y
 198: mul r0.w, r0.w, r2.y
 199: mul r0.w, r0.w, l(3.141593)
 200: max r0.w, r0.w, l(0.000100)
 201: sqrt r0.w, r0.w
 202: mul r0.w, r2.x, r0.w
 203: mul r1.z, r1.z, l(0.280000)
 204: mad r1.z, -r1.z, r4.x, l(1.000000)
 205: dp3 r2.x, r0.xyzx, r0.xyzx
 206: ne r2.x, r2.x, l(0.000000)
 207: and r2.x, r2.x, l(0x3f800000)
 208: mul r0.w, r0.w, r2.x
 209: add r2.x, -r2.w, r6.w
 210: add_sat r2.x, r2.x, l(1.000000)
 211: mul r3.xyz, r1.yyyy, r5.xyzx
 212: mul r5.xyz, r5.xyzx, r0.wwww
 213: add r0.w, -r1.x, l(1.000000)
 214: mul r1.x, r0.w, r0.w
 215: mul r1.x, r1.x, r1.x
 216: mul r0.w, r0.w, r1.x
 217: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 218: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 219: mul r5.xyz, r5.xyzx, r6.xyzx
 220: mad r3.xyz, r4.yzwy, r3.xyzx, r5.xyzx
 221: mul r1.xyz, r8.xyzx, r1.zzzz
 222: add r2.xyw, -r0.xyxz, r2.xxxx
 223: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 224: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 225: mul o0.xyz, r1.wwww, r0.xyzx
 226: mov o0.w, l(1.000000)
 227: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 221 math, 14 temp registers, 14 textures, 8 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 11
Set 2D Texture "_Control" to slot 1 sampler slot 2
Set 2D Texture "_Splat0" to slot 2 sampler slot 3
Set 2D Texture "_Splat1" to slot 3 sampler slot 4
Set 2D Texture "_Splat2" to slot 4 sampler slot 5
Set 2D Texture "_Splat3" to slot 5 sampler slot 6
Set 2D Texture "_Normal0" to slot 6 sampler slot 7
Set 2D Texture "_Normal1" to slot 7 sampler slot 8
Set 2D Texture "_Normal2" to slot 8 sampler slot 9
Set 2D Texture "_Normal3" to slot 9 sampler slot 10
Set CUBE Texture "unity_SpecCube0" to slot 10 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 11 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 1

Constant Buffer "$Globals" (208 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 160
  Float _NormalScale1 at 164
  Float _NormalScale2 at 168
  Float _NormalScale3 at 172
  Float _Metallic0 at 176
  Float _Metallic1 at 180
  Float _Metallic2 at 184
  Float _Metallic3 at 188
  Float _Smoothness0 at 192
  Float _Smoothness1 at 196
  Float _Smoothness2 at 200
  Float _Smoothness3 at 204
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[13], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[8], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texturecube (float,float,float,float) t10
      dcl_resource_texturecube (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_temps 14
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: sample r3.xyzw, v4.xyxx, t0.xyzw, s11
   8: eq r1.w, r3.x, l(0.000000)
   9: discard_nz r1.w
  10: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  12: mul r3.xy, r3.xyxx, cb0[5].xyxx
  13: sample r3.xyzw, r3.xyxx, t1.xyzw, s2
  14: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  15: add r2.w, r1.w, l(0.001000)
  16: div r3.xyzw, r3.xyzw, r2.wwww
  17: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  19: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  20: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  21: sample r6.xyzw, r4.xyxx, t2.xyzw, s3
  22: mul r6.xyzw, r3.xxxx, r6.xyzw
  23: mul r6.w, r6.w, cb0[12].x
  24: sample r7.xyzw, r4.zwzz, t3.xyzw, s4
  25: mul r7.xyzw, r3.yyyy, r7.xyzw
  26: mul r7.w, r7.w, cb0[12].y
  27: add r6.xyzw, r6.xyzw, r7.xyzw
  28: sample r7.xyzw, r5.xyxx, t4.xyzw, s5
  29: mul r7.xyzw, r3.zzzz, r7.xyzw
  30: mul r7.w, r7.w, cb0[12].z
  31: add r6.xyzw, r6.xyzw, r7.xyzw
  32: sample r7.xyzw, r5.zwzz, t5.xyzw, s6
  33: mul r7.xyzw, r3.wwww, r7.xyzw
  34: mul r7.w, r7.w, cb0[12].w
  35: add r6.xyzw, r6.xyzw, r7.xyzw
  36: sample r7.xyzw, r4.xyxx, t6.xyzw, s7
  37: mul r7.x, r7.w, r7.x
  38: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  39: mul r7.xy, r4.xyxx, cb0[10].xxxx
  40: dp2 r2.w, r7.xyxx, r7.xyxx
  41: min r2.w, r2.w, l(1.000000)
  42: add r2.w, -r2.w, l(1.000000)
  43: sqrt r7.z, r2.w
  44: sample r4.xyzw, r4.zwzz, t7.xyzw, s8
  45: mul r4.x, r4.w, r4.x
  46: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  47: mul r4.xy, r4.xyxx, cb0[10].yyyy
  48: dp2 r2.w, r4.xyxx, r4.xyxx
  49: min r2.w, r2.w, l(1.000000)
  50: add r2.w, -r2.w, l(1.000000)
  51: sqrt r4.z, r2.w
  52: mul r4.xyz, r3.yyyy, r4.xyzx
  53: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  54: sample r7.xyzw, r5.xyxx, t8.xyzw, s9
  55: mul r7.x, r7.w, r7.x
  56: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  57: mul r7.xy, r5.xyxx, cb0[10].zzzz
  58: dp2 r2.w, r7.xyxx, r7.xyxx
  59: min r2.w, r2.w, l(1.000000)
  60: add r2.w, -r2.w, l(1.000000)
  61: sqrt r7.z, r2.w
  62: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  63: sample r5.xyzw, r5.zwzz, t9.xyzw, s10
  64: mul r5.x, r5.w, r5.x
  65: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  66: mul r5.xy, r5.xyxx, cb0[10].wwww
  67: dp2 r2.w, r5.xyxx, r5.xyxx
  68: min r2.w, r2.w, l(1.000000)
  69: add r2.w, -r2.w, l(1.000000)
  70: sqrt r5.z, r2.w
  71: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  72: dp4 r2.w, r3.xyzw, cb0[11].xyzw
  73: eq r3.x, cb4[0].x, l(1.000000)
  74: if_nz r3.x
  75:   eq r3.y, cb4[0].y, l(1.000000)
  76:   mul r5.xyz, v2.wwww, cb4[2].xyzx
  77:   mad r5.xyz, cb4[1].xyzx, v1.wwww, r5.xyzx
  78:   mad r5.xyz, cb4[3].xyzx, v3.wwww, r5.xyzx
  79:   add r5.xyz, r5.xyzx, cb4[4].xyzx
  80:   movc r3.yzw, r3.yyyy, r5.xxyz, r0.xxyz
  81:   add r3.yzw, r3.yyzw, -cb4[6].xxyz
  82:   mul r5.yzw, r3.yyzw, cb4[5].xxyz
  83:   mad r3.y, r5.y, l(0.250000), l(0.750000)
  84:   mad r3.z, cb4[0].z, l(0.500000), l(0.750000)
  85:   max r5.x, r3.z, r3.y
  86:   sample r5.xyzw, r5.xzwx, t12.xyzw, s1
  87: else 
  88:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  89: endif 
  90: dp4_sat r3.y, r5.xyzw, cb2[46].xyzw
  91: add r4.w, r4.z, l(0.000010)
  92: dp3 r5.x, v1.xyzx, r4.xywx
  93: dp3 r5.y, v2.xyzx, r4.xywx
  94: dp3 r5.z, v3.xyzx, r4.xywx
  95: dp3 r3.z, r5.xyzx, r5.xyzx
  96: rsq r3.z, r3.z
  97: mul r4.xyz, r3.zzzz, r5.xyzx
  98: add r3.z, -r6.w, l(1.000000)
  99: dp3 r3.w, -r2.xyzx, r4.xyzx
 100: add r3.w, r3.w, r3.w
 101: mad r5.xyz, r4.xyzx, -r3.wwww, -r2.xyzx
 102: mul r7.xyz, r3.yyyy, cb0[2].xyzx
 103: if_nz r3.x
 104:   eq r3.x, cb4[0].y, l(1.000000)
 105:   mul r8.xyz, v2.wwww, cb4[2].xyzx
 106:   mad r8.xyz, cb4[1].xyzx, v1.wwww, r8.xyzx
 107:   mad r8.xyz, cb4[3].xyzx, v3.wwww, r8.xyzx
 108:   add r8.xyz, r8.xyzx, cb4[4].xyzx
 109:   movc r3.xyw, r3.xxxx, r8.xyxz, r0.xyxz
 110:   add r3.xyw, r3.xyxw, -cb4[6].xyxz
 111:   mul r8.yzw, r3.xxyw, cb4[5].xxyz
 112:   mul r3.x, r8.y, l(0.250000)
 113:   mul r3.y, cb4[0].z, l(0.500000)
 114:   mad r3.w, -cb4[0].z, l(0.500000), l(0.250000)
 115:   max r3.x, r3.y, r3.x
 116:   min r8.x, r3.w, r3.x
 117:   sample r9.xyzw, r8.xzwx, t12.xyzw, s1
 118:   add r3.xyw, r8.xzxw, l(0.250000, 0.000000, 0.000000, 0.000000)
 119:   sample r10.xyzw, r3.xywx, t12.xyzw, s1
 120:   add r3.xyw, r8.xzxw, l(0.500000, 0.000000, 0.000000, 0.000000)
 121:   sample r8.xyzw, r3.xywx, t12.xyzw, s1
 122:   mov r4.w, l(1.000000)
 123:   dp4 r9.x, r9.xyzw, r4.xyzw
 124:   dp4 r9.y, r10.xyzw, r4.xyzw
 125:   dp4 r9.z, r8.xyzw, r4.xyzw
 126: else 
 127:   mov r4.w, l(1.000000)
 128:   dp4 r9.x, cb2[39].xyzw, r4.xyzw
 129:   dp4 r9.y, cb2[40].xyzw, r4.xyzw
 130:   dp4 r9.z, cb2[41].xyzw, r4.xyzw
 131: endif 
 132: add r3.xyw, r9.xyxz, v5.xyxz
 133: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
 134: log r3.xyw, r3.xyxw
 135: mul r3.xyw, r3.xyxw, l(0.416667, 0.416667, 0.000000, 0.416667)
 136: exp r3.xyw, r3.xyxw
 137: mad r3.xyw, r3.xyxw, l(1.055000, 1.055000, 0.000000, 1.055000), l(-0.055000, -0.055000, 0.000000, -0.055000)
 138: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
 139: lt r4.w, l(0.000000), cb3[2].w
 140: if_nz r4.w
 141:   dp3 r4.w, r5.xyzx, r5.xyzx
 142:   rsq r4.w, r4.w
 143:   mul r8.xyz, r4.wwww, r5.xyzx
 144:   add r9.xyz, -r0.xyzx, cb3[0].xyzx
 145:   div r9.xyz, r9.xyzx, r8.xyzx
 146:   add r10.xyz, -r0.xyzx, cb3[1].xyzx
 147:   div r10.xyz, r10.xyzx, r8.xyzx
 148:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
 149:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
 150:   min r4.w, r9.y, r9.x
 151:   min r4.w, r9.z, r4.w
 152:   add r9.xyz, r0.xyzx, -cb3[2].xyzx
 153:   mad r8.xyz, r8.xyzx, r4.wwww, r9.xyzx
 154: else 
 155:   mov r8.xyz, r5.xyzx
 156: endif 
 157: mad r4.w, -r3.z, l(0.700000), l(1.700000)
 158: mul r4.w, r3.z, r4.w
 159: mul r4.w, r4.w, l(6.000000)
 160: sample_l r8.xyzw, r8.xyzx, t10.xyzw, s0, r4.w
 161: add r5.w, r8.w, l(-1.000000)
 162: mad r5.w, cb3[3].w, r5.w, l(1.000000)
 163: mul r5.w, r5.w, cb3[3].x
 164: mul r9.xyz, r8.xyzx, r5.wwww
 165: lt r7.w, cb3[1].w, l(0.999990)
 166: if_nz r7.w
 167:   lt r7.w, l(0.000000), cb3[6].w
 168:   if_nz r7.w
 169:     dp3 r7.w, r5.xyzx, r5.xyzx
 170:     rsq r7.w, r7.w
 171:     mul r10.xyz, r5.xyzx, r7.wwww
 172:     add r11.xyz, -r0.xyzx, cb3[4].xyzx
 173:     div r11.xyz, r11.xyzx, r10.xyzx
 174:     add r12.xyz, -r0.xyzx, cb3[5].xyzx
 175:     div r12.xyz, r12.xyzx, r10.xyzx
 176:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 177:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 178:     min r7.w, r11.y, r11.x
 179:     min r7.w, r11.z, r7.w
 180:     add r0.xyz, r0.xyzx, -cb3[6].xyzx
 181:     mad r5.xyz, r10.xyzx, r7.wwww, r0.xyzx
 182:   endif 
 183:   sample_l r10.xyzw, r5.xyzx, t11.xyzw, s0, r4.w
 184:   add r0.x, r10.w, l(-1.000000)
 185:   mad r0.x, cb3[7].w, r0.x, l(1.000000)
 186:   mul r0.x, r0.x, cb3[7].x
 187:   mul r0.xyz, r10.xyzx, r0.xxxx
 188:   mad r5.xyz, r5.wwww, r8.xyzx, -r0.xyzx
 189:   mad r9.xyz, cb3[1].wwww, r5.xyzx, r0.xyzx
 190: endif 
 191: add r0.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 192: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 193: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 194: mul r5.xyz, r2.wwww, r6.xyzx
 195: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 196: dp3 r0.w, r1.xyzx, r1.xyzx
 197: max r0.w, r0.w, l(0.001000)
 198: rsq r0.w, r0.w
 199: mul r1.xyz, r0.wwww, r1.xyzx
 200: dp3 r0.w, r4.xyzx, r2.xyzx
 201: dp3_sat r2.x, r4.xyzx, cb2[0].xyzx
 202: dp3_sat r2.y, r4.xyzx, r1.xyzx
 203: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 204: mul r1.y, r1.x, r1.x
 205: dp2 r1.y, r1.yyyy, r3.zzzz
 206: add r1.y, r1.y, l(-0.500000)
 207: add r1.z, -r2.x, l(1.000000)
 208: mul r2.z, r1.z, r1.z
 209: mul r2.z, r2.z, r2.z
 210: mul r1.z, r1.z, r2.z
 211: mad r1.z, r1.y, r1.z, l(1.000000)
 212: add r2.z, -|r0.w|, l(1.000000)
 213: mul r4.x, r2.z, r2.z
 214: mul r4.x, r4.x, r4.x
 215: mul r2.z, r2.z, r4.x
 216: mad r1.y, r1.y, r2.z, l(1.000000)
 217: mul r1.y, r1.y, r1.z
 218: mul r1.y, r2.x, r1.y
 219: mul r1.z, r3.z, r3.z
 220: max r1.z, r1.z, l(0.002000)
 221: add r4.x, -r1.z, l(1.000000)
 222: mad r4.y, |r0.w|, r4.x, r1.z
 223: mad r4.x, r2.x, r4.x, r1.z
 224: mul r0.w, |r0.w|, r4.x
 225: mad r0.w, r2.x, r4.y, r0.w
 226: add r0.w, r0.w, l(0.000010)
 227: div r0.w, l(0.500000), r0.w
 228: mul r4.x, r1.z, r1.z
 229: mad r4.y, r2.y, r4.x, -r2.y
 230: mad r2.y, r4.y, r2.y, l(1.000000)
 231: mul r4.x, r4.x, l(0.318310)
 232: mad r2.y, r2.y, r2.y, l(0.000000)
 233: div r2.y, r4.x, r2.y
 234: mul r0.w, r0.w, r2.y
 235: mul r0.w, r0.w, l(3.141593)
 236: max r0.w, r0.w, l(0.000100)
 237: sqrt r0.w, r0.w
 238: mul r0.w, r2.x, r0.w
 239: mul r1.z, r1.z, l(0.280000)
 240: mad r1.z, -r1.z, r3.z, l(1.000000)
 241: dp3 r2.x, r0.xyzx, r0.xyzx
 242: ne r2.x, r2.x, l(0.000000)
 243: and r2.x, r2.x, l(0x3f800000)
 244: mul r0.w, r0.w, r2.x
 245: add r2.x, -r2.w, r6.w
 246: add_sat r2.x, r2.x, l(1.000000)
 247: mad r3.xyz, r7.xyzx, r1.yyyy, r3.xywx
 248: mul r4.xyz, r7.xyzx, r0.wwww
 249: add r0.w, -r1.x, l(1.000000)
 250: mul r1.x, r0.w, r0.w
 251: mul r1.x, r1.x, r1.x
 252: mul r0.w, r0.w, r1.x
 253: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 254: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 255: mul r4.xyz, r4.xyzx, r6.xyzx
 256: mad r3.xyz, r5.xyzx, r3.xyzx, r4.xyzx
 257: mul r1.xyz, r9.xyzx, r1.zzzz
 258: add r2.xyw, -r0.xyxz, r2.xxxx
 259: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 260: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 261: mul o0.xyz, r1.wwww, r0.xyzx
 262: mov o0.w, l(1.000000)
 263: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 204 math, 13 temp registers, 12 textures, 6 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 12
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_Normal0" to slot 6 sampler slot 8
Set 2D Texture "_Normal1" to slot 7 sampler slot 9
Set 2D Texture "_Normal2" to slot 8 sampler slot 10
Set 2D Texture "_Normal3" to slot 9 sampler slot 11
Set 2D Texture "_ShadowMapTexture" to slot 10 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 11 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 12 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 13 sampler slot 1

Constant Buffer "$Globals" (208 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 160
  Float _NormalScale1 at 164
  Float _NormalScale2 at 168
  Float _NormalScale3 at 172
  Float _Metallic0 at 176
  Float _Metallic1 at 180
  Float _Metallic2 at 184
  Float _Metallic3 at 188
  Float _Smoothness0 at 192
  Float _Smoothness1 at 196
  Float _Smoothness2 at 200
  Float _Smoothness3 at 204
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 5   xyzw        5     NONE   float   xy w
// TEXCOORD                 6   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[13], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texturecube (float,float,float,float) t11
      dcl_resource_texturecube (float,float,float,float) t12
      dcl_resource_texture3d (float,float,float,float) t13
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: sample r3.xyzw, v4.xyxx, t0.xyzw, s12
   8: eq r1.w, r3.x, l(0.000000)
   9: discard_nz r1.w
  10: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  12: mul r3.xy, r3.xyxx, cb0[5].xyxx
  13: sample r3.xyzw, r3.xyxx, t1.xyzw, s3
  14: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  15: add r2.w, r1.w, l(0.001000)
  16: div r3.xyzw, r3.xyzw, r2.wwww
  17: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  19: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  20: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  21: sample r6.xyzw, r4.xyxx, t2.xyzw, s4
  22: mul r6.xyzw, r3.xxxx, r6.xyzw
  23: mul r6.w, r6.w, cb0[12].x
  24: sample r7.xyzw, r4.zwzz, t3.xyzw, s5
  25: mul r7.xyzw, r3.yyyy, r7.xyzw
  26: mul r7.w, r7.w, cb0[12].y
  27: add r6.xyzw, r6.xyzw, r7.xyzw
  28: sample r7.xyzw, r5.xyxx, t4.xyzw, s6
  29: mul r7.xyzw, r3.zzzz, r7.xyzw
  30: mul r7.w, r7.w, cb0[12].z
  31: add r6.xyzw, r6.xyzw, r7.xyzw
  32: sample r7.xyzw, r5.zwzz, t5.xyzw, s7
  33: mul r7.xyzw, r3.wwww, r7.xyzw
  34: mul r7.w, r7.w, cb0[12].w
  35: add r6.xyzw, r6.xyzw, r7.xyzw
  36: sample r7.xyzw, r4.xyxx, t6.xyzw, s8
  37: mul r7.x, r7.w, r7.x
  38: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  39: mul r7.xy, r4.xyxx, cb0[10].xxxx
  40: dp2 r2.w, r7.xyxx, r7.xyxx
  41: min r2.w, r2.w, l(1.000000)
  42: add r2.w, -r2.w, l(1.000000)
  43: sqrt r7.z, r2.w
  44: sample r4.xyzw, r4.zwzz, t7.xyzw, s9
  45: mul r4.x, r4.w, r4.x
  46: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  47: mul r4.xy, r4.xyxx, cb0[10].yyyy
  48: dp2 r2.w, r4.xyxx, r4.xyxx
  49: min r2.w, r2.w, l(1.000000)
  50: add r2.w, -r2.w, l(1.000000)
  51: sqrt r4.z, r2.w
  52: mul r4.xyz, r3.yyyy, r4.xyzx
  53: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  54: sample r7.xyzw, r5.xyxx, t8.xyzw, s10
  55: mul r7.x, r7.w, r7.x
  56: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  57: mul r7.xy, r5.xyxx, cb0[10].zzzz
  58: dp2 r2.w, r7.xyxx, r7.xyxx
  59: min r2.w, r2.w, l(1.000000)
  60: add r2.w, -r2.w, l(1.000000)
  61: sqrt r7.z, r2.w
  62: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  63: sample r5.xyzw, r5.zwzz, t9.xyzw, s11
  64: mul r5.x, r5.w, r5.x
  65: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  66: mul r5.xy, r5.xyxx, cb0[10].wwww
  67: dp2 r2.w, r5.xyxx, r5.xyxx
  68: min r2.w, r2.w, l(1.000000)
  69: add r2.w, -r2.w, l(1.000000)
  70: sqrt r5.z, r2.w
  71: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  72: dp4 r2.w, r3.xyzw, cb0[11].xyzw
  73: mov r3.x, cb4[9].z
  74: mov r3.y, cb4[10].z
  75: mov r3.z, cb4[11].z
  76: dp3 r3.x, r1.xyzx, r3.xyzx
  77: add r3.yzw, r0.xxyz, -cb3[25].xxyz
  78: dp3 r3.y, r3.yzwy, r3.yzwy
  79: sqrt r3.y, r3.y
  80: add r3.y, -r3.x, r3.y
  81: mad r3.x, cb3[25].w, r3.y, r3.x
  82: mad_sat r3.x, r3.x, cb3[24].z, cb3[24].w
  83: eq r3.y, cb6[0].x, l(1.000000)
  84: if_nz r3.y
  85:   eq r3.y, cb6[0].y, l(1.000000)
  86:   mul r5.xyz, v2.wwww, cb6[2].xyzx
  87:   mad r5.xyz, cb6[1].xyzx, v1.wwww, r5.xyzx
  88:   mad r5.xyz, cb6[3].xyzx, v3.wwww, r5.xyzx
  89:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  90:   movc r3.yzw, r3.yyyy, r5.xxyz, r0.xxyz
  91:   add r3.yzw, r3.yyzw, -cb6[6].xxyz
  92:   mul r5.yzw, r3.yyzw, cb6[5].xxyz
  93:   mad r3.y, r5.y, l(0.250000), l(0.750000)
  94:   mad r3.z, cb6[0].z, l(0.500000), l(0.750000)
  95:   max r5.x, r3.z, r3.y
  96:   sample r5.xyzw, r5.xzwx, t13.xyzw, s1
  97: else 
  98:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  99: endif 
 100: dp4_sat r3.y, r5.xyzw, cb2[46].xyzw
 101: div r3.zw, v5.xxxy, v5.wwww
 102: sample r5.xyzw, r3.zwzz, t10.xyzw, s2
 103: add r3.y, r3.y, -r5.x
 104: mad r3.x, r3.x, r3.y, r5.x
 105: add r4.w, r4.z, l(0.000010)
 106: dp3 r5.x, v1.xyzx, r4.xywx
 107: dp3 r5.y, v2.xyzx, r4.xywx
 108: dp3 r5.z, v3.xyzx, r4.xywx
 109: dp3 r3.y, r5.xyzx, r5.xyzx
 110: rsq r3.y, r3.y
 111: mul r3.yzw, r3.yyyy, r5.xxyz
 112: add r4.x, -r6.w, l(1.000000)
 113: dp3 r4.y, -r2.xyzx, r3.yzwy
 114: add r4.y, r4.y, r4.y
 115: mad r4.yzw, r3.yyzw, -r4.yyyy, -r2.xxyz
 116: mul r5.xyz, r3.xxxx, cb0[2].xyzx
 117: lt r3.x, l(0.000000), cb5[2].w
 118: if_nz r3.x
 119:   dp3 r3.x, r4.yzwy, r4.yzwy
 120:   rsq r3.x, r3.x
 121:   mul r7.xyz, r3.xxxx, r4.yzwy
 122:   add r8.xyz, -r0.xyzx, cb5[0].xyzx
 123:   div r8.xyz, r8.xyzx, r7.xyzx
 124:   add r9.xyz, -r0.xyzx, cb5[1].xyzx
 125:   div r9.xyz, r9.xyzx, r7.xyzx
 126:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
 127:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
 128:   min r3.x, r8.y, r8.x
 129:   min r3.x, r8.z, r3.x
 130:   add r8.xyz, r0.xyzx, -cb5[2].xyzx
 131:   mad r7.xyz, r7.xyzx, r3.xxxx, r8.xyzx
 132: else 
 133:   mov r7.xyz, r4.yzwy
 134: endif 
 135: mad r3.x, -r4.x, l(0.700000), l(1.700000)
 136: mul r3.x, r3.x, r4.x
 137: mul r3.x, r3.x, l(6.000000)
 138: sample_l r7.xyzw, r7.xyzx, t11.xyzw, s0, r3.x
 139: add r5.w, r7.w, l(-1.000000)
 140: mad r5.w, cb5[3].w, r5.w, l(1.000000)
 141: mul r5.w, r5.w, cb5[3].x
 142: mul r8.xyz, r7.xyzx, r5.wwww
 143: lt r7.w, cb5[1].w, l(0.999990)
 144: if_nz r7.w
 145:   lt r7.w, l(0.000000), cb5[6].w
 146:   if_nz r7.w
 147:     dp3 r7.w, r4.yzwy, r4.yzwy
 148:     rsq r7.w, r7.w
 149:     mul r9.xyz, r4.yzwy, r7.wwww
 150:     add r10.xyz, -r0.xyzx, cb5[4].xyzx
 151:     div r10.xyz, r10.xyzx, r9.xyzx
 152:     add r11.xyz, -r0.xyzx, cb5[5].xyzx
 153:     div r11.xyz, r11.xyzx, r9.xyzx
 154:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 155:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 156:     min r7.w, r10.y, r10.x
 157:     min r7.w, r10.z, r7.w
 158:     add r0.xyz, r0.xyzx, -cb5[6].xyzx
 159:     mad r4.yzw, r9.xxyz, r7.wwww, r0.xxyz
 160:   endif 
 161:   sample_l r9.xyzw, r4.yzwy, t12.xyzw, s0, r3.x
 162:   add r0.x, r9.w, l(-1.000000)
 163:   mad r0.x, cb5[7].w, r0.x, l(1.000000)
 164:   mul r0.x, r0.x, cb5[7].x
 165:   mul r0.xyz, r9.xyzx, r0.xxxx
 166:   mad r4.yzw, r5.wwww, r7.xxyz, -r0.xxyz
 167:   mad r8.xyz, cb5[1].wwww, r4.yzwy, r0.xyzx
 168: endif 
 169: add r0.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 170: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 171: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 172: mul r4.yzw, r2.wwww, r6.xxyz
 173: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 174: dp3 r0.w, r1.xyzx, r1.xyzx
 175: max r0.w, r0.w, l(0.001000)
 176: rsq r0.w, r0.w
 177: mul r1.xyz, r0.wwww, r1.xyzx
 178: dp3 r0.w, r3.yzwy, r2.xyzx
 179: dp3_sat r2.x, r3.yzwy, cb2[0].xyzx
 180: dp3_sat r2.y, r3.yzwy, r1.xyzx
 181: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 182: mul r1.y, r1.x, r1.x
 183: dp2 r1.y, r1.yyyy, r4.xxxx
 184: add r1.y, r1.y, l(-0.500000)
 185: add r1.z, -r2.x, l(1.000000)
 186: mul r2.z, r1.z, r1.z
 187: mul r2.z, r2.z, r2.z
 188: mul r1.z, r1.z, r2.z
 189: mad r1.z, r1.y, r1.z, l(1.000000)
 190: add r2.z, -|r0.w|, l(1.000000)
 191: mul r3.x, r2.z, r2.z
 192: mul r3.x, r3.x, r3.x
 193: mul r2.z, r2.z, r3.x
 194: mad r1.y, r1.y, r2.z, l(1.000000)
 195: mul r1.y, r1.y, r1.z
 196: mul r1.y, r2.x, r1.y
 197: mul r1.z, r4.x, r4.x
 198: max r1.z, r1.z, l(0.002000)
 199: add r3.x, -r1.z, l(1.000000)
 200: mad r3.y, |r0.w|, r3.x, r1.z
 201: mad r3.x, r2.x, r3.x, r1.z
 202: mul r0.w, |r0.w|, r3.x
 203: mad r0.w, r2.x, r3.y, r0.w
 204: add r0.w, r0.w, l(0.000010)
 205: div r0.w, l(0.500000), r0.w
 206: mul r3.x, r1.z, r1.z
 207: mad r3.y, r2.y, r3.x, -r2.y
 208: mad r2.y, r3.y, r2.y, l(1.000000)
 209: mul r3.x, r3.x, l(0.318310)
 210: mad r2.y, r2.y, r2.y, l(0.000000)
 211: div r2.y, r3.x, r2.y
 212: mul r0.w, r0.w, r2.y
 213: mul r0.w, r0.w, l(3.141593)
 214: max r0.w, r0.w, l(0.000100)
 215: sqrt r0.w, r0.w
 216: mul r0.w, r2.x, r0.w
 217: mul r1.z, r1.z, l(0.280000)
 218: mad r1.z, -r1.z, r4.x, l(1.000000)
 219: dp3 r2.x, r0.xyzx, r0.xyzx
 220: ne r2.x, r2.x, l(0.000000)
 221: and r2.x, r2.x, l(0x3f800000)
 222: mul r0.w, r0.w, r2.x
 223: add r2.x, -r2.w, r6.w
 224: add_sat r2.x, r2.x, l(1.000000)
 225: mul r3.xyz, r1.yyyy, r5.xyzx
 226: mul r5.xyz, r5.xyzx, r0.wwww
 227: add r0.w, -r1.x, l(1.000000)
 228: mul r1.x, r0.w, r0.w
 229: mul r1.x, r1.x, r1.x
 230: mul r0.w, r0.w, r1.x
 231: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 232: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 233: mul r5.xyz, r5.xyzx, r6.xyzx
 234: mad r3.xyz, r4.yzwy, r3.xyzx, r5.xyzx
 235: mul r1.xyz, r8.xyzx, r1.zzzz
 236: add r2.xyw, -r0.xyxz, r2.xxxx
 237: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 238: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 239: mul o0.xyz, r1.wwww, r0.xyzx
 240: mov o0.w, l(1.000000)
 241: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 231 math, 14 temp registers, 15 textures, 8 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 12
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_Normal0" to slot 6 sampler slot 8
Set 2D Texture "_Normal1" to slot 7 sampler slot 9
Set 2D Texture "_Normal2" to slot 8 sampler slot 10
Set 2D Texture "_Normal3" to slot 9 sampler slot 11
Set 2D Texture "_ShadowMapTexture" to slot 10 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 11 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 12 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 13 sampler slot 1

Constant Buffer "$Globals" (208 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 160
  Float _NormalScale1 at 164
  Float _NormalScale2 at 168
  Float _NormalScale3 at 172
  Float _Metallic0 at 176
  Float _Metallic1 at 180
  Float _Metallic2 at 184
  Float _Metallic3 at 188
  Float _Smoothness0 at 192
  Float _Smoothness1 at 196
  Float _Smoothness2 at 200
  Float _Smoothness3 at 204
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[13], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texturecube (float,float,float,float) t11
      dcl_resource_texturecube (float,float,float,float) t12
      dcl_resource_texture3d (float,float,float,float) t13
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: sample r3.xyzw, v4.xyxx, t0.xyzw, s12
   8: eq r1.w, r3.x, l(0.000000)
   9: discard_nz r1.w
  10: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  12: mul r3.xy, r3.xyxx, cb0[5].xyxx
  13: sample r3.xyzw, r3.xyxx, t1.xyzw, s3
  14: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  15: add r2.w, r1.w, l(0.001000)
  16: div r3.xyzw, r3.xyzw, r2.wwww
  17: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  19: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  20: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  21: sample r6.xyzw, r4.xyxx, t2.xyzw, s4
  22: mul r6.xyzw, r3.xxxx, r6.xyzw
  23: mul r6.w, r6.w, cb0[12].x
  24: sample r7.xyzw, r4.zwzz, t3.xyzw, s5
  25: mul r7.xyzw, r3.yyyy, r7.xyzw
  26: mul r7.w, r7.w, cb0[12].y
  27: add r6.xyzw, r6.xyzw, r7.xyzw
  28: sample r7.xyzw, r5.xyxx, t4.xyzw, s6
  29: mul r7.xyzw, r3.zzzz, r7.xyzw
  30: mul r7.w, r7.w, cb0[12].z
  31: add r6.xyzw, r6.xyzw, r7.xyzw
  32: sample r7.xyzw, r5.zwzz, t5.xyzw, s7
  33: mul r7.xyzw, r3.wwww, r7.xyzw
  34: mul r7.w, r7.w, cb0[12].w
  35: add r6.xyzw, r6.xyzw, r7.xyzw
  36: sample r7.xyzw, r4.xyxx, t6.xyzw, s8
  37: mul r7.x, r7.w, r7.x
  38: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  39: mul r7.xy, r4.xyxx, cb0[10].xxxx
  40: dp2 r2.w, r7.xyxx, r7.xyxx
  41: min r2.w, r2.w, l(1.000000)
  42: add r2.w, -r2.w, l(1.000000)
  43: sqrt r7.z, r2.w
  44: sample r4.xyzw, r4.zwzz, t7.xyzw, s9
  45: mul r4.x, r4.w, r4.x
  46: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  47: mul r4.xy, r4.xyxx, cb0[10].yyyy
  48: dp2 r2.w, r4.xyxx, r4.xyxx
  49: min r2.w, r2.w, l(1.000000)
  50: add r2.w, -r2.w, l(1.000000)
  51: sqrt r4.z, r2.w
  52: mul r4.xyz, r3.yyyy, r4.xyzx
  53: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  54: sample r7.xyzw, r5.xyxx, t8.xyzw, s10
  55: mul r7.x, r7.w, r7.x
  56: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  57: mul r7.xy, r5.xyxx, cb0[10].zzzz
  58: dp2 r2.w, r7.xyxx, r7.xyxx
  59: min r2.w, r2.w, l(1.000000)
  60: add r2.w, -r2.w, l(1.000000)
  61: sqrt r7.z, r2.w
  62: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  63: sample r5.xyzw, r5.zwzz, t9.xyzw, s11
  64: mul r5.x, r5.w, r5.x
  65: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  66: mul r5.xy, r5.xyxx, cb0[10].wwww
  67: dp2 r2.w, r5.xyxx, r5.xyxx
  68: min r2.w, r2.w, l(1.000000)
  69: add r2.w, -r2.w, l(1.000000)
  70: sqrt r5.z, r2.w
  71: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  72: dp4 r2.w, r3.xyzw, cb0[11].xyzw
  73: mov r3.x, cb4[9].z
  74: mov r3.y, cb4[10].z
  75: mov r3.z, cb4[11].z
  76: dp3 r3.x, r1.xyzx, r3.xyzx
  77: add r3.yzw, r0.xxyz, -cb3[25].xxyz
  78: dp3 r3.y, r3.yzwy, r3.yzwy
  79: sqrt r3.y, r3.y
  80: add r3.y, -r3.x, r3.y
  81: mad r3.x, cb3[25].w, r3.y, r3.x
  82: mad_sat r3.x, r3.x, cb3[24].z, cb3[24].w
  83: eq r3.y, cb6[0].x, l(1.000000)
  84: if_nz r3.y
  85:   eq r3.z, cb6[0].y, l(1.000000)
  86:   mul r5.xyz, v2.wwww, cb6[2].xyzx
  87:   mad r5.xyz, cb6[1].xyzx, v1.wwww, r5.xyzx
  88:   mad r5.xyz, cb6[3].xyzx, v3.wwww, r5.xyzx
  89:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  90:   movc r5.xyz, r3.zzzz, r5.xyzx, r0.xyzx
  91:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  92:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  93:   mad r3.z, r5.y, l(0.250000), l(0.750000)
  94:   mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
  95:   max r5.x, r3.w, r3.z
  96:   sample r5.xyzw, r5.xzwx, t13.xyzw, s1
  97: else 
  98:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  99: endif 
 100: dp4_sat r3.z, r5.xyzw, cb2[46].xyzw
 101: div r5.xy, v6.xyxx, v6.wwww
 102: sample r5.xyzw, r5.xyxx, t10.xyzw, s2
 103: add r3.z, r3.z, -r5.x
 104: mad r3.x, r3.x, r3.z, r5.x
 105: add r4.w, r4.z, l(0.000010)
 106: dp3 r5.x, v1.xyzx, r4.xywx
 107: dp3 r5.y, v2.xyzx, r4.xywx
 108: dp3 r5.z, v3.xyzx, r4.xywx
 109: dp3 r3.z, r5.xyzx, r5.xyzx
 110: rsq r3.z, r3.z
 111: mul r4.xyz, r3.zzzz, r5.xyzx
 112: add r3.z, -r6.w, l(1.000000)
 113: dp3 r3.w, -r2.xyzx, r4.xyzx
 114: add r3.w, r3.w, r3.w
 115: mad r5.xyz, r4.xyzx, -r3.wwww, -r2.xyzx
 116: mul r7.xyz, r3.xxxx, cb0[2].xyzx
 117: if_nz r3.y
 118:   eq r3.x, cb6[0].y, l(1.000000)
 119:   mul r8.xyz, v2.wwww, cb6[2].xyzx
 120:   mad r8.xyz, cb6[1].xyzx, v1.wwww, r8.xyzx
 121:   mad r8.xyz, cb6[3].xyzx, v3.wwww, r8.xyzx
 122:   add r8.xyz, r8.xyzx, cb6[4].xyzx
 123:   movc r3.xyw, r3.xxxx, r8.xyxz, r0.xyxz
 124:   add r3.xyw, r3.xyxw, -cb6[6].xyxz
 125:   mul r8.yzw, r3.xxyw, cb6[5].xxyz
 126:   mul r3.x, r8.y, l(0.250000)
 127:   mul r3.y, cb6[0].z, l(0.500000)
 128:   mad r3.w, -cb6[0].z, l(0.500000), l(0.250000)
 129:   max r3.x, r3.y, r3.x
 130:   min r8.x, r3.w, r3.x
 131:   sample r9.xyzw, r8.xzwx, t13.xyzw, s1
 132:   add r3.xyw, r8.xzxw, l(0.250000, 0.000000, 0.000000, 0.000000)
 133:   sample r10.xyzw, r3.xywx, t13.xyzw, s1
 134:   add r3.xyw, r8.xzxw, l(0.500000, 0.000000, 0.000000, 0.000000)
 135:   sample r8.xyzw, r3.xywx, t13.xyzw, s1
 136:   mov r4.w, l(1.000000)
 137:   dp4 r9.x, r9.xyzw, r4.xyzw
 138:   dp4 r9.y, r10.xyzw, r4.xyzw
 139:   dp4 r9.z, r8.xyzw, r4.xyzw
 140: else 
 141:   mov r4.w, l(1.000000)
 142:   dp4 r9.x, cb2[39].xyzw, r4.xyzw
 143:   dp4 r9.y, cb2[40].xyzw, r4.xyzw
 144:   dp4 r9.z, cb2[41].xyzw, r4.xyzw
 145: endif 
 146: add r3.xyw, r9.xyxz, v5.xyxz
 147: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
 148: log r3.xyw, r3.xyxw
 149: mul r3.xyw, r3.xyxw, l(0.416667, 0.416667, 0.000000, 0.416667)
 150: exp r3.xyw, r3.xyxw
 151: mad r3.xyw, r3.xyxw, l(1.055000, 1.055000, 0.000000, 1.055000), l(-0.055000, -0.055000, 0.000000, -0.055000)
 152: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
 153: lt r4.w, l(0.000000), cb5[2].w
 154: if_nz r4.w
 155:   dp3 r4.w, r5.xyzx, r5.xyzx
 156:   rsq r4.w, r4.w
 157:   mul r8.xyz, r4.wwww, r5.xyzx
 158:   add r9.xyz, -r0.xyzx, cb5[0].xyzx
 159:   div r9.xyz, r9.xyzx, r8.xyzx
 160:   add r10.xyz, -r0.xyzx, cb5[1].xyzx
 161:   div r10.xyz, r10.xyzx, r8.xyzx
 162:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
 163:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
 164:   min r4.w, r9.y, r9.x
 165:   min r4.w, r9.z, r4.w
 166:   add r9.xyz, r0.xyzx, -cb5[2].xyzx
 167:   mad r8.xyz, r8.xyzx, r4.wwww, r9.xyzx
 168: else 
 169:   mov r8.xyz, r5.xyzx
 170: endif 
 171: mad r4.w, -r3.z, l(0.700000), l(1.700000)
 172: mul r4.w, r3.z, r4.w
 173: mul r4.w, r4.w, l(6.000000)
 174: sample_l r8.xyzw, r8.xyzx, t11.xyzw, s0, r4.w
 175: add r5.w, r8.w, l(-1.000000)
 176: mad r5.w, cb5[3].w, r5.w, l(1.000000)
 177: mul r5.w, r5.w, cb5[3].x
 178: mul r9.xyz, r8.xyzx, r5.wwww
 179: lt r7.w, cb5[1].w, l(0.999990)
 180: if_nz r7.w
 181:   lt r7.w, l(0.000000), cb5[6].w
 182:   if_nz r7.w
 183:     dp3 r7.w, r5.xyzx, r5.xyzx
 184:     rsq r7.w, r7.w
 185:     mul r10.xyz, r5.xyzx, r7.wwww
 186:     add r11.xyz, -r0.xyzx, cb5[4].xyzx
 187:     div r11.xyz, r11.xyzx, r10.xyzx
 188:     add r12.xyz, -r0.xyzx, cb5[5].xyzx
 189:     div r12.xyz, r12.xyzx, r10.xyzx
 190:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 191:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 192:     min r7.w, r11.y, r11.x
 193:     min r7.w, r11.z, r7.w
 194:     add r0.xyz, r0.xyzx, -cb5[6].xyzx
 195:     mad r5.xyz, r10.xyzx, r7.wwww, r0.xyzx
 196:   endif 
 197:   sample_l r10.xyzw, r5.xyzx, t12.xyzw, s0, r4.w
 198:   add r0.x, r10.w, l(-1.000000)
 199:   mad r0.x, cb5[7].w, r0.x, l(1.000000)
 200:   mul r0.x, r0.x, cb5[7].x
 201:   mul r0.xyz, r10.xyzx, r0.xxxx
 202:   mad r5.xyz, r5.wwww, r8.xyzx, -r0.xyzx
 203:   mad r9.xyz, cb5[1].wwww, r5.xyzx, r0.xyzx
 204: endif 
 205: add r0.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 206: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 207: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 208: mul r5.xyz, r2.wwww, r6.xyzx
 209: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 210: dp3 r0.w, r1.xyzx, r1.xyzx
 211: max r0.w, r0.w, l(0.001000)
 212: rsq r0.w, r0.w
 213: mul r1.xyz, r0.wwww, r1.xyzx
 214: dp3 r0.w, r4.xyzx, r2.xyzx
 215: dp3_sat r2.x, r4.xyzx, cb2[0].xyzx
 216: dp3_sat r2.y, r4.xyzx, r1.xyzx
 217: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 218: mul r1.y, r1.x, r1.x
 219: dp2 r1.y, r1.yyyy, r3.zzzz
 220: add r1.y, r1.y, l(-0.500000)
 221: add r1.z, -r2.x, l(1.000000)
 222: mul r2.z, r1.z, r1.z
 223: mul r2.z, r2.z, r2.z
 224: mul r1.z, r1.z, r2.z
 225: mad r1.z, r1.y, r1.z, l(1.000000)
 226: add r2.z, -|r0.w|, l(1.000000)
 227: mul r4.x, r2.z, r2.z
 228: mul r4.x, r4.x, r4.x
 229: mul r2.z, r2.z, r4.x
 230: mad r1.y, r1.y, r2.z, l(1.000000)
 231: mul r1.y, r1.y, r1.z
 232: mul r1.y, r2.x, r1.y
 233: mul r1.z, r3.z, r3.z
 234: max r1.z, r1.z, l(0.002000)
 235: add r4.x, -r1.z, l(1.000000)
 236: mad r4.y, |r0.w|, r4.x, r1.z
 237: mad r4.x, r2.x, r4.x, r1.z
 238: mul r0.w, |r0.w|, r4.x
 239: mad r0.w, r2.x, r4.y, r0.w
 240: add r0.w, r0.w, l(0.000010)
 241: div r0.w, l(0.500000), r0.w
 242: mul r4.x, r1.z, r1.z
 243: mad r4.y, r2.y, r4.x, -r2.y
 244: mad r2.y, r4.y, r2.y, l(1.000000)
 245: mul r4.x, r4.x, l(0.318310)
 246: mad r2.y, r2.y, r2.y, l(0.000000)
 247: div r2.y, r4.x, r2.y
 248: mul r0.w, r0.w, r2.y
 249: mul r0.w, r0.w, l(3.141593)
 250: max r0.w, r0.w, l(0.000100)
 251: sqrt r0.w, r0.w
 252: mul r0.w, r2.x, r0.w
 253: mul r1.z, r1.z, l(0.280000)
 254: mad r1.z, -r1.z, r3.z, l(1.000000)
 255: dp3 r2.x, r0.xyzx, r0.xyzx
 256: ne r2.x, r2.x, l(0.000000)
 257: and r2.x, r2.x, l(0x3f800000)
 258: mul r0.w, r0.w, r2.x
 259: add r2.x, -r2.w, r6.w
 260: add_sat r2.x, r2.x, l(1.000000)
 261: mad r3.xyz, r7.xyzx, r1.yyyy, r3.xywx
 262: mul r4.xyz, r7.xyzx, r0.wwww
 263: add r0.w, -r1.x, l(1.000000)
 264: mul r1.x, r0.w, r0.w
 265: mul r1.x, r1.x, r1.x
 266: mul r0.w, r0.w, r1.x
 267: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 268: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 269: mul r4.xyz, r4.xyzx, r6.xyzx
 270: mad r3.xyz, r5.xyzx, r3.xyzx, r4.xyzx
 271: mul r1.xyz, r9.xyzx, r1.zzzz
 272: add r2.xyw, -r0.xyxz, r2.xxxx
 273: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 274: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 275: mul o0.xyz, r1.wwww, r0.xyzx
 276: mov o0.w, l(1.000000)
 277: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 164 math, 13 temp registers, 7 textures, 6 branches
Set 2D Texture "_Control" to slot 0 sampler slot 2
Set 2D Texture "_Splat0" to slot 1 sampler slot 3
Set 2D Texture "_Splat1" to slot 2 sampler slot 4
Set 2D Texture "_Splat2" to slot 3 sampler slot 5
Set 2D Texture "_Splat3" to slot 4 sampler slot 6
Set 2D Texture "_TerrainNormalmapTexture" to slot 5 sampler slot 7
Set CUBE Texture "unity_SpecCube0" to slot 6 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 7 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 1

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 192
  Float _Metallic1 at 196
  Float _Metallic2 at 200
  Float _Metallic3 at 204
  Float _Smoothness0 at 208
  Float _Smoothness1 at 212
  Float _Smoothness2 at 216
  Float _Smoothness3 at 220
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[8], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 13
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r3.xy, r3.xyxx, cb0[5].xyxx
  10: sample r3.xyzw, r3.xyxx, t0.xyzw, s2
  11: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r2.w, r1.w, l(0.001000)
  13: div r3.xyzw, r3.xyzw, r2.wwww
  14: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r6.xyzw, r4.xyxx, t1.xyzw, s3
  19: mul r6.xyzw, r3.xxxx, r6.xyzw
  20: mul r6.w, r6.w, cb0[13].x
  21: sample r4.xyzw, r4.zwzz, t2.xyzw, s4
  22: mul r4.xyzw, r3.yyyy, r4.xyzw
  23: mul r4.w, r4.w, cb0[13].y
  24: add r4.xyzw, r4.xyzw, r6.xyzw
  25: sample r6.xyzw, r5.xyxx, t3.xyzw, s5
  26: mul r6.xyzw, r3.zzzz, r6.xyzw
  27: mul r6.w, r6.w, cb0[13].z
  28: add r4.xyzw, r4.xyzw, r6.xyzw
  29: sample r5.xyzw, r5.zwzz, t4.xyzw, s6
  30: mul r5.xyzw, r3.wwww, r5.xyzw
  31: mul r5.w, r5.w, cb0[13].w
  32: add r4.xyzw, r4.xyzw, r5.xyzw
  33: sample r5.xyzw, v4.zwzz, t5.xyzw, s7
  34: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  35: dp3 r2.w, r5.xyzx, r5.xyzx
  36: rsq r2.w, r2.w
  37: mul r5.xyz, r2.wwww, r5.xyzx
  38: dp4 r2.w, r3.xyzw, cb0[12].xyzw
  39: eq r3.x, cb4[0].x, l(1.000000)
  40: if_nz r3.x
  41:   eq r3.x, cb4[0].y, l(1.000000)
  42:   mul r3.yzw, v2.wwww, cb4[2].xxyz
  43:   mad r3.yzw, cb4[1].xxyz, v1.wwww, r3.yyzw
  44:   mad r3.yzw, cb4[3].xxyz, v3.wwww, r3.yyzw
  45:   add r3.yzw, r3.yyzw, cb4[4].xxyz
  46:   movc r3.xyz, r3.xxxx, r3.yzwy, r0.xyzx
  47:   add r3.xyz, r3.xyzx, -cb4[6].xyzx
  48:   mul r3.yzw, r3.xxyz, cb4[5].xxyz
  49:   mad r3.y, r3.y, l(0.250000), l(0.750000)
  50:   mad r5.w, cb4[0].z, l(0.500000), l(0.750000)
  51:   max r3.x, r3.y, r5.w
  52:   sample r3.xyzw, r3.xzwx, t8.xyzw, s1
  53: else 
  54:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  55: endif 
  56: dp4_sat r3.x, r3.xyzw, cb2[46].xyzw
  57: dp3 r6.x, v1.xyzx, r5.xyzx
  58: dp3 r6.y, v2.xyzx, r5.xyzx
  59: dp3 r6.z, v3.xyzx, r5.xyzx
  60: dp3 r3.y, r6.xyzx, r6.xyzx
  61: rsq r3.y, r3.y
  62: mul r3.yzw, r3.yyyy, r6.xxyz
  63: add r5.x, -r4.w, l(1.000000)
  64: dp3 r5.y, -r2.xyzx, r3.yzwy
  65: add r5.y, r5.y, r5.y
  66: mad r5.yzw, r3.yyzw, -r5.yyyy, -r2.xxyz
  67: mul r6.xyz, r3.xxxx, cb0[2].xyzx
  68: lt r3.x, l(0.000000), cb3[2].w
  69: if_nz r3.x
  70:   dp3 r3.x, r5.yzwy, r5.yzwy
  71:   rsq r3.x, r3.x
  72:   mul r7.xyz, r3.xxxx, r5.yzwy
  73:   add r8.xyz, -r0.xyzx, cb3[0].xyzx
  74:   div r8.xyz, r8.xyzx, r7.xyzx
  75:   add r9.xyz, -r0.xyzx, cb3[1].xyzx
  76:   div r9.xyz, r9.xyzx, r7.xyzx
  77:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  78:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  79:   min r3.x, r8.y, r8.x
  80:   min r3.x, r8.z, r3.x
  81:   add r8.xyz, r0.xyzx, -cb3[2].xyzx
  82:   mad r7.xyz, r7.xyzx, r3.xxxx, r8.xyzx
  83: else 
  84:   mov r7.xyz, r5.yzwy
  85: endif 
  86: mad r3.x, -r5.x, l(0.700000), l(1.700000)
  87: mul r3.x, r3.x, r5.x
  88: mul r3.x, r3.x, l(6.000000)
  89: sample_l r7.xyzw, r7.xyzx, t6.xyzw, s0, r3.x
  90: add r6.w, r7.w, l(-1.000000)
  91: mad r6.w, cb3[3].w, r6.w, l(1.000000)
  92: mul r6.w, r6.w, cb3[3].x
  93: mul r8.xyz, r7.xyzx, r6.wwww
  94: lt r7.w, cb3[1].w, l(0.999990)
  95: if_nz r7.w
  96:   lt r7.w, l(0.000000), cb3[6].w
  97:   if_nz r7.w
  98:     dp3 r7.w, r5.yzwy, r5.yzwy
  99:     rsq r7.w, r7.w
 100:     mul r9.xyz, r5.yzwy, r7.wwww
 101:     add r10.xyz, -r0.xyzx, cb3[4].xyzx
 102:     div r10.xyz, r10.xyzx, r9.xyzx
 103:     add r11.xyz, -r0.xyzx, cb3[5].xyzx
 104:     div r11.xyz, r11.xyzx, r9.xyzx
 105:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 106:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 107:     min r7.w, r10.y, r10.x
 108:     min r7.w, r10.z, r7.w
 109:     add r0.xyz, r0.xyzx, -cb3[6].xyzx
 110:     mad r5.yzw, r9.xxyz, r7.wwww, r0.xxyz
 111:   endif 
 112:   sample_l r9.xyzw, r5.yzwy, t7.xyzw, s0, r3.x
 113:   add r0.x, r9.w, l(-1.000000)
 114:   mad r0.x, cb3[7].w, r0.x, l(1.000000)
 115:   mul r0.x, r0.x, cb3[7].x
 116:   mul r0.xyz, r9.xyzx, r0.xxxx
 117:   mad r5.yzw, r6.wwww, r7.xxyz, -r0.xxyz
 118:   mad r8.xyz, cb3[1].wwww, r5.yzwy, r0.xyzx
 119: endif 
 120: add r0.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 121: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 122: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 123: mul r4.xyz, r2.wwww, r4.xyzx
 124: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 125: dp3 r0.w, r1.xyzx, r1.xyzx
 126: max r0.w, r0.w, l(0.001000)
 127: rsq r0.w, r0.w
 128: mul r1.xyz, r0.wwww, r1.xyzx
 129: dp3 r0.w, r3.yzwy, r2.xyzx
 130: dp3_sat r2.x, r3.yzwy, cb2[0].xyzx
 131: dp3_sat r2.y, r3.yzwy, r1.xyzx
 132: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 133: add r1.y, r1.x, r1.x
 134: mul r1.y, r1.x, r1.y
 135: mad r1.y, r1.y, r5.x, l(-0.500000)
 136: add r1.z, -r2.x, l(1.000000)
 137: mul r2.z, r1.z, r1.z
 138: mul r2.z, r2.z, r2.z
 139: mul r1.z, r1.z, r2.z
 140: mad r1.z, r1.y, r1.z, l(1.000000)
 141: add r2.z, -|r0.w|, l(1.000000)
 142: mul r3.x, r2.z, r2.z
 143: mul r3.x, r3.x, r3.x
 144: mul r2.z, r2.z, r3.x
 145: mad r1.y, r1.y, r2.z, l(1.000000)
 146: mul r1.y, r1.y, r1.z
 147: mul r1.y, r2.x, r1.y
 148: mul r1.z, r5.x, r5.x
 149: max r1.z, r1.z, l(0.002000)
 150: add r3.x, -r1.z, l(1.000000)
 151: mad r3.y, |r0.w|, r3.x, r1.z
 152: mad r3.x, r2.x, r3.x, r1.z
 153: mul r0.w, |r0.w|, r3.x
 154: mad r0.w, r2.x, r3.y, r0.w
 155: add r0.w, r0.w, l(0.000010)
 156: div r0.w, l(0.500000), r0.w
 157: mul r3.x, r1.z, r1.z
 158: mad r3.y, r2.y, r3.x, -r2.y
 159: mad r2.y, r3.y, r2.y, l(1.000000)
 160: mul r3.x, r3.x, l(0.318310)
 161: mad r2.y, r2.y, r2.y, l(0.000000)
 162: div r2.y, r3.x, r2.y
 163: mul r0.w, r0.w, r2.y
 164: mul r0.w, r0.w, l(3.141593)
 165: max r0.w, r0.w, l(0.000100)
 166: sqrt r0.w, r0.w
 167: mul r0.w, r2.x, r0.w
 168: mul r1.z, r1.z, l(0.280000)
 169: mad r1.z, -r1.z, r5.x, l(1.000000)
 170: dp3 r2.x, r0.xyzx, r0.xyzx
 171: ne r2.x, r2.x, l(0.000000)
 172: and r2.x, r2.x, l(0x3f800000)
 173: mul r0.w, r0.w, r2.x
 174: add r2.x, -r2.w, r4.w
 175: add_sat r2.x, r2.x, l(1.000000)
 176: mul r3.xyz, r1.yyyy, r6.xyzx
 177: mul r5.xyz, r6.xyzx, r0.wwww
 178: add r0.w, -r1.x, l(1.000000)
 179: mul r1.x, r0.w, r0.w
 180: mul r1.x, r1.x, r1.x
 181: mul r0.w, r0.w, r1.x
 182: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 183: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 184: mul r5.xyz, r5.xyzx, r6.xyzx
 185: mad r3.xyz, r4.xyzx, r3.xyzx, r5.xyzx
 186: mul r1.xyz, r8.xyzx, r1.zzzz
 187: add r2.xyw, -r0.xyxz, r2.xxxx
 188: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 189: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 190: mul o0.xyz, r1.wwww, r0.xyzx
 191: mov o0.w, l(1.000000)
 192: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON LIGHTPROBE_SH 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 191 math, 14 temp registers, 10 textures, 8 branches
Set 2D Texture "_Control" to slot 0 sampler slot 2
Set 2D Texture "_Splat0" to slot 1 sampler slot 3
Set 2D Texture "_Splat1" to slot 2 sampler slot 4
Set 2D Texture "_Splat2" to slot 3 sampler slot 5
Set 2D Texture "_Splat3" to slot 4 sampler slot 6
Set 2D Texture "_TerrainNormalmapTexture" to slot 5 sampler slot 7
Set CUBE Texture "unity_SpecCube0" to slot 6 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 7 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 1

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 192
  Float _Metallic1 at 196
  Float _Metallic2 at 200
  Float _Metallic3 at 204
  Float _Smoothness0 at 208
  Float _Smoothness1 at 212
  Float _Smoothness2 at 216
  Float _Smoothness3 at 220
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[8], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_temps 14
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r3.xy, r3.xyxx, cb0[5].xyxx
  10: sample r3.xyzw, r3.xyxx, t0.xyzw, s2
  11: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r2.w, r1.w, l(0.001000)
  13: div r3.xyzw, r3.xyzw, r2.wwww
  14: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r6.xyzw, r4.xyxx, t1.xyzw, s3
  19: mul r6.xyzw, r3.xxxx, r6.xyzw
  20: mul r6.w, r6.w, cb0[13].x
  21: sample r4.xyzw, r4.zwzz, t2.xyzw, s4
  22: mul r4.xyzw, r3.yyyy, r4.xyzw
  23: mul r4.w, r4.w, cb0[13].y
  24: add r4.xyzw, r4.xyzw, r6.xyzw
  25: sample r6.xyzw, r5.xyxx, t3.xyzw, s5
  26: mul r6.xyzw, r3.zzzz, r6.xyzw
  27: mul r6.w, r6.w, cb0[13].z
  28: add r4.xyzw, r4.xyzw, r6.xyzw
  29: sample r5.xyzw, r5.zwzz, t4.xyzw, s6
  30: mul r5.xyzw, r3.wwww, r5.xyzw
  31: mul r5.w, r5.w, cb0[13].w
  32: add r4.xyzw, r4.xyzw, r5.xyzw
  33: sample r5.xyzw, v4.zwzz, t5.xyzw, s7
  34: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  35: dp3 r2.w, r5.xyzx, r5.xyzx
  36: rsq r2.w, r2.w
  37: mul r5.xyz, r2.wwww, r5.xyzx
  38: dp4 r2.w, r3.xyzw, cb0[12].xyzw
  39: eq r3.x, cb4[0].x, l(1.000000)
  40: if_nz r3.x
  41:   eq r3.y, cb4[0].y, l(1.000000)
  42:   mul r6.xyz, v2.wwww, cb4[2].xyzx
  43:   mad r6.xyz, cb4[1].xyzx, v1.wwww, r6.xyzx
  44:   mad r6.xyz, cb4[3].xyzx, v3.wwww, r6.xyzx
  45:   add r6.xyz, r6.xyzx, cb4[4].xyzx
  46:   movc r3.yzw, r3.yyyy, r6.xxyz, r0.xxyz
  47:   add r3.yzw, r3.yyzw, -cb4[6].xxyz
  48:   mul r6.yzw, r3.yyzw, cb4[5].xxyz
  49:   mad r3.y, r6.y, l(0.250000), l(0.750000)
  50:   mad r3.z, cb4[0].z, l(0.500000), l(0.750000)
  51:   max r6.x, r3.z, r3.y
  52:   sample r6.xyzw, r6.xzwx, t8.xyzw, s1
  53: else 
  54:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  55: endif 
  56: dp4_sat r3.y, r6.xyzw, cb2[46].xyzw
  57: dp3 r6.x, v1.xyzx, r5.xyzx
  58: dp3 r6.y, v2.xyzx, r5.xyzx
  59: dp3 r6.z, v3.xyzx, r5.xyzx
  60: dp3 r3.z, r6.xyzx, r6.xyzx
  61: rsq r3.z, r3.z
  62: mul r5.xyz, r3.zzzz, r6.xyzx
  63: add r3.z, -r4.w, l(1.000000)
  64: dp3 r3.w, -r2.xyzx, r5.xyzx
  65: add r3.w, r3.w, r3.w
  66: mad r6.xyz, r5.xyzx, -r3.wwww, -r2.xyzx
  67: mul r7.xyz, r3.yyyy, cb0[2].xyzx
  68: if_nz r3.x
  69:   eq r3.x, cb4[0].y, l(1.000000)
  70:   mul r8.xyz, v2.wwww, cb4[2].xyzx
  71:   mad r8.xyz, cb4[1].xyzx, v1.wwww, r8.xyzx
  72:   mad r8.xyz, cb4[3].xyzx, v3.wwww, r8.xyzx
  73:   add r8.xyz, r8.xyzx, cb4[4].xyzx
  74:   movc r3.xyw, r3.xxxx, r8.xyxz, r0.xyxz
  75:   add r3.xyw, r3.xyxw, -cb4[6].xyxz
  76:   mul r8.yzw, r3.xxyw, cb4[5].xxyz
  77:   mul r3.x, r8.y, l(0.250000)
  78:   mul r3.y, cb4[0].z, l(0.500000)
  79:   mad r3.w, -cb4[0].z, l(0.500000), l(0.250000)
  80:   max r3.x, r3.y, r3.x
  81:   min r8.x, r3.w, r3.x
  82:   sample r9.xyzw, r8.xzwx, t8.xyzw, s1
  83:   add r3.xyw, r8.xzxw, l(0.250000, 0.000000, 0.000000, 0.000000)
  84:   sample r10.xyzw, r3.xywx, t8.xyzw, s1
  85:   add r3.xyw, r8.xzxw, l(0.500000, 0.000000, 0.000000, 0.000000)
  86:   sample r8.xyzw, r3.xywx, t8.xyzw, s1
  87:   mov r5.w, l(1.000000)
  88:   dp4 r9.x, r9.xyzw, r5.xyzw
  89:   dp4 r9.y, r10.xyzw, r5.xyzw
  90:   dp4 r9.z, r8.xyzw, r5.xyzw
  91: else 
  92:   mov r5.w, l(1.000000)
  93:   dp4 r9.x, cb2[39].xyzw, r5.xyzw
  94:   dp4 r9.y, cb2[40].xyzw, r5.xyzw
  95:   dp4 r9.z, cb2[41].xyzw, r5.xyzw
  96: endif 
  97: add r3.xyw, r9.xyxz, v5.xyxz
  98: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
  99: log r3.xyw, r3.xyxw
 100: mul r3.xyw, r3.xyxw, l(0.416667, 0.416667, 0.000000, 0.416667)
 101: exp r3.xyw, r3.xyxw
 102: mad r3.xyw, r3.xyxw, l(1.055000, 1.055000, 0.000000, 1.055000), l(-0.055000, -0.055000, 0.000000, -0.055000)
 103: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
 104: lt r5.w, l(0.000000), cb3[2].w
 105: if_nz r5.w
 106:   dp3 r5.w, r6.xyzx, r6.xyzx
 107:   rsq r5.w, r5.w
 108:   mul r8.xyz, r5.wwww, r6.xyzx
 109:   add r9.xyz, -r0.xyzx, cb3[0].xyzx
 110:   div r9.xyz, r9.xyzx, r8.xyzx
 111:   add r10.xyz, -r0.xyzx, cb3[1].xyzx
 112:   div r10.xyz, r10.xyzx, r8.xyzx
 113:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
 114:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
 115:   min r5.w, r9.y, r9.x
 116:   min r5.w, r9.z, r5.w
 117:   add r9.xyz, r0.xyzx, -cb3[2].xyzx
 118:   mad r8.xyz, r8.xyzx, r5.wwww, r9.xyzx
 119: else 
 120:   mov r8.xyz, r6.xyzx
 121: endif 
 122: mad r5.w, -r3.z, l(0.700000), l(1.700000)
 123: mul r5.w, r3.z, r5.w
 124: mul r5.w, r5.w, l(6.000000)
 125: sample_l r8.xyzw, r8.xyzx, t6.xyzw, s0, r5.w
 126: add r6.w, r8.w, l(-1.000000)
 127: mad r6.w, cb3[3].w, r6.w, l(1.000000)
 128: mul r6.w, r6.w, cb3[3].x
 129: mul r9.xyz, r8.xyzx, r6.wwww
 130: lt r7.w, cb3[1].w, l(0.999990)
 131: if_nz r7.w
 132:   lt r7.w, l(0.000000), cb3[6].w
 133:   if_nz r7.w
 134:     dp3 r7.w, r6.xyzx, r6.xyzx
 135:     rsq r7.w, r7.w
 136:     mul r10.xyz, r6.xyzx, r7.wwww
 137:     add r11.xyz, -r0.xyzx, cb3[4].xyzx
 138:     div r11.xyz, r11.xyzx, r10.xyzx
 139:     add r12.xyz, -r0.xyzx, cb3[5].xyzx
 140:     div r12.xyz, r12.xyzx, r10.xyzx
 141:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 142:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 143:     min r7.w, r11.y, r11.x
 144:     min r7.w, r11.z, r7.w
 145:     add r0.xyz, r0.xyzx, -cb3[6].xyzx
 146:     mad r6.xyz, r10.xyzx, r7.wwww, r0.xyzx
 147:   endif 
 148:   sample_l r10.xyzw, r6.xyzx, t7.xyzw, s0, r5.w
 149:   add r0.x, r10.w, l(-1.000000)
 150:   mad r0.x, cb3[7].w, r0.x, l(1.000000)
 151:   mul r0.x, r0.x, cb3[7].x
 152:   mul r0.xyz, r10.xyzx, r0.xxxx
 153:   mad r6.xyz, r6.wwww, r8.xyzx, -r0.xyzx
 154:   mad r9.xyz, cb3[1].wwww, r6.xyzx, r0.xyzx
 155: endif 
 156: add r0.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 157: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 158: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 159: mul r4.xyz, r2.wwww, r4.xyzx
 160: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 161: dp3 r0.w, r1.xyzx, r1.xyzx
 162: max r0.w, r0.w, l(0.001000)
 163: rsq r0.w, r0.w
 164: mul r1.xyz, r0.wwww, r1.xyzx
 165: dp3 r0.w, r5.xyzx, r2.xyzx
 166: dp3_sat r2.x, r5.xyzx, cb2[0].xyzx
 167: dp3_sat r2.y, r5.xyzx, r1.xyzx
 168: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 169: mul r1.y, r1.x, r1.x
 170: dp2 r1.y, r1.yyyy, r3.zzzz
 171: add r1.y, r1.y, l(-0.500000)
 172: add r1.z, -r2.x, l(1.000000)
 173: mul r2.z, r1.z, r1.z
 174: mul r2.z, r2.z, r2.z
 175: mul r1.z, r1.z, r2.z
 176: mad r1.z, r1.y, r1.z, l(1.000000)
 177: add r2.z, -|r0.w|, l(1.000000)
 178: mul r5.x, r2.z, r2.z
 179: mul r5.x, r5.x, r5.x
 180: mul r2.z, r2.z, r5.x
 181: mad r1.y, r1.y, r2.z, l(1.000000)
 182: mul r1.y, r1.y, r1.z
 183: mul r1.y, r2.x, r1.y
 184: mul r1.z, r3.z, r3.z
 185: max r1.z, r1.z, l(0.002000)
 186: add r5.x, -r1.z, l(1.000000)
 187: mad r5.y, |r0.w|, r5.x, r1.z
 188: mad r5.x, r2.x, r5.x, r1.z
 189: mul r0.w, |r0.w|, r5.x
 190: mad r0.w, r2.x, r5.y, r0.w
 191: add r0.w, r0.w, l(0.000010)
 192: div r0.w, l(0.500000), r0.w
 193: mul r5.x, r1.z, r1.z
 194: mad r5.y, r2.y, r5.x, -r2.y
 195: mad r2.y, r5.y, r2.y, l(1.000000)
 196: mul r5.x, r5.x, l(0.318310)
 197: mad r2.y, r2.y, r2.y, l(0.000000)
 198: div r2.y, r5.x, r2.y
 199: mul r0.w, r0.w, r2.y
 200: mul r0.w, r0.w, l(3.141593)
 201: max r0.w, r0.w, l(0.000100)
 202: sqrt r0.w, r0.w
 203: mul r0.w, r2.x, r0.w
 204: mul r1.z, r1.z, l(0.280000)
 205: mad r1.z, -r1.z, r3.z, l(1.000000)
 206: dp3 r2.x, r0.xyzx, r0.xyzx
 207: ne r2.x, r2.x, l(0.000000)
 208: and r2.x, r2.x, l(0x3f800000)
 209: mul r0.w, r0.w, r2.x
 210: add r2.x, -r2.w, r4.w
 211: add_sat r2.x, r2.x, l(1.000000)
 212: mad r3.xyz, r7.xyzx, r1.yyyy, r3.xywx
 213: mul r5.xyz, r7.xyzx, r0.wwww
 214: add r0.w, -r1.x, l(1.000000)
 215: mul r1.x, r0.w, r0.w
 216: mul r1.x, r1.x, r1.x
 217: mul r0.w, r0.w, r1.x
 218: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 219: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 220: mul r5.xyz, r5.xyzx, r6.xyzx
 221: mad r3.xyz, r4.xyzx, r3.xyzx, r5.xyzx
 222: mul r1.xyz, r9.xyzx, r1.zzzz
 223: add r2.xyw, -r0.xyxz, r2.xxxx
 224: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 225: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 226: mul o0.xyz, r1.wwww, r0.xyzx
 227: mov o0.w, l(1.000000)
 228: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON SHADOWS_SCREEN 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 174 math, 13 temp registers, 8 textures, 6 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_TerrainNormalmapTexture" to slot 5 sampler slot 8
Set 2D Texture "_ShadowMapTexture" to slot 6 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 7 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 8 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 9 sampler slot 1

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 192
  Float _Metallic1 at 196
  Float _Metallic2 at 200
  Float _Metallic3 at 204
  Float _Smoothness0 at 208
  Float _Smoothness1 at 212
  Float _Smoothness2 at 216
  Float _Smoothness3 at 220
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xy w
// TEXCOORD                 6   xyzw        6     NONE   float       
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_resource_texturecube (float,float,float,float) t8
      dcl_resource_texture3d (float,float,float,float) t9
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r3.xy, r3.xyxx, cb0[5].xyxx
  10: sample r3.xyzw, r3.xyxx, t0.xyzw, s3
  11: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r2.w, r1.w, l(0.001000)
  13: div r3.xyzw, r3.xyzw, r2.wwww
  14: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r6.xyzw, r4.xyxx, t1.xyzw, s4
  19: mul r6.xyzw, r3.xxxx, r6.xyzw
  20: mul r6.w, r6.w, cb0[13].x
  21: sample r4.xyzw, r4.zwzz, t2.xyzw, s5
  22: mul r4.xyzw, r3.yyyy, r4.xyzw
  23: mul r4.w, r4.w, cb0[13].y
  24: add r4.xyzw, r4.xyzw, r6.xyzw
  25: sample r6.xyzw, r5.xyxx, t3.xyzw, s6
  26: mul r6.xyzw, r3.zzzz, r6.xyzw
  27: mul r6.w, r6.w, cb0[13].z
  28: add r4.xyzw, r4.xyzw, r6.xyzw
  29: sample r5.xyzw, r5.zwzz, t4.xyzw, s7
  30: mul r5.xyzw, r3.wwww, r5.xyzw
  31: mul r5.w, r5.w, cb0[13].w
  32: add r4.xyzw, r4.xyzw, r5.xyzw
  33: sample r5.xyzw, v4.zwzz, t5.xyzw, s8
  34: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  35: dp3 r2.w, r5.xyzx, r5.xyzx
  36: rsq r2.w, r2.w
  37: mul r5.xyz, r2.wwww, r5.xyzx
  38: dp4 r2.w, r3.xyzw, cb0[12].xyzw
  39: mov r3.x, cb4[9].z
  40: mov r3.y, cb4[10].z
  41: mov r3.z, cb4[11].z
  42: dp3 r3.x, r1.xyzx, r3.xyzx
  43: add r3.yzw, r0.xxyz, -cb3[25].xxyz
  44: dp3 r3.y, r3.yzwy, r3.yzwy
  45: sqrt r3.y, r3.y
  46: add r3.y, -r3.x, r3.y
  47: mad r3.x, cb3[25].w, r3.y, r3.x
  48: mad_sat r3.x, r3.x, cb3[24].z, cb3[24].w
  49: eq r3.y, cb6[0].x, l(1.000000)
  50: if_nz r3.y
  51:   eq r3.y, cb6[0].y, l(1.000000)
  52:   mul r6.xyz, v2.wwww, cb6[2].xyzx
  53:   mad r6.xyz, cb6[1].xyzx, v1.wwww, r6.xyzx
  54:   mad r6.xyz, cb6[3].xyzx, v3.wwww, r6.xyzx
  55:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  56:   movc r3.yzw, r3.yyyy, r6.xxyz, r0.xxyz
  57:   add r3.yzw, r3.yyzw, -cb6[6].xxyz
  58:   mul r6.yzw, r3.yyzw, cb6[5].xxyz
  59:   mad r3.y, r6.y, l(0.250000), l(0.750000)
  60:   mad r3.z, cb6[0].z, l(0.500000), l(0.750000)
  61:   max r6.x, r3.z, r3.y
  62:   sample r6.xyzw, r6.xzwx, t9.xyzw, s1
  63: else 
  64:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  65: endif 
  66: dp4_sat r3.y, r6.xyzw, cb2[46].xyzw
  67: div r3.zw, v5.xxxy, v5.wwww
  68: sample r6.xyzw, r3.zwzz, t6.xyzw, s2
  69: add r3.y, r3.y, -r6.x
  70: mad r3.x, r3.x, r3.y, r6.x
  71: dp3 r6.x, v1.xyzx, r5.xyzx
  72: dp3 r6.y, v2.xyzx, r5.xyzx
  73: dp3 r6.z, v3.xyzx, r5.xyzx
  74: dp3 r3.y, r6.xyzx, r6.xyzx
  75: rsq r3.y, r3.y
  76: mul r3.yzw, r3.yyyy, r6.xxyz
  77: add r5.x, -r4.w, l(1.000000)
  78: dp3 r5.y, -r2.xyzx, r3.yzwy
  79: add r5.y, r5.y, r5.y
  80: mad r5.yzw, r3.yyzw, -r5.yyyy, -r2.xxyz
  81: mul r6.xyz, r3.xxxx, cb0[2].xyzx
  82: lt r3.x, l(0.000000), cb5[2].w
  83: if_nz r3.x
  84:   dp3 r3.x, r5.yzwy, r5.yzwy
  85:   rsq r3.x, r3.x
  86:   mul r7.xyz, r3.xxxx, r5.yzwy
  87:   add r8.xyz, -r0.xyzx, cb5[0].xyzx
  88:   div r8.xyz, r8.xyzx, r7.xyzx
  89:   add r9.xyz, -r0.xyzx, cb5[1].xyzx
  90:   div r9.xyz, r9.xyzx, r7.xyzx
  91:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  92:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  93:   min r3.x, r8.y, r8.x
  94:   min r3.x, r8.z, r3.x
  95:   add r8.xyz, r0.xyzx, -cb5[2].xyzx
  96:   mad r7.xyz, r7.xyzx, r3.xxxx, r8.xyzx
  97: else 
  98:   mov r7.xyz, r5.yzwy
  99: endif 
 100: mad r3.x, -r5.x, l(0.700000), l(1.700000)
 101: mul r3.x, r3.x, r5.x
 102: mul r3.x, r3.x, l(6.000000)
 103: sample_l r7.xyzw, r7.xyzx, t7.xyzw, s0, r3.x
 104: add r6.w, r7.w, l(-1.000000)
 105: mad r6.w, cb5[3].w, r6.w, l(1.000000)
 106: mul r6.w, r6.w, cb5[3].x
 107: mul r8.xyz, r7.xyzx, r6.wwww
 108: lt r7.w, cb5[1].w, l(0.999990)
 109: if_nz r7.w
 110:   lt r7.w, l(0.000000), cb5[6].w
 111:   if_nz r7.w
 112:     dp3 r7.w, r5.yzwy, r5.yzwy
 113:     rsq r7.w, r7.w
 114:     mul r9.xyz, r5.yzwy, r7.wwww
 115:     add r10.xyz, -r0.xyzx, cb5[4].xyzx
 116:     div r10.xyz, r10.xyzx, r9.xyzx
 117:     add r11.xyz, -r0.xyzx, cb5[5].xyzx
 118:     div r11.xyz, r11.xyzx, r9.xyzx
 119:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 120:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 121:     min r7.w, r10.y, r10.x
 122:     min r7.w, r10.z, r7.w
 123:     add r0.xyz, r0.xyzx, -cb5[6].xyzx
 124:     mad r5.yzw, r9.xxyz, r7.wwww, r0.xxyz
 125:   endif 
 126:   sample_l r9.xyzw, r5.yzwy, t8.xyzw, s0, r3.x
 127:   add r0.x, r9.w, l(-1.000000)
 128:   mad r0.x, cb5[7].w, r0.x, l(1.000000)
 129:   mul r0.x, r0.x, cb5[7].x
 130:   mul r0.xyz, r9.xyzx, r0.xxxx
 131:   mad r5.yzw, r6.wwww, r7.xxyz, -r0.xxyz
 132:   mad r8.xyz, cb5[1].wwww, r5.yzwy, r0.xyzx
 133: endif 
 134: add r0.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 135: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 136: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 137: mul r4.xyz, r2.wwww, r4.xyzx
 138: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 139: dp3 r0.w, r1.xyzx, r1.xyzx
 140: max r0.w, r0.w, l(0.001000)
 141: rsq r0.w, r0.w
 142: mul r1.xyz, r0.wwww, r1.xyzx
 143: dp3 r0.w, r3.yzwy, r2.xyzx
 144: dp3_sat r2.x, r3.yzwy, cb2[0].xyzx
 145: dp3_sat r2.y, r3.yzwy, r1.xyzx
 146: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 147: add r1.y, r1.x, r1.x
 148: mul r1.y, r1.x, r1.y
 149: mad r1.y, r1.y, r5.x, l(-0.500000)
 150: add r1.z, -r2.x, l(1.000000)
 151: mul r2.z, r1.z, r1.z
 152: mul r2.z, r2.z, r2.z
 153: mul r1.z, r1.z, r2.z
 154: mad r1.z, r1.y, r1.z, l(1.000000)
 155: add r2.z, -|r0.w|, l(1.000000)
 156: mul r3.x, r2.z, r2.z
 157: mul r3.x, r3.x, r3.x
 158: mul r2.z, r2.z, r3.x
 159: mad r1.y, r1.y, r2.z, l(1.000000)
 160: mul r1.y, r1.y, r1.z
 161: mul r1.y, r2.x, r1.y
 162: mul r1.z, r5.x, r5.x
 163: max r1.z, r1.z, l(0.002000)
 164: add r3.x, -r1.z, l(1.000000)
 165: mad r3.y, |r0.w|, r3.x, r1.z
 166: mad r3.x, r2.x, r3.x, r1.z
 167: mul r0.w, |r0.w|, r3.x
 168: mad r0.w, r2.x, r3.y, r0.w
 169: add r0.w, r0.w, l(0.000010)
 170: div r0.w, l(0.500000), r0.w
 171: mul r3.x, r1.z, r1.z
 172: mad r3.y, r2.y, r3.x, -r2.y
 173: mad r2.y, r3.y, r2.y, l(1.000000)
 174: mul r3.x, r3.x, l(0.318310)
 175: mad r2.y, r2.y, r2.y, l(0.000000)
 176: div r2.y, r3.x, r2.y
 177: mul r0.w, r0.w, r2.y
 178: mul r0.w, r0.w, l(3.141593)
 179: max r0.w, r0.w, l(0.000100)
 180: sqrt r0.w, r0.w
 181: mul r0.w, r2.x, r0.w
 182: mul r1.z, r1.z, l(0.280000)
 183: mad r1.z, -r1.z, r5.x, l(1.000000)
 184: dp3 r2.x, r0.xyzx, r0.xyzx
 185: ne r2.x, r2.x, l(0.000000)
 186: and r2.x, r2.x, l(0x3f800000)
 187: mul r0.w, r0.w, r2.x
 188: add r2.x, -r2.w, r4.w
 189: add_sat r2.x, r2.x, l(1.000000)
 190: mul r3.xyz, r1.yyyy, r6.xyzx
 191: mul r5.xyz, r6.xyzx, r0.wwww
 192: add r0.w, -r1.x, l(1.000000)
 193: mul r1.x, r0.w, r0.w
 194: mul r1.x, r1.x, r1.x
 195: mul r0.w, r0.w, r1.x
 196: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 197: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 198: mul r5.xyz, r5.xyzx, r6.xyzx
 199: mad r3.xyz, r4.xyzx, r3.xyzx, r5.xyzx
 200: mul r1.xyz, r8.xyzx, r1.zzzz
 201: add r2.xyw, -r0.xyxz, r2.xxxx
 202: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 203: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 204: mul o0.xyz, r1.wwww, r0.xyzx
 205: mov o0.w, l(1.000000)
 206: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 201 math, 14 temp registers, 11 textures, 8 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_TerrainNormalmapTexture" to slot 5 sampler slot 8
Set 2D Texture "_ShadowMapTexture" to slot 6 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 7 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 8 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 9 sampler slot 1

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 192
  Float _Metallic1 at 196
  Float _Metallic2 at 200
  Float _Metallic3 at 204
  Float _Smoothness0 at 208
  Float _Smoothness1 at 212
  Float _Smoothness2 at 216
  Float _Smoothness3 at 220
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_resource_texturecube (float,float,float,float) t8
      dcl_resource_texture3d (float,float,float,float) t9
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r3.xy, r3.xyxx, cb0[5].xyxx
  10: sample r3.xyzw, r3.xyxx, t0.xyzw, s3
  11: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r2.w, r1.w, l(0.001000)
  13: div r3.xyzw, r3.xyzw, r2.wwww
  14: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r6.xyzw, r4.xyxx, t1.xyzw, s4
  19: mul r6.xyzw, r3.xxxx, r6.xyzw
  20: mul r6.w, r6.w, cb0[13].x
  21: sample r4.xyzw, r4.zwzz, t2.xyzw, s5
  22: mul r4.xyzw, r3.yyyy, r4.xyzw
  23: mul r4.w, r4.w, cb0[13].y
  24: add r4.xyzw, r4.xyzw, r6.xyzw
  25: sample r6.xyzw, r5.xyxx, t3.xyzw, s6
  26: mul r6.xyzw, r3.zzzz, r6.xyzw
  27: mul r6.w, r6.w, cb0[13].z
  28: add r4.xyzw, r4.xyzw, r6.xyzw
  29: sample r5.xyzw, r5.zwzz, t4.xyzw, s7
  30: mul r5.xyzw, r3.wwww, r5.xyzw
  31: mul r5.w, r5.w, cb0[13].w
  32: add r4.xyzw, r4.xyzw, r5.xyzw
  33: sample r5.xyzw, v4.zwzz, t5.xyzw, s8
  34: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  35: dp3 r2.w, r5.xyzx, r5.xyzx
  36: rsq r2.w, r2.w
  37: mul r5.xyz, r2.wwww, r5.xyzx
  38: dp4 r2.w, r3.xyzw, cb0[12].xyzw
  39: mov r3.x, cb4[9].z
  40: mov r3.y, cb4[10].z
  41: mov r3.z, cb4[11].z
  42: dp3 r3.x, r1.xyzx, r3.xyzx
  43: add r3.yzw, r0.xxyz, -cb3[25].xxyz
  44: dp3 r3.y, r3.yzwy, r3.yzwy
  45: sqrt r3.y, r3.y
  46: add r3.y, -r3.x, r3.y
  47: mad r3.x, cb3[25].w, r3.y, r3.x
  48: mad_sat r3.x, r3.x, cb3[24].z, cb3[24].w
  49: eq r3.y, cb6[0].x, l(1.000000)
  50: if_nz r3.y
  51:   eq r3.z, cb6[0].y, l(1.000000)
  52:   mul r6.xyz, v2.wwww, cb6[2].xyzx
  53:   mad r6.xyz, cb6[1].xyzx, v1.wwww, r6.xyzx
  54:   mad r6.xyz, cb6[3].xyzx, v3.wwww, r6.xyzx
  55:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  56:   movc r6.xyz, r3.zzzz, r6.xyzx, r0.xyzx
  57:   add r6.xyz, r6.xyzx, -cb6[6].xyzx
  58:   mul r6.yzw, r6.xxyz, cb6[5].xxyz
  59:   mad r3.z, r6.y, l(0.250000), l(0.750000)
  60:   mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
  61:   max r6.x, r3.w, r3.z
  62:   sample r6.xyzw, r6.xzwx, t9.xyzw, s1
  63: else 
  64:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  65: endif 
  66: dp4_sat r3.z, r6.xyzw, cb2[46].xyzw
  67: div r6.xy, v6.xyxx, v6.wwww
  68: sample r6.xyzw, r6.xyxx, t6.xyzw, s2
  69: add r3.z, r3.z, -r6.x
  70: mad r3.x, r3.x, r3.z, r6.x
  71: dp3 r6.x, v1.xyzx, r5.xyzx
  72: dp3 r6.y, v2.xyzx, r5.xyzx
  73: dp3 r6.z, v3.xyzx, r5.xyzx
  74: dp3 r3.z, r6.xyzx, r6.xyzx
  75: rsq r3.z, r3.z
  76: mul r5.xyz, r3.zzzz, r6.xyzx
  77: add r3.z, -r4.w, l(1.000000)
  78: dp3 r3.w, -r2.xyzx, r5.xyzx
  79: add r3.w, r3.w, r3.w
  80: mad r6.xyz, r5.xyzx, -r3.wwww, -r2.xyzx
  81: mul r7.xyz, r3.xxxx, cb0[2].xyzx
  82: if_nz r3.y
  83:   eq r3.x, cb6[0].y, l(1.000000)
  84:   mul r8.xyz, v2.wwww, cb6[2].xyzx
  85:   mad r8.xyz, cb6[1].xyzx, v1.wwww, r8.xyzx
  86:   mad r8.xyz, cb6[3].xyzx, v3.wwww, r8.xyzx
  87:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  88:   movc r3.xyw, r3.xxxx, r8.xyxz, r0.xyxz
  89:   add r3.xyw, r3.xyxw, -cb6[6].xyxz
  90:   mul r8.yzw, r3.xxyw, cb6[5].xxyz
  91:   mul r3.x, r8.y, l(0.250000)
  92:   mul r3.y, cb6[0].z, l(0.500000)
  93:   mad r3.w, -cb6[0].z, l(0.500000), l(0.250000)
  94:   max r3.x, r3.y, r3.x
  95:   min r8.x, r3.w, r3.x
  96:   sample r9.xyzw, r8.xzwx, t9.xyzw, s1
  97:   add r3.xyw, r8.xzxw, l(0.250000, 0.000000, 0.000000, 0.000000)
  98:   sample r10.xyzw, r3.xywx, t9.xyzw, s1
  99:   add r3.xyw, r8.xzxw, l(0.500000, 0.000000, 0.000000, 0.000000)
 100:   sample r8.xyzw, r3.xywx, t9.xyzw, s1
 101:   mov r5.w, l(1.000000)
 102:   dp4 r9.x, r9.xyzw, r5.xyzw
 103:   dp4 r9.y, r10.xyzw, r5.xyzw
 104:   dp4 r9.z, r8.xyzw, r5.xyzw
 105: else 
 106:   mov r5.w, l(1.000000)
 107:   dp4 r9.x, cb2[39].xyzw, r5.xyzw
 108:   dp4 r9.y, cb2[40].xyzw, r5.xyzw
 109:   dp4 r9.z, cb2[41].xyzw, r5.xyzw
 110: endif 
 111: add r3.xyw, r9.xyxz, v5.xyxz
 112: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
 113: log r3.xyw, r3.xyxw
 114: mul r3.xyw, r3.xyxw, l(0.416667, 0.416667, 0.000000, 0.416667)
 115: exp r3.xyw, r3.xyxw
 116: mad r3.xyw, r3.xyxw, l(1.055000, 1.055000, 0.000000, 1.055000), l(-0.055000, -0.055000, 0.000000, -0.055000)
 117: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
 118: lt r5.w, l(0.000000), cb5[2].w
 119: if_nz r5.w
 120:   dp3 r5.w, r6.xyzx, r6.xyzx
 121:   rsq r5.w, r5.w
 122:   mul r8.xyz, r5.wwww, r6.xyzx
 123:   add r9.xyz, -r0.xyzx, cb5[0].xyzx
 124:   div r9.xyz, r9.xyzx, r8.xyzx
 125:   add r10.xyz, -r0.xyzx, cb5[1].xyzx
 126:   div r10.xyz, r10.xyzx, r8.xyzx
 127:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
 128:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
 129:   min r5.w, r9.y, r9.x
 130:   min r5.w, r9.z, r5.w
 131:   add r9.xyz, r0.xyzx, -cb5[2].xyzx
 132:   mad r8.xyz, r8.xyzx, r5.wwww, r9.xyzx
 133: else 
 134:   mov r8.xyz, r6.xyzx
 135: endif 
 136: mad r5.w, -r3.z, l(0.700000), l(1.700000)
 137: mul r5.w, r3.z, r5.w
 138: mul r5.w, r5.w, l(6.000000)
 139: sample_l r8.xyzw, r8.xyzx, t7.xyzw, s0, r5.w
 140: add r6.w, r8.w, l(-1.000000)
 141: mad r6.w, cb5[3].w, r6.w, l(1.000000)
 142: mul r6.w, r6.w, cb5[3].x
 143: mul r9.xyz, r8.xyzx, r6.wwww
 144: lt r7.w, cb5[1].w, l(0.999990)
 145: if_nz r7.w
 146:   lt r7.w, l(0.000000), cb5[6].w
 147:   if_nz r7.w
 148:     dp3 r7.w, r6.xyzx, r6.xyzx
 149:     rsq r7.w, r7.w
 150:     mul r10.xyz, r6.xyzx, r7.wwww
 151:     add r11.xyz, -r0.xyzx, cb5[4].xyzx
 152:     div r11.xyz, r11.xyzx, r10.xyzx
 153:     add r12.xyz, -r0.xyzx, cb5[5].xyzx
 154:     div r12.xyz, r12.xyzx, r10.xyzx
 155:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 156:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 157:     min r7.w, r11.y, r11.x
 158:     min r7.w, r11.z, r7.w
 159:     add r0.xyz, r0.xyzx, -cb5[6].xyzx
 160:     mad r6.xyz, r10.xyzx, r7.wwww, r0.xyzx
 161:   endif 
 162:   sample_l r10.xyzw, r6.xyzx, t8.xyzw, s0, r5.w
 163:   add r0.x, r10.w, l(-1.000000)
 164:   mad r0.x, cb5[7].w, r0.x, l(1.000000)
 165:   mul r0.x, r0.x, cb5[7].x
 166:   mul r0.xyz, r10.xyzx, r0.xxxx
 167:   mad r6.xyz, r6.wwww, r8.xyzx, -r0.xyzx
 168:   mad r9.xyz, cb5[1].wwww, r6.xyzx, r0.xyzx
 169: endif 
 170: add r0.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 171: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 172: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 173: mul r4.xyz, r2.wwww, r4.xyzx
 174: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 175: dp3 r0.w, r1.xyzx, r1.xyzx
 176: max r0.w, r0.w, l(0.001000)
 177: rsq r0.w, r0.w
 178: mul r1.xyz, r0.wwww, r1.xyzx
 179: dp3 r0.w, r5.xyzx, r2.xyzx
 180: dp3_sat r2.x, r5.xyzx, cb2[0].xyzx
 181: dp3_sat r2.y, r5.xyzx, r1.xyzx
 182: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 183: mul r1.y, r1.x, r1.x
 184: dp2 r1.y, r1.yyyy, r3.zzzz
 185: add r1.y, r1.y, l(-0.500000)
 186: add r1.z, -r2.x, l(1.000000)
 187: mul r2.z, r1.z, r1.z
 188: mul r2.z, r2.z, r2.z
 189: mul r1.z, r1.z, r2.z
 190: mad r1.z, r1.y, r1.z, l(1.000000)
 191: add r2.z, -|r0.w|, l(1.000000)
 192: mul r5.x, r2.z, r2.z
 193: mul r5.x, r5.x, r5.x
 194: mul r2.z, r2.z, r5.x
 195: mad r1.y, r1.y, r2.z, l(1.000000)
 196: mul r1.y, r1.y, r1.z
 197: mul r1.y, r2.x, r1.y
 198: mul r1.z, r3.z, r3.z
 199: max r1.z, r1.z, l(0.002000)
 200: add r5.x, -r1.z, l(1.000000)
 201: mad r5.y, |r0.w|, r5.x, r1.z
 202: mad r5.x, r2.x, r5.x, r1.z
 203: mul r0.w, |r0.w|, r5.x
 204: mad r0.w, r2.x, r5.y, r0.w
 205: add r0.w, r0.w, l(0.000010)
 206: div r0.w, l(0.500000), r0.w
 207: mul r5.x, r1.z, r1.z
 208: mad r5.y, r2.y, r5.x, -r2.y
 209: mad r2.y, r5.y, r2.y, l(1.000000)
 210: mul r5.x, r5.x, l(0.318310)
 211: mad r2.y, r2.y, r2.y, l(0.000000)
 212: div r2.y, r5.x, r2.y
 213: mul r0.w, r0.w, r2.y
 214: mul r0.w, r0.w, l(3.141593)
 215: max r0.w, r0.w, l(0.000100)
 216: sqrt r0.w, r0.w
 217: mul r0.w, r2.x, r0.w
 218: mul r1.z, r1.z, l(0.280000)
 219: mad r1.z, -r1.z, r3.z, l(1.000000)
 220: dp3 r2.x, r0.xyzx, r0.xyzx
 221: ne r2.x, r2.x, l(0.000000)
 222: and r2.x, r2.x, l(0x3f800000)
 223: mul r0.w, r0.w, r2.x
 224: add r2.x, -r2.w, r4.w
 225: add_sat r2.x, r2.x, l(1.000000)
 226: mad r3.xyz, r7.xyzx, r1.yyyy, r3.xywx
 227: mul r5.xyz, r7.xyzx, r0.wwww
 228: add r0.w, -r1.x, l(1.000000)
 229: mul r1.x, r0.w, r0.w
 230: mul r1.x, r1.x, r1.x
 231: mul r0.w, r0.w, r1.x
 232: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 233: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 234: mul r5.xyz, r5.xyzx, r6.xyzx
 235: mad r3.xyz, r4.xyzx, r3.xyzx, r5.xyzx
 236: mul r1.xyz, r9.xyzx, r1.zzzz
 237: add r2.xyw, -r0.xyxz, r2.xxxx
 238: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 239: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 240: mul o0.xyz, r1.wwww, r0.xyzx
 241: mov o0.w, l(1.000000)
 242: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON 
Local Keywords: _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 210 math, 13 temp registers, 11 textures, 6 branches
Set 2D Texture "_Control" to slot 0 sampler slot 2
Set 2D Texture "_Splat0" to slot 1 sampler slot 3
Set 2D Texture "_Splat1" to slot 2 sampler slot 4
Set 2D Texture "_Splat2" to slot 3 sampler slot 5
Set 2D Texture "_Splat3" to slot 4 sampler slot 6
Set 2D Texture "_Normal0" to slot 5 sampler slot 8
Set 2D Texture "_Normal1" to slot 6 sampler slot 9
Set 2D Texture "_Normal2" to slot 7 sampler slot 10
Set 2D Texture "_Normal3" to slot 8 sampler slot 11
Set 2D Texture "_TerrainNormalmapTexture" to slot 9 sampler slot 7
Set CUBE Texture "unity_SpecCube0" to slot 10 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 11 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 192
  Float _NormalScale1 at 196
  Float _NormalScale2 at 200
  Float _NormalScale3 at 204
  Float _Metallic0 at 208
  Float _Metallic1 at 212
  Float _Metallic2 at 216
  Float _Metallic3 at 220
  Float _Smoothness0 at 224
  Float _Smoothness1 at 228
  Float _Smoothness2 at 232
  Float _Smoothness3 at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[8], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texturecube (float,float,float,float) t10
      dcl_resource_texturecube (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 13
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r3.xy, r3.xyxx, cb0[5].xyxx
  10: sample r3.xyzw, r3.xyxx, t0.xyzw, s2
  11: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r2.w, r1.w, l(0.001000)
  13: div r3.xyzw, r3.xyzw, r2.wwww
  14: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r6.xyzw, r4.xyxx, t1.xyzw, s3
  19: mul r6.xyzw, r3.xxxx, r6.xyzw
  20: mul r6.w, r6.w, cb0[14].x
  21: sample r7.xyzw, r4.zwzz, t2.xyzw, s4
  22: mul r7.xyzw, r3.yyyy, r7.xyzw
  23: mul r7.w, r7.w, cb0[14].y
  24: add r6.xyzw, r6.xyzw, r7.xyzw
  25: sample r7.xyzw, r5.xyxx, t3.xyzw, s5
  26: mul r7.xyzw, r3.zzzz, r7.xyzw
  27: mul r7.w, r7.w, cb0[14].z
  28: add r6.xyzw, r6.xyzw, r7.xyzw
  29: sample r7.xyzw, r5.zwzz, t4.xyzw, s6
  30: mul r7.xyzw, r3.wwww, r7.xyzw
  31: mul r7.w, r7.w, cb0[14].w
  32: add r6.xyzw, r6.xyzw, r7.xyzw
  33: sample r7.xyzw, r4.xyxx, t5.xyzw, s8
  34: mul r7.x, r7.w, r7.x
  35: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  36: mul r7.xy, r4.xyxx, cb0[12].xxxx
  37: dp2 r2.w, r7.xyxx, r7.xyxx
  38: min r2.w, r2.w, l(1.000000)
  39: add r2.w, -r2.w, l(1.000000)
  40: sqrt r7.z, r2.w
  41: sample r4.xyzw, r4.zwzz, t6.xyzw, s9
  42: mul r4.x, r4.w, r4.x
  43: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  44: mul r4.xy, r4.xyxx, cb0[12].yyyy
  45: dp2 r2.w, r4.xyxx, r4.xyxx
  46: min r2.w, r2.w, l(1.000000)
  47: add r2.w, -r2.w, l(1.000000)
  48: sqrt r4.z, r2.w
  49: mul r4.xyz, r3.yyyy, r4.xyzx
  50: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  51: sample r7.xyzw, r5.xyxx, t7.xyzw, s10
  52: mul r7.x, r7.w, r7.x
  53: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  54: mul r7.xy, r5.xyxx, cb0[12].zzzz
  55: dp2 r2.w, r7.xyxx, r7.xyxx
  56: min r2.w, r2.w, l(1.000000)
  57: add r2.w, -r2.w, l(1.000000)
  58: sqrt r7.z, r2.w
  59: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  60: sample r5.xyzw, r5.zwzz, t8.xyzw, s11
  61: mul r5.x, r5.w, r5.x
  62: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  63: mul r5.xy, r5.xyxx, cb0[12].wwww
  64: dp2 r2.w, r5.xyxx, r5.xyxx
  65: min r2.w, r2.w, l(1.000000)
  66: add r2.w, -r2.w, l(1.000000)
  67: sqrt r5.z, r2.w
  68: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  69: add r2.w, r4.z, l(0.000010)
  70: sample r5.xyzw, v4.zwzz, t9.xyzw, s7
  71: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  72: dp3 r4.z, r5.xyzx, r5.xyzx
  73: rsq r4.z, r4.z
  74: mul r5.xyz, r4.zzzz, r5.xyzx
  75: mul r7.xyz, r5.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  76: mad r7.xyz, r5.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r7.xyzx
  77: dp2 r4.z, r7.xzxx, r7.xzxx
  78: rsq r4.z, r4.z
  79: mul r7.xyz, r4.zzzz, r7.xyzx
  80: mul r8.xyz, r5.zxyz, r7.yzxy
  81: mad r8.xyz, r7.zxyz, r5.yzxy, -r8.xyzx
  82: dp3 r4.z, r8.xyzx, r8.xyzx
  83: rsq r4.z, r4.z
  84: mul r8.xyz, r4.zzzz, r8.xyzx
  85: mul r4.yzw, r4.yyyy, r8.xxyz
  86: mad r4.xyz, r4.xxxx, r7.xyzx, r4.yzwy
  87: mad r4.xyz, r2.wwww, r5.xyzx, r4.xyzx
  88: dp4 r2.w, r3.xyzw, cb0[13].xyzw
  89: eq r3.x, cb4[0].x, l(1.000000)
  90: if_nz r3.x
  91:   eq r3.x, cb4[0].y, l(1.000000)
  92:   mul r3.yzw, v2.wwww, cb4[2].xxyz
  93:   mad r3.yzw, cb4[1].xxyz, v1.wwww, r3.yyzw
  94:   mad r3.yzw, cb4[3].xxyz, v3.wwww, r3.yyzw
  95:   add r3.yzw, r3.yyzw, cb4[4].xxyz
  96:   movc r3.xyz, r3.xxxx, r3.yzwy, r0.xyzx
  97:   add r3.xyz, r3.xyzx, -cb4[6].xyzx
  98:   mul r3.yzw, r3.xxyz, cb4[5].xxyz
  99:   mad r3.y, r3.y, l(0.250000), l(0.750000)
 100:   mad r4.w, cb4[0].z, l(0.500000), l(0.750000)
 101:   max r3.x, r3.y, r4.w
 102:   sample r3.xyzw, r3.xzwx, t12.xyzw, s1
 103: else 
 104:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 105: endif 
 106: dp4_sat r3.x, r3.xyzw, cb2[46].xyzw
 107: dp3 r5.x, v1.xyzx, r4.xyzx
 108: dp3 r5.y, v2.xyzx, r4.xyzx
 109: dp3 r5.z, v3.xyzx, r4.xyzx
 110: dp3 r3.y, r5.xyzx, r5.xyzx
 111: rsq r3.y, r3.y
 112: mul r3.yzw, r3.yyyy, r5.xxyz
 113: add r4.x, -r6.w, l(1.000000)
 114: dp3 r4.y, -r2.xyzx, r3.yzwy
 115: add r4.y, r4.y, r4.y
 116: mad r4.yzw, r3.yyzw, -r4.yyyy, -r2.xxyz
 117: mul r5.xyz, r3.xxxx, cb0[2].xyzx
 118: lt r3.x, l(0.000000), cb3[2].w
 119: if_nz r3.x
 120:   dp3 r3.x, r4.yzwy, r4.yzwy
 121:   rsq r3.x, r3.x
 122:   mul r7.xyz, r3.xxxx, r4.yzwy
 123:   add r8.xyz, -r0.xyzx, cb3[0].xyzx
 124:   div r8.xyz, r8.xyzx, r7.xyzx
 125:   add r9.xyz, -r0.xyzx, cb3[1].xyzx
 126:   div r9.xyz, r9.xyzx, r7.xyzx
 127:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
 128:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
 129:   min r3.x, r8.y, r8.x
 130:   min r3.x, r8.z, r3.x
 131:   add r8.xyz, r0.xyzx, -cb3[2].xyzx
 132:   mad r7.xyz, r7.xyzx, r3.xxxx, r8.xyzx
 133: else 
 134:   mov r7.xyz, r4.yzwy
 135: endif 
 136: mad r3.x, -r4.x, l(0.700000), l(1.700000)
 137: mul r3.x, r3.x, r4.x
 138: mul r3.x, r3.x, l(6.000000)
 139: sample_l r7.xyzw, r7.xyzx, t10.xyzw, s0, r3.x
 140: add r5.w, r7.w, l(-1.000000)
 141: mad r5.w, cb3[3].w, r5.w, l(1.000000)
 142: mul r5.w, r5.w, cb3[3].x
 143: mul r8.xyz, r7.xyzx, r5.wwww
 144: lt r7.w, cb3[1].w, l(0.999990)
 145: if_nz r7.w
 146:   lt r7.w, l(0.000000), cb3[6].w
 147:   if_nz r7.w
 148:     dp3 r7.w, r4.yzwy, r4.yzwy
 149:     rsq r7.w, r7.w
 150:     mul r9.xyz, r4.yzwy, r7.wwww
 151:     add r10.xyz, -r0.xyzx, cb3[4].xyzx
 152:     div r10.xyz, r10.xyzx, r9.xyzx
 153:     add r11.xyz, -r0.xyzx, cb3[5].xyzx
 154:     div r11.xyz, r11.xyzx, r9.xyzx
 155:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 156:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 157:     min r7.w, r10.y, r10.x
 158:     min r7.w, r10.z, r7.w
 159:     add r0.xyz, r0.xyzx, -cb3[6].xyzx
 160:     mad r4.yzw, r9.xxyz, r7.wwww, r0.xxyz
 161:   endif 
 162:   sample_l r9.xyzw, r4.yzwy, t11.xyzw, s0, r3.x
 163:   add r0.x, r9.w, l(-1.000000)
 164:   mad r0.x, cb3[7].w, r0.x, l(1.000000)
 165:   mul r0.x, r0.x, cb3[7].x
 166:   mul r0.xyz, r9.xyzx, r0.xxxx
 167:   mad r4.yzw, r5.wwww, r7.xxyz, -r0.xxyz
 168:   mad r8.xyz, cb3[1].wwww, r4.yzwy, r0.xyzx
 169: endif 
 170: add r0.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 171: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 172: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 173: mul r4.yzw, r2.wwww, r6.xxyz
 174: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 175: dp3 r0.w, r1.xyzx, r1.xyzx
 176: max r0.w, r0.w, l(0.001000)
 177: rsq r0.w, r0.w
 178: mul r1.xyz, r0.wwww, r1.xyzx
 179: dp3 r0.w, r3.yzwy, r2.xyzx
 180: dp3_sat r2.x, r3.yzwy, cb2[0].xyzx
 181: dp3_sat r2.y, r3.yzwy, r1.xyzx
 182: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 183: mul r1.y, r1.x, r1.x
 184: dp2 r1.y, r1.yyyy, r4.xxxx
 185: add r1.y, r1.y, l(-0.500000)
 186: add r1.z, -r2.x, l(1.000000)
 187: mul r2.z, r1.z, r1.z
 188: mul r2.z, r2.z, r2.z
 189: mul r1.z, r1.z, r2.z
 190: mad r1.z, r1.y, r1.z, l(1.000000)
 191: add r2.z, -|r0.w|, l(1.000000)
 192: mul r3.x, r2.z, r2.z
 193: mul r3.x, r3.x, r3.x
 194: mul r2.z, r2.z, r3.x
 195: mad r1.y, r1.y, r2.z, l(1.000000)
 196: mul r1.y, r1.y, r1.z
 197: mul r1.y, r2.x, r1.y
 198: mul r1.z, r4.x, r4.x
 199: max r1.z, r1.z, l(0.002000)
 200: add r3.x, -r1.z, l(1.000000)
 201: mad r3.y, |r0.w|, r3.x, r1.z
 202: mad r3.x, r2.x, r3.x, r1.z
 203: mul r0.w, |r0.w|, r3.x
 204: mad r0.w, r2.x, r3.y, r0.w
 205: add r0.w, r0.w, l(0.000010)
 206: div r0.w, l(0.500000), r0.w
 207: mul r3.x, r1.z, r1.z
 208: mad r3.y, r2.y, r3.x, -r2.y
 209: mad r2.y, r3.y, r2.y, l(1.000000)
 210: mul r3.x, r3.x, l(0.318310)
 211: mad r2.y, r2.y, r2.y, l(0.000000)
 212: div r2.y, r3.x, r2.y
 213: mul r0.w, r0.w, r2.y
 214: mul r0.w, r0.w, l(3.141593)
 215: max r0.w, r0.w, l(0.000100)
 216: sqrt r0.w, r0.w
 217: mul r0.w, r2.x, r0.w
 218: mul r1.z, r1.z, l(0.280000)
 219: mad r1.z, -r1.z, r4.x, l(1.000000)
 220: dp3 r2.x, r0.xyzx, r0.xyzx
 221: ne r2.x, r2.x, l(0.000000)
 222: and r2.x, r2.x, l(0x3f800000)
 223: mul r0.w, r0.w, r2.x
 224: add r2.x, -r2.w, r6.w
 225: add_sat r2.x, r2.x, l(1.000000)
 226: mul r3.xyz, r1.yyyy, r5.xyzx
 227: mul r5.xyz, r5.xyzx, r0.wwww
 228: add r0.w, -r1.x, l(1.000000)
 229: mul r1.x, r0.w, r0.w
 230: mul r1.x, r1.x, r1.x
 231: mul r0.w, r0.w, r1.x
 232: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 233: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 234: mul r5.xyz, r5.xyzx, r6.xyzx
 235: mad r3.xyz, r4.yzwy, r3.xyzx, r5.xyzx
 236: mul r1.xyz, r8.xyzx, r1.zzzz
 237: add r2.xyw, -r0.xyxz, r2.xxxx
 238: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 239: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 240: mul o0.xyz, r1.wwww, r0.xyzx
 241: mov o0.w, l(1.000000)
 242: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON LIGHTPROBE_SH 
Local Keywords: _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 237 math, 14 temp registers, 14 textures, 8 branches
Set 2D Texture "_Control" to slot 0 sampler slot 2
Set 2D Texture "_Splat0" to slot 1 sampler slot 3
Set 2D Texture "_Splat1" to slot 2 sampler slot 4
Set 2D Texture "_Splat2" to slot 3 sampler slot 5
Set 2D Texture "_Splat3" to slot 4 sampler slot 6
Set 2D Texture "_Normal0" to slot 5 sampler slot 8
Set 2D Texture "_Normal1" to slot 6 sampler slot 9
Set 2D Texture "_Normal2" to slot 7 sampler slot 10
Set 2D Texture "_Normal3" to slot 8 sampler slot 11
Set 2D Texture "_TerrainNormalmapTexture" to slot 9 sampler slot 7
Set CUBE Texture "unity_SpecCube0" to slot 10 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 11 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 192
  Float _NormalScale1 at 196
  Float _NormalScale2 at 200
  Float _NormalScale3 at 204
  Float _Metallic0 at 208
  Float _Metallic1 at 212
  Float _Metallic2 at 216
  Float _Metallic3 at 220
  Float _Smoothness0 at 224
  Float _Smoothness1 at 228
  Float _Smoothness2 at 232
  Float _Smoothness3 at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[8], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texturecube (float,float,float,float) t10
      dcl_resource_texturecube (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_temps 14
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r3.xy, r3.xyxx, cb0[5].xyxx
  10: sample r3.xyzw, r3.xyxx, t0.xyzw, s2
  11: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r2.w, r1.w, l(0.001000)
  13: div r3.xyzw, r3.xyzw, r2.wwww
  14: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r6.xyzw, r4.xyxx, t1.xyzw, s3
  19: mul r6.xyzw, r3.xxxx, r6.xyzw
  20: mul r6.w, r6.w, cb0[14].x
  21: sample r7.xyzw, r4.zwzz, t2.xyzw, s4
  22: mul r7.xyzw, r3.yyyy, r7.xyzw
  23: mul r7.w, r7.w, cb0[14].y
  24: add r6.xyzw, r6.xyzw, r7.xyzw
  25: sample r7.xyzw, r5.xyxx, t3.xyzw, s5
  26: mul r7.xyzw, r3.zzzz, r7.xyzw
  27: mul r7.w, r7.w, cb0[14].z
  28: add r6.xyzw, r6.xyzw, r7.xyzw
  29: sample r7.xyzw, r5.zwzz, t4.xyzw, s6
  30: mul r7.xyzw, r3.wwww, r7.xyzw
  31: mul r7.w, r7.w, cb0[14].w
  32: add r6.xyzw, r6.xyzw, r7.xyzw
  33: sample r7.xyzw, r4.xyxx, t5.xyzw, s8
  34: mul r7.x, r7.w, r7.x
  35: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  36: mul r7.xy, r4.xyxx, cb0[12].xxxx
  37: dp2 r2.w, r7.xyxx, r7.xyxx
  38: min r2.w, r2.w, l(1.000000)
  39: add r2.w, -r2.w, l(1.000000)
  40: sqrt r7.z, r2.w
  41: sample r4.xyzw, r4.zwzz, t6.xyzw, s9
  42: mul r4.x, r4.w, r4.x
  43: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  44: mul r4.xy, r4.xyxx, cb0[12].yyyy
  45: dp2 r2.w, r4.xyxx, r4.xyxx
  46: min r2.w, r2.w, l(1.000000)
  47: add r2.w, -r2.w, l(1.000000)
  48: sqrt r4.z, r2.w
  49: mul r4.xyz, r3.yyyy, r4.xyzx
  50: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  51: sample r7.xyzw, r5.xyxx, t7.xyzw, s10
  52: mul r7.x, r7.w, r7.x
  53: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  54: mul r7.xy, r5.xyxx, cb0[12].zzzz
  55: dp2 r2.w, r7.xyxx, r7.xyxx
  56: min r2.w, r2.w, l(1.000000)
  57: add r2.w, -r2.w, l(1.000000)
  58: sqrt r7.z, r2.w
  59: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  60: sample r5.xyzw, r5.zwzz, t8.xyzw, s11
  61: mul r5.x, r5.w, r5.x
  62: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  63: mul r5.xy, r5.xyxx, cb0[12].wwww
  64: dp2 r2.w, r5.xyxx, r5.xyxx
  65: min r2.w, r2.w, l(1.000000)
  66: add r2.w, -r2.w, l(1.000000)
  67: sqrt r5.z, r2.w
  68: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  69: add r2.w, r4.z, l(0.000010)
  70: sample r5.xyzw, v4.zwzz, t9.xyzw, s7
  71: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  72: dp3 r4.z, r5.xyzx, r5.xyzx
  73: rsq r4.z, r4.z
  74: mul r5.xyz, r4.zzzz, r5.xyzx
  75: mul r7.xyz, r5.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  76: mad r7.xyz, r5.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r7.xyzx
  77: dp2 r4.z, r7.xzxx, r7.xzxx
  78: rsq r4.z, r4.z
  79: mul r7.xyz, r4.zzzz, r7.xyzx
  80: mul r8.xyz, r5.zxyz, r7.yzxy
  81: mad r8.xyz, r7.zxyz, r5.yzxy, -r8.xyzx
  82: dp3 r4.z, r8.xyzx, r8.xyzx
  83: rsq r4.z, r4.z
  84: mul r8.xyz, r4.zzzz, r8.xyzx
  85: mul r4.yzw, r4.yyyy, r8.xxyz
  86: mad r4.xyz, r4.xxxx, r7.xyzx, r4.yzwy
  87: mad r4.xyz, r2.wwww, r5.xyzx, r4.xyzx
  88: dp4 r2.w, r3.xyzw, cb0[13].xyzw
  89: eq r3.x, cb4[0].x, l(1.000000)
  90: if_nz r3.x
  91:   eq r3.y, cb4[0].y, l(1.000000)
  92:   mul r5.xyz, v2.wwww, cb4[2].xyzx
  93:   mad r5.xyz, cb4[1].xyzx, v1.wwww, r5.xyzx
  94:   mad r5.xyz, cb4[3].xyzx, v3.wwww, r5.xyzx
  95:   add r5.xyz, r5.xyzx, cb4[4].xyzx
  96:   movc r3.yzw, r3.yyyy, r5.xxyz, r0.xxyz
  97:   add r3.yzw, r3.yyzw, -cb4[6].xxyz
  98:   mul r5.yzw, r3.yyzw, cb4[5].xxyz
  99:   mad r3.y, r5.y, l(0.250000), l(0.750000)
 100:   mad r3.z, cb4[0].z, l(0.500000), l(0.750000)
 101:   max r5.x, r3.z, r3.y
 102:   sample r5.xyzw, r5.xzwx, t12.xyzw, s1
 103: else 
 104:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 105: endif 
 106: dp4_sat r3.y, r5.xyzw, cb2[46].xyzw
 107: dp3 r5.x, v1.xyzx, r4.xyzx
 108: dp3 r5.y, v2.xyzx, r4.xyzx
 109: dp3 r5.z, v3.xyzx, r4.xyzx
 110: dp3 r3.z, r5.xyzx, r5.xyzx
 111: rsq r3.z, r3.z
 112: mul r4.xyz, r3.zzzz, r5.xyzx
 113: add r3.z, -r6.w, l(1.000000)
 114: dp3 r3.w, -r2.xyzx, r4.xyzx
 115: add r3.w, r3.w, r3.w
 116: mad r5.xyz, r4.xyzx, -r3.wwww, -r2.xyzx
 117: mul r7.xyz, r3.yyyy, cb0[2].xyzx
 118: if_nz r3.x
 119:   eq r3.x, cb4[0].y, l(1.000000)
 120:   mul r8.xyz, v2.wwww, cb4[2].xyzx
 121:   mad r8.xyz, cb4[1].xyzx, v1.wwww, r8.xyzx
 122:   mad r8.xyz, cb4[3].xyzx, v3.wwww, r8.xyzx
 123:   add r8.xyz, r8.xyzx, cb4[4].xyzx
 124:   movc r3.xyw, r3.xxxx, r8.xyxz, r0.xyxz
 125:   add r3.xyw, r3.xyxw, -cb4[6].xyxz
 126:   mul r8.yzw, r3.xxyw, cb4[5].xxyz
 127:   mul r3.x, r8.y, l(0.250000)
 128:   mul r3.y, cb4[0].z, l(0.500000)
 129:   mad r3.w, -cb4[0].z, l(0.500000), l(0.250000)
 130:   max r3.x, r3.y, r3.x
 131:   min r8.x, r3.w, r3.x
 132:   sample r9.xyzw, r8.xzwx, t12.xyzw, s1
 133:   add r3.xyw, r8.xzxw, l(0.250000, 0.000000, 0.000000, 0.000000)
 134:   sample r10.xyzw, r3.xywx, t12.xyzw, s1
 135:   add r3.xyw, r8.xzxw, l(0.500000, 0.000000, 0.000000, 0.000000)
 136:   sample r8.xyzw, r3.xywx, t12.xyzw, s1
 137:   mov r4.w, l(1.000000)
 138:   dp4 r9.x, r9.xyzw, r4.xyzw
 139:   dp4 r9.y, r10.xyzw, r4.xyzw
 140:   dp4 r9.z, r8.xyzw, r4.xyzw
 141: else 
 142:   mov r4.w, l(1.000000)
 143:   dp4 r9.x, cb2[39].xyzw, r4.xyzw
 144:   dp4 r9.y, cb2[40].xyzw, r4.xyzw
 145:   dp4 r9.z, cb2[41].xyzw, r4.xyzw
 146: endif 
 147: add r3.xyw, r9.xyxz, v5.xyxz
 148: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
 149: log r3.xyw, r3.xyxw
 150: mul r3.xyw, r3.xyxw, l(0.416667, 0.416667, 0.000000, 0.416667)
 151: exp r3.xyw, r3.xyxw
 152: mad r3.xyw, r3.xyxw, l(1.055000, 1.055000, 0.000000, 1.055000), l(-0.055000, -0.055000, 0.000000, -0.055000)
 153: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
 154: lt r4.w, l(0.000000), cb3[2].w
 155: if_nz r4.w
 156:   dp3 r4.w, r5.xyzx, r5.xyzx
 157:   rsq r4.w, r4.w
 158:   mul r8.xyz, r4.wwww, r5.xyzx
 159:   add r9.xyz, -r0.xyzx, cb3[0].xyzx
 160:   div r9.xyz, r9.xyzx, r8.xyzx
 161:   add r10.xyz, -r0.xyzx, cb3[1].xyzx
 162:   div r10.xyz, r10.xyzx, r8.xyzx
 163:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
 164:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
 165:   min r4.w, r9.y, r9.x
 166:   min r4.w, r9.z, r4.w
 167:   add r9.xyz, r0.xyzx, -cb3[2].xyzx
 168:   mad r8.xyz, r8.xyzx, r4.wwww, r9.xyzx
 169: else 
 170:   mov r8.xyz, r5.xyzx
 171: endif 
 172: mad r4.w, -r3.z, l(0.700000), l(1.700000)
 173: mul r4.w, r3.z, r4.w
 174: mul r4.w, r4.w, l(6.000000)
 175: sample_l r8.xyzw, r8.xyzx, t10.xyzw, s0, r4.w
 176: add r5.w, r8.w, l(-1.000000)
 177: mad r5.w, cb3[3].w, r5.w, l(1.000000)
 178: mul r5.w, r5.w, cb3[3].x
 179: mul r9.xyz, r8.xyzx, r5.wwww
 180: lt r7.w, cb3[1].w, l(0.999990)
 181: if_nz r7.w
 182:   lt r7.w, l(0.000000), cb3[6].w
 183:   if_nz r7.w
 184:     dp3 r7.w, r5.xyzx, r5.xyzx
 185:     rsq r7.w, r7.w
 186:     mul r10.xyz, r5.xyzx, r7.wwww
 187:     add r11.xyz, -r0.xyzx, cb3[4].xyzx
 188:     div r11.xyz, r11.xyzx, r10.xyzx
 189:     add r12.xyz, -r0.xyzx, cb3[5].xyzx
 190:     div r12.xyz, r12.xyzx, r10.xyzx
 191:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 192:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 193:     min r7.w, r11.y, r11.x
 194:     min r7.w, r11.z, r7.w
 195:     add r0.xyz, r0.xyzx, -cb3[6].xyzx
 196:     mad r5.xyz, r10.xyzx, r7.wwww, r0.xyzx
 197:   endif 
 198:   sample_l r10.xyzw, r5.xyzx, t11.xyzw, s0, r4.w
 199:   add r0.x, r10.w, l(-1.000000)
 200:   mad r0.x, cb3[7].w, r0.x, l(1.000000)
 201:   mul r0.x, r0.x, cb3[7].x
 202:   mul r0.xyz, r10.xyzx, r0.xxxx
 203:   mad r5.xyz, r5.wwww, r8.xyzx, -r0.xyzx
 204:   mad r9.xyz, cb3[1].wwww, r5.xyzx, r0.xyzx
 205: endif 
 206: add r0.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 207: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 208: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 209: mul r5.xyz, r2.wwww, r6.xyzx
 210: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 211: dp3 r0.w, r1.xyzx, r1.xyzx
 212: max r0.w, r0.w, l(0.001000)
 213: rsq r0.w, r0.w
 214: mul r1.xyz, r0.wwww, r1.xyzx
 215: dp3 r0.w, r4.xyzx, r2.xyzx
 216: dp3_sat r2.x, r4.xyzx, cb2[0].xyzx
 217: dp3_sat r2.y, r4.xyzx, r1.xyzx
 218: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 219: mul r1.y, r1.x, r1.x
 220: dp2 r1.y, r1.yyyy, r3.zzzz
 221: add r1.y, r1.y, l(-0.500000)
 222: add r1.z, -r2.x, l(1.000000)
 223: mul r2.z, r1.z, r1.z
 224: mul r2.z, r2.z, r2.z
 225: mul r1.z, r1.z, r2.z
 226: mad r1.z, r1.y, r1.z, l(1.000000)
 227: add r2.z, -|r0.w|, l(1.000000)
 228: mul r4.x, r2.z, r2.z
 229: mul r4.x, r4.x, r4.x
 230: mul r2.z, r2.z, r4.x
 231: mad r1.y, r1.y, r2.z, l(1.000000)
 232: mul r1.y, r1.y, r1.z
 233: mul r1.y, r2.x, r1.y
 234: mul r1.z, r3.z, r3.z
 235: max r1.z, r1.z, l(0.002000)
 236: add r4.x, -r1.z, l(1.000000)
 237: mad r4.y, |r0.w|, r4.x, r1.z
 238: mad r4.x, r2.x, r4.x, r1.z
 239: mul r0.w, |r0.w|, r4.x
 240: mad r0.w, r2.x, r4.y, r0.w
 241: add r0.w, r0.w, l(0.000010)
 242: div r0.w, l(0.500000), r0.w
 243: mul r4.x, r1.z, r1.z
 244: mad r4.y, r2.y, r4.x, -r2.y
 245: mad r2.y, r4.y, r2.y, l(1.000000)
 246: mul r4.x, r4.x, l(0.318310)
 247: mad r2.y, r2.y, r2.y, l(0.000000)
 248: div r2.y, r4.x, r2.y
 249: mul r0.w, r0.w, r2.y
 250: mul r0.w, r0.w, l(3.141593)
 251: max r0.w, r0.w, l(0.000100)
 252: sqrt r0.w, r0.w
 253: mul r0.w, r2.x, r0.w
 254: mul r1.z, r1.z, l(0.280000)
 255: mad r1.z, -r1.z, r3.z, l(1.000000)
 256: dp3 r2.x, r0.xyzx, r0.xyzx
 257: ne r2.x, r2.x, l(0.000000)
 258: and r2.x, r2.x, l(0x3f800000)
 259: mul r0.w, r0.w, r2.x
 260: add r2.x, -r2.w, r6.w
 261: add_sat r2.x, r2.x, l(1.000000)
 262: mad r3.xyz, r7.xyzx, r1.yyyy, r3.xywx
 263: mul r4.xyz, r7.xyzx, r0.wwww
 264: add r0.w, -r1.x, l(1.000000)
 265: mul r1.x, r0.w, r0.w
 266: mul r1.x, r1.x, r1.x
 267: mul r0.w, r0.w, r1.x
 268: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 269: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 270: mul r4.xyz, r4.xyzx, r6.xyzx
 271: mad r3.xyz, r5.xyzx, r3.xyzx, r4.xyzx
 272: mul r1.xyz, r9.xyzx, r1.zzzz
 273: add r2.xyw, -r0.xyxz, r2.xxxx
 274: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 275: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 276: mul o0.xyz, r1.wwww, r0.xyzx
 277: mov o0.w, l(1.000000)
 278: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON SHADOWS_SCREEN 
Local Keywords: _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 220 math, 13 temp registers, 12 textures, 6 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_Normal0" to slot 5 sampler slot 9
Set 2D Texture "_Normal1" to slot 6 sampler slot 10
Set 2D Texture "_Normal2" to slot 7 sampler slot 11
Set 2D Texture "_Normal3" to slot 8 sampler slot 12
Set 2D Texture "_TerrainNormalmapTexture" to slot 9 sampler slot 8
Set 2D Texture "_ShadowMapTexture" to slot 10 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 11 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 12 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 13 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 192
  Float _NormalScale1 at 196
  Float _NormalScale2 at 200
  Float _NormalScale3 at 204
  Float _Metallic0 at 208
  Float _Metallic1 at 212
  Float _Metallic2 at 216
  Float _Metallic3 at 220
  Float _Smoothness0 at 224
  Float _Smoothness1 at 228
  Float _Smoothness2 at 232
  Float _Smoothness3 at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xy w
// TEXCOORD                 6   xyzw        6     NONE   float       
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texturecube (float,float,float,float) t11
      dcl_resource_texturecube (float,float,float,float) t12
      dcl_resource_texture3d (float,float,float,float) t13
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r3.xy, r3.xyxx, cb0[5].xyxx
  10: sample r3.xyzw, r3.xyxx, t0.xyzw, s3
  11: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r2.w, r1.w, l(0.001000)
  13: div r3.xyzw, r3.xyzw, r2.wwww
  14: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r6.xyzw, r4.xyxx, t1.xyzw, s4
  19: mul r6.xyzw, r3.xxxx, r6.xyzw
  20: mul r6.w, r6.w, cb0[14].x
  21: sample r7.xyzw, r4.zwzz, t2.xyzw, s5
  22: mul r7.xyzw, r3.yyyy, r7.xyzw
  23: mul r7.w, r7.w, cb0[14].y
  24: add r6.xyzw, r6.xyzw, r7.xyzw
  25: sample r7.xyzw, r5.xyxx, t3.xyzw, s6
  26: mul r7.xyzw, r3.zzzz, r7.xyzw
  27: mul r7.w, r7.w, cb0[14].z
  28: add r6.xyzw, r6.xyzw, r7.xyzw
  29: sample r7.xyzw, r5.zwzz, t4.xyzw, s7
  30: mul r7.xyzw, r3.wwww, r7.xyzw
  31: mul r7.w, r7.w, cb0[14].w
  32: add r6.xyzw, r6.xyzw, r7.xyzw
  33: sample r7.xyzw, r4.xyxx, t5.xyzw, s9
  34: mul r7.x, r7.w, r7.x
  35: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  36: mul r7.xy, r4.xyxx, cb0[12].xxxx
  37: dp2 r2.w, r7.xyxx, r7.xyxx
  38: min r2.w, r2.w, l(1.000000)
  39: add r2.w, -r2.w, l(1.000000)
  40: sqrt r7.z, r2.w
  41: sample r4.xyzw, r4.zwzz, t6.xyzw, s10
  42: mul r4.x, r4.w, r4.x
  43: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  44: mul r4.xy, r4.xyxx, cb0[12].yyyy
  45: dp2 r2.w, r4.xyxx, r4.xyxx
  46: min r2.w, r2.w, l(1.000000)
  47: add r2.w, -r2.w, l(1.000000)
  48: sqrt r4.z, r2.w
  49: mul r4.xyz, r3.yyyy, r4.xyzx
  50: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  51: sample r7.xyzw, r5.xyxx, t7.xyzw, s11
  52: mul r7.x, r7.w, r7.x
  53: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  54: mul r7.xy, r5.xyxx, cb0[12].zzzz
  55: dp2 r2.w, r7.xyxx, r7.xyxx
  56: min r2.w, r2.w, l(1.000000)
  57: add r2.w, -r2.w, l(1.000000)
  58: sqrt r7.z, r2.w
  59: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  60: sample r5.xyzw, r5.zwzz, t8.xyzw, s12
  61: mul r5.x, r5.w, r5.x
  62: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  63: mul r5.xy, r5.xyxx, cb0[12].wwww
  64: dp2 r2.w, r5.xyxx, r5.xyxx
  65: min r2.w, r2.w, l(1.000000)
  66: add r2.w, -r2.w, l(1.000000)
  67: sqrt r5.z, r2.w
  68: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  69: add r2.w, r4.z, l(0.000010)
  70: sample r5.xyzw, v4.zwzz, t9.xyzw, s8
  71: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  72: dp3 r4.z, r5.xyzx, r5.xyzx
  73: rsq r4.z, r4.z
  74: mul r5.xyz, r4.zzzz, r5.xyzx
  75: mul r7.xyz, r5.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  76: mad r7.xyz, r5.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r7.xyzx
  77: dp2 r4.z, r7.xzxx, r7.xzxx
  78: rsq r4.z, r4.z
  79: mul r7.xyz, r4.zzzz, r7.xyzx
  80: mul r8.xyz, r5.zxyz, r7.yzxy
  81: mad r8.xyz, r7.zxyz, r5.yzxy, -r8.xyzx
  82: dp3 r4.z, r8.xyzx, r8.xyzx
  83: rsq r4.z, r4.z
  84: mul r8.xyz, r4.zzzz, r8.xyzx
  85: mul r4.yzw, r4.yyyy, r8.xxyz
  86: mad r4.xyz, r4.xxxx, r7.xyzx, r4.yzwy
  87: mad r4.xyz, r2.wwww, r5.xyzx, r4.xyzx
  88: dp4 r2.w, r3.xyzw, cb0[13].xyzw
  89: mov r3.x, cb4[9].z
  90: mov r3.y, cb4[10].z
  91: mov r3.z, cb4[11].z
  92: dp3 r3.x, r1.xyzx, r3.xyzx
  93: add r3.yzw, r0.xxyz, -cb3[25].xxyz
  94: dp3 r3.y, r3.yzwy, r3.yzwy
  95: sqrt r3.y, r3.y
  96: add r3.y, -r3.x, r3.y
  97: mad r3.x, cb3[25].w, r3.y, r3.x
  98: mad_sat r3.x, r3.x, cb3[24].z, cb3[24].w
  99: eq r3.y, cb6[0].x, l(1.000000)
 100: if_nz r3.y
 101:   eq r3.y, cb6[0].y, l(1.000000)
 102:   mul r5.xyz, v2.wwww, cb6[2].xyzx
 103:   mad r5.xyz, cb6[1].xyzx, v1.wwww, r5.xyzx
 104:   mad r5.xyz, cb6[3].xyzx, v3.wwww, r5.xyzx
 105:   add r5.xyz, r5.xyzx, cb6[4].xyzx
 106:   movc r3.yzw, r3.yyyy, r5.xxyz, r0.xxyz
 107:   add r3.yzw, r3.yyzw, -cb6[6].xxyz
 108:   mul r5.yzw, r3.yyzw, cb6[5].xxyz
 109:   mad r3.y, r5.y, l(0.250000), l(0.750000)
 110:   mad r3.z, cb6[0].z, l(0.500000), l(0.750000)
 111:   max r5.x, r3.z, r3.y
 112:   sample r5.xyzw, r5.xzwx, t13.xyzw, s1
 113: else 
 114:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 115: endif 
 116: dp4_sat r3.y, r5.xyzw, cb2[46].xyzw
 117: div r3.zw, v5.xxxy, v5.wwww
 118: sample r5.xyzw, r3.zwzz, t10.xyzw, s2
 119: add r3.y, r3.y, -r5.x
 120: mad r3.x, r3.x, r3.y, r5.x
 121: dp3 r5.x, v1.xyzx, r4.xyzx
 122: dp3 r5.y, v2.xyzx, r4.xyzx
 123: dp3 r5.z, v3.xyzx, r4.xyzx
 124: dp3 r3.y, r5.xyzx, r5.xyzx
 125: rsq r3.y, r3.y
 126: mul r3.yzw, r3.yyyy, r5.xxyz
 127: add r4.x, -r6.w, l(1.000000)
 128: dp3 r4.y, -r2.xyzx, r3.yzwy
 129: add r4.y, r4.y, r4.y
 130: mad r4.yzw, r3.yyzw, -r4.yyyy, -r2.xxyz
 131: mul r5.xyz, r3.xxxx, cb0[2].xyzx
 132: lt r3.x, l(0.000000), cb5[2].w
 133: if_nz r3.x
 134:   dp3 r3.x, r4.yzwy, r4.yzwy
 135:   rsq r3.x, r3.x
 136:   mul r7.xyz, r3.xxxx, r4.yzwy
 137:   add r8.xyz, -r0.xyzx, cb5[0].xyzx
 138:   div r8.xyz, r8.xyzx, r7.xyzx
 139:   add r9.xyz, -r0.xyzx, cb5[1].xyzx
 140:   div r9.xyz, r9.xyzx, r7.xyzx
 141:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
 142:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
 143:   min r3.x, r8.y, r8.x
 144:   min r3.x, r8.z, r3.x
 145:   add r8.xyz, r0.xyzx, -cb5[2].xyzx
 146:   mad r7.xyz, r7.xyzx, r3.xxxx, r8.xyzx
 147: else 
 148:   mov r7.xyz, r4.yzwy
 149: endif 
 150: mad r3.x, -r4.x, l(0.700000), l(1.700000)
 151: mul r3.x, r3.x, r4.x
 152: mul r3.x, r3.x, l(6.000000)
 153: sample_l r7.xyzw, r7.xyzx, t11.xyzw, s0, r3.x
 154: add r5.w, r7.w, l(-1.000000)
 155: mad r5.w, cb5[3].w, r5.w, l(1.000000)
 156: mul r5.w, r5.w, cb5[3].x
 157: mul r8.xyz, r7.xyzx, r5.wwww
 158: lt r7.w, cb5[1].w, l(0.999990)
 159: if_nz r7.w
 160:   lt r7.w, l(0.000000), cb5[6].w
 161:   if_nz r7.w
 162:     dp3 r7.w, r4.yzwy, r4.yzwy
 163:     rsq r7.w, r7.w
 164:     mul r9.xyz, r4.yzwy, r7.wwww
 165:     add r10.xyz, -r0.xyzx, cb5[4].xyzx
 166:     div r10.xyz, r10.xyzx, r9.xyzx
 167:     add r11.xyz, -r0.xyzx, cb5[5].xyzx
 168:     div r11.xyz, r11.xyzx, r9.xyzx
 169:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 170:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 171:     min r7.w, r10.y, r10.x
 172:     min r7.w, r10.z, r7.w
 173:     add r0.xyz, r0.xyzx, -cb5[6].xyzx
 174:     mad r4.yzw, r9.xxyz, r7.wwww, r0.xxyz
 175:   endif 
 176:   sample_l r9.xyzw, r4.yzwy, t12.xyzw, s0, r3.x
 177:   add r0.x, r9.w, l(-1.000000)
 178:   mad r0.x, cb5[7].w, r0.x, l(1.000000)
 179:   mul r0.x, r0.x, cb5[7].x
 180:   mul r0.xyz, r9.xyzx, r0.xxxx
 181:   mad r4.yzw, r5.wwww, r7.xxyz, -r0.xxyz
 182:   mad r8.xyz, cb5[1].wwww, r4.yzwy, r0.xyzx
 183: endif 
 184: add r0.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 185: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 186: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 187: mul r4.yzw, r2.wwww, r6.xxyz
 188: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 189: dp3 r0.w, r1.xyzx, r1.xyzx
 190: max r0.w, r0.w, l(0.001000)
 191: rsq r0.w, r0.w
 192: mul r1.xyz, r0.wwww, r1.xyzx
 193: dp3 r0.w, r3.yzwy, r2.xyzx
 194: dp3_sat r2.x, r3.yzwy, cb2[0].xyzx
 195: dp3_sat r2.y, r3.yzwy, r1.xyzx
 196: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 197: mul r1.y, r1.x, r1.x
 198: dp2 r1.y, r1.yyyy, r4.xxxx
 199: add r1.y, r1.y, l(-0.500000)
 200: add r1.z, -r2.x, l(1.000000)
 201: mul r2.z, r1.z, r1.z
 202: mul r2.z, r2.z, r2.z
 203: mul r1.z, r1.z, r2.z
 204: mad r1.z, r1.y, r1.z, l(1.000000)
 205: add r2.z, -|r0.w|, l(1.000000)
 206: mul r3.x, r2.z, r2.z
 207: mul r3.x, r3.x, r3.x
 208: mul r2.z, r2.z, r3.x
 209: mad r1.y, r1.y, r2.z, l(1.000000)
 210: mul r1.y, r1.y, r1.z
 211: mul r1.y, r2.x, r1.y
 212: mul r1.z, r4.x, r4.x
 213: max r1.z, r1.z, l(0.002000)
 214: add r3.x, -r1.z, l(1.000000)
 215: mad r3.y, |r0.w|, r3.x, r1.z
 216: mad r3.x, r2.x, r3.x, r1.z
 217: mul r0.w, |r0.w|, r3.x
 218: mad r0.w, r2.x, r3.y, r0.w
 219: add r0.w, r0.w, l(0.000010)
 220: div r0.w, l(0.500000), r0.w
 221: mul r3.x, r1.z, r1.z
 222: mad r3.y, r2.y, r3.x, -r2.y
 223: mad r2.y, r3.y, r2.y, l(1.000000)
 224: mul r3.x, r3.x, l(0.318310)
 225: mad r2.y, r2.y, r2.y, l(0.000000)
 226: div r2.y, r3.x, r2.y
 227: mul r0.w, r0.w, r2.y
 228: mul r0.w, r0.w, l(3.141593)
 229: max r0.w, r0.w, l(0.000100)
 230: sqrt r0.w, r0.w
 231: mul r0.w, r2.x, r0.w
 232: mul r1.z, r1.z, l(0.280000)
 233: mad r1.z, -r1.z, r4.x, l(1.000000)
 234: dp3 r2.x, r0.xyzx, r0.xyzx
 235: ne r2.x, r2.x, l(0.000000)
 236: and r2.x, r2.x, l(0x3f800000)
 237: mul r0.w, r0.w, r2.x
 238: add r2.x, -r2.w, r6.w
 239: add_sat r2.x, r2.x, l(1.000000)
 240: mul r3.xyz, r1.yyyy, r5.xyzx
 241: mul r5.xyz, r5.xyzx, r0.wwww
 242: add r0.w, -r1.x, l(1.000000)
 243: mul r1.x, r0.w, r0.w
 244: mul r1.x, r1.x, r1.x
 245: mul r0.w, r0.w, r1.x
 246: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 247: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 248: mul r5.xyz, r5.xyzx, r6.xyzx
 249: mad r3.xyz, r4.yzwy, r3.xyzx, r5.xyzx
 250: mul r1.xyz, r8.xyzx, r1.zzzz
 251: add r2.xyw, -r0.xyxz, r2.xxxx
 252: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 253: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 254: mul o0.xyz, r1.wwww, r0.xyzx
 255: mov o0.w, l(1.000000)
 256: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 247 math, 14 temp registers, 15 textures, 8 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_Normal0" to slot 5 sampler slot 9
Set 2D Texture "_Normal1" to slot 6 sampler slot 10
Set 2D Texture "_Normal2" to slot 7 sampler slot 11
Set 2D Texture "_Normal3" to slot 8 sampler slot 12
Set 2D Texture "_TerrainNormalmapTexture" to slot 9 sampler slot 8
Set 2D Texture "_ShadowMapTexture" to slot 10 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 11 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 12 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 13 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 192
  Float _NormalScale1 at 196
  Float _NormalScale2 at 200
  Float _NormalScale3 at 204
  Float _Metallic0 at 208
  Float _Metallic1 at 212
  Float _Metallic2 at 216
  Float _Metallic3 at 220
  Float _Smoothness0 at 224
  Float _Smoothness1 at 228
  Float _Smoothness2 at 232
  Float _Smoothness3 at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texturecube (float,float,float,float) t11
      dcl_resource_texturecube (float,float,float,float) t12
      dcl_resource_texture3d (float,float,float,float) t13
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r3.xy, r3.xyxx, cb0[5].xyxx
  10: sample r3.xyzw, r3.xyxx, t0.xyzw, s3
  11: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r2.w, r1.w, l(0.001000)
  13: div r3.xyzw, r3.xyzw, r2.wwww
  14: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r6.xyzw, r4.xyxx, t1.xyzw, s4
  19: mul r6.xyzw, r3.xxxx, r6.xyzw
  20: mul r6.w, r6.w, cb0[14].x
  21: sample r7.xyzw, r4.zwzz, t2.xyzw, s5
  22: mul r7.xyzw, r3.yyyy, r7.xyzw
  23: mul r7.w, r7.w, cb0[14].y
  24: add r6.xyzw, r6.xyzw, r7.xyzw
  25: sample r7.xyzw, r5.xyxx, t3.xyzw, s6
  26: mul r7.xyzw, r3.zzzz, r7.xyzw
  27: mul r7.w, r7.w, cb0[14].z
  28: add r6.xyzw, r6.xyzw, r7.xyzw
  29: sample r7.xyzw, r5.zwzz, t4.xyzw, s7
  30: mul r7.xyzw, r3.wwww, r7.xyzw
  31: mul r7.w, r7.w, cb0[14].w
  32: add r6.xyzw, r6.xyzw, r7.xyzw
  33: sample r7.xyzw, r4.xyxx, t5.xyzw, s9
  34: mul r7.x, r7.w, r7.x
  35: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  36: mul r7.xy, r4.xyxx, cb0[12].xxxx
  37: dp2 r2.w, r7.xyxx, r7.xyxx
  38: min r2.w, r2.w, l(1.000000)
  39: add r2.w, -r2.w, l(1.000000)
  40: sqrt r7.z, r2.w
  41: sample r4.xyzw, r4.zwzz, t6.xyzw, s10
  42: mul r4.x, r4.w, r4.x
  43: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  44: mul r4.xy, r4.xyxx, cb0[12].yyyy
  45: dp2 r2.w, r4.xyxx, r4.xyxx
  46: min r2.w, r2.w, l(1.000000)
  47: add r2.w, -r2.w, l(1.000000)
  48: sqrt r4.z, r2.w
  49: mul r4.xyz, r3.yyyy, r4.xyzx
  50: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  51: sample r7.xyzw, r5.xyxx, t7.xyzw, s11
  52: mul r7.x, r7.w, r7.x
  53: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  54: mul r7.xy, r5.xyxx, cb0[12].zzzz
  55: dp2 r2.w, r7.xyxx, r7.xyxx
  56: min r2.w, r2.w, l(1.000000)
  57: add r2.w, -r2.w, l(1.000000)
  58: sqrt r7.z, r2.w
  59: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  60: sample r5.xyzw, r5.zwzz, t8.xyzw, s12
  61: mul r5.x, r5.w, r5.x
  62: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  63: mul r5.xy, r5.xyxx, cb0[12].wwww
  64: dp2 r2.w, r5.xyxx, r5.xyxx
  65: min r2.w, r2.w, l(1.000000)
  66: add r2.w, -r2.w, l(1.000000)
  67: sqrt r5.z, r2.w
  68: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  69: add r2.w, r4.z, l(0.000010)
  70: sample r5.xyzw, v4.zwzz, t9.xyzw, s8
  71: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  72: dp3 r4.z, r5.xyzx, r5.xyzx
  73: rsq r4.z, r4.z
  74: mul r5.xyz, r4.zzzz, r5.xyzx
  75: mul r7.xyz, r5.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  76: mad r7.xyz, r5.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r7.xyzx
  77: dp2 r4.z, r7.xzxx, r7.xzxx
  78: rsq r4.z, r4.z
  79: mul r7.xyz, r4.zzzz, r7.xyzx
  80: mul r8.xyz, r5.zxyz, r7.yzxy
  81: mad r8.xyz, r7.zxyz, r5.yzxy, -r8.xyzx
  82: dp3 r4.z, r8.xyzx, r8.xyzx
  83: rsq r4.z, r4.z
  84: mul r8.xyz, r4.zzzz, r8.xyzx
  85: mul r4.yzw, r4.yyyy, r8.xxyz
  86: mad r4.xyz, r4.xxxx, r7.xyzx, r4.yzwy
  87: mad r4.xyz, r2.wwww, r5.xyzx, r4.xyzx
  88: dp4 r2.w, r3.xyzw, cb0[13].xyzw
  89: mov r3.x, cb4[9].z
  90: mov r3.y, cb4[10].z
  91: mov r3.z, cb4[11].z
  92: dp3 r3.x, r1.xyzx, r3.xyzx
  93: add r3.yzw, r0.xxyz, -cb3[25].xxyz
  94: dp3 r3.y, r3.yzwy, r3.yzwy
  95: sqrt r3.y, r3.y
  96: add r3.y, -r3.x, r3.y
  97: mad r3.x, cb3[25].w, r3.y, r3.x
  98: mad_sat r3.x, r3.x, cb3[24].z, cb3[24].w
  99: eq r3.y, cb6[0].x, l(1.000000)
 100: if_nz r3.y
 101:   eq r3.z, cb6[0].y, l(1.000000)
 102:   mul r5.xyz, v2.wwww, cb6[2].xyzx
 103:   mad r5.xyz, cb6[1].xyzx, v1.wwww, r5.xyzx
 104:   mad r5.xyz, cb6[3].xyzx, v3.wwww, r5.xyzx
 105:   add r5.xyz, r5.xyzx, cb6[4].xyzx
 106:   movc r5.xyz, r3.zzzz, r5.xyzx, r0.xyzx
 107:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
 108:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
 109:   mad r3.z, r5.y, l(0.250000), l(0.750000)
 110:   mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
 111:   max r5.x, r3.w, r3.z
 112:   sample r5.xyzw, r5.xzwx, t13.xyzw, s1
 113: else 
 114:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 115: endif 
 116: dp4_sat r3.z, r5.xyzw, cb2[46].xyzw
 117: div r5.xy, v6.xyxx, v6.wwww
 118: sample r5.xyzw, r5.xyxx, t10.xyzw, s2
 119: add r3.z, r3.z, -r5.x
 120: mad r3.x, r3.x, r3.z, r5.x
 121: dp3 r5.x, v1.xyzx, r4.xyzx
 122: dp3 r5.y, v2.xyzx, r4.xyzx
 123: dp3 r5.z, v3.xyzx, r4.xyzx
 124: dp3 r3.z, r5.xyzx, r5.xyzx
 125: rsq r3.z, r3.z
 126: mul r4.xyz, r3.zzzz, r5.xyzx
 127: add r3.z, -r6.w, l(1.000000)
 128: dp3 r3.w, -r2.xyzx, r4.xyzx
 129: add r3.w, r3.w, r3.w
 130: mad r5.xyz, r4.xyzx, -r3.wwww, -r2.xyzx
 131: mul r7.xyz, r3.xxxx, cb0[2].xyzx
 132: if_nz r3.y
 133:   eq r3.x, cb6[0].y, l(1.000000)
 134:   mul r8.xyz, v2.wwww, cb6[2].xyzx
 135:   mad r8.xyz, cb6[1].xyzx, v1.wwww, r8.xyzx
 136:   mad r8.xyz, cb6[3].xyzx, v3.wwww, r8.xyzx
 137:   add r8.xyz, r8.xyzx, cb6[4].xyzx
 138:   movc r3.xyw, r3.xxxx, r8.xyxz, r0.xyxz
 139:   add r3.xyw, r3.xyxw, -cb6[6].xyxz
 140:   mul r8.yzw, r3.xxyw, cb6[5].xxyz
 141:   mul r3.x, r8.y, l(0.250000)
 142:   mul r3.y, cb6[0].z, l(0.500000)
 143:   mad r3.w, -cb6[0].z, l(0.500000), l(0.250000)
 144:   max r3.x, r3.y, r3.x
 145:   min r8.x, r3.w, r3.x
 146:   sample r9.xyzw, r8.xzwx, t13.xyzw, s1
 147:   add r3.xyw, r8.xzxw, l(0.250000, 0.000000, 0.000000, 0.000000)
 148:   sample r10.xyzw, r3.xywx, t13.xyzw, s1
 149:   add r3.xyw, r8.xzxw, l(0.500000, 0.000000, 0.000000, 0.000000)
 150:   sample r8.xyzw, r3.xywx, t13.xyzw, s1
 151:   mov r4.w, l(1.000000)
 152:   dp4 r9.x, r9.xyzw, r4.xyzw
 153:   dp4 r9.y, r10.xyzw, r4.xyzw
 154:   dp4 r9.z, r8.xyzw, r4.xyzw
 155: else 
 156:   mov r4.w, l(1.000000)
 157:   dp4 r9.x, cb2[39].xyzw, r4.xyzw
 158:   dp4 r9.y, cb2[40].xyzw, r4.xyzw
 159:   dp4 r9.z, cb2[41].xyzw, r4.xyzw
 160: endif 
 161: add r3.xyw, r9.xyxz, v5.xyxz
 162: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
 163: log r3.xyw, r3.xyxw
 164: mul r3.xyw, r3.xyxw, l(0.416667, 0.416667, 0.000000, 0.416667)
 165: exp r3.xyw, r3.xyxw
 166: mad r3.xyw, r3.xyxw, l(1.055000, 1.055000, 0.000000, 1.055000), l(-0.055000, -0.055000, 0.000000, -0.055000)
 167: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
 168: lt r4.w, l(0.000000), cb5[2].w
 169: if_nz r4.w
 170:   dp3 r4.w, r5.xyzx, r5.xyzx
 171:   rsq r4.w, r4.w
 172:   mul r8.xyz, r4.wwww, r5.xyzx
 173:   add r9.xyz, -r0.xyzx, cb5[0].xyzx
 174:   div r9.xyz, r9.xyzx, r8.xyzx
 175:   add r10.xyz, -r0.xyzx, cb5[1].xyzx
 176:   div r10.xyz, r10.xyzx, r8.xyzx
 177:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
 178:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
 179:   min r4.w, r9.y, r9.x
 180:   min r4.w, r9.z, r4.w
 181:   add r9.xyz, r0.xyzx, -cb5[2].xyzx
 182:   mad r8.xyz, r8.xyzx, r4.wwww, r9.xyzx
 183: else 
 184:   mov r8.xyz, r5.xyzx
 185: endif 
 186: mad r4.w, -r3.z, l(0.700000), l(1.700000)
 187: mul r4.w, r3.z, r4.w
 188: mul r4.w, r4.w, l(6.000000)
 189: sample_l r8.xyzw, r8.xyzx, t11.xyzw, s0, r4.w
 190: add r5.w, r8.w, l(-1.000000)
 191: mad r5.w, cb5[3].w, r5.w, l(1.000000)
 192: mul r5.w, r5.w, cb5[3].x
 193: mul r9.xyz, r8.xyzx, r5.wwww
 194: lt r7.w, cb5[1].w, l(0.999990)
 195: if_nz r7.w
 196:   lt r7.w, l(0.000000), cb5[6].w
 197:   if_nz r7.w
 198:     dp3 r7.w, r5.xyzx, r5.xyzx
 199:     rsq r7.w, r7.w
 200:     mul r10.xyz, r5.xyzx, r7.wwww
 201:     add r11.xyz, -r0.xyzx, cb5[4].xyzx
 202:     div r11.xyz, r11.xyzx, r10.xyzx
 203:     add r12.xyz, -r0.xyzx, cb5[5].xyzx
 204:     div r12.xyz, r12.xyzx, r10.xyzx
 205:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 206:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 207:     min r7.w, r11.y, r11.x
 208:     min r7.w, r11.z, r7.w
 209:     add r0.xyz, r0.xyzx, -cb5[6].xyzx
 210:     mad r5.xyz, r10.xyzx, r7.wwww, r0.xyzx
 211:   endif 
 212:   sample_l r10.xyzw, r5.xyzx, t12.xyzw, s0, r4.w
 213:   add r0.x, r10.w, l(-1.000000)
 214:   mad r0.x, cb5[7].w, r0.x, l(1.000000)
 215:   mul r0.x, r0.x, cb5[7].x
 216:   mul r0.xyz, r10.xyzx, r0.xxxx
 217:   mad r5.xyz, r5.wwww, r8.xyzx, -r0.xyzx
 218:   mad r9.xyz, cb5[1].wwww, r5.xyzx, r0.xyzx
 219: endif 
 220: add r0.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 221: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 222: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 223: mul r5.xyz, r2.wwww, r6.xyzx
 224: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 225: dp3 r0.w, r1.xyzx, r1.xyzx
 226: max r0.w, r0.w, l(0.001000)
 227: rsq r0.w, r0.w
 228: mul r1.xyz, r0.wwww, r1.xyzx
 229: dp3 r0.w, r4.xyzx, r2.xyzx
 230: dp3_sat r2.x, r4.xyzx, cb2[0].xyzx
 231: dp3_sat r2.y, r4.xyzx, r1.xyzx
 232: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 233: mul r1.y, r1.x, r1.x
 234: dp2 r1.y, r1.yyyy, r3.zzzz
 235: add r1.y, r1.y, l(-0.500000)
 236: add r1.z, -r2.x, l(1.000000)
 237: mul r2.z, r1.z, r1.z
 238: mul r2.z, r2.z, r2.z
 239: mul r1.z, r1.z, r2.z
 240: mad r1.z, r1.y, r1.z, l(1.000000)
 241: add r2.z, -|r0.w|, l(1.000000)
 242: mul r4.x, r2.z, r2.z
 243: mul r4.x, r4.x, r4.x
 244: mul r2.z, r2.z, r4.x
 245: mad r1.y, r1.y, r2.z, l(1.000000)
 246: mul r1.y, r1.y, r1.z
 247: mul r1.y, r2.x, r1.y
 248: mul r1.z, r3.z, r3.z
 249: max r1.z, r1.z, l(0.002000)
 250: add r4.x, -r1.z, l(1.000000)
 251: mad r4.y, |r0.w|, r4.x, r1.z
 252: mad r4.x, r2.x, r4.x, r1.z
 253: mul r0.w, |r0.w|, r4.x
 254: mad r0.w, r2.x, r4.y, r0.w
 255: add r0.w, r0.w, l(0.000010)
 256: div r0.w, l(0.500000), r0.w
 257: mul r4.x, r1.z, r1.z
 258: mad r4.y, r2.y, r4.x, -r2.y
 259: mad r2.y, r4.y, r2.y, l(1.000000)
 260: mul r4.x, r4.x, l(0.318310)
 261: mad r2.y, r2.y, r2.y, l(0.000000)
 262: div r2.y, r4.x, r2.y
 263: mul r0.w, r0.w, r2.y
 264: mul r0.w, r0.w, l(3.141593)
 265: max r0.w, r0.w, l(0.000100)
 266: sqrt r0.w, r0.w
 267: mul r0.w, r2.x, r0.w
 268: mul r1.z, r1.z, l(0.280000)
 269: mad r1.z, -r1.z, r3.z, l(1.000000)
 270: dp3 r2.x, r0.xyzx, r0.xyzx
 271: ne r2.x, r2.x, l(0.000000)
 272: and r2.x, r2.x, l(0x3f800000)
 273: mul r0.w, r0.w, r2.x
 274: add r2.x, -r2.w, r6.w
 275: add_sat r2.x, r2.x, l(1.000000)
 276: mad r3.xyz, r7.xyzx, r1.yyyy, r3.xywx
 277: mul r4.xyz, r7.xyzx, r0.wwww
 278: add r0.w, -r1.x, l(1.000000)
 279: mul r1.x, r0.w, r0.w
 280: mul r1.x, r1.x, r1.x
 281: mul r0.w, r0.w, r1.x
 282: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 283: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 284: mul r4.xyz, r4.xyzx, r6.xyzx
 285: mad r3.xyz, r5.xyzx, r3.xyzx, r4.xyzx
 286: mul r1.xyz, r9.xyzx, r1.zzzz
 287: add r2.xyw, -r0.xyxz, r2.xxxx
 288: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 289: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 290: mul o0.xyz, r1.wwww, r0.xyzx
 291: mov o0.w, l(1.000000)
 292: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 165 math, 13 temp registers, 8 textures, 6 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 8
Set 2D Texture "_Control" to slot 1 sampler slot 2
Set 2D Texture "_Splat0" to slot 2 sampler slot 3
Set 2D Texture "_Splat1" to slot 3 sampler slot 4
Set 2D Texture "_Splat2" to slot 4 sampler slot 5
Set 2D Texture "_Splat3" to slot 5 sampler slot 6
Set 2D Texture "_TerrainNormalmapTexture" to slot 6 sampler slot 7
Set CUBE Texture "unity_SpecCube0" to slot 7 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 8 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 9 sampler slot 1

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 192
  Float _Metallic1 at 196
  Float _Metallic2 at 200
  Float _Metallic3 at 204
  Float _Smoothness0 at 208
  Float _Smoothness1 at 212
  Float _Smoothness2 at 216
  Float _Smoothness3 at 220
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[8], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_resource_texturecube (float,float,float,float) t8
      dcl_resource_texture3d (float,float,float,float) t9
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 13
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: sample r3.xyzw, v4.xyxx, t0.xyzw, s8
   8: eq r1.w, r3.x, l(0.000000)
   9: discard_nz r1.w
  10: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  12: mul r3.xy, r3.xyxx, cb0[5].xyxx
  13: sample r3.xyzw, r3.xyxx, t1.xyzw, s2
  14: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  15: add r2.w, r1.w, l(0.001000)
  16: div r3.xyzw, r3.xyzw, r2.wwww
  17: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  19: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  20: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  21: sample r6.xyzw, r4.xyxx, t2.xyzw, s3
  22: mul r6.xyzw, r3.xxxx, r6.xyzw
  23: mul r6.w, r6.w, cb0[13].x
  24: sample r4.xyzw, r4.zwzz, t3.xyzw, s4
  25: mul r4.xyzw, r3.yyyy, r4.xyzw
  26: mul r4.w, r4.w, cb0[13].y
  27: add r4.xyzw, r4.xyzw, r6.xyzw
  28: sample r6.xyzw, r5.xyxx, t4.xyzw, s5
  29: mul r6.xyzw, r3.zzzz, r6.xyzw
  30: mul r6.w, r6.w, cb0[13].z
  31: add r4.xyzw, r4.xyzw, r6.xyzw
  32: sample r5.xyzw, r5.zwzz, t5.xyzw, s6
  33: mul r5.xyzw, r3.wwww, r5.xyzw
  34: mul r5.w, r5.w, cb0[13].w
  35: add r4.xyzw, r4.xyzw, r5.xyzw
  36: sample r5.xyzw, v4.zwzz, t6.xyzw, s7
  37: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  38: dp3 r2.w, r5.xyzx, r5.xyzx
  39: rsq r2.w, r2.w
  40: mul r5.xyz, r2.wwww, r5.xyzx
  41: dp4 r2.w, r3.xyzw, cb0[12].xyzw
  42: eq r3.x, cb4[0].x, l(1.000000)
  43: if_nz r3.x
  44:   eq r3.x, cb4[0].y, l(1.000000)
  45:   mul r3.yzw, v2.wwww, cb4[2].xxyz
  46:   mad r3.yzw, cb4[1].xxyz, v1.wwww, r3.yyzw
  47:   mad r3.yzw, cb4[3].xxyz, v3.wwww, r3.yyzw
  48:   add r3.yzw, r3.yyzw, cb4[4].xxyz
  49:   movc r3.xyz, r3.xxxx, r3.yzwy, r0.xyzx
  50:   add r3.xyz, r3.xyzx, -cb4[6].xyzx
  51:   mul r3.yzw, r3.xxyz, cb4[5].xxyz
  52:   mad r3.y, r3.y, l(0.250000), l(0.750000)
  53:   mad r5.w, cb4[0].z, l(0.500000), l(0.750000)
  54:   max r3.x, r3.y, r5.w
  55:   sample r3.xyzw, r3.xzwx, t9.xyzw, s1
  56: else 
  57:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  58: endif 
  59: dp4_sat r3.x, r3.xyzw, cb2[46].xyzw
  60: dp3 r6.x, v1.xyzx, r5.xyzx
  61: dp3 r6.y, v2.xyzx, r5.xyzx
  62: dp3 r6.z, v3.xyzx, r5.xyzx
  63: dp3 r3.y, r6.xyzx, r6.xyzx
  64: rsq r3.y, r3.y
  65: mul r3.yzw, r3.yyyy, r6.xxyz
  66: add r5.x, -r4.w, l(1.000000)
  67: dp3 r5.y, -r2.xyzx, r3.yzwy
  68: add r5.y, r5.y, r5.y
  69: mad r5.yzw, r3.yyzw, -r5.yyyy, -r2.xxyz
  70: mul r6.xyz, r3.xxxx, cb0[2].xyzx
  71: lt r3.x, l(0.000000), cb3[2].w
  72: if_nz r3.x
  73:   dp3 r3.x, r5.yzwy, r5.yzwy
  74:   rsq r3.x, r3.x
  75:   mul r7.xyz, r3.xxxx, r5.yzwy
  76:   add r8.xyz, -r0.xyzx, cb3[0].xyzx
  77:   div r8.xyz, r8.xyzx, r7.xyzx
  78:   add r9.xyz, -r0.xyzx, cb3[1].xyzx
  79:   div r9.xyz, r9.xyzx, r7.xyzx
  80:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  81:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  82:   min r3.x, r8.y, r8.x
  83:   min r3.x, r8.z, r3.x
  84:   add r8.xyz, r0.xyzx, -cb3[2].xyzx
  85:   mad r7.xyz, r7.xyzx, r3.xxxx, r8.xyzx
  86: else 
  87:   mov r7.xyz, r5.yzwy
  88: endif 
  89: mad r3.x, -r5.x, l(0.700000), l(1.700000)
  90: mul r3.x, r3.x, r5.x
  91: mul r3.x, r3.x, l(6.000000)
  92: sample_l r7.xyzw, r7.xyzx, t7.xyzw, s0, r3.x
  93: add r6.w, r7.w, l(-1.000000)
  94: mad r6.w, cb3[3].w, r6.w, l(1.000000)
  95: mul r6.w, r6.w, cb3[3].x
  96: mul r8.xyz, r7.xyzx, r6.wwww
  97: lt r7.w, cb3[1].w, l(0.999990)
  98: if_nz r7.w
  99:   lt r7.w, l(0.000000), cb3[6].w
 100:   if_nz r7.w
 101:     dp3 r7.w, r5.yzwy, r5.yzwy
 102:     rsq r7.w, r7.w
 103:     mul r9.xyz, r5.yzwy, r7.wwww
 104:     add r10.xyz, -r0.xyzx, cb3[4].xyzx
 105:     div r10.xyz, r10.xyzx, r9.xyzx
 106:     add r11.xyz, -r0.xyzx, cb3[5].xyzx
 107:     div r11.xyz, r11.xyzx, r9.xyzx
 108:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 109:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 110:     min r7.w, r10.y, r10.x
 111:     min r7.w, r10.z, r7.w
 112:     add r0.xyz, r0.xyzx, -cb3[6].xyzx
 113:     mad r5.yzw, r9.xxyz, r7.wwww, r0.xxyz
 114:   endif 
 115:   sample_l r9.xyzw, r5.yzwy, t8.xyzw, s0, r3.x
 116:   add r0.x, r9.w, l(-1.000000)
 117:   mad r0.x, cb3[7].w, r0.x, l(1.000000)
 118:   mul r0.x, r0.x, cb3[7].x
 119:   mul r0.xyz, r9.xyzx, r0.xxxx
 120:   mad r5.yzw, r6.wwww, r7.xxyz, -r0.xxyz
 121:   mad r8.xyz, cb3[1].wwww, r5.yzwy, r0.xyzx
 122: endif 
 123: add r0.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 124: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 125: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 126: mul r4.xyz, r2.wwww, r4.xyzx
 127: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 128: dp3 r0.w, r1.xyzx, r1.xyzx
 129: max r0.w, r0.w, l(0.001000)
 130: rsq r0.w, r0.w
 131: mul r1.xyz, r0.wwww, r1.xyzx
 132: dp3 r0.w, r3.yzwy, r2.xyzx
 133: dp3_sat r2.x, r3.yzwy, cb2[0].xyzx
 134: dp3_sat r2.y, r3.yzwy, r1.xyzx
 135: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 136: add r1.y, r1.x, r1.x
 137: mul r1.y, r1.x, r1.y
 138: mad r1.y, r1.y, r5.x, l(-0.500000)
 139: add r1.z, -r2.x, l(1.000000)
 140: mul r2.z, r1.z, r1.z
 141: mul r2.z, r2.z, r2.z
 142: mul r1.z, r1.z, r2.z
 143: mad r1.z, r1.y, r1.z, l(1.000000)
 144: add r2.z, -|r0.w|, l(1.000000)
 145: mul r3.x, r2.z, r2.z
 146: mul r3.x, r3.x, r3.x
 147: mul r2.z, r2.z, r3.x
 148: mad r1.y, r1.y, r2.z, l(1.000000)
 149: mul r1.y, r1.y, r1.z
 150: mul r1.y, r2.x, r1.y
 151: mul r1.z, r5.x, r5.x
 152: max r1.z, r1.z, l(0.002000)
 153: add r3.x, -r1.z, l(1.000000)
 154: mad r3.y, |r0.w|, r3.x, r1.z
 155: mad r3.x, r2.x, r3.x, r1.z
 156: mul r0.w, |r0.w|, r3.x
 157: mad r0.w, r2.x, r3.y, r0.w
 158: add r0.w, r0.w, l(0.000010)
 159: div r0.w, l(0.500000), r0.w
 160: mul r3.x, r1.z, r1.z
 161: mad r3.y, r2.y, r3.x, -r2.y
 162: mad r2.y, r3.y, r2.y, l(1.000000)
 163: mul r3.x, r3.x, l(0.318310)
 164: mad r2.y, r2.y, r2.y, l(0.000000)
 165: div r2.y, r3.x, r2.y
 166: mul r0.w, r0.w, r2.y
 167: mul r0.w, r0.w, l(3.141593)
 168: max r0.w, r0.w, l(0.000100)
 169: sqrt r0.w, r0.w
 170: mul r0.w, r2.x, r0.w
 171: mul r1.z, r1.z, l(0.280000)
 172: mad r1.z, -r1.z, r5.x, l(1.000000)
 173: dp3 r2.x, r0.xyzx, r0.xyzx
 174: ne r2.x, r2.x, l(0.000000)
 175: and r2.x, r2.x, l(0x3f800000)
 176: mul r0.w, r0.w, r2.x
 177: add r2.x, -r2.w, r4.w
 178: add_sat r2.x, r2.x, l(1.000000)
 179: mul r3.xyz, r1.yyyy, r6.xyzx
 180: mul r5.xyz, r6.xyzx, r0.wwww
 181: add r0.w, -r1.x, l(1.000000)
 182: mul r1.x, r0.w, r0.w
 183: mul r1.x, r1.x, r1.x
 184: mul r0.w, r0.w, r1.x
 185: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 186: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 187: mul r5.xyz, r5.xyzx, r6.xyzx
 188: mad r3.xyz, r4.xyzx, r3.xyzx, r5.xyzx
 189: mul r1.xyz, r8.xyzx, r1.zzzz
 190: add r2.xyw, -r0.xyxz, r2.xxxx
 191: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 192: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 193: mul o0.xyz, r1.wwww, r0.xyzx
 194: mov o0.w, l(1.000000)
 195: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON LIGHTPROBE_SH 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 192 math, 14 temp registers, 11 textures, 8 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 8
Set 2D Texture "_Control" to slot 1 sampler slot 2
Set 2D Texture "_Splat0" to slot 2 sampler slot 3
Set 2D Texture "_Splat1" to slot 3 sampler slot 4
Set 2D Texture "_Splat2" to slot 4 sampler slot 5
Set 2D Texture "_Splat3" to slot 5 sampler slot 6
Set 2D Texture "_TerrainNormalmapTexture" to slot 6 sampler slot 7
Set CUBE Texture "unity_SpecCube0" to slot 7 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 8 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 9 sampler slot 1

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 192
  Float _Metallic1 at 196
  Float _Metallic2 at 200
  Float _Metallic3 at 204
  Float _Smoothness0 at 208
  Float _Smoothness1 at 212
  Float _Smoothness2 at 216
  Float _Smoothness3 at 220
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[8], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_resource_texturecube (float,float,float,float) t8
      dcl_resource_texture3d (float,float,float,float) t9
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_temps 14
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: sample r3.xyzw, v4.xyxx, t0.xyzw, s8
   8: eq r1.w, r3.x, l(0.000000)
   9: discard_nz r1.w
  10: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  12: mul r3.xy, r3.xyxx, cb0[5].xyxx
  13: sample r3.xyzw, r3.xyxx, t1.xyzw, s2
  14: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  15: add r2.w, r1.w, l(0.001000)
  16: div r3.xyzw, r3.xyzw, r2.wwww
  17: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  19: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  20: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  21: sample r6.xyzw, r4.xyxx, t2.xyzw, s3
  22: mul r6.xyzw, r3.xxxx, r6.xyzw
  23: mul r6.w, r6.w, cb0[13].x
  24: sample r4.xyzw, r4.zwzz, t3.xyzw, s4
  25: mul r4.xyzw, r3.yyyy, r4.xyzw
  26: mul r4.w, r4.w, cb0[13].y
  27: add r4.xyzw, r4.xyzw, r6.xyzw
  28: sample r6.xyzw, r5.xyxx, t4.xyzw, s5
  29: mul r6.xyzw, r3.zzzz, r6.xyzw
  30: mul r6.w, r6.w, cb0[13].z
  31: add r4.xyzw, r4.xyzw, r6.xyzw
  32: sample r5.xyzw, r5.zwzz, t5.xyzw, s6
  33: mul r5.xyzw, r3.wwww, r5.xyzw
  34: mul r5.w, r5.w, cb0[13].w
  35: add r4.xyzw, r4.xyzw, r5.xyzw
  36: sample r5.xyzw, v4.zwzz, t6.xyzw, s7
  37: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  38: dp3 r2.w, r5.xyzx, r5.xyzx
  39: rsq r2.w, r2.w
  40: mul r5.xyz, r2.wwww, r5.xyzx
  41: dp4 r2.w, r3.xyzw, cb0[12].xyzw
  42: eq r3.x, cb4[0].x, l(1.000000)
  43: if_nz r3.x
  44:   eq r3.y, cb4[0].y, l(1.000000)
  45:   mul r6.xyz, v2.wwww, cb4[2].xyzx
  46:   mad r6.xyz, cb4[1].xyzx, v1.wwww, r6.xyzx
  47:   mad r6.xyz, cb4[3].xyzx, v3.wwww, r6.xyzx
  48:   add r6.xyz, r6.xyzx, cb4[4].xyzx
  49:   movc r3.yzw, r3.yyyy, r6.xxyz, r0.xxyz
  50:   add r3.yzw, r3.yyzw, -cb4[6].xxyz
  51:   mul r6.yzw, r3.yyzw, cb4[5].xxyz
  52:   mad r3.y, r6.y, l(0.250000), l(0.750000)
  53:   mad r3.z, cb4[0].z, l(0.500000), l(0.750000)
  54:   max r6.x, r3.z, r3.y
  55:   sample r6.xyzw, r6.xzwx, t9.xyzw, s1
  56: else 
  57:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  58: endif 
  59: dp4_sat r3.y, r6.xyzw, cb2[46].xyzw
  60: dp3 r6.x, v1.xyzx, r5.xyzx
  61: dp3 r6.y, v2.xyzx, r5.xyzx
  62: dp3 r6.z, v3.xyzx, r5.xyzx
  63: dp3 r3.z, r6.xyzx, r6.xyzx
  64: rsq r3.z, r3.z
  65: mul r5.xyz, r3.zzzz, r6.xyzx
  66: add r3.z, -r4.w, l(1.000000)
  67: dp3 r3.w, -r2.xyzx, r5.xyzx
  68: add r3.w, r3.w, r3.w
  69: mad r6.xyz, r5.xyzx, -r3.wwww, -r2.xyzx
  70: mul r7.xyz, r3.yyyy, cb0[2].xyzx
  71: if_nz r3.x
  72:   eq r3.x, cb4[0].y, l(1.000000)
  73:   mul r8.xyz, v2.wwww, cb4[2].xyzx
  74:   mad r8.xyz, cb4[1].xyzx, v1.wwww, r8.xyzx
  75:   mad r8.xyz, cb4[3].xyzx, v3.wwww, r8.xyzx
  76:   add r8.xyz, r8.xyzx, cb4[4].xyzx
  77:   movc r3.xyw, r3.xxxx, r8.xyxz, r0.xyxz
  78:   add r3.xyw, r3.xyxw, -cb4[6].xyxz
  79:   mul r8.yzw, r3.xxyw, cb4[5].xxyz
  80:   mul r3.x, r8.y, l(0.250000)
  81:   mul r3.y, cb4[0].z, l(0.500000)
  82:   mad r3.w, -cb4[0].z, l(0.500000), l(0.250000)
  83:   max r3.x, r3.y, r3.x
  84:   min r8.x, r3.w, r3.x
  85:   sample r9.xyzw, r8.xzwx, t9.xyzw, s1
  86:   add r3.xyw, r8.xzxw, l(0.250000, 0.000000, 0.000000, 0.000000)
  87:   sample r10.xyzw, r3.xywx, t9.xyzw, s1
  88:   add r3.xyw, r8.xzxw, l(0.500000, 0.000000, 0.000000, 0.000000)
  89:   sample r8.xyzw, r3.xywx, t9.xyzw, s1
  90:   mov r5.w, l(1.000000)
  91:   dp4 r9.x, r9.xyzw, r5.xyzw
  92:   dp4 r9.y, r10.xyzw, r5.xyzw
  93:   dp4 r9.z, r8.xyzw, r5.xyzw
  94: else 
  95:   mov r5.w, l(1.000000)
  96:   dp4 r9.x, cb2[39].xyzw, r5.xyzw
  97:   dp4 r9.y, cb2[40].xyzw, r5.xyzw
  98:   dp4 r9.z, cb2[41].xyzw, r5.xyzw
  99: endif 
 100: add r3.xyw, r9.xyxz, v5.xyxz
 101: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
 102: log r3.xyw, r3.xyxw
 103: mul r3.xyw, r3.xyxw, l(0.416667, 0.416667, 0.000000, 0.416667)
 104: exp r3.xyw, r3.xyxw
 105: mad r3.xyw, r3.xyxw, l(1.055000, 1.055000, 0.000000, 1.055000), l(-0.055000, -0.055000, 0.000000, -0.055000)
 106: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
 107: lt r5.w, l(0.000000), cb3[2].w
 108: if_nz r5.w
 109:   dp3 r5.w, r6.xyzx, r6.xyzx
 110:   rsq r5.w, r5.w
 111:   mul r8.xyz, r5.wwww, r6.xyzx
 112:   add r9.xyz, -r0.xyzx, cb3[0].xyzx
 113:   div r9.xyz, r9.xyzx, r8.xyzx
 114:   add r10.xyz, -r0.xyzx, cb3[1].xyzx
 115:   div r10.xyz, r10.xyzx, r8.xyzx
 116:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
 117:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
 118:   min r5.w, r9.y, r9.x
 119:   min r5.w, r9.z, r5.w
 120:   add r9.xyz, r0.xyzx, -cb3[2].xyzx
 121:   mad r8.xyz, r8.xyzx, r5.wwww, r9.xyzx
 122: else 
 123:   mov r8.xyz, r6.xyzx
 124: endif 
 125: mad r5.w, -r3.z, l(0.700000), l(1.700000)
 126: mul r5.w, r3.z, r5.w
 127: mul r5.w, r5.w, l(6.000000)
 128: sample_l r8.xyzw, r8.xyzx, t7.xyzw, s0, r5.w
 129: add r6.w, r8.w, l(-1.000000)
 130: mad r6.w, cb3[3].w, r6.w, l(1.000000)
 131: mul r6.w, r6.w, cb3[3].x
 132: mul r9.xyz, r8.xyzx, r6.wwww
 133: lt r7.w, cb3[1].w, l(0.999990)
 134: if_nz r7.w
 135:   lt r7.w, l(0.000000), cb3[6].w
 136:   if_nz r7.w
 137:     dp3 r7.w, r6.xyzx, r6.xyzx
 138:     rsq r7.w, r7.w
 139:     mul r10.xyz, r6.xyzx, r7.wwww
 140:     add r11.xyz, -r0.xyzx, cb3[4].xyzx
 141:     div r11.xyz, r11.xyzx, r10.xyzx
 142:     add r12.xyz, -r0.xyzx, cb3[5].xyzx
 143:     div r12.xyz, r12.xyzx, r10.xyzx
 144:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 145:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 146:     min r7.w, r11.y, r11.x
 147:     min r7.w, r11.z, r7.w
 148:     add r0.xyz, r0.xyzx, -cb3[6].xyzx
 149:     mad r6.xyz, r10.xyzx, r7.wwww, r0.xyzx
 150:   endif 
 151:   sample_l r10.xyzw, r6.xyzx, t8.xyzw, s0, r5.w
 152:   add r0.x, r10.w, l(-1.000000)
 153:   mad r0.x, cb3[7].w, r0.x, l(1.000000)
 154:   mul r0.x, r0.x, cb3[7].x
 155:   mul r0.xyz, r10.xyzx, r0.xxxx
 156:   mad r6.xyz, r6.wwww, r8.xyzx, -r0.xyzx
 157:   mad r9.xyz, cb3[1].wwww, r6.xyzx, r0.xyzx
 158: endif 
 159: add r0.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 160: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 161: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 162: mul r4.xyz, r2.wwww, r4.xyzx
 163: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 164: dp3 r0.w, r1.xyzx, r1.xyzx
 165: max r0.w, r0.w, l(0.001000)
 166: rsq r0.w, r0.w
 167: mul r1.xyz, r0.wwww, r1.xyzx
 168: dp3 r0.w, r5.xyzx, r2.xyzx
 169: dp3_sat r2.x, r5.xyzx, cb2[0].xyzx
 170: dp3_sat r2.y, r5.xyzx, r1.xyzx
 171: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 172: mul r1.y, r1.x, r1.x
 173: dp2 r1.y, r1.yyyy, r3.zzzz
 174: add r1.y, r1.y, l(-0.500000)
 175: add r1.z, -r2.x, l(1.000000)
 176: mul r2.z, r1.z, r1.z
 177: mul r2.z, r2.z, r2.z
 178: mul r1.z, r1.z, r2.z
 179: mad r1.z, r1.y, r1.z, l(1.000000)
 180: add r2.z, -|r0.w|, l(1.000000)
 181: mul r5.x, r2.z, r2.z
 182: mul r5.x, r5.x, r5.x
 183: mul r2.z, r2.z, r5.x
 184: mad r1.y, r1.y, r2.z, l(1.000000)
 185: mul r1.y, r1.y, r1.z
 186: mul r1.y, r2.x, r1.y
 187: mul r1.z, r3.z, r3.z
 188: max r1.z, r1.z, l(0.002000)
 189: add r5.x, -r1.z, l(1.000000)
 190: mad r5.y, |r0.w|, r5.x, r1.z
 191: mad r5.x, r2.x, r5.x, r1.z
 192: mul r0.w, |r0.w|, r5.x
 193: mad r0.w, r2.x, r5.y, r0.w
 194: add r0.w, r0.w, l(0.000010)
 195: div r0.w, l(0.500000), r0.w
 196: mul r5.x, r1.z, r1.z
 197: mad r5.y, r2.y, r5.x, -r2.y
 198: mad r2.y, r5.y, r2.y, l(1.000000)
 199: mul r5.x, r5.x, l(0.318310)
 200: mad r2.y, r2.y, r2.y, l(0.000000)
 201: div r2.y, r5.x, r2.y
 202: mul r0.w, r0.w, r2.y
 203: mul r0.w, r0.w, l(3.141593)
 204: max r0.w, r0.w, l(0.000100)
 205: sqrt r0.w, r0.w
 206: mul r0.w, r2.x, r0.w
 207: mul r1.z, r1.z, l(0.280000)
 208: mad r1.z, -r1.z, r3.z, l(1.000000)
 209: dp3 r2.x, r0.xyzx, r0.xyzx
 210: ne r2.x, r2.x, l(0.000000)
 211: and r2.x, r2.x, l(0x3f800000)
 212: mul r0.w, r0.w, r2.x
 213: add r2.x, -r2.w, l(1.000000)
 214: add_sat r2.x, r2.x, r4.w
 215: mad r3.xyz, r7.xyzx, r1.yyyy, r3.xywx
 216: mul r5.xyz, r7.xyzx, r0.wwww
 217: add r0.w, -r1.x, l(1.000000)
 218: mul r1.x, r0.w, r0.w
 219: mul r1.x, r1.x, r1.x
 220: mul r0.w, r0.w, r1.x
 221: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 222: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 223: mul r5.xyz, r5.xyzx, r6.xyzx
 224: mad r3.xyz, r4.xyzx, r3.xyzx, r5.xyzx
 225: mul r1.xyz, r9.xyzx, r1.zzzz
 226: add r2.xyw, -r0.xyxz, r2.xxxx
 227: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 228: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 229: mul o0.xyz, r1.wwww, r0.xyzx
 230: mov o0.w, l(1.000000)
 231: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 175 math, 13 temp registers, 9 textures, 6 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 9
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_TerrainNormalmapTexture" to slot 6 sampler slot 8
Set 2D Texture "_ShadowMapTexture" to slot 7 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 8 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 9 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 10 sampler slot 1

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 192
  Float _Metallic1 at 196
  Float _Metallic2 at 200
  Float _Metallic3 at 204
  Float _Smoothness0 at 208
  Float _Smoothness1 at 212
  Float _Smoothness2 at 216
  Float _Smoothness3 at 220
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xy w
// TEXCOORD                 6   xyzw        6     NONE   float       
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texturecube (float,float,float,float) t8
      dcl_resource_texturecube (float,float,float,float) t9
      dcl_resource_texture3d (float,float,float,float) t10
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: sample r3.xyzw, v4.xyxx, t0.xyzw, s9
   8: eq r1.w, r3.x, l(0.000000)
   9: discard_nz r1.w
  10: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  12: mul r3.xy, r3.xyxx, cb0[5].xyxx
  13: sample r3.xyzw, r3.xyxx, t1.xyzw, s3
  14: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  15: add r2.w, r1.w, l(0.001000)
  16: div r3.xyzw, r3.xyzw, r2.wwww
  17: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  19: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  20: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  21: sample r6.xyzw, r4.xyxx, t2.xyzw, s4
  22: mul r6.xyzw, r3.xxxx, r6.xyzw
  23: mul r6.w, r6.w, cb0[13].x
  24: sample r4.xyzw, r4.zwzz, t3.xyzw, s5
  25: mul r4.xyzw, r3.yyyy, r4.xyzw
  26: mul r4.w, r4.w, cb0[13].y
  27: add r4.xyzw, r4.xyzw, r6.xyzw
  28: sample r6.xyzw, r5.xyxx, t4.xyzw, s6
  29: mul r6.xyzw, r3.zzzz, r6.xyzw
  30: mul r6.w, r6.w, cb0[13].z
  31: add r4.xyzw, r4.xyzw, r6.xyzw
  32: sample r5.xyzw, r5.zwzz, t5.xyzw, s7
  33: mul r5.xyzw, r3.wwww, r5.xyzw
  34: mul r5.w, r5.w, cb0[13].w
  35: add r4.xyzw, r4.xyzw, r5.xyzw
  36: sample r5.xyzw, v4.zwzz, t6.xyzw, s8
  37: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  38: dp3 r2.w, r5.xyzx, r5.xyzx
  39: rsq r2.w, r2.w
  40: mul r5.xyz, r2.wwww, r5.xyzx
  41: dp4 r2.w, r3.xyzw, cb0[12].xyzw
  42: mov r3.x, cb4[9].z
  43: mov r3.y, cb4[10].z
  44: mov r3.z, cb4[11].z
  45: dp3 r3.x, r1.xyzx, r3.xyzx
  46: add r3.yzw, r0.xxyz, -cb3[25].xxyz
  47: dp3 r3.y, r3.yzwy, r3.yzwy
  48: sqrt r3.y, r3.y
  49: add r3.y, -r3.x, r3.y
  50: mad r3.x, cb3[25].w, r3.y, r3.x
  51: mad_sat r3.x, r3.x, cb3[24].z, cb3[24].w
  52: eq r3.y, cb6[0].x, l(1.000000)
  53: if_nz r3.y
  54:   eq r3.y, cb6[0].y, l(1.000000)
  55:   mul r6.xyz, v2.wwww, cb6[2].xyzx
  56:   mad r6.xyz, cb6[1].xyzx, v1.wwww, r6.xyzx
  57:   mad r6.xyz, cb6[3].xyzx, v3.wwww, r6.xyzx
  58:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  59:   movc r3.yzw, r3.yyyy, r6.xxyz, r0.xxyz
  60:   add r3.yzw, r3.yyzw, -cb6[6].xxyz
  61:   mul r6.yzw, r3.yyzw, cb6[5].xxyz
  62:   mad r3.y, r6.y, l(0.250000), l(0.750000)
  63:   mad r3.z, cb6[0].z, l(0.500000), l(0.750000)
  64:   max r6.x, r3.z, r3.y
  65:   sample r6.xyzw, r6.xzwx, t10.xyzw, s1
  66: else 
  67:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  68: endif 
  69: dp4_sat r3.y, r6.xyzw, cb2[46].xyzw
  70: div r3.zw, v5.xxxy, v5.wwww
  71: sample r6.xyzw, r3.zwzz, t7.xyzw, s2
  72: add r3.y, r3.y, -r6.x
  73: mad r3.x, r3.x, r3.y, r6.x
  74: dp3 r6.x, v1.xyzx, r5.xyzx
  75: dp3 r6.y, v2.xyzx, r5.xyzx
  76: dp3 r6.z, v3.xyzx, r5.xyzx
  77: dp3 r3.y, r6.xyzx, r6.xyzx
  78: rsq r3.y, r3.y
  79: mul r3.yzw, r3.yyyy, r6.xxyz
  80: add r5.x, -r4.w, l(1.000000)
  81: dp3 r5.y, -r2.xyzx, r3.yzwy
  82: add r5.y, r5.y, r5.y
  83: mad r5.yzw, r3.yyzw, -r5.yyyy, -r2.xxyz
  84: mul r6.xyz, r3.xxxx, cb0[2].xyzx
  85: lt r3.x, l(0.000000), cb5[2].w
  86: if_nz r3.x
  87:   dp3 r3.x, r5.yzwy, r5.yzwy
  88:   rsq r3.x, r3.x
  89:   mul r7.xyz, r3.xxxx, r5.yzwy
  90:   add r8.xyz, -r0.xyzx, cb5[0].xyzx
  91:   div r8.xyz, r8.xyzx, r7.xyzx
  92:   add r9.xyz, -r0.xyzx, cb5[1].xyzx
  93:   div r9.xyz, r9.xyzx, r7.xyzx
  94:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  95:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  96:   min r3.x, r8.y, r8.x
  97:   min r3.x, r8.z, r3.x
  98:   add r8.xyz, r0.xyzx, -cb5[2].xyzx
  99:   mad r7.xyz, r7.xyzx, r3.xxxx, r8.xyzx
 100: else 
 101:   mov r7.xyz, r5.yzwy
 102: endif 
 103: mad r3.x, -r5.x, l(0.700000), l(1.700000)
 104: mul r3.x, r3.x, r5.x
 105: mul r3.x, r3.x, l(6.000000)
 106: sample_l r7.xyzw, r7.xyzx, t8.xyzw, s0, r3.x
 107: add r6.w, r7.w, l(-1.000000)
 108: mad r6.w, cb5[3].w, r6.w, l(1.000000)
 109: mul r6.w, r6.w, cb5[3].x
 110: mul r8.xyz, r7.xyzx, r6.wwww
 111: lt r7.w, cb5[1].w, l(0.999990)
 112: if_nz r7.w
 113:   lt r7.w, l(0.000000), cb5[6].w
 114:   if_nz r7.w
 115:     dp3 r7.w, r5.yzwy, r5.yzwy
 116:     rsq r7.w, r7.w
 117:     mul r9.xyz, r5.yzwy, r7.wwww
 118:     add r10.xyz, -r0.xyzx, cb5[4].xyzx
 119:     div r10.xyz, r10.xyzx, r9.xyzx
 120:     add r11.xyz, -r0.xyzx, cb5[5].xyzx
 121:     div r11.xyz, r11.xyzx, r9.xyzx
 122:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 123:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 124:     min r7.w, r10.y, r10.x
 125:     min r7.w, r10.z, r7.w
 126:     add r0.xyz, r0.xyzx, -cb5[6].xyzx
 127:     mad r5.yzw, r9.xxyz, r7.wwww, r0.xxyz
 128:   endif 
 129:   sample_l r9.xyzw, r5.yzwy, t9.xyzw, s0, r3.x
 130:   add r0.x, r9.w, l(-1.000000)
 131:   mad r0.x, cb5[7].w, r0.x, l(1.000000)
 132:   mul r0.x, r0.x, cb5[7].x
 133:   mul r0.xyz, r9.xyzx, r0.xxxx
 134:   mad r5.yzw, r6.wwww, r7.xxyz, -r0.xxyz
 135:   mad r8.xyz, cb5[1].wwww, r5.yzwy, r0.xyzx
 136: endif 
 137: add r0.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 138: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 139: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 140: mul r4.xyz, r2.wwww, r4.xyzx
 141: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 142: dp3 r0.w, r1.xyzx, r1.xyzx
 143: max r0.w, r0.w, l(0.001000)
 144: rsq r0.w, r0.w
 145: mul r1.xyz, r0.wwww, r1.xyzx
 146: dp3 r0.w, r3.yzwy, r2.xyzx
 147: dp3_sat r2.x, r3.yzwy, cb2[0].xyzx
 148: dp3_sat r2.y, r3.yzwy, r1.xyzx
 149: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 150: add r1.y, r1.x, r1.x
 151: mul r1.y, r1.x, r1.y
 152: mad r1.y, r1.y, r5.x, l(-0.500000)
 153: add r1.z, -r2.x, l(1.000000)
 154: mul r2.z, r1.z, r1.z
 155: mul r2.z, r2.z, r2.z
 156: mul r1.z, r1.z, r2.z
 157: mad r1.z, r1.y, r1.z, l(1.000000)
 158: add r2.z, -|r0.w|, l(1.000000)
 159: mul r3.x, r2.z, r2.z
 160: mul r3.x, r3.x, r3.x
 161: mul r2.z, r2.z, r3.x
 162: mad r1.y, r1.y, r2.z, l(1.000000)
 163: mul r1.y, r1.y, r1.z
 164: mul r1.y, r2.x, r1.y
 165: mul r1.z, r5.x, r5.x
 166: max r1.z, r1.z, l(0.002000)
 167: add r3.x, -r1.z, l(1.000000)
 168: mad r3.y, |r0.w|, r3.x, r1.z
 169: mad r3.x, r2.x, r3.x, r1.z
 170: mul r0.w, |r0.w|, r3.x
 171: mad r0.w, r2.x, r3.y, r0.w
 172: add r0.w, r0.w, l(0.000010)
 173: div r0.w, l(0.500000), r0.w
 174: mul r3.x, r1.z, r1.z
 175: mad r3.y, r2.y, r3.x, -r2.y
 176: mad r2.y, r3.y, r2.y, l(1.000000)
 177: mul r3.x, r3.x, l(0.318310)
 178: mad r2.y, r2.y, r2.y, l(0.000000)
 179: div r2.y, r3.x, r2.y
 180: mul r0.w, r0.w, r2.y
 181: mul r0.w, r0.w, l(3.141593)
 182: max r0.w, r0.w, l(0.000100)
 183: sqrt r0.w, r0.w
 184: mul r0.w, r2.x, r0.w
 185: mul r1.z, r1.z, l(0.280000)
 186: mad r1.z, -r1.z, r5.x, l(1.000000)
 187: dp3 r2.x, r0.xyzx, r0.xyzx
 188: ne r2.x, r2.x, l(0.000000)
 189: and r2.x, r2.x, l(0x3f800000)
 190: mul r0.w, r0.w, r2.x
 191: add r2.x, -r2.w, r4.w
 192: add_sat r2.x, r2.x, l(1.000000)
 193: mul r3.xyz, r1.yyyy, r6.xyzx
 194: mul r5.xyz, r6.xyzx, r0.wwww
 195: add r0.w, -r1.x, l(1.000000)
 196: mul r1.x, r0.w, r0.w
 197: mul r1.x, r1.x, r1.x
 198: mul r0.w, r0.w, r1.x
 199: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 200: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 201: mul r5.xyz, r5.xyzx, r6.xyzx
 202: mad r3.xyz, r4.xyzx, r3.xyzx, r5.xyzx
 203: mul r1.xyz, r8.xyzx, r1.zzzz
 204: add r2.xyw, -r0.xyxz, r2.xxxx
 205: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 206: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 207: mul o0.xyz, r1.wwww, r0.xyzx
 208: mov o0.w, l(1.000000)
 209: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 202 math, 14 temp registers, 12 textures, 8 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 9
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_TerrainNormalmapTexture" to slot 6 sampler slot 8
Set 2D Texture "_ShadowMapTexture" to slot 7 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 8 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 9 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 10 sampler slot 1

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 192
  Float _Metallic1 at 196
  Float _Metallic2 at 200
  Float _Metallic3 at 204
  Float _Smoothness0 at 208
  Float _Smoothness1 at 212
  Float _Smoothness2 at 216
  Float _Smoothness3 at 220
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texturecube (float,float,float,float) t8
      dcl_resource_texturecube (float,float,float,float) t9
      dcl_resource_texture3d (float,float,float,float) t10
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: sample r3.xyzw, v4.xyxx, t0.xyzw, s9
   8: eq r1.w, r3.x, l(0.000000)
   9: discard_nz r1.w
  10: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  12: mul r3.xy, r3.xyxx, cb0[5].xyxx
  13: sample r3.xyzw, r3.xyxx, t1.xyzw, s3
  14: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  15: add r2.w, r1.w, l(0.001000)
  16: div r3.xyzw, r3.xyzw, r2.wwww
  17: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  19: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  20: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  21: sample r6.xyzw, r4.xyxx, t2.xyzw, s4
  22: mul r6.xyzw, r3.xxxx, r6.xyzw
  23: mul r6.w, r6.w, cb0[13].x
  24: sample r4.xyzw, r4.zwzz, t3.xyzw, s5
  25: mul r4.xyzw, r3.yyyy, r4.xyzw
  26: mul r4.w, r4.w, cb0[13].y
  27: add r4.xyzw, r4.xyzw, r6.xyzw
  28: sample r6.xyzw, r5.xyxx, t4.xyzw, s6
  29: mul r6.xyzw, r3.zzzz, r6.xyzw
  30: mul r6.w, r6.w, cb0[13].z
  31: add r4.xyzw, r4.xyzw, r6.xyzw
  32: sample r5.xyzw, r5.zwzz, t5.xyzw, s7
  33: mul r5.xyzw, r3.wwww, r5.xyzw
  34: mul r5.w, r5.w, cb0[13].w
  35: add r4.xyzw, r4.xyzw, r5.xyzw
  36: sample r5.xyzw, v4.zwzz, t6.xyzw, s8
  37: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  38: dp3 r2.w, r5.xyzx, r5.xyzx
  39: rsq r2.w, r2.w
  40: mul r5.xyz, r2.wwww, r5.xyzx
  41: dp4 r2.w, r3.xyzw, cb0[12].xyzw
  42: mov r3.x, cb4[9].z
  43: mov r3.y, cb4[10].z
  44: mov r3.z, cb4[11].z
  45: dp3 r3.x, r1.xyzx, r3.xyzx
  46: add r3.yzw, r0.xxyz, -cb3[25].xxyz
  47: dp3 r3.y, r3.yzwy, r3.yzwy
  48: sqrt r3.y, r3.y
  49: add r3.y, -r3.x, r3.y
  50: mad r3.x, cb3[25].w, r3.y, r3.x
  51: mad_sat r3.x, r3.x, cb3[24].z, cb3[24].w
  52: eq r3.y, cb6[0].x, l(1.000000)
  53: if_nz r3.y
  54:   eq r3.z, cb6[0].y, l(1.000000)
  55:   mul r6.xyz, v2.wwww, cb6[2].xyzx
  56:   mad r6.xyz, cb6[1].xyzx, v1.wwww, r6.xyzx
  57:   mad r6.xyz, cb6[3].xyzx, v3.wwww, r6.xyzx
  58:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  59:   movc r6.xyz, r3.zzzz, r6.xyzx, r0.xyzx
  60:   add r6.xyz, r6.xyzx, -cb6[6].xyzx
  61:   mul r6.yzw, r6.xxyz, cb6[5].xxyz
  62:   mad r3.z, r6.y, l(0.250000), l(0.750000)
  63:   mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
  64:   max r6.x, r3.w, r3.z
  65:   sample r6.xyzw, r6.xzwx, t10.xyzw, s1
  66: else 
  67:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  68: endif 
  69: dp4_sat r3.z, r6.xyzw, cb2[46].xyzw
  70: div r6.xy, v6.xyxx, v6.wwww
  71: sample r6.xyzw, r6.xyxx, t7.xyzw, s2
  72: add r3.z, r3.z, -r6.x
  73: mad r3.x, r3.x, r3.z, r6.x
  74: dp3 r6.x, v1.xyzx, r5.xyzx
  75: dp3 r6.y, v2.xyzx, r5.xyzx
  76: dp3 r6.z, v3.xyzx, r5.xyzx
  77: dp3 r3.z, r6.xyzx, r6.xyzx
  78: rsq r3.z, r3.z
  79: mul r5.xyz, r3.zzzz, r6.xyzx
  80: add r3.z, -r4.w, l(1.000000)
  81: dp3 r3.w, -r2.xyzx, r5.xyzx
  82: add r3.w, r3.w, r3.w
  83: mad r6.xyz, r5.xyzx, -r3.wwww, -r2.xyzx
  84: mul r7.xyz, r3.xxxx, cb0[2].xyzx
  85: if_nz r3.y
  86:   eq r3.x, cb6[0].y, l(1.000000)
  87:   mul r8.xyz, v2.wwww, cb6[2].xyzx
  88:   mad r8.xyz, cb6[1].xyzx, v1.wwww, r8.xyzx
  89:   mad r8.xyz, cb6[3].xyzx, v3.wwww, r8.xyzx
  90:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  91:   movc r3.xyw, r3.xxxx, r8.xyxz, r0.xyxz
  92:   add r3.xyw, r3.xyxw, -cb6[6].xyxz
  93:   mul r8.yzw, r3.xxyw, cb6[5].xxyz
  94:   mul r3.x, r8.y, l(0.250000)
  95:   mul r3.y, cb6[0].z, l(0.500000)
  96:   mad r3.w, -cb6[0].z, l(0.500000), l(0.250000)
  97:   max r3.x, r3.y, r3.x
  98:   min r8.x, r3.w, r3.x
  99:   sample r9.xyzw, r8.xzwx, t10.xyzw, s1
 100:   add r3.xyw, r8.xzxw, l(0.250000, 0.000000, 0.000000, 0.000000)
 101:   sample r10.xyzw, r3.xywx, t10.xyzw, s1
 102:   add r3.xyw, r8.xzxw, l(0.500000, 0.000000, 0.000000, 0.000000)
 103:   sample r8.xyzw, r3.xywx, t10.xyzw, s1
 104:   mov r5.w, l(1.000000)
 105:   dp4 r9.x, r9.xyzw, r5.xyzw
 106:   dp4 r9.y, r10.xyzw, r5.xyzw
 107:   dp4 r9.z, r8.xyzw, r5.xyzw
 108: else 
 109:   mov r5.w, l(1.000000)
 110:   dp4 r9.x, cb2[39].xyzw, r5.xyzw
 111:   dp4 r9.y, cb2[40].xyzw, r5.xyzw
 112:   dp4 r9.z, cb2[41].xyzw, r5.xyzw
 113: endif 
 114: add r3.xyw, r9.xyxz, v5.xyxz
 115: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
 116: log r3.xyw, r3.xyxw
 117: mul r3.xyw, r3.xyxw, l(0.416667, 0.416667, 0.000000, 0.416667)
 118: exp r3.xyw, r3.xyxw
 119: mad r3.xyw, r3.xyxw, l(1.055000, 1.055000, 0.000000, 1.055000), l(-0.055000, -0.055000, 0.000000, -0.055000)
 120: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
 121: lt r5.w, l(0.000000), cb5[2].w
 122: if_nz r5.w
 123:   dp3 r5.w, r6.xyzx, r6.xyzx
 124:   rsq r5.w, r5.w
 125:   mul r8.xyz, r5.wwww, r6.xyzx
 126:   add r9.xyz, -r0.xyzx, cb5[0].xyzx
 127:   div r9.xyz, r9.xyzx, r8.xyzx
 128:   add r10.xyz, -r0.xyzx, cb5[1].xyzx
 129:   div r10.xyz, r10.xyzx, r8.xyzx
 130:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
 131:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
 132:   min r5.w, r9.y, r9.x
 133:   min r5.w, r9.z, r5.w
 134:   add r9.xyz, r0.xyzx, -cb5[2].xyzx
 135:   mad r8.xyz, r8.xyzx, r5.wwww, r9.xyzx
 136: else 
 137:   mov r8.xyz, r6.xyzx
 138: endif 
 139: mad r5.w, -r3.z, l(0.700000), l(1.700000)
 140: mul r5.w, r3.z, r5.w
 141: mul r5.w, r5.w, l(6.000000)
 142: sample_l r8.xyzw, r8.xyzx, t8.xyzw, s0, r5.w
 143: add r6.w, r8.w, l(-1.000000)
 144: mad r6.w, cb5[3].w, r6.w, l(1.000000)
 145: mul r6.w, r6.w, cb5[3].x
 146: mul r9.xyz, r8.xyzx, r6.wwww
 147: lt r7.w, cb5[1].w, l(0.999990)
 148: if_nz r7.w
 149:   lt r7.w, l(0.000000), cb5[6].w
 150:   if_nz r7.w
 151:     dp3 r7.w, r6.xyzx, r6.xyzx
 152:     rsq r7.w, r7.w
 153:     mul r10.xyz, r6.xyzx, r7.wwww
 154:     add r11.xyz, -r0.xyzx, cb5[4].xyzx
 155:     div r11.xyz, r11.xyzx, r10.xyzx
 156:     add r12.xyz, -r0.xyzx, cb5[5].xyzx
 157:     div r12.xyz, r12.xyzx, r10.xyzx
 158:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 159:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 160:     min r7.w, r11.y, r11.x
 161:     min r7.w, r11.z, r7.w
 162:     add r0.xyz, r0.xyzx, -cb5[6].xyzx
 163:     mad r6.xyz, r10.xyzx, r7.wwww, r0.xyzx
 164:   endif 
 165:   sample_l r10.xyzw, r6.xyzx, t9.xyzw, s0, r5.w
 166:   add r0.x, r10.w, l(-1.000000)
 167:   mad r0.x, cb5[7].w, r0.x, l(1.000000)
 168:   mul r0.x, r0.x, cb5[7].x
 169:   mul r0.xyz, r10.xyzx, r0.xxxx
 170:   mad r6.xyz, r6.wwww, r8.xyzx, -r0.xyzx
 171:   mad r9.xyz, cb5[1].wwww, r6.xyzx, r0.xyzx
 172: endif 
 173: add r0.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 174: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 175: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 176: mul r4.xyz, r2.wwww, r4.xyzx
 177: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 178: dp3 r0.w, r1.xyzx, r1.xyzx
 179: max r0.w, r0.w, l(0.001000)
 180: rsq r0.w, r0.w
 181: mul r1.xyz, r0.wwww, r1.xyzx
 182: dp3 r0.w, r5.xyzx, r2.xyzx
 183: dp3_sat r2.x, r5.xyzx, cb2[0].xyzx
 184: dp3_sat r2.y, r5.xyzx, r1.xyzx
 185: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 186: add r1.y, r1.x, r1.x
 187: mul r1.y, r1.x, r1.y
 188: mad r1.y, r1.y, r3.z, l(-0.500000)
 189: add r1.z, -r2.x, l(1.000000)
 190: mul r2.z, r1.z, r1.z
 191: mul r2.z, r2.z, r2.z
 192: mul r1.z, r1.z, r2.z
 193: mad r1.z, r1.y, r1.z, l(1.000000)
 194: add r2.z, -|r0.w|, l(1.000000)
 195: mul r5.x, r2.z, r2.z
 196: mul r5.x, r5.x, r5.x
 197: mul r2.z, r2.z, r5.x
 198: mad r1.y, r1.y, r2.z, l(1.000000)
 199: mul r1.y, r1.y, r1.z
 200: mul r1.y, r2.x, r1.y
 201: mul r1.z, r3.z, r3.z
 202: max r1.z, r1.z, l(0.002000)
 203: add r5.x, -r1.z, l(1.000000)
 204: mad r5.y, |r0.w|, r5.x, r1.z
 205: mad r5.x, r2.x, r5.x, r1.z
 206: mul r0.w, |r0.w|, r5.x
 207: mad r0.w, r2.x, r5.y, r0.w
 208: add r0.w, r0.w, l(0.000010)
 209: div r0.w, l(0.500000), r0.w
 210: mul r5.x, r1.z, r1.z
 211: mad r5.y, r2.y, r5.x, -r2.y
 212: mad r2.y, r5.y, r2.y, l(1.000000)
 213: mul r5.x, r5.x, l(0.318310)
 214: mad r2.y, r2.y, r2.y, l(0.000000)
 215: div r2.y, r5.x, r2.y
 216: mul r0.w, r0.w, r2.y
 217: mul r0.w, r0.w, l(3.141593)
 218: max r0.w, r0.w, l(0.000100)
 219: sqrt r0.w, r0.w
 220: mul r0.w, r2.x, r0.w
 221: mul r1.z, r1.z, l(0.280000)
 222: mad r1.z, -r1.z, r3.z, l(1.000000)
 223: dp3 r2.x, r0.xyzx, r0.xyzx
 224: ne r2.x, r2.x, l(0.000000)
 225: and r2.x, r2.x, l(0x3f800000)
 226: mul r0.w, r0.w, r2.x
 227: add r2.x, -r2.w, r4.w
 228: add_sat r2.x, r2.x, l(1.000000)
 229: mad r3.xyz, r7.xyzx, r1.yyyy, r3.xywx
 230: mul r5.xyz, r7.xyzx, r0.wwww
 231: add r0.w, -r1.x, l(1.000000)
 232: mul r1.x, r0.w, r0.w
 233: mul r1.x, r1.x, r1.x
 234: mul r0.w, r0.w, r1.x
 235: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 236: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 237: mul r5.xyz, r5.xyzx, r6.xyzx
 238: mad r3.xyz, r4.xyzx, r3.xyzx, r5.xyzx
 239: mul r1.xyz, r9.xyzx, r1.zzzz
 240: add r2.xyw, -r0.xyxz, r2.xxxx
 241: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 242: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 243: mul o0.xyz, r1.wwww, r0.xyzx
 244: mov o0.w, l(1.000000)
 245: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 211 math, 13 temp registers, 12 textures, 6 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 12
Set 2D Texture "_Control" to slot 1 sampler slot 2
Set 2D Texture "_Splat0" to slot 2 sampler slot 3
Set 2D Texture "_Splat1" to slot 3 sampler slot 4
Set 2D Texture "_Splat2" to slot 4 sampler slot 5
Set 2D Texture "_Splat3" to slot 5 sampler slot 6
Set 2D Texture "_Normal0" to slot 6 sampler slot 8
Set 2D Texture "_Normal1" to slot 7 sampler slot 9
Set 2D Texture "_Normal2" to slot 8 sampler slot 10
Set 2D Texture "_Normal3" to slot 9 sampler slot 11
Set 2D Texture "_TerrainNormalmapTexture" to slot 10 sampler slot 7
Set CUBE Texture "unity_SpecCube0" to slot 11 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 12 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 13 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 192
  Float _NormalScale1 at 196
  Float _NormalScale2 at 200
  Float _NormalScale3 at 204
  Float _Metallic0 at 208
  Float _Metallic1 at 212
  Float _Metallic2 at 216
  Float _Metallic3 at 220
  Float _Smoothness0 at 224
  Float _Smoothness1 at 228
  Float _Smoothness2 at 232
  Float _Smoothness3 at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[8], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texturecube (float,float,float,float) t11
      dcl_resource_texturecube (float,float,float,float) t12
      dcl_resource_texture3d (float,float,float,float) t13
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_temps 13
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: sample r3.xyzw, v4.xyxx, t0.xyzw, s12
   8: eq r1.w, r3.x, l(0.000000)
   9: discard_nz r1.w
  10: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  12: mul r3.xy, r3.xyxx, cb0[5].xyxx
  13: sample r3.xyzw, r3.xyxx, t1.xyzw, s2
  14: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  15: add r2.w, r1.w, l(0.001000)
  16: div r3.xyzw, r3.xyzw, r2.wwww
  17: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  19: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  20: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  21: sample r6.xyzw, r4.xyxx, t2.xyzw, s3
  22: mul r6.xyzw, r3.xxxx, r6.xyzw
  23: mul r6.w, r6.w, cb0[14].x
  24: sample r7.xyzw, r4.zwzz, t3.xyzw, s4
  25: mul r7.xyzw, r3.yyyy, r7.xyzw
  26: mul r7.w, r7.w, cb0[14].y
  27: add r6.xyzw, r6.xyzw, r7.xyzw
  28: sample r7.xyzw, r5.xyxx, t4.xyzw, s5
  29: mul r7.xyzw, r3.zzzz, r7.xyzw
  30: mul r7.w, r7.w, cb0[14].z
  31: add r6.xyzw, r6.xyzw, r7.xyzw
  32: sample r7.xyzw, r5.zwzz, t5.xyzw, s6
  33: mul r7.xyzw, r3.wwww, r7.xyzw
  34: mul r7.w, r7.w, cb0[14].w
  35: add r6.xyzw, r6.xyzw, r7.xyzw
  36: sample r7.xyzw, r4.xyxx, t6.xyzw, s8
  37: mul r7.x, r7.w, r7.x
  38: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  39: mul r7.xy, r4.xyxx, cb0[12].xxxx
  40: dp2 r2.w, r7.xyxx, r7.xyxx
  41: min r2.w, r2.w, l(1.000000)
  42: add r2.w, -r2.w, l(1.000000)
  43: sqrt r7.z, r2.w
  44: sample r4.xyzw, r4.zwzz, t7.xyzw, s9
  45: mul r4.x, r4.w, r4.x
  46: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  47: mul r4.xy, r4.xyxx, cb0[12].yyyy
  48: dp2 r2.w, r4.xyxx, r4.xyxx
  49: min r2.w, r2.w, l(1.000000)
  50: add r2.w, -r2.w, l(1.000000)
  51: sqrt r4.z, r2.w
  52: mul r4.xyz, r3.yyyy, r4.xyzx
  53: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  54: sample r7.xyzw, r5.xyxx, t8.xyzw, s10
  55: mul r7.x, r7.w, r7.x
  56: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  57: mul r7.xy, r5.xyxx, cb0[12].zzzz
  58: dp2 r2.w, r7.xyxx, r7.xyxx
  59: min r2.w, r2.w, l(1.000000)
  60: add r2.w, -r2.w, l(1.000000)
  61: sqrt r7.z, r2.w
  62: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  63: sample r5.xyzw, r5.zwzz, t9.xyzw, s11
  64: mul r5.x, r5.w, r5.x
  65: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  66: mul r5.xy, r5.xyxx, cb0[12].wwww
  67: dp2 r2.w, r5.xyxx, r5.xyxx
  68: min r2.w, r2.w, l(1.000000)
  69: add r2.w, -r2.w, l(1.000000)
  70: sqrt r5.z, r2.w
  71: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  72: add r2.w, r4.z, l(0.000010)
  73: sample r5.xyzw, v4.zwzz, t10.xyzw, s7
  74: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  75: dp3 r4.z, r5.xyzx, r5.xyzx
  76: rsq r4.z, r4.z
  77: mul r5.xyz, r4.zzzz, r5.xyzx
  78: mul r7.xyz, r5.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  79: mad r7.xyz, r5.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r7.xyzx
  80: dp2 r4.z, r7.xzxx, r7.xzxx
  81: rsq r4.z, r4.z
  82: mul r7.xyz, r4.zzzz, r7.xyzx
  83: mul r8.xyz, r5.zxyz, r7.yzxy
  84: mad r8.xyz, r7.zxyz, r5.yzxy, -r8.xyzx
  85: dp3 r4.z, r8.xyzx, r8.xyzx
  86: rsq r4.z, r4.z
  87: mul r8.xyz, r4.zzzz, r8.xyzx
  88: mul r4.yzw, r4.yyyy, r8.xxyz
  89: mad r4.xyz, r4.xxxx, r7.xyzx, r4.yzwy
  90: mad r4.xyz, r2.wwww, r5.xyzx, r4.xyzx
  91: dp4 r2.w, r3.xyzw, cb0[13].xyzw
  92: eq r3.x, cb4[0].x, l(1.000000)
  93: if_nz r3.x
  94:   eq r3.x, cb4[0].y, l(1.000000)
  95:   mul r3.yzw, v2.wwww, cb4[2].xxyz
  96:   mad r3.yzw, cb4[1].xxyz, v1.wwww, r3.yyzw
  97:   mad r3.yzw, cb4[3].xxyz, v3.wwww, r3.yyzw
  98:   add r3.yzw, r3.yyzw, cb4[4].xxyz
  99:   movc r3.xyz, r3.xxxx, r3.yzwy, r0.xyzx
 100:   add r3.xyz, r3.xyzx, -cb4[6].xyzx
 101:   mul r3.yzw, r3.xxyz, cb4[5].xxyz
 102:   mad r3.y, r3.y, l(0.250000), l(0.750000)
 103:   mad r4.w, cb4[0].z, l(0.500000), l(0.750000)
 104:   max r3.x, r3.y, r4.w
 105:   sample r3.xyzw, r3.xzwx, t13.xyzw, s1
 106: else 
 107:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 108: endif 
 109: dp4_sat r3.x, r3.xyzw, cb2[46].xyzw
 110: dp3 r5.x, v1.xyzx, r4.xyzx
 111: dp3 r5.y, v2.xyzx, r4.xyzx
 112: dp3 r5.z, v3.xyzx, r4.xyzx
 113: dp3 r3.y, r5.xyzx, r5.xyzx
 114: rsq r3.y, r3.y
 115: mul r3.yzw, r3.yyyy, r5.xxyz
 116: add r4.x, -r6.w, l(1.000000)
 117: dp3 r4.y, -r2.xyzx, r3.yzwy
 118: add r4.y, r4.y, r4.y
 119: mad r4.yzw, r3.yyzw, -r4.yyyy, -r2.xxyz
 120: mul r5.xyz, r3.xxxx, cb0[2].xyzx
 121: lt r3.x, l(0.000000), cb3[2].w
 122: if_nz r3.x
 123:   dp3 r3.x, r4.yzwy, r4.yzwy
 124:   rsq r3.x, r3.x
 125:   mul r7.xyz, r3.xxxx, r4.yzwy
 126:   add r8.xyz, -r0.xyzx, cb3[0].xyzx
 127:   div r8.xyz, r8.xyzx, r7.xyzx
 128:   add r9.xyz, -r0.xyzx, cb3[1].xyzx
 129:   div r9.xyz, r9.xyzx, r7.xyzx
 130:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
 131:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
 132:   min r3.x, r8.y, r8.x
 133:   min r3.x, r8.z, r3.x
 134:   add r8.xyz, r0.xyzx, -cb3[2].xyzx
 135:   mad r7.xyz, r7.xyzx, r3.xxxx, r8.xyzx
 136: else 
 137:   mov r7.xyz, r4.yzwy
 138: endif 
 139: mad r3.x, -r4.x, l(0.700000), l(1.700000)
 140: mul r3.x, r3.x, r4.x
 141: mul r3.x, r3.x, l(6.000000)
 142: sample_l r7.xyzw, r7.xyzx, t11.xyzw, s0, r3.x
 143: add r5.w, r7.w, l(-1.000000)
 144: mad r5.w, cb3[3].w, r5.w, l(1.000000)
 145: mul r5.w, r5.w, cb3[3].x
 146: mul r8.xyz, r7.xyzx, r5.wwww
 147: lt r7.w, cb3[1].w, l(0.999990)
 148: if_nz r7.w
 149:   lt r7.w, l(0.000000), cb3[6].w
 150:   if_nz r7.w
 151:     dp3 r7.w, r4.yzwy, r4.yzwy
 152:     rsq r7.w, r7.w
 153:     mul r9.xyz, r4.yzwy, r7.wwww
 154:     add r10.xyz, -r0.xyzx, cb3[4].xyzx
 155:     div r10.xyz, r10.xyzx, r9.xyzx
 156:     add r11.xyz, -r0.xyzx, cb3[5].xyzx
 157:     div r11.xyz, r11.xyzx, r9.xyzx
 158:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 159:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 160:     min r7.w, r10.y, r10.x
 161:     min r7.w, r10.z, r7.w
 162:     add r0.xyz, r0.xyzx, -cb3[6].xyzx
 163:     mad r4.yzw, r9.xxyz, r7.wwww, r0.xxyz
 164:   endif 
 165:   sample_l r9.xyzw, r4.yzwy, t12.xyzw, s0, r3.x
 166:   add r0.x, r9.w, l(-1.000000)
 167:   mad r0.x, cb3[7].w, r0.x, l(1.000000)
 168:   mul r0.x, r0.x, cb3[7].x
 169:   mul r0.xyz, r9.xyzx, r0.xxxx
 170:   mad r4.yzw, r5.wwww, r7.xxyz, -r0.xxyz
 171:   mad r8.xyz, cb3[1].wwww, r4.yzwy, r0.xyzx
 172: endif 
 173: add r0.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 174: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 175: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 176: mul r4.yzw, r2.wwww, r6.xxyz
 177: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 178: dp3 r0.w, r1.xyzx, r1.xyzx
 179: max r0.w, r0.w, l(0.001000)
 180: rsq r0.w, r0.w
 181: mul r1.xyz, r0.wwww, r1.xyzx
 182: dp3 r0.w, r3.yzwy, r2.xyzx
 183: dp3_sat r2.x, r3.yzwy, cb2[0].xyzx
 184: dp3_sat r2.y, r3.yzwy, r1.xyzx
 185: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 186: mul r1.y, r1.x, r1.x
 187: dp2 r1.y, r1.yyyy, r4.xxxx
 188: add r1.y, r1.y, l(-0.500000)
 189: add r1.z, -r2.x, l(1.000000)
 190: mul r2.z, r1.z, r1.z
 191: mul r2.z, r2.z, r2.z
 192: mul r1.z, r1.z, r2.z
 193: mad r1.z, r1.y, r1.z, l(1.000000)
 194: add r2.z, -|r0.w|, l(1.000000)
 195: mul r3.x, r2.z, r2.z
 196: mul r3.x, r3.x, r3.x
 197: mul r2.z, r2.z, r3.x
 198: mad r1.y, r1.y, r2.z, l(1.000000)
 199: mul r1.y, r1.y, r1.z
 200: mul r1.y, r2.x, r1.y
 201: mul r1.z, r4.x, r4.x
 202: max r1.z, r1.z, l(0.002000)
 203: add r3.x, -r1.z, l(1.000000)
 204: mad r3.y, |r0.w|, r3.x, r1.z
 205: mad r3.x, r2.x, r3.x, r1.z
 206: mul r0.w, |r0.w|, r3.x
 207: mad r0.w, r2.x, r3.y, r0.w
 208: add r0.w, r0.w, l(0.000010)
 209: div r0.w, l(0.500000), r0.w
 210: mul r3.x, r1.z, r1.z
 211: mad r3.y, r2.y, r3.x, -r2.y
 212: mad r2.y, r3.y, r2.y, l(1.000000)
 213: mul r3.x, r3.x, l(0.318310)
 214: mad r2.y, r2.y, r2.y, l(0.000000)
 215: div r2.y, r3.x, r2.y
 216: mul r0.w, r0.w, r2.y
 217: mul r0.w, r0.w, l(3.141593)
 218: max r0.w, r0.w, l(0.000100)
 219: sqrt r0.w, r0.w
 220: mul r0.w, r2.x, r0.w
 221: mul r1.z, r1.z, l(0.280000)
 222: mad r1.z, -r1.z, r4.x, l(1.000000)
 223: dp3 r2.x, r0.xyzx, r0.xyzx
 224: ne r2.x, r2.x, l(0.000000)
 225: and r2.x, r2.x, l(0x3f800000)
 226: mul r0.w, r0.w, r2.x
 227: add r2.x, -r2.w, r6.w
 228: add_sat r2.x, r2.x, l(1.000000)
 229: mul r3.xyz, r1.yyyy, r5.xyzx
 230: mul r5.xyz, r5.xyzx, r0.wwww
 231: add r0.w, -r1.x, l(1.000000)
 232: mul r1.x, r0.w, r0.w
 233: mul r1.x, r1.x, r1.x
 234: mul r0.w, r0.w, r1.x
 235: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 236: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 237: mul r5.xyz, r5.xyzx, r6.xyzx
 238: mad r3.xyz, r4.yzwy, r3.xyzx, r5.xyzx
 239: mul r1.xyz, r8.xyzx, r1.zzzz
 240: add r2.xyw, -r0.xyxz, r2.xxxx
 241: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 242: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 243: mul o0.xyz, r1.wwww, r0.xyzx
 244: mov o0.w, l(1.000000)
 245: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON LIGHTPROBE_SH 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 238 math, 14 temp registers, 15 textures, 8 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 12
Set 2D Texture "_Control" to slot 1 sampler slot 2
Set 2D Texture "_Splat0" to slot 2 sampler slot 3
Set 2D Texture "_Splat1" to slot 3 sampler slot 4
Set 2D Texture "_Splat2" to slot 4 sampler slot 5
Set 2D Texture "_Splat3" to slot 5 sampler slot 6
Set 2D Texture "_Normal0" to slot 6 sampler slot 8
Set 2D Texture "_Normal1" to slot 7 sampler slot 9
Set 2D Texture "_Normal2" to slot 8 sampler slot 10
Set 2D Texture "_Normal3" to slot 9 sampler slot 11
Set 2D Texture "_TerrainNormalmapTexture" to slot 10 sampler slot 7
Set CUBE Texture "unity_SpecCube0" to slot 11 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 12 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 13 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 192
  Float _NormalScale1 at 196
  Float _NormalScale2 at 200
  Float _NormalScale3 at 204
  Float _Metallic0 at 208
  Float _Metallic1 at 212
  Float _Metallic2 at 216
  Float _Metallic3 at 220
  Float _Smoothness0 at 224
  Float _Smoothness1 at 228
  Float _Smoothness2 at 232
  Float _Smoothness3 at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[8], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texturecube (float,float,float,float) t11
      dcl_resource_texturecube (float,float,float,float) t12
      dcl_resource_texture3d (float,float,float,float) t13
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_temps 14
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: sample r3.xyzw, v4.xyxx, t0.xyzw, s12
   8: eq r1.w, r3.x, l(0.000000)
   9: discard_nz r1.w
  10: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  12: mul r3.xy, r3.xyxx, cb0[5].xyxx
  13: sample r3.xyzw, r3.xyxx, t1.xyzw, s2
  14: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  15: add r2.w, r1.w, l(0.001000)
  16: div r3.xyzw, r3.xyzw, r2.wwww
  17: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  19: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  20: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  21: sample r6.xyzw, r4.xyxx, t2.xyzw, s3
  22: mul r6.xyzw, r3.xxxx, r6.xyzw
  23: mul r6.w, r6.w, cb0[14].x
  24: sample r7.xyzw, r4.zwzz, t3.xyzw, s4
  25: mul r7.xyzw, r3.yyyy, r7.xyzw
  26: mul r7.w, r7.w, cb0[14].y
  27: add r6.xyzw, r6.xyzw, r7.xyzw
  28: sample r7.xyzw, r5.xyxx, t4.xyzw, s5
  29: mul r7.xyzw, r3.zzzz, r7.xyzw
  30: mul r7.w, r7.w, cb0[14].z
  31: add r6.xyzw, r6.xyzw, r7.xyzw
  32: sample r7.xyzw, r5.zwzz, t5.xyzw, s6
  33: mul r7.xyzw, r3.wwww, r7.xyzw
  34: mul r7.w, r7.w, cb0[14].w
  35: add r6.xyzw, r6.xyzw, r7.xyzw
  36: sample r7.xyzw, r4.xyxx, t6.xyzw, s8
  37: mul r7.x, r7.w, r7.x
  38: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  39: mul r7.xy, r4.xyxx, cb0[12].xxxx
  40: dp2 r2.w, r7.xyxx, r7.xyxx
  41: min r2.w, r2.w, l(1.000000)
  42: add r2.w, -r2.w, l(1.000000)
  43: sqrt r7.z, r2.w
  44: sample r4.xyzw, r4.zwzz, t7.xyzw, s9
  45: mul r4.x, r4.w, r4.x
  46: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  47: mul r4.xy, r4.xyxx, cb0[12].yyyy
  48: dp2 r2.w, r4.xyxx, r4.xyxx
  49: min r2.w, r2.w, l(1.000000)
  50: add r2.w, -r2.w, l(1.000000)
  51: sqrt r4.z, r2.w
  52: mul r4.xyz, r3.yyyy, r4.xyzx
  53: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  54: sample r7.xyzw, r5.xyxx, t8.xyzw, s10
  55: mul r7.x, r7.w, r7.x
  56: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  57: mul r7.xy, r5.xyxx, cb0[12].zzzz
  58: dp2 r2.w, r7.xyxx, r7.xyxx
  59: min r2.w, r2.w, l(1.000000)
  60: add r2.w, -r2.w, l(1.000000)
  61: sqrt r7.z, r2.w
  62: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  63: sample r5.xyzw, r5.zwzz, t9.xyzw, s11
  64: mul r5.x, r5.w, r5.x
  65: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  66: mul r5.xy, r5.xyxx, cb0[12].wwww
  67: dp2 r2.w, r5.xyxx, r5.xyxx
  68: min r2.w, r2.w, l(1.000000)
  69: add r2.w, -r2.w, l(1.000000)
  70: sqrt r5.z, r2.w
  71: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  72: add r2.w, r4.z, l(0.000010)
  73: sample r5.xyzw, v4.zwzz, t10.xyzw, s7
  74: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  75: dp3 r4.z, r5.xyzx, r5.xyzx
  76: rsq r4.z, r4.z
  77: mul r5.xyz, r4.zzzz, r5.xyzx
  78: mul r7.xyz, r5.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  79: mad r7.xyz, r5.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r7.xyzx
  80: dp2 r4.z, r7.xzxx, r7.xzxx
  81: rsq r4.z, r4.z
  82: mul r7.xyz, r4.zzzz, r7.xyzx
  83: mul r8.xyz, r5.zxyz, r7.yzxy
  84: mad r8.xyz, r7.zxyz, r5.yzxy, -r8.xyzx
  85: dp3 r4.z, r8.xyzx, r8.xyzx
  86: rsq r4.z, r4.z
  87: mul r8.xyz, r4.zzzz, r8.xyzx
  88: mul r4.yzw, r4.yyyy, r8.xxyz
  89: mad r4.xyz, r4.xxxx, r7.xyzx, r4.yzwy
  90: mad r4.xyz, r2.wwww, r5.xyzx, r4.xyzx
  91: dp4 r2.w, r3.xyzw, cb0[13].xyzw
  92: eq r3.x, cb4[0].x, l(1.000000)
  93: if_nz r3.x
  94:   eq r3.y, cb4[0].y, l(1.000000)
  95:   mul r5.xyz, v2.wwww, cb4[2].xyzx
  96:   mad r5.xyz, cb4[1].xyzx, v1.wwww, r5.xyzx
  97:   mad r5.xyz, cb4[3].xyzx, v3.wwww, r5.xyzx
  98:   add r5.xyz, r5.xyzx, cb4[4].xyzx
  99:   movc r3.yzw, r3.yyyy, r5.xxyz, r0.xxyz
 100:   add r3.yzw, r3.yyzw, -cb4[6].xxyz
 101:   mul r5.yzw, r3.yyzw, cb4[5].xxyz
 102:   mad r3.y, r5.y, l(0.250000), l(0.750000)
 103:   mad r3.z, cb4[0].z, l(0.500000), l(0.750000)
 104:   max r5.x, r3.z, r3.y
 105:   sample r5.xyzw, r5.xzwx, t13.xyzw, s1
 106: else 
 107:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 108: endif 
 109: dp4_sat r3.y, r5.xyzw, cb2[46].xyzw
 110: dp3 r5.x, v1.xyzx, r4.xyzx
 111: dp3 r5.y, v2.xyzx, r4.xyzx
 112: dp3 r5.z, v3.xyzx, r4.xyzx
 113: dp3 r3.z, r5.xyzx, r5.xyzx
 114: rsq r3.z, r3.z
 115: mul r4.xyz, r3.zzzz, r5.xyzx
 116: add r3.z, -r6.w, l(1.000000)
 117: dp3 r3.w, -r2.xyzx, r4.xyzx
 118: add r3.w, r3.w, r3.w
 119: mad r5.xyz, r4.xyzx, -r3.wwww, -r2.xyzx
 120: mul r7.xyz, r3.yyyy, cb0[2].xyzx
 121: if_nz r3.x
 122:   eq r3.x, cb4[0].y, l(1.000000)
 123:   mul r8.xyz, v2.wwww, cb4[2].xyzx
 124:   mad r8.xyz, cb4[1].xyzx, v1.wwww, r8.xyzx
 125:   mad r8.xyz, cb4[3].xyzx, v3.wwww, r8.xyzx
 126:   add r8.xyz, r8.xyzx, cb4[4].xyzx
 127:   movc r3.xyw, r3.xxxx, r8.xyxz, r0.xyxz
 128:   add r3.xyw, r3.xyxw, -cb4[6].xyxz
 129:   mul r8.yzw, r3.xxyw, cb4[5].xxyz
 130:   mul r3.x, r8.y, l(0.250000)
 131:   mul r3.y, cb4[0].z, l(0.500000)
 132:   mad r3.w, -cb4[0].z, l(0.500000), l(0.250000)
 133:   max r3.x, r3.y, r3.x
 134:   min r8.x, r3.w, r3.x
 135:   sample r9.xyzw, r8.xzwx, t13.xyzw, s1
 136:   add r3.xyw, r8.xzxw, l(0.250000, 0.000000, 0.000000, 0.000000)
 137:   sample r10.xyzw, r3.xywx, t13.xyzw, s1
 138:   add r3.xyw, r8.xzxw, l(0.500000, 0.000000, 0.000000, 0.000000)
 139:   sample r8.xyzw, r3.xywx, t13.xyzw, s1
 140:   mov r4.w, l(1.000000)
 141:   dp4 r9.x, r9.xyzw, r4.xyzw
 142:   dp4 r9.y, r10.xyzw, r4.xyzw
 143:   dp4 r9.z, r8.xyzw, r4.xyzw
 144: else 
 145:   mov r4.w, l(1.000000)
 146:   dp4 r9.x, cb2[39].xyzw, r4.xyzw
 147:   dp4 r9.y, cb2[40].xyzw, r4.xyzw
 148:   dp4 r9.z, cb2[41].xyzw, r4.xyzw
 149: endif 
 150: add r3.xyw, r9.xyxz, v5.xyxz
 151: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
 152: log r3.xyw, r3.xyxw
 153: mul r3.xyw, r3.xyxw, l(0.416667, 0.416667, 0.000000, 0.416667)
 154: exp r3.xyw, r3.xyxw
 155: mad r3.xyw, r3.xyxw, l(1.055000, 1.055000, 0.000000, 1.055000), l(-0.055000, -0.055000, 0.000000, -0.055000)
 156: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
 157: lt r4.w, l(0.000000), cb3[2].w
 158: if_nz r4.w
 159:   dp3 r4.w, r5.xyzx, r5.xyzx
 160:   rsq r4.w, r4.w
 161:   mul r8.xyz, r4.wwww, r5.xyzx
 162:   add r9.xyz, -r0.xyzx, cb3[0].xyzx
 163:   div r9.xyz, r9.xyzx, r8.xyzx
 164:   add r10.xyz, -r0.xyzx, cb3[1].xyzx
 165:   div r10.xyz, r10.xyzx, r8.xyzx
 166:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
 167:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
 168:   min r4.w, r9.y, r9.x
 169:   min r4.w, r9.z, r4.w
 170:   add r9.xyz, r0.xyzx, -cb3[2].xyzx
 171:   mad r8.xyz, r8.xyzx, r4.wwww, r9.xyzx
 172: else 
 173:   mov r8.xyz, r5.xyzx
 174: endif 
 175: mad r4.w, -r3.z, l(0.700000), l(1.700000)
 176: mul r4.w, r3.z, r4.w
 177: mul r4.w, r4.w, l(6.000000)
 178: sample_l r8.xyzw, r8.xyzx, t11.xyzw, s0, r4.w
 179: add r5.w, r8.w, l(-1.000000)
 180: mad r5.w, cb3[3].w, r5.w, l(1.000000)
 181: mul r5.w, r5.w, cb3[3].x
 182: mul r9.xyz, r8.xyzx, r5.wwww
 183: lt r7.w, cb3[1].w, l(0.999990)
 184: if_nz r7.w
 185:   lt r7.w, l(0.000000), cb3[6].w
 186:   if_nz r7.w
 187:     dp3 r7.w, r5.xyzx, r5.xyzx
 188:     rsq r7.w, r7.w
 189:     mul r10.xyz, r5.xyzx, r7.wwww
 190:     add r11.xyz, -r0.xyzx, cb3[4].xyzx
 191:     div r11.xyz, r11.xyzx, r10.xyzx
 192:     add r12.xyz, -r0.xyzx, cb3[5].xyzx
 193:     div r12.xyz, r12.xyzx, r10.xyzx
 194:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 195:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 196:     min r7.w, r11.y, r11.x
 197:     min r7.w, r11.z, r7.w
 198:     add r0.xyz, r0.xyzx, -cb3[6].xyzx
 199:     mad r5.xyz, r10.xyzx, r7.wwww, r0.xyzx
 200:   endif 
 201:   sample_l r10.xyzw, r5.xyzx, t12.xyzw, s0, r4.w
 202:   add r0.x, r10.w, l(-1.000000)
 203:   mad r0.x, cb3[7].w, r0.x, l(1.000000)
 204:   mul r0.x, r0.x, cb3[7].x
 205:   mul r0.xyz, r10.xyzx, r0.xxxx
 206:   mad r5.xyz, r5.wwww, r8.xyzx, -r0.xyzx
 207:   mad r9.xyz, cb3[1].wwww, r5.xyzx, r0.xyzx
 208: endif 
 209: add r0.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 210: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 211: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 212: mul r5.xyz, r2.wwww, r6.xyzx
 213: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 214: dp3 r0.w, r1.xyzx, r1.xyzx
 215: max r0.w, r0.w, l(0.001000)
 216: rsq r0.w, r0.w
 217: mul r1.xyz, r0.wwww, r1.xyzx
 218: dp3 r0.w, r4.xyzx, r2.xyzx
 219: dp3_sat r2.x, r4.xyzx, cb2[0].xyzx
 220: dp3_sat r2.y, r4.xyzx, r1.xyzx
 221: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 222: mul r1.y, r1.x, r1.x
 223: dp2 r1.y, r1.yyyy, r3.zzzz
 224: add r1.y, r1.y, l(-0.500000)
 225: add r1.z, -r2.x, l(1.000000)
 226: mul r2.z, r1.z, r1.z
 227: mul r2.z, r2.z, r2.z
 228: mul r1.z, r1.z, r2.z
 229: mad r1.z, r1.y, r1.z, l(1.000000)
 230: add r2.z, -|r0.w|, l(1.000000)
 231: mul r4.x, r2.z, r2.z
 232: mul r4.x, r4.x, r4.x
 233: mul r2.z, r2.z, r4.x
 234: mad r1.y, r1.y, r2.z, l(1.000000)
 235: mul r1.y, r1.y, r1.z
 236: mul r1.y, r2.x, r1.y
 237: mul r1.z, r3.z, r3.z
 238: max r1.z, r1.z, l(0.002000)
 239: add r4.x, -r1.z, l(1.000000)
 240: mad r4.y, |r0.w|, r4.x, r1.z
 241: mad r4.x, r2.x, r4.x, r1.z
 242: mul r0.w, |r0.w|, r4.x
 243: mad r0.w, r2.x, r4.y, r0.w
 244: add r0.w, r0.w, l(0.000010)
 245: div r0.w, l(0.500000), r0.w
 246: mul r4.x, r1.z, r1.z
 247: mad r4.y, r2.y, r4.x, -r2.y
 248: mad r2.y, r4.y, r2.y, l(1.000000)
 249: mul r4.x, r4.x, l(0.318310)
 250: mad r2.y, r2.y, r2.y, l(0.000000)
 251: div r2.y, r4.x, r2.y
 252: mul r0.w, r0.w, r2.y
 253: mul r0.w, r0.w, l(3.141593)
 254: max r0.w, r0.w, l(0.000100)
 255: sqrt r0.w, r0.w
 256: mul r0.w, r2.x, r0.w
 257: mul r1.z, r1.z, l(0.280000)
 258: mad r1.z, -r1.z, r3.z, l(1.000000)
 259: dp3 r2.x, r0.xyzx, r0.xyzx
 260: ne r2.x, r2.x, l(0.000000)
 261: and r2.x, r2.x, l(0x3f800000)
 262: mul r0.w, r0.w, r2.x
 263: add r2.x, -r2.w, r6.w
 264: add_sat r2.x, r2.x, l(1.000000)
 265: mad r3.xyz, r7.xyzx, r1.yyyy, r3.xywx
 266: mul r4.xyz, r7.xyzx, r0.wwww
 267: add r0.w, -r1.x, l(1.000000)
 268: mul r1.x, r0.w, r0.w
 269: mul r1.x, r1.x, r1.x
 270: mul r0.w, r0.w, r1.x
 271: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 272: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 273: mul r4.xyz, r4.xyzx, r6.xyzx
 274: mad r3.xyz, r5.xyzx, r3.xyzx, r4.xyzx
 275: mul r1.xyz, r9.xyzx, r1.zzzz
 276: add r2.xyw, -r0.xyxz, r2.xxxx
 277: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 278: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 279: mul o0.xyz, r1.wwww, r0.xyzx
 280: mov o0.w, l(1.000000)
 281: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 221 math, 13 temp registers, 13 textures, 6 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 13
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_Normal0" to slot 6 sampler slot 9
Set 2D Texture "_Normal1" to slot 7 sampler slot 10
Set 2D Texture "_Normal2" to slot 8 sampler slot 11
Set 2D Texture "_Normal3" to slot 9 sampler slot 12
Set 2D Texture "_TerrainNormalmapTexture" to slot 10 sampler slot 8
Set 2D Texture "_ShadowMapTexture" to slot 11 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 12 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 13 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 14 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 192
  Float _NormalScale1 at 196
  Float _NormalScale2 at 200
  Float _NormalScale3 at 204
  Float _Metallic0 at 208
  Float _Metallic1 at 212
  Float _Metallic2 at 216
  Float _Metallic3 at 220
  Float _Smoothness0 at 224
  Float _Smoothness1 at 228
  Float _Smoothness2 at 232
  Float _Smoothness3 at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xy w
// TEXCOORD                 6   xyzw        6     NONE   float       
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_sampler s13, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture2d (float,float,float,float) t11
      dcl_resource_texturecube (float,float,float,float) t12
      dcl_resource_texturecube (float,float,float,float) t13
      dcl_resource_texture3d (float,float,float,float) t14
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: sample r3.xyzw, v4.xyxx, t0.xyzw, s13
   8: eq r1.w, r3.x, l(0.000000)
   9: discard_nz r1.w
  10: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  12: mul r3.xy, r3.xyxx, cb0[5].xyxx
  13: sample r3.xyzw, r3.xyxx, t1.xyzw, s3
  14: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  15: add r2.w, r1.w, l(0.001000)
  16: div r3.xyzw, r3.xyzw, r2.wwww
  17: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  19: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  20: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  21: sample r6.xyzw, r4.xyxx, t2.xyzw, s4
  22: mul r6.xyzw, r3.xxxx, r6.xyzw
  23: mul r6.w, r6.w, cb0[14].x
  24: sample r7.xyzw, r4.zwzz, t3.xyzw, s5
  25: mul r7.xyzw, r3.yyyy, r7.xyzw
  26: mul r7.w, r7.w, cb0[14].y
  27: add r6.xyzw, r6.xyzw, r7.xyzw
  28: sample r7.xyzw, r5.xyxx, t4.xyzw, s6
  29: mul r7.xyzw, r3.zzzz, r7.xyzw
  30: mul r7.w, r7.w, cb0[14].z
  31: add r6.xyzw, r6.xyzw, r7.xyzw
  32: sample r7.xyzw, r5.zwzz, t5.xyzw, s7
  33: mul r7.xyzw, r3.wwww, r7.xyzw
  34: mul r7.w, r7.w, cb0[14].w
  35: add r6.xyzw, r6.xyzw, r7.xyzw
  36: sample r7.xyzw, r4.xyxx, t6.xyzw, s9
  37: mul r7.x, r7.w, r7.x
  38: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  39: mul r7.xy, r4.xyxx, cb0[12].xxxx
  40: dp2 r2.w, r7.xyxx, r7.xyxx
  41: min r2.w, r2.w, l(1.000000)
  42: add r2.w, -r2.w, l(1.000000)
  43: sqrt r7.z, r2.w
  44: sample r4.xyzw, r4.zwzz, t7.xyzw, s10
  45: mul r4.x, r4.w, r4.x
  46: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  47: mul r4.xy, r4.xyxx, cb0[12].yyyy
  48: dp2 r2.w, r4.xyxx, r4.xyxx
  49: min r2.w, r2.w, l(1.000000)
  50: add r2.w, -r2.w, l(1.000000)
  51: sqrt r4.z, r2.w
  52: mul r4.xyz, r3.yyyy, r4.xyzx
  53: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  54: sample r7.xyzw, r5.xyxx, t8.xyzw, s11
  55: mul r7.x, r7.w, r7.x
  56: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  57: mul r7.xy, r5.xyxx, cb0[12].zzzz
  58: dp2 r2.w, r7.xyxx, r7.xyxx
  59: min r2.w, r2.w, l(1.000000)
  60: add r2.w, -r2.w, l(1.000000)
  61: sqrt r7.z, r2.w
  62: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  63: sample r5.xyzw, r5.zwzz, t9.xyzw, s12
  64: mul r5.x, r5.w, r5.x
  65: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  66: mul r5.xy, r5.xyxx, cb0[12].wwww
  67: dp2 r2.w, r5.xyxx, r5.xyxx
  68: min r2.w, r2.w, l(1.000000)
  69: add r2.w, -r2.w, l(1.000000)
  70: sqrt r5.z, r2.w
  71: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  72: add r2.w, r4.z, l(0.000010)
  73: sample r5.xyzw, v4.zwzz, t10.xyzw, s8
  74: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  75: dp3 r4.z, r5.xyzx, r5.xyzx
  76: rsq r4.z, r4.z
  77: mul r5.xyz, r4.zzzz, r5.xyzx
  78: mul r7.xyz, r5.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  79: mad r7.xyz, r5.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r7.xyzx
  80: dp2 r4.z, r7.xzxx, r7.xzxx
  81: rsq r4.z, r4.z
  82: mul r7.xyz, r4.zzzz, r7.xyzx
  83: mul r8.xyz, r5.zxyz, r7.yzxy
  84: mad r8.xyz, r7.zxyz, r5.yzxy, -r8.xyzx
  85: dp3 r4.z, r8.xyzx, r8.xyzx
  86: rsq r4.z, r4.z
  87: mul r8.xyz, r4.zzzz, r8.xyzx
  88: mul r4.yzw, r4.yyyy, r8.xxyz
  89: mad r4.xyz, r4.xxxx, r7.xyzx, r4.yzwy
  90: mad r4.xyz, r2.wwww, r5.xyzx, r4.xyzx
  91: dp4 r2.w, r3.xyzw, cb0[13].xyzw
  92: mov r3.x, cb4[9].z
  93: mov r3.y, cb4[10].z
  94: mov r3.z, cb4[11].z
  95: dp3 r3.x, r1.xyzx, r3.xyzx
  96: add r3.yzw, r0.xxyz, -cb3[25].xxyz
  97: dp3 r3.y, r3.yzwy, r3.yzwy
  98: sqrt r3.y, r3.y
  99: add r3.y, -r3.x, r3.y
 100: mad r3.x, cb3[25].w, r3.y, r3.x
 101: mad_sat r3.x, r3.x, cb3[24].z, cb3[24].w
 102: eq r3.y, cb6[0].x, l(1.000000)
 103: if_nz r3.y
 104:   eq r3.y, cb6[0].y, l(1.000000)
 105:   mul r5.xyz, v2.wwww, cb6[2].xyzx
 106:   mad r5.xyz, cb6[1].xyzx, v1.wwww, r5.xyzx
 107:   mad r5.xyz, cb6[3].xyzx, v3.wwww, r5.xyzx
 108:   add r5.xyz, r5.xyzx, cb6[4].xyzx
 109:   movc r3.yzw, r3.yyyy, r5.xxyz, r0.xxyz
 110:   add r3.yzw, r3.yyzw, -cb6[6].xxyz
 111:   mul r5.yzw, r3.yyzw, cb6[5].xxyz
 112:   mad r3.y, r5.y, l(0.250000), l(0.750000)
 113:   mad r3.z, cb6[0].z, l(0.500000), l(0.750000)
 114:   max r5.x, r3.z, r3.y
 115:   sample r5.xyzw, r5.xzwx, t14.xyzw, s1
 116: else 
 117:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 118: endif 
 119: dp4_sat r3.y, r5.xyzw, cb2[46].xyzw
 120: div r3.zw, v5.xxxy, v5.wwww
 121: sample r5.xyzw, r3.zwzz, t11.xyzw, s2
 122: add r3.y, r3.y, -r5.x
 123: mad r3.x, r3.x, r3.y, r5.x
 124: dp3 r5.x, v1.xyzx, r4.xyzx
 125: dp3 r5.y, v2.xyzx, r4.xyzx
 126: dp3 r5.z, v3.xyzx, r4.xyzx
 127: dp3 r3.y, r5.xyzx, r5.xyzx
 128: rsq r3.y, r3.y
 129: mul r3.yzw, r3.yyyy, r5.xxyz
 130: add r4.x, -r6.w, l(1.000000)
 131: dp3 r4.y, -r2.xyzx, r3.yzwy
 132: add r4.y, r4.y, r4.y
 133: mad r4.yzw, r3.yyzw, -r4.yyyy, -r2.xxyz
 134: mul r5.xyz, r3.xxxx, cb0[2].xyzx
 135: lt r3.x, l(0.000000), cb5[2].w
 136: if_nz r3.x
 137:   dp3 r3.x, r4.yzwy, r4.yzwy
 138:   rsq r3.x, r3.x
 139:   mul r7.xyz, r3.xxxx, r4.yzwy
 140:   add r8.xyz, -r0.xyzx, cb5[0].xyzx
 141:   div r8.xyz, r8.xyzx, r7.xyzx
 142:   add r9.xyz, -r0.xyzx, cb5[1].xyzx
 143:   div r9.xyz, r9.xyzx, r7.xyzx
 144:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
 145:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
 146:   min r3.x, r8.y, r8.x
 147:   min r3.x, r8.z, r3.x
 148:   add r8.xyz, r0.xyzx, -cb5[2].xyzx
 149:   mad r7.xyz, r7.xyzx, r3.xxxx, r8.xyzx
 150: else 
 151:   mov r7.xyz, r4.yzwy
 152: endif 
 153: mad r3.x, -r4.x, l(0.700000), l(1.700000)
 154: mul r3.x, r3.x, r4.x
 155: mul r3.x, r3.x, l(6.000000)
 156: sample_l r7.xyzw, r7.xyzx, t12.xyzw, s0, r3.x
 157: add r5.w, r7.w, l(-1.000000)
 158: mad r5.w, cb5[3].w, r5.w, l(1.000000)
 159: mul r5.w, r5.w, cb5[3].x
 160: mul r8.xyz, r7.xyzx, r5.wwww
 161: lt r7.w, cb5[1].w, l(0.999990)
 162: if_nz r7.w
 163:   lt r7.w, l(0.000000), cb5[6].w
 164:   if_nz r7.w
 165:     dp3 r7.w, r4.yzwy, r4.yzwy
 166:     rsq r7.w, r7.w
 167:     mul r9.xyz, r4.yzwy, r7.wwww
 168:     add r10.xyz, -r0.xyzx, cb5[4].xyzx
 169:     div r10.xyz, r10.xyzx, r9.xyzx
 170:     add r11.xyz, -r0.xyzx, cb5[5].xyzx
 171:     div r11.xyz, r11.xyzx, r9.xyzx
 172:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 173:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 174:     min r7.w, r10.y, r10.x
 175:     min r7.w, r10.z, r7.w
 176:     add r0.xyz, r0.xyzx, -cb5[6].xyzx
 177:     mad r4.yzw, r9.xxyz, r7.wwww, r0.xxyz
 178:   endif 
 179:   sample_l r9.xyzw, r4.yzwy, t13.xyzw, s0, r3.x
 180:   add r0.x, r9.w, l(-1.000000)
 181:   mad r0.x, cb5[7].w, r0.x, l(1.000000)
 182:   mul r0.x, r0.x, cb5[7].x
 183:   mul r0.xyz, r9.xyzx, r0.xxxx
 184:   mad r4.yzw, r5.wwww, r7.xxyz, -r0.xxyz
 185:   mad r8.xyz, cb5[1].wwww, r4.yzwy, r0.xyzx
 186: endif 
 187: add r0.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 188: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 189: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 190: mul r4.yzw, r2.wwww, r6.xxyz
 191: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 192: dp3 r0.w, r1.xyzx, r1.xyzx
 193: max r0.w, r0.w, l(0.001000)
 194: rsq r0.w, r0.w
 195: mul r1.xyz, r0.wwww, r1.xyzx
 196: dp3 r0.w, r3.yzwy, r2.xyzx
 197: dp3_sat r2.x, r3.yzwy, cb2[0].xyzx
 198: dp3_sat r2.y, r3.yzwy, r1.xyzx
 199: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 200: mul r1.y, r1.x, r1.x
 201: dp2 r1.y, r1.yyyy, r4.xxxx
 202: add r1.y, r1.y, l(-0.500000)
 203: add r1.z, -r2.x, l(1.000000)
 204: mul r2.z, r1.z, r1.z
 205: mul r2.z, r2.z, r2.z
 206: mul r1.z, r1.z, r2.z
 207: mad r1.z, r1.y, r1.z, l(1.000000)
 208: add r2.z, -|r0.w|, l(1.000000)
 209: mul r3.x, r2.z, r2.z
 210: mul r3.x, r3.x, r3.x
 211: mul r2.z, r2.z, r3.x
 212: mad r1.y, r1.y, r2.z, l(1.000000)
 213: mul r1.y, r1.y, r1.z
 214: mul r1.y, r2.x, r1.y
 215: mul r1.z, r4.x, r4.x
 216: max r1.z, r1.z, l(0.002000)
 217: add r3.x, -r1.z, l(1.000000)
 218: mad r3.y, |r0.w|, r3.x, r1.z
 219: mad r3.x, r2.x, r3.x, r1.z
 220: mul r0.w, |r0.w|, r3.x
 221: mad r0.w, r2.x, r3.y, r0.w
 222: add r0.w, r0.w, l(0.000010)
 223: div r0.w, l(0.500000), r0.w
 224: mul r3.x, r1.z, r1.z
 225: mad r3.y, r2.y, r3.x, -r2.y
 226: mad r2.y, r3.y, r2.y, l(1.000000)
 227: mul r3.x, r3.x, l(0.318310)
 228: mad r2.y, r2.y, r2.y, l(0.000000)
 229: div r2.y, r3.x, r2.y
 230: mul r0.w, r0.w, r2.y
 231: mul r0.w, r0.w, l(3.141593)
 232: max r0.w, r0.w, l(0.000100)
 233: sqrt r0.w, r0.w
 234: mul r0.w, r2.x, r0.w
 235: mul r1.z, r1.z, l(0.280000)
 236: mad r1.z, -r1.z, r4.x, l(1.000000)
 237: dp3 r2.x, r0.xyzx, r0.xyzx
 238: ne r2.x, r2.x, l(0.000000)
 239: and r2.x, r2.x, l(0x3f800000)
 240: mul r0.w, r0.w, r2.x
 241: add r2.x, -r2.w, r6.w
 242: add_sat r2.x, r2.x, l(1.000000)
 243: mul r3.xyz, r1.yyyy, r5.xyzx
 244: mul r5.xyz, r5.xyzx, r0.wwww
 245: add r0.w, -r1.x, l(1.000000)
 246: mul r1.x, r0.w, r0.w
 247: mul r1.x, r1.x, r1.x
 248: mul r0.w, r0.w, r1.x
 249: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 250: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 251: mul r5.xyz, r5.xyzx, r6.xyzx
 252: mad r3.xyz, r4.yzwy, r3.xyzx, r5.xyzx
 253: mul r1.xyz, r8.xyzx, r1.zzzz
 254: add r2.xyw, -r0.xyxz, r2.xxxx
 255: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 256: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 257: mul o0.xyz, r1.wwww, r0.xyzx
 258: mov o0.w, l(1.000000)
 259: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 248 math, 14 temp registers, 16 textures, 8 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 13
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_Normal0" to slot 6 sampler slot 9
Set 2D Texture "_Normal1" to slot 7 sampler slot 10
Set 2D Texture "_Normal2" to slot 8 sampler slot 11
Set 2D Texture "_Normal3" to slot 9 sampler slot 12
Set 2D Texture "_TerrainNormalmapTexture" to slot 10 sampler slot 8
Set 2D Texture "_ShadowMapTexture" to slot 11 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 12 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 13 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 14 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 192
  Float _NormalScale1 at 196
  Float _NormalScale2 at 200
  Float _NormalScale3 at 204
  Float _Metallic0 at 208
  Float _Metallic1 at 212
  Float _Metallic2 at 216
  Float _Metallic3 at 220
  Float _Smoothness0 at 224
  Float _Smoothness1 at 228
  Float _Smoothness2 at 232
  Float _Smoothness3 at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_sampler s13, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture2d (float,float,float,float) t11
      dcl_resource_texturecube (float,float,float,float) t12
      dcl_resource_texturecube (float,float,float,float) t13
      dcl_resource_texture3d (float,float,float,float) t14
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: mov r0.x, v1.w
   1: mov r0.y, v2.w
   2: mov r0.z, v3.w
   3: add r1.xyz, -r0.xyzx, cb1[4].xyzx
   4: dp3 r0.w, r1.xyzx, r1.xyzx
   5: rsq r0.w, r0.w
   6: mul r2.xyz, r0.wwww, r1.xyzx
   7: sample r3.xyzw, v4.xyxx, t0.xyzw, s13
   8: eq r1.w, r3.x, l(0.000000)
   9: discard_nz r1.w
  10: add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  12: mul r3.xy, r3.xyxx, cb0[5].xyxx
  13: sample r3.xyzw, r3.xyxx, t1.xyzw, s3
  14: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  15: add r2.w, r1.w, l(0.001000)
  16: div r3.xyzw, r3.xyzw, r2.wwww
  17: mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
  19: mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  20: mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
  21: sample r6.xyzw, r4.xyxx, t2.xyzw, s4
  22: mul r6.xyzw, r3.xxxx, r6.xyzw
  23: mul r6.w, r6.w, cb0[14].x
  24: sample r7.xyzw, r4.zwzz, t3.xyzw, s5
  25: mul r7.xyzw, r3.yyyy, r7.xyzw
  26: mul r7.w, r7.w, cb0[14].y
  27: add r6.xyzw, r6.xyzw, r7.xyzw
  28: sample r7.xyzw, r5.xyxx, t4.xyzw, s6
  29: mul r7.xyzw, r3.zzzz, r7.xyzw
  30: mul r7.w, r7.w, cb0[14].z
  31: add r6.xyzw, r6.xyzw, r7.xyzw
  32: sample r7.xyzw, r5.zwzz, t5.xyzw, s7
  33: mul r7.xyzw, r3.wwww, r7.xyzw
  34: mul r7.w, r7.w, cb0[14].w
  35: add r6.xyzw, r6.xyzw, r7.xyzw
  36: sample r7.xyzw, r4.xyxx, t6.xyzw, s9
  37: mul r7.x, r7.w, r7.x
  38: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  39: mul r7.xy, r4.xyxx, cb0[12].xxxx
  40: dp2 r2.w, r7.xyxx, r7.xyxx
  41: min r2.w, r2.w, l(1.000000)
  42: add r2.w, -r2.w, l(1.000000)
  43: sqrt r7.z, r2.w
  44: sample r4.xyzw, r4.zwzz, t7.xyzw, s10
  45: mul r4.x, r4.w, r4.x
  46: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  47: mul r4.xy, r4.xyxx, cb0[12].yyyy
  48: dp2 r2.w, r4.xyxx, r4.xyxx
  49: min r2.w, r2.w, l(1.000000)
  50: add r2.w, -r2.w, l(1.000000)
  51: sqrt r4.z, r2.w
  52: mul r4.xyz, r3.yyyy, r4.xyzx
  53: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  54: sample r7.xyzw, r5.xyxx, t8.xyzw, s11
  55: mul r7.x, r7.w, r7.x
  56: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  57: mul r7.xy, r5.xyxx, cb0[12].zzzz
  58: dp2 r2.w, r7.xyxx, r7.xyxx
  59: min r2.w, r2.w, l(1.000000)
  60: add r2.w, -r2.w, l(1.000000)
  61: sqrt r7.z, r2.w
  62: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  63: sample r5.xyzw, r5.zwzz, t9.xyzw, s12
  64: mul r5.x, r5.w, r5.x
  65: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  66: mul r5.xy, r5.xyxx, cb0[12].wwww
  67: dp2 r2.w, r5.xyxx, r5.xyxx
  68: min r2.w, r2.w, l(1.000000)
  69: add r2.w, -r2.w, l(1.000000)
  70: sqrt r5.z, r2.w
  71: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  72: add r2.w, r4.z, l(0.000010)
  73: sample r5.xyzw, v4.zwzz, t10.xyzw, s8
  74: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  75: dp3 r4.z, r5.xyzx, r5.xyzx
  76: rsq r4.z, r4.z
  77: mul r5.xyz, r4.zzzz, r5.xyzx
  78: mul r7.xyz, r5.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  79: mad r7.xyz, r5.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r7.xyzx
  80: dp2 r4.z, r7.xzxx, r7.xzxx
  81: rsq r4.z, r4.z
  82: mul r7.xyz, r4.zzzz, r7.xyzx
  83: mul r8.xyz, r5.zxyz, r7.yzxy
  84: mad r8.xyz, r7.zxyz, r5.yzxy, -r8.xyzx
  85: dp3 r4.z, r8.xyzx, r8.xyzx
  86: rsq r4.z, r4.z
  87: mul r8.xyz, r4.zzzz, r8.xyzx
  88: mul r4.yzw, r4.yyyy, r8.xxyz
  89: mad r4.xyz, r4.xxxx, r7.xyzx, r4.yzwy
  90: mad r4.xyz, r2.wwww, r5.xyzx, r4.xyzx
  91: dp4 r2.w, r3.xyzw, cb0[13].xyzw
  92: mov r3.x, cb4[9].z
  93: mov r3.y, cb4[10].z
  94: mov r3.z, cb4[11].z
  95: dp3 r3.x, r1.xyzx, r3.xyzx
  96: add r3.yzw, r0.xxyz, -cb3[25].xxyz
  97: dp3 r3.y, r3.yzwy, r3.yzwy
  98: sqrt r3.y, r3.y
  99: add r3.y, -r3.x, r3.y
 100: mad r3.x, cb3[25].w, r3.y, r3.x
 101: mad_sat r3.x, r3.x, cb3[24].z, cb3[24].w
 102: eq r3.y, cb6[0].x, l(1.000000)
 103: if_nz r3.y
 104:   eq r3.z, cb6[0].y, l(1.000000)
 105:   mul r5.xyz, v2.wwww, cb6[2].xyzx
 106:   mad r5.xyz, cb6[1].xyzx, v1.wwww, r5.xyzx
 107:   mad r5.xyz, cb6[3].xyzx, v3.wwww, r5.xyzx
 108:   add r5.xyz, r5.xyzx, cb6[4].xyzx
 109:   movc r5.xyz, r3.zzzz, r5.xyzx, r0.xyzx
 110:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
 111:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
 112:   mad r3.z, r5.y, l(0.250000), l(0.750000)
 113:   mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
 114:   max r5.x, r3.w, r3.z
 115:   sample r5.xyzw, r5.xzwx, t14.xyzw, s1
 116: else 
 117:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 118: endif 
 119: dp4_sat r3.z, r5.xyzw, cb2[46].xyzw
 120: div r5.xy, v6.xyxx, v6.wwww
 121: sample r5.xyzw, r5.xyxx, t11.xyzw, s2
 122: add r3.z, r3.z, -r5.x
 123: mad r3.x, r3.x, r3.z, r5.x
 124: dp3 r5.x, v1.xyzx, r4.xyzx
 125: dp3 r5.y, v2.xyzx, r4.xyzx
 126: dp3 r5.z, v3.xyzx, r4.xyzx
 127: dp3 r3.z, r5.xyzx, r5.xyzx
 128: rsq r3.z, r3.z
 129: mul r4.xyz, r3.zzzz, r5.xyzx
 130: add r3.z, -r6.w, l(1.000000)
 131: dp3 r3.w, -r2.xyzx, r4.xyzx
 132: add r3.w, r3.w, r3.w
 133: mad r5.xyz, r4.xyzx, -r3.wwww, -r2.xyzx
 134: mul r7.xyz, r3.xxxx, cb0[2].xyzx
 135: if_nz r3.y
 136:   eq r3.x, cb6[0].y, l(1.000000)
 137:   mul r8.xyz, v2.wwww, cb6[2].xyzx
 138:   mad r8.xyz, cb6[1].xyzx, v1.wwww, r8.xyzx
 139:   mad r8.xyz, cb6[3].xyzx, v3.wwww, r8.xyzx
 140:   add r8.xyz, r8.xyzx, cb6[4].xyzx
 141:   movc r3.xyw, r3.xxxx, r8.xyxz, r0.xyxz
 142:   add r3.xyw, r3.xyxw, -cb6[6].xyxz
 143:   mul r8.yzw, r3.xxyw, cb6[5].xxyz
 144:   mul r3.x, r8.y, l(0.250000)
 145:   mul r3.y, cb6[0].z, l(0.500000)
 146:   mad r3.w, -cb6[0].z, l(0.500000), l(0.250000)
 147:   max r3.x, r3.y, r3.x
 148:   min r8.x, r3.w, r3.x
 149:   sample r9.xyzw, r8.xzwx, t14.xyzw, s1
 150:   add r3.xyw, r8.xzxw, l(0.250000, 0.000000, 0.000000, 0.000000)
 151:   sample r10.xyzw, r3.xywx, t14.xyzw, s1
 152:   add r3.xyw, r8.xzxw, l(0.500000, 0.000000, 0.000000, 0.000000)
 153:   sample r8.xyzw, r3.xywx, t14.xyzw, s1
 154:   mov r4.w, l(1.000000)
 155:   dp4 r9.x, r9.xyzw, r4.xyzw
 156:   dp4 r9.y, r10.xyzw, r4.xyzw
 157:   dp4 r9.z, r8.xyzw, r4.xyzw
 158: else 
 159:   mov r4.w, l(1.000000)
 160:   dp4 r9.x, cb2[39].xyzw, r4.xyzw
 161:   dp4 r9.y, cb2[40].xyzw, r4.xyzw
 162:   dp4 r9.z, cb2[41].xyzw, r4.xyzw
 163: endif 
 164: add r3.xyw, r9.xyxz, v5.xyxz
 165: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
 166: log r3.xyw, r3.xyxw
 167: mul r3.xyw, r3.xyxw, l(0.416667, 0.416667, 0.000000, 0.416667)
 168: exp r3.xyw, r3.xyxw
 169: mad r3.xyw, r3.xyxw, l(1.055000, 1.055000, 0.000000, 1.055000), l(-0.055000, -0.055000, 0.000000, -0.055000)
 170: max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
 171: lt r4.w, l(0.000000), cb5[2].w
 172: if_nz r4.w
 173:   dp3 r4.w, r5.xyzx, r5.xyzx
 174:   rsq r4.w, r4.w
 175:   mul r8.xyz, r4.wwww, r5.xyzx
 176:   add r9.xyz, -r0.xyzx, cb5[0].xyzx
 177:   div r9.xyz, r9.xyzx, r8.xyzx
 178:   add r10.xyz, -r0.xyzx, cb5[1].xyzx
 179:   div r10.xyz, r10.xyzx, r8.xyzx
 180:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
 181:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
 182:   min r4.w, r9.y, r9.x
 183:   min r4.w, r9.z, r4.w
 184:   add r9.xyz, r0.xyzx, -cb5[2].xyzx
 185:   mad r8.xyz, r8.xyzx, r4.wwww, r9.xyzx
 186: else 
 187:   mov r8.xyz, r5.xyzx
 188: endif 
 189: mad r4.w, -r3.z, l(0.700000), l(1.700000)
 190: mul r4.w, r3.z, r4.w
 191: mul r4.w, r4.w, l(6.000000)
 192: sample_l r8.xyzw, r8.xyzx, t12.xyzw, s0, r4.w
 193: add r5.w, r8.w, l(-1.000000)
 194: mad r5.w, cb5[3].w, r5.w, l(1.000000)
 195: mul r5.w, r5.w, cb5[3].x
 196: mul r9.xyz, r8.xyzx, r5.wwww
 197: lt r7.w, cb5[1].w, l(0.999990)
 198: if_nz r7.w
 199:   lt r7.w, l(0.000000), cb5[6].w
 200:   if_nz r7.w
 201:     dp3 r7.w, r5.xyzx, r5.xyzx
 202:     rsq r7.w, r7.w
 203:     mul r10.xyz, r5.xyzx, r7.wwww
 204:     add r11.xyz, -r0.xyzx, cb5[4].xyzx
 205:     div r11.xyz, r11.xyzx, r10.xyzx
 206:     add r12.xyz, -r0.xyzx, cb5[5].xyzx
 207:     div r12.xyz, r12.xyzx, r10.xyzx
 208:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 209:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 210:     min r7.w, r11.y, r11.x
 211:     min r7.w, r11.z, r7.w
 212:     add r0.xyz, r0.xyzx, -cb5[6].xyzx
 213:     mad r5.xyz, r10.xyzx, r7.wwww, r0.xyzx
 214:   endif 
 215:   sample_l r10.xyzw, r5.xyzx, t13.xyzw, s0, r4.w
 216:   add r0.x, r10.w, l(-1.000000)
 217:   mad r0.x, cb5[7].w, r0.x, l(1.000000)
 218:   mul r0.x, r0.x, cb5[7].x
 219:   mul r0.xyz, r10.xyzx, r0.xxxx
 220:   mad r5.xyz, r5.wwww, r8.xyzx, -r0.xyzx
 221:   mad r9.xyz, cb5[1].wwww, r5.xyzx, r0.xyzx
 222: endif 
 223: add r0.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 224: mad r0.xyz, r2.wwww, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 225: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 226: mul r5.xyz, r2.wwww, r6.xyzx
 227: mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
 228: dp3 r0.w, r1.xyzx, r1.xyzx
 229: max r0.w, r0.w, l(0.001000)
 230: rsq r0.w, r0.w
 231: mul r1.xyz, r0.wwww, r1.xyzx
 232: dp3 r0.w, r4.xyzx, r2.xyzx
 233: dp3_sat r2.x, r4.xyzx, cb2[0].xyzx
 234: dp3_sat r2.y, r4.xyzx, r1.xyzx
 235: dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
 236: mul r1.y, r1.x, r1.x
 237: dp2 r1.y, r1.yyyy, r3.zzzz
 238: add r1.y, r1.y, l(-0.500000)
 239: add r1.z, -r2.x, l(1.000000)
 240: mul r2.z, r1.z, r1.z
 241: mul r2.z, r2.z, r2.z
 242: mul r1.z, r1.z, r2.z
 243: mad r1.z, r1.y, r1.z, l(1.000000)
 244: add r2.z, -|r0.w|, l(1.000000)
 245: mul r4.x, r2.z, r2.z
 246: mul r4.x, r4.x, r4.x
 247: mul r2.z, r2.z, r4.x
 248: mad r1.y, r1.y, r2.z, l(1.000000)
 249: mul r1.y, r1.y, r1.z
 250: mul r1.y, r2.x, r1.y
 251: mul r1.z, r3.z, r3.z
 252: max r1.z, r1.z, l(0.002000)
 253: add r4.x, -r1.z, l(1.000000)
 254: mad r4.y, |r0.w|, r4.x, r1.z
 255: mad r4.x, r2.x, r4.x, r1.z
 256: mul r0.w, |r0.w|, r4.x
 257: mad r0.w, r2.x, r4.y, r0.w
 258: add r0.w, r0.w, l(0.000010)
 259: div r0.w, l(0.500000), r0.w
 260: mul r4.x, r1.z, r1.z
 261: mad r4.y, r2.y, r4.x, -r2.y
 262: mad r2.y, r4.y, r2.y, l(1.000000)
 263: mul r4.x, r4.x, l(0.318310)
 264: mad r2.y, r2.y, r2.y, l(0.000000)
 265: div r2.y, r4.x, r2.y
 266: mul r0.w, r0.w, r2.y
 267: mul r0.w, r0.w, l(3.141593)
 268: max r0.w, r0.w, l(0.000100)
 269: sqrt r0.w, r0.w
 270: mul r0.w, r2.x, r0.w
 271: mul r1.z, r1.z, l(0.280000)
 272: mad r1.z, -r1.z, r3.z, l(1.000000)
 273: dp3 r2.x, r0.xyzx, r0.xyzx
 274: ne r2.x, r2.x, l(0.000000)
 275: and r2.x, r2.x, l(0x3f800000)
 276: mul r0.w, r0.w, r2.x
 277: add r2.x, -r2.w, r6.w
 278: add_sat r2.x, r2.x, l(1.000000)
 279: mad r3.xyz, r7.xyzx, r1.yyyy, r3.xywx
 280: mul r4.xyz, r7.xyzx, r0.wwww
 281: add r0.w, -r1.x, l(1.000000)
 282: mul r1.x, r0.w, r0.w
 283: mul r1.x, r1.x, r1.x
 284: mul r0.w, r0.w, r1.x
 285: add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 286: mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
 287: mul r4.xyz, r4.xyzx, r6.xyzx
 288: mad r3.xyz, r5.xyzx, r3.xyzx, r4.xyzx
 289: mul r1.xyz, r9.xyzx, r1.zzzz
 290: add r2.xyw, -r0.xyxz, r2.xxxx
 291: mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
 292: mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
 293: mul o0.xyz, r1.wwww, r0.xyzx
 294: mov o0.w, l(1.000000)
 295: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 27 avg math (15..35)
 // Stats for Fragment shader:
 //        d3d11: 152 avg math (105..220), 10 avg texture (6..14), 2 avg branch (2..4)
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry-100" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
  ZWrite Off
  Blend One One
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: POINT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 20 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mul r1.xyz, v2.yyyy, cb1[1].xyzx
   9: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  10: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  11: dp3 r1.w, r1.xyzx, r1.xyzx
  12: rsq r1.w, r1.w
  13: mul o1.xyz, r1.wwww, r1.xyzx
  14: mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  15: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  16: mov o3.xy, v3.xyxx
  17: mov o3.zw, l(0,0,0,0)
  18: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  19: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  20: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  21: mad o4.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  22: mov o5.xyzw, l(0,0,0,0)
  23: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 115 math, 7 temp registers, 7 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 2
Set 2D Texture "_Splat0" to slot 1 sampler slot 3
Set 2D Texture "_Splat1" to slot 2 sampler slot 4
Set 2D Texture "_Splat2" to slot 3 sampler slot 5
Set 2D Texture "_Splat3" to slot 4 sampler slot 6
Set 2D Texture "_LightTexture0" to slot 5 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 0

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 224
  Float _Metallic1 at 228
  Float _Metallic2 at 232
  Float _Metallic3 at 236
  Float _Smoothness0 at 240
  Float _Smoothness1 at 244
  Float _Smoothness2 at 248
  Float _Smoothness3 at 252
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r3.xy, v3.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r3.xy, r3.xyxx, cb0[9].xyxx
  11: sample r3.xyzw, r3.xyxx, t0.xyzw, s2
  12: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r3.xyzw, r3.xyzw, r2.wwww
  15: mad r4.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r4.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r5.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r5.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r6.xyzw, r4.xyxx, t1.xyzw, s3
  20: mul r6.xyzw, r3.xxxx, r6.xyzw
  21: mul r6.w, r6.w, cb0[15].x
  22: sample r4.xyzw, r4.zwzz, t2.xyzw, s4
  23: mul r4.xyzw, r3.yyyy, r4.xyzw
  24: mul r4.w, r4.w, cb0[15].y
  25: add r4.xyzw, r4.xyzw, r6.xyzw
  26: sample r6.xyzw, r5.xyxx, t3.xyzw, s5
  27: mul r6.xyzw, r3.zzzz, r6.xyzw
  28: mul r6.w, r6.w, cb0[15].z
  29: add r4.xyzw, r4.xyzw, r6.xyzw
  30: sample r5.xyzw, r5.zwzz, t4.xyzw, s6
  31: mul r5.xyzw, r3.wwww, r5.xyzw
  32: mul r5.w, r5.w, cb0[15].w
  33: add r4.xyzw, r4.xyzw, r5.xyzw
  34: dp4 r2.w, r3.xyzw, cb0[14].xyzw
  35: mul r3.xyz, v2.yyyy, cb0[5].xyzx
  36: mad r3.xyz, cb0[4].xyzx, v2.xxxx, r3.xyzx
  37: mad r3.xyz, cb0[6].xyzx, v2.zzzz, r3.xyzx
  38: add r3.xyz, r3.xyzx, cb0[7].xyzx
  39: eq r3.w, cb3[0].x, l(1.000000)
  40: if_nz r3.w
  41:   eq r3.w, cb3[0].y, l(1.000000)
  42:   mul r5.xyz, v2.yyyy, cb3[2].xyzx
  43:   mad r5.xyz, cb3[1].xyzx, v2.xxxx, r5.xyzx
  44:   mad r5.xyz, cb3[3].xyzx, v2.zzzz, r5.xyzx
  45:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  46:   movc r5.xyz, r3.wwww, r5.xyzx, v2.xyzx
  47:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
  48:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
  49:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  50:   mad r5.y, cb3[0].z, l(0.500000), l(0.750000)
  51:   max r5.x, r3.w, r5.y
  52:   sample r5.xyzw, r5.xzwx, t6.xyzw, s0
  53: else 
  54:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  55: endif 
  56: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
  57: dp3 r3.x, r3.xyzx, r3.xyzx
  58: sample r5.xyzw, r3.xxxx, t5.xyzw, s1
  59: mul r3.x, r3.w, r5.x
  60: mul r3.xyz, r3.xxxx, cb0[2].xyzx
  61: dp3 r3.w, v1.xyzx, v1.xyzx
  62: rsq r3.w, r3.w
  63: mul r5.xyz, r3.wwww, v1.xyzx
  64: add r6.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  65: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  66: mad r2.w, -r2.w, l(0.779084), l(0.779084)
  67: mul r4.xyz, r2.wwww, r4.xyzx
  68: add r2.w, -r4.w, l(1.000000)
  69: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
  70: dp3 r0.w, r0.xyzx, r0.xyzx
  71: max r0.w, r0.w, l(0.001000)
  72: rsq r0.w, r0.w
  73: mul r0.xyz, r0.wwww, r0.xyzx
  74: dp3 r0.w, r5.xyzx, r2.xyzx
  75: dp3_sat r2.x, r5.xyzx, r1.xyzx
  76: dp3_sat r2.y, r5.xyzx, r0.xyzx
  77: dp3_sat r0.x, r1.xyzx, r0.xyzx
  78: mul r0.y, r0.x, r0.x
  79: dp2 r0.y, r0.yyyy, r2.wwww
  80: add r0.y, r0.y, l(-0.500000)
  81: add r0.z, -r2.x, l(1.000000)
  82: mul r1.x, r0.z, r0.z
  83: mul r1.x, r1.x, r1.x
  84: mul r0.z, r0.z, r1.x
  85: mad r0.z, r0.y, r0.z, l(1.000000)
  86: add r1.x, -|r0.w|, l(1.000000)
  87: mul r1.y, r1.x, r1.x
  88: mul r1.y, r1.y, r1.y
  89: mul r1.x, r1.x, r1.y
  90: mad r0.y, r0.y, r1.x, l(1.000000)
  91: mul r0.y, r0.y, r0.z
  92: mul r0.z, r2.w, r2.w
  93: max r0.z, r0.z, l(0.002000)
  94: add r1.x, -r0.z, l(1.000000)
  95: mad r1.y, |r0.w|, r1.x, r0.z
  96: mad r1.x, r2.x, r1.x, r0.z
  97: mul r0.w, |r0.w|, r1.x
  98: mad r0.w, r2.x, r1.y, r0.w
  99: add r0.w, r0.w, l(0.000010)
 100: div r0.w, l(0.500000), r0.w
 101: mul r0.z, r0.z, r0.z
 102: mad r1.x, r2.y, r0.z, -r2.y
 103: mad r1.x, r1.x, r2.y, l(1.000000)
 104: mul r0.z, r0.z, l(0.318310)
 105: mad r1.x, r1.x, r1.x, l(0.000000)
 106: div r0.z, r0.z, r1.x
 107: mul r0.z, r0.z, r0.w
 108: mul r0.z, r0.z, l(3.141593)
 109: max r0.z, r0.z, l(0.000100)
 110: sqrt r0.z, r0.z
 111: mul r0.yz, r2.xxxx, r0.yyzy
 112: dp3 r0.w, r6.xyzx, r6.xyzx
 113: ne r0.w, r0.w, l(0.000000)
 114: and r0.w, r0.w, l(0x3f800000)
 115: mul r0.z, r0.w, r0.z
 116: mul r1.xyz, r0.yyyy, r3.xyzx
 117: mul r0.yzw, r3.xxyz, r0.zzzz
 118: add r0.x, -r0.x, l(1.000000)
 119: mul r2.x, r0.x, r0.x
 120: mul r2.x, r2.x, r2.x
 121: mul r0.x, r0.x, r2.x
 122: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 123: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 124: mul r0.xyz, r0.yzwy, r2.xyzx
 125: mad r0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
 126: mul o0.xyz, r1.wwww, r0.xyzx
 127: mov o0.w, l(1.000000)
 128: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 15 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerDraw" (176 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[4], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb0[3].xyzw
   4: mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb1[18].xyzw
   6: mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
   9: mul r0.xyz, v2.yyyy, cb0[1].xyzx
  10: mad r0.xyz, cb0[0].xyzx, v2.xxxx, r0.xyzx
  11: mad r0.xyz, cb0[2].xyzx, v2.zzzz, r0.xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mov o3.xy, v3.xyxx
  16: mov o3.zw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 105 math, 6 temp registers, 6 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 1
Set 2D Texture "_Splat0" to slot 1 sampler slot 2
Set 2D Texture "_Splat1" to slot 2 sampler slot 3
Set 2D Texture "_Splat2" to slot 3 sampler slot 4
Set 2D Texture "_Splat3" to slot 4 sampler slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0

Constant Buffer "$Globals" (192 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 160
  Float _Metallic1 at 164
  Float _Metallic2 at 168
  Float _Metallic3 at 172
  Float _Smoothness0 at 176
  Float _Smoothness1 at 180
  Float _Smoothness2 at 184
  Float _Smoothness3 at 188
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: mad r2.xy, v3.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: mul r2.xy, r2.xyxx, cb0[5].xyxx
   7: sample r2.xyzw, r2.xyxx, t0.xyzw, s1
   8: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   9: add r3.x, r1.w, l(0.001000)
  10: div r2.xyzw, r2.xyzw, r3.xxxx
  11: mad r3.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mad r3.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad r4.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
  14: mad r4.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
  15: sample r5.xyzw, r3.xyxx, t1.xyzw, s2
  16: mul r5.xyzw, r2.xxxx, r5.xyzw
  17: mul r5.w, r5.w, cb0[11].x
  18: sample r3.xyzw, r3.zwzz, t2.xyzw, s3
  19: mul r3.xyzw, r2.yyyy, r3.xyzw
  20: mul r3.w, r3.w, cb0[11].y
  21: add r3.xyzw, r3.xyzw, r5.xyzw
  22: sample r5.xyzw, r4.xyxx, t3.xyzw, s4
  23: mul r5.xyzw, r2.zzzz, r5.xyzw
  24: mul r5.w, r5.w, cb0[11].z
  25: add r3.xyzw, r3.xyzw, r5.xyzw
  26: sample r4.xyzw, r4.zwzz, t4.xyzw, s5
  27: mul r4.xyzw, r2.wwww, r4.xyzw
  28: mul r4.w, r4.w, cb0[11].w
  29: add r3.xyzw, r3.xyzw, r4.xyzw
  30: dp4 r2.x, r2.xyzw, cb0[10].xyzw
  31: eq r2.y, cb3[0].x, l(1.000000)
  32: if_nz r2.y
  33:   eq r2.y, cb3[0].y, l(1.000000)
  34:   mul r4.xyz, v2.yyyy, cb3[2].xyzx
  35:   mad r4.xyz, cb3[1].xyzx, v2.xxxx, r4.xyzx
  36:   mad r4.xyz, cb3[3].xyzx, v2.zzzz, r4.xyzx
  37:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  38:   movc r2.yzw, r2.yyyy, r4.xxyz, v2.xxyz
  39:   add r2.yzw, r2.yyzw, -cb3[6].xxyz
  40:   mul r4.yzw, r2.yyzw, cb3[5].xxyz
  41:   mad r2.y, r4.y, l(0.250000), l(0.750000)
  42:   mad r2.z, cb3[0].z, l(0.500000), l(0.750000)
  43:   max r4.x, r2.z, r2.y
  44:   sample r4.xyzw, r4.xzwx, t5.xyzw, s0
  45: else 
  46:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  47: endif 
  48: dp4_sat r2.y, r4.xyzw, cb2[46].xyzw
  49: mul r2.yzw, r2.yyyy, cb0[2].xxyz
  50: dp3 r4.x, v1.xyzx, v1.xyzx
  51: rsq r4.x, r4.x
  52: mul r4.xyz, r4.xxxx, v1.xyzx
  53: add r5.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  54: mad r5.xyz, r2.xxxx, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  55: mad r2.x, -r2.x, l(0.779084), l(0.779084)
  56: mul r3.xyz, r2.xxxx, r3.xyzx
  57: add r2.x, -r3.w, l(1.000000)
  58: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  59: dp3 r0.w, r0.xyzx, r0.xyzx
  60: max r0.w, r0.w, l(0.001000)
  61: rsq r0.w, r0.w
  62: mul r0.xyz, r0.wwww, r0.xyzx
  63: dp3 r0.w, r4.xyzx, r1.xyzx
  64: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
  65: dp3_sat r1.y, r4.xyzx, r0.xyzx
  66: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  67: mul r0.y, r0.x, r0.x
  68: dp2 r0.y, r0.yyyy, r2.xxxx
  69: add r0.y, r0.y, l(-0.500000)
  70: add r0.z, -r1.x, l(1.000000)
  71: mul r1.z, r0.z, r0.z
  72: mul r1.z, r1.z, r1.z
  73: mul r0.z, r0.z, r1.z
  74: mad r0.z, r0.y, r0.z, l(1.000000)
  75: add r1.z, -|r0.w|, l(1.000000)
  76: mul r3.w, r1.z, r1.z
  77: mul r3.w, r3.w, r3.w
  78: mul r1.z, r1.z, r3.w
  79: mad r0.y, r0.y, r1.z, l(1.000000)
  80: mul r0.y, r0.y, r0.z
  81: mul r0.z, r2.x, r2.x
  82: max r0.z, r0.z, l(0.002000)
  83: add r1.z, -r0.z, l(1.000000)
  84: mad r2.x, |r0.w|, r1.z, r0.z
  85: mad r1.z, r1.x, r1.z, r0.z
  86: mul r0.w, |r0.w|, r1.z
  87: mad r0.w, r1.x, r2.x, r0.w
  88: add r0.w, r0.w, l(0.000010)
  89: div r0.w, l(0.500000), r0.w
  90: mul r0.z, r0.z, r0.z
  91: mad r1.z, r1.y, r0.z, -r1.y
  92: mad r1.y, r1.z, r1.y, l(1.000000)
  93: mul r0.z, r0.z, l(0.318310)
  94: mad r1.y, r1.y, r1.y, l(0.000000)
  95: div r0.z, r0.z, r1.y
  96: mul r0.z, r0.z, r0.w
  97: mul r0.z, r0.z, l(3.141593)
  98: max r0.z, r0.z, l(0.000100)
  99: sqrt r0.z, r0.z
 100: mul r0.yz, r1.xxxx, r0.yyzy
 101: dp3 r0.w, r5.xyzx, r5.xyzx
 102: ne r0.w, r0.w, l(0.000000)
 103: and r0.w, r0.w, l(0x3f800000)
 104: mul r0.z, r0.w, r0.z
 105: mul r1.xyz, r0.yyyy, r2.yzwy
 106: mul r0.yzw, r2.yyzw, r0.zzzz
 107: add r0.x, -r0.x, l(1.000000)
 108: mul r2.x, r0.x, r0.x
 109: mul r2.x, r2.x, r2.x
 110: mul r0.x, r0.x, r2.x
 111: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 112: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 113: mul r0.xyz, r0.yzwy, r2.xyzx
 114: mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
 115: mul o0.xyz, r1.wwww, r0.xyzx
 116: mov o0.w, l(1.000000)
 117: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SPOT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 20 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mul r1.xyz, v2.yyyy, cb1[1].xyzx
   9: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  10: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  11: dp3 r1.w, r1.xyzx, r1.xyzx
  12: rsq r1.w, r1.w
  13: mul o1.xyz, r1.wwww, r1.xyzx
  14: mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  15: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  16: mov o3.xy, v3.xyxx
  17: mov o3.zw, l(0,0,0,0)
  18: mul r1.xyzw, r0.yyyy, cb0[5].xyzw
  19: mad r1.xyzw, cb0[4].xyzw, r0.xxxx, r1.xyzw
  20: mad r1.xyzw, cb0[6].xyzw, r0.zzzz, r1.xyzw
  21: mad o4.xyzw, cb0[7].xyzw, r0.wwww, r1.xyzw
  22: mov o5.xyzw, l(0,0,0,0)
  23: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 121 math, 7 temp registers, 8 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_LightTexture0" to slot 5 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 6 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 0

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 224
  Float _Metallic1 at 228
  Float _Metallic2 at 232
  Float _Metallic3 at 236
  Float _Smoothness0 at 240
  Float _Smoothness1 at 244
  Float _Smoothness2 at 248
  Float _Smoothness3 at 252
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r3.xy, v3.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r3.xy, r3.xyxx, cb0[9].xyxx
  11: sample r3.xyzw, r3.xyxx, t0.xyzw, s3
  12: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r3.xyzw, r3.xyzw, r2.wwww
  15: mad r4.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r4.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r5.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r5.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r6.xyzw, r4.xyxx, t1.xyzw, s4
  20: mul r6.xyzw, r3.xxxx, r6.xyzw
  21: mul r6.w, r6.w, cb0[15].x
  22: sample r4.xyzw, r4.zwzz, t2.xyzw, s5
  23: mul r4.xyzw, r3.yyyy, r4.xyzw
  24: mul r4.w, r4.w, cb0[15].y
  25: add r4.xyzw, r4.xyzw, r6.xyzw
  26: sample r6.xyzw, r5.xyxx, t3.xyzw, s6
  27: mul r6.xyzw, r3.zzzz, r6.xyzw
  28: mul r6.w, r6.w, cb0[15].z
  29: add r4.xyzw, r4.xyzw, r6.xyzw
  30: sample r5.xyzw, r5.zwzz, t4.xyzw, s7
  31: mul r5.xyzw, r3.wwww, r5.xyzw
  32: mul r5.w, r5.w, cb0[15].w
  33: add r4.xyzw, r4.xyzw, r5.xyzw
  34: dp4 r2.w, r3.xyzw, cb0[14].xyzw
  35: mul r3.xyzw, v2.yyyy, cb0[5].xyzw
  36: mad r3.xyzw, cb0[4].xyzw, v2.xxxx, r3.xyzw
  37: mad r3.xyzw, cb0[6].xyzw, v2.zzzz, r3.xyzw
  38: add r3.xyzw, r3.xyzw, cb0[7].xyzw
  39: eq r5.x, cb3[0].x, l(1.000000)
  40: if_nz r5.x
  41:   eq r5.x, cb3[0].y, l(1.000000)
  42:   mul r5.yzw, v2.yyyy, cb3[2].xxyz
  43:   mad r5.yzw, cb3[1].xxyz, v2.xxxx, r5.yyzw
  44:   mad r5.yzw, cb3[3].xxyz, v2.zzzz, r5.yyzw
  45:   add r5.yzw, r5.yyzw, cb3[4].xxyz
  46:   movc r5.xyz, r5.xxxx, r5.yzwy, v2.xyzx
  47:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
  48:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
  49:   mad r5.y, r5.y, l(0.250000), l(0.750000)
  50:   mad r6.x, cb3[0].z, l(0.500000), l(0.750000)
  51:   max r5.x, r5.y, r6.x
  52:   sample r5.xyzw, r5.xzwx, t7.xyzw, s0
  53: else 
  54:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  55: endif 
  56: dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
  57: lt r5.y, l(0.000000), r3.z
  58: and r5.y, r5.y, l(0x3f800000)
  59: div r5.zw, r3.xxxy, r3.wwww
  60: add r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  61: sample r6.xyzw, r5.zwzz, t5.xyzw, s1
  62: mul r3.w, r5.y, r6.w
  63: dp3 r3.x, r3.xyzx, r3.xyzx
  64: sample r6.xyzw, r3.xxxx, t6.xyzw, s2
  65: mul r3.x, r3.w, r6.x
  66: mul r3.x, r5.x, r3.x
  67: mul r3.xyz, r3.xxxx, cb0[2].xyzx
  68: dp3 r3.w, v1.xyzx, v1.xyzx
  69: rsq r3.w, r3.w
  70: mul r5.xyz, r3.wwww, v1.xyzx
  71: add r6.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  72: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  73: mad r2.w, -r2.w, l(0.779084), l(0.779084)
  74: mul r4.xyz, r2.wwww, r4.xyzx
  75: add r2.w, -r4.w, l(1.000000)
  76: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
  77: dp3 r0.w, r0.xyzx, r0.xyzx
  78: max r0.w, r0.w, l(0.001000)
  79: rsq r0.w, r0.w
  80: mul r0.xyz, r0.wwww, r0.xyzx
  81: dp3 r0.w, r5.xyzx, r2.xyzx
  82: dp3_sat r2.x, r5.xyzx, r1.xyzx
  83: dp3_sat r2.y, r5.xyzx, r0.xyzx
  84: dp3_sat r0.x, r1.xyzx, r0.xyzx
  85: mul r0.y, r0.x, r0.x
  86: dp2 r0.y, r0.yyyy, r2.wwww
  87: add r0.y, r0.y, l(-0.500000)
  88: add r0.z, -r2.x, l(1.000000)
  89: mul r1.x, r0.z, r0.z
  90: mul r1.x, r1.x, r1.x
  91: mul r0.z, r0.z, r1.x
  92: mad r0.z, r0.y, r0.z, l(1.000000)
  93: add r1.x, -|r0.w|, l(1.000000)
  94: mul r1.y, r1.x, r1.x
  95: mul r1.y, r1.y, r1.y
  96: mul r1.x, r1.x, r1.y
  97: mad r0.y, r0.y, r1.x, l(1.000000)
  98: mul r0.y, r0.y, r0.z
  99: mul r0.z, r2.w, r2.w
 100: max r0.z, r0.z, l(0.002000)
 101: add r1.x, -r0.z, l(1.000000)
 102: mad r1.y, |r0.w|, r1.x, r0.z
 103: mad r1.x, r2.x, r1.x, r0.z
 104: mul r0.w, |r0.w|, r1.x
 105: mad r0.w, r2.x, r1.y, r0.w
 106: add r0.w, r0.w, l(0.000010)
 107: div r0.w, l(0.500000), r0.w
 108: mul r0.z, r0.z, r0.z
 109: mad r1.x, r2.y, r0.z, -r2.y
 110: mad r1.x, r1.x, r2.y, l(1.000000)
 111: mul r0.z, r0.z, l(0.318310)
 112: mad r1.x, r1.x, r1.x, l(0.000000)
 113: div r0.z, r0.z, r1.x
 114: mul r0.z, r0.z, r0.w
 115: mul r0.z, r0.z, l(3.141593)
 116: max r0.z, r0.z, l(0.000100)
 117: sqrt r0.z, r0.z
 118: mul r0.yz, r2.xxxx, r0.yyzy
 119: dp3 r0.w, r6.xyzx, r6.xyzx
 120: ne r0.w, r0.w, l(0.000000)
 121: and r0.w, r0.w, l(0x3f800000)
 122: mul r0.z, r0.w, r0.z
 123: mul r1.xyz, r0.yyyy, r3.xyzx
 124: mul r0.yzw, r3.xxyz, r0.zzzz
 125: add r0.x, -r0.x, l(1.000000)
 126: mul r2.x, r0.x, r0.x
 127: mul r2.x, r2.x, r2.x
 128: mul r0.x, r0.x, r2.x
 129: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 130: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 131: mul r0.xyz, r0.yzwy, r2.xyzx
 132: mad r0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
 133: mul o0.xyz, r1.wwww, r0.xyzx
 134: mov o0.w, l(1.000000)
 135: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 20 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mul r1.xyz, v2.yyyy, cb1[1].xyzx
   9: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  10: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  11: dp3 r1.w, r1.xyzx, r1.xyzx
  12: rsq r1.w, r1.w
  13: mul o1.xyz, r1.wwww, r1.xyzx
  14: mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  15: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  16: mov o3.xy, v3.xyxx
  17: mov o3.zw, l(0,0,0,0)
  18: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  19: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  20: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  21: mad o4.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  22: mov o5.xyzw, l(0,0,0,0)
  23: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 116 math, 7 temp registers, 8 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_LightTextureB0" to slot 5 sampler slot 2
Set CUBE Texture "_LightTexture0" to slot 6 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 0

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 224
  Float _Metallic1 at 228
  Float _Metallic2 at 232
  Float _Metallic3 at 236
  Float _Smoothness0 at 240
  Float _Smoothness1 at 244
  Float _Smoothness2 at 248
  Float _Smoothness3 at 252
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r3.xy, v3.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r3.xy, r3.xyxx, cb0[9].xyxx
  11: sample r3.xyzw, r3.xyxx, t0.xyzw, s3
  12: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r3.xyzw, r3.xyzw, r2.wwww
  15: mad r4.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r4.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r5.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r5.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r6.xyzw, r4.xyxx, t1.xyzw, s4
  20: mul r6.xyzw, r3.xxxx, r6.xyzw
  21: mul r6.w, r6.w, cb0[15].x
  22: sample r4.xyzw, r4.zwzz, t2.xyzw, s5
  23: mul r4.xyzw, r3.yyyy, r4.xyzw
  24: mul r4.w, r4.w, cb0[15].y
  25: add r4.xyzw, r4.xyzw, r6.xyzw
  26: sample r6.xyzw, r5.xyxx, t3.xyzw, s6
  27: mul r6.xyzw, r3.zzzz, r6.xyzw
  28: mul r6.w, r6.w, cb0[15].z
  29: add r4.xyzw, r4.xyzw, r6.xyzw
  30: sample r5.xyzw, r5.zwzz, t4.xyzw, s7
  31: mul r5.xyzw, r3.wwww, r5.xyzw
  32: mul r5.w, r5.w, cb0[15].w
  33: add r4.xyzw, r4.xyzw, r5.xyzw
  34: dp4 r2.w, r3.xyzw, cb0[14].xyzw
  35: mul r3.xyz, v2.yyyy, cb0[5].xyzx
  36: mad r3.xyz, cb0[4].xyzx, v2.xxxx, r3.xyzx
  37: mad r3.xyz, cb0[6].xyzx, v2.zzzz, r3.xyzx
  38: add r3.xyz, r3.xyzx, cb0[7].xyzx
  39: eq r3.w, cb3[0].x, l(1.000000)
  40: if_nz r3.w
  41:   eq r3.w, cb3[0].y, l(1.000000)
  42:   mul r5.xyz, v2.yyyy, cb3[2].xyzx
  43:   mad r5.xyz, cb3[1].xyzx, v2.xxxx, r5.xyzx
  44:   mad r5.xyz, cb3[3].xyzx, v2.zzzz, r5.xyzx
  45:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  46:   movc r5.xyz, r3.wwww, r5.xyzx, v2.xyzx
  47:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
  48:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
  49:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  50:   mad r5.y, cb3[0].z, l(0.500000), l(0.750000)
  51:   max r5.x, r3.w, r5.y
  52:   sample r5.xyzw, r5.xzwx, t7.xyzw, s0
  53: else 
  54:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  55: endif 
  56: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
  57: dp3 r5.x, r3.xyzx, r3.xyzx
  58: sample r5.xyzw, r5.xxxx, t5.xyzw, s2
  59: sample r6.xyzw, r3.xyzx, t6.xyzw, s1
  60: mul r3.x, r5.x, r6.w
  61: mul r3.x, r3.w, r3.x
  62: mul r3.xyz, r3.xxxx, cb0[2].xyzx
  63: dp3 r3.w, v1.xyzx, v1.xyzx
  64: rsq r3.w, r3.w
  65: mul r5.xyz, r3.wwww, v1.xyzx
  66: add r6.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  67: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  68: mad r2.w, -r2.w, l(0.779084), l(0.779084)
  69: mul r4.xyz, r2.wwww, r4.xyzx
  70: add r2.w, -r4.w, l(1.000000)
  71: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
  72: dp3 r0.w, r0.xyzx, r0.xyzx
  73: max r0.w, r0.w, l(0.001000)
  74: rsq r0.w, r0.w
  75: mul r0.xyz, r0.wwww, r0.xyzx
  76: dp3 r0.w, r5.xyzx, r2.xyzx
  77: dp3_sat r2.x, r5.xyzx, r1.xyzx
  78: dp3_sat r2.y, r5.xyzx, r0.xyzx
  79: dp3_sat r0.x, r1.xyzx, r0.xyzx
  80: mul r0.y, r0.x, r0.x
  81: dp2 r0.y, r0.yyyy, r2.wwww
  82: add r0.y, r0.y, l(-0.500000)
  83: add r0.z, -r2.x, l(1.000000)
  84: mul r1.x, r0.z, r0.z
  85: mul r1.x, r1.x, r1.x
  86: mul r0.z, r0.z, r1.x
  87: mad r0.z, r0.y, r0.z, l(1.000000)
  88: add r1.x, -|r0.w|, l(1.000000)
  89: mul r1.y, r1.x, r1.x
  90: mul r1.y, r1.y, r1.y
  91: mul r1.x, r1.x, r1.y
  92: mad r0.y, r0.y, r1.x, l(1.000000)
  93: mul r0.y, r0.y, r0.z
  94: mul r0.z, r2.w, r2.w
  95: max r0.z, r0.z, l(0.002000)
  96: add r1.x, -r0.z, l(1.000000)
  97: mad r1.y, |r0.w|, r1.x, r0.z
  98: mad r1.x, r2.x, r1.x, r0.z
  99: mul r0.w, |r0.w|, r1.x
 100: mad r0.w, r2.x, r1.y, r0.w
 101: add r0.w, r0.w, l(0.000010)
 102: div r0.w, l(0.500000), r0.w
 103: mul r0.z, r0.z, r0.z
 104: mad r1.x, r2.y, r0.z, -r2.y
 105: mad r1.x, r1.x, r2.y, l(1.000000)
 106: mul r0.z, r0.z, l(0.318310)
 107: mad r1.x, r1.x, r1.x, l(0.000000)
 108: div r0.z, r0.z, r1.x
 109: mul r0.z, r0.z, r0.w
 110: mul r0.z, r0.z, l(3.141593)
 111: max r0.z, r0.z, l(0.000100)
 112: sqrt r0.z, r0.z
 113: mul r0.yz, r2.xxxx, r0.yyzy
 114: dp3 r0.w, r6.xyzx, r6.xyzx
 115: ne r0.w, r0.w, l(0.000000)
 116: and r0.w, r0.w, l(0x3f800000)
 117: mul r0.z, r0.w, r0.z
 118: mul r1.xyz, r0.yyyy, r3.xyzx
 119: mul r0.yzw, r3.xxyz, r0.zzzz
 120: add r0.x, -r0.x, l(1.000000)
 121: mul r2.x, r0.x, r0.x
 122: mul r2.x, r2.x, r2.x
 123: mul r0.x, r0.x, r2.x
 124: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 125: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 126: mul r0.xyz, r0.yzwy, r2.xyzx
 127: mad r0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
 128: mul o0.xyz, r1.wwww, r0.xyzx
 129: mov o0.w, l(1.000000)
 130: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 20 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xy          4     NONE   float   xy  
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xy
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mul r1.xyz, v2.yyyy, cb1[1].xyzx
   9: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  10: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  11: dp3 r1.w, r1.xyzx, r1.xyzx
  12: rsq r1.w, r1.w
  13: mul o1.xyz, r1.wwww, r1.xyzx
  14: mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  15: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  16: mov o3.xy, v3.xyxx
  17: mov o3.zw, l(0,0,0,0)
  18: mul r1.xy, r0.yyyy, cb0[5].xyxx
  19: mad r0.xy, cb0[4].xyxx, r0.xxxx, r1.xyxx
  20: mad r0.xy, cb0[6].xyxx, r0.zzzz, r0.xyxx
  21: mad o4.xy, cb0[7].xyxx, r0.wwww, r0.xyxx
  22: mov o5.xyzw, l(0,0,0,0)
  23: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 110 math, 6 temp registers, 7 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 2
Set 2D Texture "_Splat0" to slot 1 sampler slot 3
Set 2D Texture "_Splat1" to slot 2 sampler slot 4
Set 2D Texture "_Splat2" to slot 3 sampler slot 5
Set 2D Texture "_Splat3" to slot 4 sampler slot 6
Set 2D Texture "_LightTexture0" to slot 5 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 0

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 224
  Float _Metallic1 at 228
  Float _Metallic2 at 232
  Float _Metallic3 at 236
  Float _Smoothness0 at 240
  Float _Smoothness1 at 244
  Float _Smoothness2 at 248
  Float _Smoothness3 at 252
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xy          4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: mad r2.xy, v3.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: mul r2.xy, r2.xyxx, cb0[9].xyxx
   7: sample r2.xyzw, r2.xyxx, t0.xyzw, s2
   8: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   9: add r3.x, r1.w, l(0.001000)
  10: div r2.xyzw, r2.xyzw, r3.xxxx
  11: mad r3.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
  12: mad r3.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
  13: mad r4.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
  14: mad r4.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
  15: sample r5.xyzw, r3.xyxx, t1.xyzw, s3
  16: mul r5.xyzw, r2.xxxx, r5.xyzw
  17: mul r5.w, r5.w, cb0[15].x
  18: sample r3.xyzw, r3.zwzz, t2.xyzw, s4
  19: mul r3.xyzw, r2.yyyy, r3.xyzw
  20: mul r3.w, r3.w, cb0[15].y
  21: add r3.xyzw, r3.xyzw, r5.xyzw
  22: sample r5.xyzw, r4.xyxx, t3.xyzw, s5
  23: mul r5.xyzw, r2.zzzz, r5.xyzw
  24: mul r5.w, r5.w, cb0[15].z
  25: add r3.xyzw, r3.xyzw, r5.xyzw
  26: sample r4.xyzw, r4.zwzz, t4.xyzw, s6
  27: mul r4.xyzw, r2.wwww, r4.xyzw
  28: mul r4.w, r4.w, cb0[15].w
  29: add r3.xyzw, r3.xyzw, r4.xyzw
  30: dp4 r2.x, r2.xyzw, cb0[14].xyzw
  31: mul r2.yz, v2.yyyy, cb0[5].xxyx
  32: mad r2.yz, cb0[4].xxyx, v2.xxxx, r2.yyzy
  33: mad r2.yz, cb0[6].xxyx, v2.zzzz, r2.yyzy
  34: add r2.yz, r2.yyzy, cb0[7].xxyx
  35: eq r2.w, cb3[0].x, l(1.000000)
  36: if_nz r2.w
  37:   eq r2.w, cb3[0].y, l(1.000000)
  38:   mul r4.xyz, v2.yyyy, cb3[2].xyzx
  39:   mad r4.xyz, cb3[1].xyzx, v2.xxxx, r4.xyzx
  40:   mad r4.xyz, cb3[3].xyzx, v2.zzzz, r4.xyzx
  41:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  42:   movc r4.xyz, r2.wwww, r4.xyzx, v2.xyzx
  43:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  44:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
  45:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  46:   mad r4.y, cb3[0].z, l(0.500000), l(0.750000)
  47:   max r4.x, r2.w, r4.y
  48:   sample r4.xyzw, r4.xzwx, t6.xyzw, s0
  49: else 
  50:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  51: endif 
  52: dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
  53: sample r4.xyzw, r2.yzyy, t5.xyzw, s1
  54: mul r2.y, r2.w, r4.w
  55: mul r2.yzw, r2.yyyy, cb0[2].xxyz
  56: dp3 r4.x, v1.xyzx, v1.xyzx
  57: rsq r4.x, r4.x
  58: mul r4.xyz, r4.xxxx, v1.xyzx
  59: add r5.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  60: mad r5.xyz, r2.xxxx, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  61: mad r2.x, -r2.x, l(0.779084), l(0.779084)
  62: mul r3.xyz, r2.xxxx, r3.xyzx
  63: add r2.x, -r3.w, l(1.000000)
  64: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  65: dp3 r0.w, r0.xyzx, r0.xyzx
  66: max r0.w, r0.w, l(0.001000)
  67: rsq r0.w, r0.w
  68: mul r0.xyz, r0.wwww, r0.xyzx
  69: dp3 r0.w, r4.xyzx, r1.xyzx
  70: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
  71: dp3_sat r1.y, r4.xyzx, r0.xyzx
  72: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  73: mul r0.y, r0.x, r0.x
  74: dp2 r0.y, r0.yyyy, r2.xxxx
  75: add r0.y, r0.y, l(-0.500000)
  76: add r0.z, -r1.x, l(1.000000)
  77: mul r1.z, r0.z, r0.z
  78: mul r1.z, r1.z, r1.z
  79: mul r0.z, r0.z, r1.z
  80: mad r0.z, r0.y, r0.z, l(1.000000)
  81: add r1.z, -|r0.w|, l(1.000000)
  82: mul r3.w, r1.z, r1.z
  83: mul r3.w, r3.w, r3.w
  84: mul r1.z, r1.z, r3.w
  85: mad r0.y, r0.y, r1.z, l(1.000000)
  86: mul r0.y, r0.y, r0.z
  87: mul r0.z, r2.x, r2.x
  88: max r0.z, r0.z, l(0.002000)
  89: add r1.z, -r0.z, l(1.000000)
  90: mad r2.x, |r0.w|, r1.z, r0.z
  91: mad r1.z, r1.x, r1.z, r0.z
  92: mul r0.w, |r0.w|, r1.z
  93: mad r0.w, r1.x, r2.x, r0.w
  94: add r0.w, r0.w, l(0.000010)
  95: div r0.w, l(0.500000), r0.w
  96: mul r0.z, r0.z, r0.z
  97: mad r1.z, r1.y, r0.z, -r1.y
  98: mad r1.y, r1.z, r1.y, l(1.000000)
  99: mul r0.z, r0.z, l(0.318310)
 100: mad r1.y, r1.y, r1.y, l(0.000000)
 101: div r0.z, r0.z, r1.y
 102: mul r0.z, r0.z, r0.w
 103: mul r0.z, r0.z, l(3.141593)
 104: max r0.z, r0.z, l(0.000100)
 105: sqrt r0.z, r0.z
 106: mul r0.yz, r1.xxxx, r0.yyzy
 107: dp3 r0.w, r5.xyzx, r5.xyzx
 108: ne r0.w, r0.w, l(0.000000)
 109: and r0.w, r0.w, l(0x3f800000)
 110: mul r0.z, r0.w, r0.z
 111: mul r1.xyz, r0.yyyy, r2.yzwy
 112: mul r0.yzw, r2.yyzw, r0.zzzz
 113: add r0.x, -r0.x, l(1.000000)
 114: mul r2.x, r0.x, r0.x
 115: mul r2.x, r2.x, r2.x
 116: mul r0.x, r0.x, r2.x
 117: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 118: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 119: mul r0.xyz, r0.yzwy, r2.xyzx
 120: mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
 121: mul o0.xyz, r1.wwww, r0.xyzx
 122: mov o0.w, l(1.000000)
 123: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SPOT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 20 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mul r1.xyz, v2.yyyy, cb1[1].xyzx
   9: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  10: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  11: dp3 r1.w, r1.xyzx, r1.xyzx
  12: rsq r1.w, r1.w
  13: mul o1.xyz, r1.wwww, r1.xyzx
  14: mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  15: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  16: mov o3.xy, v3.xyxx
  17: mov o3.zw, l(0,0,0,0)
  18: mul r1.xyzw, r0.yyyy, cb0[5].xyzw
  19: mad r1.xyzw, cb0[4].xyzw, r0.xxxx, r1.xyzw
  20: mad r1.xyzw, cb0[6].xyzw, r0.zzzz, r1.xyzw
  21: mad o4.xyzw, cb0[7].xyzw, r0.wwww, r1.xyzw
  22: mov o5.xyzw, l(0,0,0,0)
  23: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 137 math, 8 temp registers, 8 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 4
Set 2D Texture "_Splat0" to slot 1 sampler slot 5
Set 2D Texture "_Splat1" to slot 2 sampler slot 6
Set 2D Texture "_Splat2" to slot 3 sampler slot 7
Set 2D Texture "_Splat3" to slot 4 sampler slot 8
Set 2D Texture "_LightTexture0" to slot 5 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 6 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 8 sampler slot 1

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 224
  Float _Metallic1 at 228
  Float _Metallic2 at 232
  Float _Metallic3 at 236
  Float _Smoothness0 at 240
  Float _Smoothness1 at 244
  Float _Smoothness2 at 248
  Float _Smoothness3 at 252
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v3.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[9].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s4
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r5.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r6.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r6.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s5
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[15].x
  22: sample r5.xyzw, r5.zwzz, t2.xyzw, s6
  23: mul r5.xyzw, r4.yyyy, r5.xyzw
  24: mul r5.w, r5.w, cb0[15].y
  25: add r5.xyzw, r5.xyzw, r7.xyzw
  26: sample r7.xyzw, r6.xyxx, t3.xyzw, s7
  27: mul r7.xyzw, r4.zzzz, r7.xyzw
  28: mul r7.w, r7.w, cb0[15].z
  29: add r5.xyzw, r5.xyzw, r7.xyzw
  30: sample r6.xyzw, r6.zwzz, t4.xyzw, s8
  31: mul r6.xyzw, r4.wwww, r6.xyzw
  32: mul r6.w, r6.w, cb0[15].w
  33: add r5.xyzw, r5.xyzw, r6.xyzw
  34: dp4 r2.w, r4.xyzw, cb0[14].xyzw
  35: mul r4.xyzw, v2.yyyy, cb0[5].xyzw
  36: mad r4.xyzw, cb0[4].xyzw, v2.xxxx, r4.xyzw
  37: mad r4.xyzw, cb0[6].xyzw, v2.zzzz, r4.xyzw
  38: add r4.xyzw, r4.xyzw, cb0[7].xyzw
  39: mov r6.x, cb4[9].z
  40: mov r6.y, cb4[10].z
  41: mov r6.z, cb4[11].z
  42: dp3 r2.x, r2.xyzx, r6.xyzx
  43: add r6.xyz, v2.xyzx, -cb3[25].xyzx
  44: dp3 r2.y, r6.xyzx, r6.xyzx
  45: sqrt r2.y, r2.y
  46: add r2.y, -r2.x, r2.y
  47: mad r2.x, cb3[25].w, r2.y, r2.x
  48: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  49: eq r2.y, cb5[0].x, l(1.000000)
  50: if_nz r2.y
  51:   eq r2.y, cb5[0].y, l(1.000000)
  52:   mul r6.xyz, v2.yyyy, cb5[2].xyzx
  53:   mad r6.xyz, cb5[1].xyzx, v2.xxxx, r6.xyzx
  54:   mad r6.xyz, cb5[3].xyzx, v2.zzzz, r6.xyzx
  55:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  56:   movc r6.xyz, r2.yyyy, r6.xyzx, v2.xyzx
  57:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  58:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  59:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  60:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  61:   max r6.x, r2.z, r2.y
  62:   sample r6.xyzw, r6.xzwx, t7.xyzw, s0
  63: else 
  64:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  65: endif 
  66: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
  67: mul r6.xyzw, v2.yyyy, cb3[9].xyzw
  68: mad r6.xyzw, cb3[8].xyzw, v2.xxxx, r6.xyzw
  69: mad r6.xyzw, cb3[10].xyzw, v2.zzzz, r6.xyzw
  70: add r6.xyzw, r6.xyzw, cb3[11].xyzw
  71: div r6.xyz, r6.xyzx, r6.wwww
  72: sample_c_lz r2.z, r6.xyxx, t8.xxxx, s1, r6.z
  73: add r3.w, -cb3[24].x, l(1.000000)
  74: mad r2.z, r2.z, r3.w, cb3[24].x
  75: add r2.y, -r2.z, r2.y
  76: mad r2.x, r2.x, r2.y, r2.z
  77: lt r2.y, l(0.000000), r4.z
  78: and r2.y, r2.y, l(0x3f800000)
  79: div r6.xy, r4.xyxx, r4.wwww
  80: add r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  81: sample r6.xyzw, r6.xyxx, t5.xyzw, s2
  82: mul r2.y, r2.y, r6.w
  83: dp3 r2.z, r4.xyzx, r4.xyzx
  84: sample r4.xyzw, r2.zzzz, t6.xyzw, s3
  85: mul r2.y, r2.y, r4.x
  86: mul r2.x, r2.x, r2.y
  87: mul r2.xyz, r2.xxxx, cb0[2].xyzx
  88: dp3 r3.w, v1.xyzx, v1.xyzx
  89: rsq r3.w, r3.w
  90: mul r4.xyz, r3.wwww, v1.xyzx
  91: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  92: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  93: mad r2.w, -r2.w, l(0.779084), l(0.779084)
  94: mul r5.xyz, r2.wwww, r5.xyzx
  95: add r2.w, -r5.w, l(1.000000)
  96: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
  97: dp3 r0.w, r0.xyzx, r0.xyzx
  98: max r0.w, r0.w, l(0.001000)
  99: rsq r0.w, r0.w
 100: mul r0.xyz, r0.wwww, r0.xyzx
 101: dp3 r0.w, r4.xyzx, r3.xyzx
 102: dp3_sat r3.x, r4.xyzx, r1.xyzx
 103: dp3_sat r3.y, r4.xyzx, r0.xyzx
 104: dp3_sat r0.x, r1.xyzx, r0.xyzx
 105: mul r0.y, r0.x, r0.x
 106: dp2 r0.y, r0.yyyy, r2.wwww
 107: add r0.y, r0.y, l(-0.500000)
 108: add r0.z, -r3.x, l(1.000000)
 109: mul r1.x, r0.z, r0.z
 110: mul r1.x, r1.x, r1.x
 111: mul r0.z, r0.z, r1.x
 112: mad r0.z, r0.y, r0.z, l(1.000000)
 113: add r1.x, -|r0.w|, l(1.000000)
 114: mul r1.y, r1.x, r1.x
 115: mul r1.y, r1.y, r1.y
 116: mul r1.x, r1.x, r1.y
 117: mad r0.y, r0.y, r1.x, l(1.000000)
 118: mul r0.y, r0.y, r0.z
 119: mul r0.z, r2.w, r2.w
 120: max r0.z, r0.z, l(0.002000)
 121: add r1.x, -r0.z, l(1.000000)
 122: mad r1.y, |r0.w|, r1.x, r0.z
 123: mad r1.x, r3.x, r1.x, r0.z
 124: mul r0.w, |r0.w|, r1.x
 125: mad r0.w, r3.x, r1.y, r0.w
 126: add r0.w, r0.w, l(0.000010)
 127: div r0.w, l(0.500000), r0.w
 128: mul r0.z, r0.z, r0.z
 129: mad r1.x, r3.y, r0.z, -r3.y
 130: mad r1.x, r1.x, r3.y, l(1.000000)
 131: mul r0.z, r0.z, l(0.318310)
 132: mad r1.x, r1.x, r1.x, l(0.000000)
 133: div r0.z, r0.z, r1.x
 134: mul r0.z, r0.z, r0.w
 135: mul r0.z, r0.z, l(3.141593)
 136: max r0.z, r0.z, l(0.000100)
 137: sqrt r0.z, r0.z
 138: mul r0.yz, r3.xxxx, r0.yyzy
 139: dp3 r0.w, r6.xyzx, r6.xyzx
 140: ne r0.w, r0.w, l(0.000000)
 141: and r0.w, r0.w, l(0x3f800000)
 142: mul r0.z, r0.w, r0.z
 143: mul r1.xyz, r0.yyyy, r2.xyzx
 144: mul r0.yzw, r2.xxyz, r0.zzzz
 145: add r0.x, -r0.x, l(1.000000)
 146: mul r2.x, r0.x, r0.x
 147: mul r2.x, r2.x, r2.x
 148: mul r0.x, r0.x, r2.x
 149: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 150: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 151: mul r0.xyz, r0.yzwy, r2.xyzx
 152: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 153: mul o0.xyz, r1.wwww, r0.xyzx
 154: mov o0.w, l(1.000000)
 155: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SHADOWS_SOFT SPOT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 20 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (336 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 144
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[13], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mul r1.xyz, v2.yyyy, cb1[1].xyzx
   9: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  10: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  11: dp3 r1.w, r1.xyzx, r1.xyzx
  12: rsq r1.w, r1.w
  13: mul o1.xyz, r1.wwww, r1.xyzx
  14: mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  15: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  16: mov o3.xy, v3.xyxx
  17: mov o3.zw, l(0,0,0,0)
  18: mul r1.xyzw, r0.yyyy, cb0[10].xyzw
  19: mad r1.xyzw, cb0[9].xyzw, r0.xxxx, r1.xyzw
  20: mad r1.xyzw, cb0[11].xyzw, r0.zzzz, r1.xyzw
  21: mad o4.xyzw, cb0[12].xyzw, r0.wwww, r1.xyzw
  22: mov o5.xyzw, l(0,0,0,0)
  23: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 166 math, 12 temp registers, 8 textures, 4 branches
Set 2D Texture "_Control" to slot 0 sampler slot 4
Set 2D Texture "_Splat0" to slot 1 sampler slot 5
Set 2D Texture "_Splat1" to slot 2 sampler slot 6
Set 2D Texture "_Splat2" to slot 3 sampler slot 7
Set 2D Texture "_Splat3" to slot 4 sampler slot 8
Set 2D Texture "_LightTexture0" to slot 5 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 6 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 8 sampler slot 1

Constant Buffer "$Globals" (336 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 144
  Vector4 _LightColor0 at 32
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _Control_TexelSize at 224
  Vector4 _Splat0_ST at 240
  Vector4 _Splat1_ST at 256
  Vector4 _Splat2_ST at 272
  Vector4 _Splat3_ST at 288
  Float _Metallic0 at 304
  Float _Metallic1 at 308
  Float _Metallic2 at 312
  Float _Metallic3 at 316
  Float _Smoothness0 at 320
  Float _Smoothness1 at 324
  Float _Smoothness2 at 328
  Float _Smoothness3 at 332
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[21], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 12
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[14].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v3.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[14].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s4
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v3.xyxx, cb0[15].xyxx, cb0[15].zwzz
  16: mad r5.zw, v3.xxxy, cb0[16].xxxy, cb0[16].zzzw
  17: mad r6.xy, v3.xyxx, cb0[17].xyxx, cb0[17].zwzz
  18: mad r6.zw, v3.xxxy, cb0[18].xxxy, cb0[18].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s5
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[20].x
  22: sample r5.xyzw, r5.zwzz, t2.xyzw, s6
  23: mul r5.xyzw, r4.yyyy, r5.xyzw
  24: mul r5.w, r5.w, cb0[20].y
  25: add r5.xyzw, r5.xyzw, r7.xyzw
  26: sample r7.xyzw, r6.xyxx, t3.xyzw, s7
  27: mul r7.xyzw, r4.zzzz, r7.xyzw
  28: mul r7.w, r7.w, cb0[20].z
  29: add r5.xyzw, r5.xyzw, r7.xyzw
  30: sample r6.xyzw, r6.zwzz, t4.xyzw, s8
  31: mul r6.xyzw, r4.wwww, r6.xyzw
  32: mul r6.w, r6.w, cb0[20].w
  33: add r5.xyzw, r5.xyzw, r6.xyzw
  34: dp4 r2.w, r4.xyzw, cb0[19].xyzw
  35: mul r4.xyzw, v2.yyyy, cb0[10].xyzw
  36: mad r4.xyzw, cb0[9].xyzw, v2.xxxx, r4.xyzw
  37: mad r4.xyzw, cb0[11].xyzw, v2.zzzz, r4.xyzw
  38: add r4.xyzw, r4.xyzw, cb0[12].xyzw
  39: mov r6.x, cb4[9].z
  40: mov r6.y, cb4[10].z
  41: mov r6.z, cb4[11].z
  42: dp3 r2.x, r2.xyzx, r6.xyzx
  43: add r6.xyz, v2.xyzx, -cb3[25].xyzx
  44: dp3 r2.y, r6.xyzx, r6.xyzx
  45: sqrt r2.y, r2.y
  46: add r2.y, -r2.x, r2.y
  47: mad r2.x, cb3[25].w, r2.y, r2.x
  48: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  49: eq r2.y, cb5[0].x, l(1.000000)
  50: if_nz r2.y
  51:   eq r2.y, cb5[0].y, l(1.000000)
  52:   mul r6.xyz, v2.yyyy, cb5[2].xyzx
  53:   mad r6.xyz, cb5[1].xyzx, v2.xxxx, r6.xyzx
  54:   mad r6.xyz, cb5[3].xyzx, v2.zzzz, r6.xyzx
  55:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  56:   movc r6.xyz, r2.yyyy, r6.xyzx, v2.xyzx
  57:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  58:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  59:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  60:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  61:   max r6.x, r2.z, r2.y
  62:   sample r6.xyzw, r6.xzwx, t7.xyzw, s0
  63: else 
  64:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  65: endif 
  66: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
  67: lt r2.z, r2.x, l(0.990000)
  68: if_nz r2.z
  69:   mul r6.xyzw, v2.yyyy, cb3[9].xyzw
  70:   mad r6.xyzw, cb3[8].xyzw, v2.xxxx, r6.xyzw
  71:   mad r6.xyzw, cb3[10].xyzw, v2.zzzz, r6.xyzw
  72:   add r6.xyzw, r6.xyzw, cb3[11].xyzw
  73:   div r6.xyz, r6.xyzx, r6.wwww
  74:   mad r7.xy, r6.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  75:   round_ni r7.xy, r7.xyxx
  76:   mad r6.xy, r6.xyxx, cb0[8].zwzz, -r7.xyxx
  77:   add r8.xyzw, r6.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  78:   mul r9.xw, r8.xxxz, r8.xxxz
  79:   mad r7.zw, r9.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r6.xxxy
  80:   add r8.xz, -r6.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
  81:   min r10.xy, r6.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  82:   mad r8.xz, -r10.xxyx, r10.xxyx, r8.xxzx
  83:   max r6.xy, r6.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  84:   mad r6.xy, -r6.xyxx, r6.xyxx, r8.ywyy
  85:   mov r10.x, r7.z
  86:   mov r10.y, r8.x
  87:   mov r10.z, r6.x
  88:   mov r10.w, r9.x
  89:   mul r10.xyzw, r10.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  90:   mov r9.x, r7.w
  91:   mov r9.y, r8.z
  92:   mov r9.z, r6.y
  93:   mul r8.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  94:   add r9.xyzw, r10.ywyw, r10.xzxz
  95:   add r11.xyzw, r8.yyww, r8.xxzz
  96:   div r6.xy, r10.ywyy, r9.zwzz
  97:   add r6.xy, r6.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  98:   div r7.zw, r8.yyyw, r11.yyyw
  99:   add r7.zw, r7.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
 100:   mul r8.xy, r6.xyxx, cb0[8].xxxx
 101:   mul r8.zw, r7.zzzw, cb0[8].yyyy
 102:   mul r9.xyzw, r9.xyzw, r11.xyzw
 103:   mad r10.xyzw, r7.xyxy, cb0[8].xyxy, r8.xzyz
 104:   sample_c_lz r2.z, r10.xyxx, t8.xxxx, s1, r6.z
 105:   sample_c_lz r3.w, r10.zwzz, t8.xxxx, s1, r6.z
 106:   mul r3.w, r3.w, r9.y
 107:   mad r2.z, r9.x, r2.z, r3.w
 108:   mad r7.xyzw, r7.xyxy, cb0[8].xyxy, r8.xwyw
 109:   sample_c_lz r3.w, r7.xyxx, t8.xxxx, s1, r6.z
 110:   mad r2.z, r9.z, r3.w, r2.z
 111:   sample_c_lz r3.w, r7.zwzz, t8.xxxx, s1, r6.z
 112:   mad r2.z, r9.w, r3.w, r2.z
 113:   add r3.w, -cb3[24].x, l(1.000000)
 114:   mad r2.z, r2.z, r3.w, cb3[24].x
 115: else 
 116:   mov r2.z, l(1.000000)
 117: endif 
 118: add r2.y, -r2.z, r2.y
 119: mad r2.x, r2.x, r2.y, r2.z
 120: lt r2.y, l(0.000000), r4.z
 121: and r2.y, r2.y, l(0x3f800000)
 122: div r6.xy, r4.xyxx, r4.wwww
 123: add r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 124: sample r6.xyzw, r6.xyxx, t5.xyzw, s2
 125: mul r2.y, r2.y, r6.w
 126: dp3 r2.z, r4.xyzx, r4.xyzx
 127: sample r4.xyzw, r2.zzzz, t6.xyzw, s3
 128: mul r2.y, r2.y, r4.x
 129: mul r2.x, r2.x, r2.y
 130: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 131: dp3 r3.w, v1.xyzx, v1.xyzx
 132: rsq r3.w, r3.w
 133: mul r4.xyz, r3.wwww, v1.xyzx
 134: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 135: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 136: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 137: mul r5.xyz, r2.wwww, r5.xyzx
 138: add r2.w, -r5.w, l(1.000000)
 139: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 140: dp3 r0.w, r0.xyzx, r0.xyzx
 141: max r0.w, r0.w, l(0.001000)
 142: rsq r0.w, r0.w
 143: mul r0.xyz, r0.wwww, r0.xyzx
 144: dp3 r0.w, r4.xyzx, r3.xyzx
 145: dp3_sat r3.x, r4.xyzx, r1.xyzx
 146: dp3_sat r3.y, r4.xyzx, r0.xyzx
 147: dp3_sat r0.x, r1.xyzx, r0.xyzx
 148: mul r0.y, r0.x, r0.x
 149: dp2 r0.y, r0.yyyy, r2.wwww
 150: add r0.y, r0.y, l(-0.500000)
 151: add r0.z, -r3.x, l(1.000000)
 152: mul r1.x, r0.z, r0.z
 153: mul r1.x, r1.x, r1.x
 154: mul r0.z, r0.z, r1.x
 155: mad r0.z, r0.y, r0.z, l(1.000000)
 156: add r1.x, -|r0.w|, l(1.000000)
 157: mul r1.y, r1.x, r1.x
 158: mul r1.y, r1.y, r1.y
 159: mul r1.x, r1.x, r1.y
 160: mad r0.y, r0.y, r1.x, l(1.000000)
 161: mul r0.y, r0.y, r0.z
 162: mul r0.z, r2.w, r2.w
 163: max r0.z, r0.z, l(0.002000)
 164: add r1.x, -r0.z, l(1.000000)
 165: mad r1.y, |r0.w|, r1.x, r0.z
 166: mad r1.x, r3.x, r1.x, r0.z
 167: mul r0.w, |r0.w|, r1.x
 168: mad r0.w, r3.x, r1.y, r0.w
 169: add r0.w, r0.w, l(0.000010)
 170: div r0.w, l(0.500000), r0.w
 171: mul r0.z, r0.z, r0.z
 172: mad r1.x, r3.y, r0.z, -r3.y
 173: mad r1.x, r1.x, r3.y, l(1.000000)
 174: mul r0.z, r0.z, l(0.318310)
 175: mad r1.x, r1.x, r1.x, l(0.000000)
 176: div r0.z, r0.z, r1.x
 177: mul r0.z, r0.z, r0.w
 178: mul r0.z, r0.z, l(3.141593)
 179: max r0.z, r0.z, l(0.000100)
 180: sqrt r0.z, r0.z
 181: mul r0.yz, r3.xxxx, r0.yyzy
 182: dp3 r0.w, r6.xyzx, r6.xyzx
 183: ne r0.w, r0.w, l(0.000000)
 184: and r0.w, r0.w, l(0x3f800000)
 185: mul r0.z, r0.w, r0.z
 186: mul r1.xyz, r0.yyyy, r2.xyzx
 187: mul r0.yzw, r2.xxyz, r0.zzzz
 188: add r0.x, -r0.x, l(1.000000)
 189: mul r2.x, r0.x, r0.x
 190: mul r2.x, r2.x, r2.x
 191: mul r0.x, r0.x, r2.x
 192: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 193: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 194: mul r0.xyz, r0.yzwy, r2.xyzx
 195: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 196: mul o0.xyz, r1.wwww, r0.xyzx
 197: mov o0.w, l(1.000000)
 198: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 18 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerCamera" (144 bytes) on slot 0 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: mul r1.xyz, v2.yyyy, cb1[1].xyzx
  11: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  12: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  13: dp3 r1.w, r1.xyzx, r1.xyzx
  14: rsq r1.w, r1.w
  15: mul o1.xyz, r1.wwww, r1.xyzx
  16: mov o3.xy, v3.xyxx
  17: mov o3.zw, l(0,0,0,0)
  18: mul r0.y, r0.y, cb0[5].x
  19: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  20: mov o4.zw, r0.zzzw
  21: add o4.xy, r1.zzzz, r1.xwxx
  22: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 115 math, 6 temp registers, 7 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 2
Set 2D Texture "_Splat0" to slot 1 sampler slot 3
Set 2D Texture "_Splat1" to slot 2 sampler slot 4
Set 2D Texture "_Splat2" to slot 3 sampler slot 5
Set 2D Texture "_Splat3" to slot 4 sampler slot 6
Set 2D Texture "_ShadowMapTexture" to slot 5 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 0

Constant Buffer "$Globals" (192 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 160
  Float _Metallic1 at 164
  Float _Metallic2 at 168
  Float _Metallic3 at 172
  Float _Smoothness0 at 176
  Float _Smoothness1 at 180
  Float _Smoothness2 at 184
  Float _Smoothness3 at 188
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_input_ps linear v4.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: mad r2.xy, v3.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: mul r2.xy, r2.xyxx, cb0[5].xyxx
   7: sample r2.xyzw, r2.xyxx, t0.xyzw, s2
   8: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   9: add r3.x, r1.w, l(0.001000)
  10: div r2.xyzw, r2.xyzw, r3.xxxx
  11: mad r3.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mad r3.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad r4.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
  14: mad r4.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
  15: sample r5.xyzw, r3.xyxx, t1.xyzw, s3
  16: mul r5.xyzw, r2.xxxx, r5.xyzw
  17: mul r5.w, r5.w, cb0[11].x
  18: sample r3.xyzw, r3.zwzz, t2.xyzw, s4
  19: mul r3.xyzw, r2.yyyy, r3.xyzw
  20: mul r3.w, r3.w, cb0[11].y
  21: add r3.xyzw, r3.xyzw, r5.xyzw
  22: sample r5.xyzw, r4.xyxx, t3.xyzw, s5
  23: mul r5.xyzw, r2.zzzz, r5.xyzw
  24: mul r5.w, r5.w, cb0[11].z
  25: add r3.xyzw, r3.xyzw, r5.xyzw
  26: sample r4.xyzw, r4.zwzz, t4.xyzw, s6
  27: mul r4.xyzw, r2.wwww, r4.xyzw
  28: mul r4.w, r4.w, cb0[11].w
  29: add r3.xyzw, r3.xyzw, r4.xyzw
  30: dp4 r2.x, r2.xyzw, cb0[10].xyzw
  31: mov r4.x, cb4[9].z
  32: mov r4.y, cb4[10].z
  33: mov r4.z, cb4[11].z
  34: dp3 r2.y, r0.xyzx, r4.xyzx
  35: add r4.xyz, v2.xyzx, -cb3[25].xyzx
  36: dp3 r2.z, r4.xyzx, r4.xyzx
  37: sqrt r2.z, r2.z
  38: add r2.z, -r2.y, r2.z
  39: mad r2.y, cb3[25].w, r2.z, r2.y
  40: mad_sat r2.y, r2.y, cb3[24].z, cb3[24].w
  41: eq r2.z, cb5[0].x, l(1.000000)
  42: if_nz r2.z
  43:   eq r2.z, cb5[0].y, l(1.000000)
  44:   mul r4.xyz, v2.yyyy, cb5[2].xyzx
  45:   mad r4.xyz, cb5[1].xyzx, v2.xxxx, r4.xyzx
  46:   mad r4.xyz, cb5[3].xyzx, v2.zzzz, r4.xyzx
  47:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  48:   movc r4.xyz, r2.zzzz, r4.xyzx, v2.xyzx
  49:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  50:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  51:   mad r2.z, r4.y, l(0.250000), l(0.750000)
  52:   mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
  53:   max r4.x, r2.w, r2.z
  54:   sample r4.xyzw, r4.xzwx, t6.xyzw, s0
  55: else 
  56:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  57: endif 
  58: dp4_sat r2.z, r4.xyzw, cb2[46].xyzw
  59: div r4.xy, v4.xyxx, v4.wwww
  60: sample r4.xyzw, r4.xyxx, t5.xyzw, s1
  61: add r2.z, r2.z, -r4.x
  62: mad r2.y, r2.y, r2.z, r4.x
  63: mul r2.yzw, r2.yyyy, cb0[2].xxyz
  64: dp3 r4.x, v1.xyzx, v1.xyzx
  65: rsq r4.x, r4.x
  66: mul r4.xyz, r4.xxxx, v1.xyzx
  67: add r5.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  68: mad r5.xyz, r2.xxxx, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  69: mad r2.x, -r2.x, l(0.779084), l(0.779084)
  70: mul r3.xyz, r2.xxxx, r3.xyzx
  71: add r2.x, -r3.w, l(1.000000)
  72: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  73: dp3 r0.w, r0.xyzx, r0.xyzx
  74: max r0.w, r0.w, l(0.001000)
  75: rsq r0.w, r0.w
  76: mul r0.xyz, r0.wwww, r0.xyzx
  77: dp3 r0.w, r4.xyzx, r1.xyzx
  78: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
  79: dp3_sat r1.y, r4.xyzx, r0.xyzx
  80: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  81: mul r0.y, r0.x, r0.x
  82: dp2 r0.y, r0.yyyy, r2.xxxx
  83: add r0.y, r0.y, l(-0.500000)
  84: add r0.z, -r1.x, l(1.000000)
  85: mul r1.z, r0.z, r0.z
  86: mul r1.z, r1.z, r1.z
  87: mul r0.z, r0.z, r1.z
  88: mad r0.z, r0.y, r0.z, l(1.000000)
  89: add r1.z, -|r0.w|, l(1.000000)
  90: mul r3.w, r1.z, r1.z
  91: mul r3.w, r3.w, r3.w
  92: mul r1.z, r1.z, r3.w
  93: mad r0.y, r0.y, r1.z, l(1.000000)
  94: mul r0.y, r0.y, r0.z
  95: mul r0.z, r2.x, r2.x
  96: max r0.z, r0.z, l(0.002000)
  97: add r1.z, -r0.z, l(1.000000)
  98: mad r2.x, |r0.w|, r1.z, r0.z
  99: mad r1.z, r1.x, r1.z, r0.z
 100: mul r0.w, |r0.w|, r1.z
 101: mad r0.w, r1.x, r2.x, r0.w
 102: add r0.w, r0.w, l(0.000010)
 103: div r0.w, l(0.500000), r0.w
 104: mul r0.z, r0.z, r0.z
 105: mad r1.z, r1.y, r0.z, -r1.y
 106: mad r1.y, r1.z, r1.y, l(1.000000)
 107: mul r0.z, r0.z, l(0.318310)
 108: mad r1.y, r1.y, r1.y, l(0.000000)
 109: div r0.z, r0.z, r1.y
 110: mul r0.z, r0.z, r0.w
 111: mul r0.z, r0.z, l(3.141593)
 112: max r0.z, r0.z, l(0.000100)
 113: sqrt r0.z, r0.z
 114: mul r0.yz, r1.xxxx, r0.yyzy
 115: dp3 r0.w, r5.xyzx, r5.xyzx
 116: ne r0.w, r0.w, l(0.000000)
 117: and r0.w, r0.w, l(0x3f800000)
 118: mul r0.z, r0.w, r0.z
 119: mul r1.xyz, r0.yyyy, r2.yzwy
 120: mul r0.yzw, r2.yyzw, r0.zzzz
 121: add r0.x, -r0.x, l(1.000000)
 122: mul r2.x, r0.x, r0.x
 123: mul r2.x, r2.x, r2.x
 124: mul r0.x, r0.x, r2.x
 125: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 126: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 127: mul r0.xyz, r0.yzwy, r2.xyzx
 128: mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
 129: mul o0.xyz, r1.wwww, r0.xyzx
 130: mov o0.w, l(1.000000)
 131: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xy          4     NONE   float   xy  
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xy
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb3[18].xyzw
   5: mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
   7: mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
   8: mov o0.xyzw, r1.xyzw
   9: mul r2.xyz, v2.yyyy, cb2[1].xyzx
  10: mad r2.xyz, cb2[0].xyzx, v2.xxxx, r2.xyzx
  11: mad r2.xyz, cb2[2].xyzx, v2.zzzz, r2.xyzx
  12: dp3 r2.w, r2.xyzx, r2.xyzx
  13: rsq r2.w, r2.w
  14: mul o1.xyz, r2.wwww, r2.xyzx
  15: mad o2.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
  17: mov o3.xy, v3.xyxx
  18: mov o3.zw, l(0,0,0,0)
  19: mul r2.xy, r0.yyyy, cb0[5].xyxx
  20: mad r0.xy, cb0[4].xyxx, r0.xxxx, r2.xyxx
  21: mad r0.xy, cb0[6].xyxx, r0.zzzz, r0.xyxx
  22: mad o4.xy, cb0[7].xyxx, r0.wwww, r0.xyxx
  23: mul r0.x, r1.y, cb1[5].x
  24: mul r0.w, r0.x, l(0.500000)
  25: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  26: mov o5.zw, r1.zzzw
  27: add o5.xy, r0.zzzz, r0.xwxx
  28: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 120 math, 6 temp registers, 8 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_ShadowMapTexture" to slot 5 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 6 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 0

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 224
  Float _Metallic1 at 228
  Float _Metallic2 at 232
  Float _Metallic3 at 236
  Float _Smoothness0 at 240
  Float _Smoothness1 at 244
  Float _Smoothness2 at 248
  Float _Smoothness3 at 252
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xy          4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_input_ps linear v5.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: mad r2.xy, v3.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: mul r2.xy, r2.xyxx, cb0[9].xyxx
   7: sample r2.xyzw, r2.xyxx, t0.xyzw, s3
   8: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   9: add r3.x, r1.w, l(0.001000)
  10: div r2.xyzw, r2.xyzw, r3.xxxx
  11: mad r3.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
  12: mad r3.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
  13: mad r4.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
  14: mad r4.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
  15: sample r5.xyzw, r3.xyxx, t1.xyzw, s4
  16: mul r5.xyzw, r2.xxxx, r5.xyzw
  17: mul r5.w, r5.w, cb0[15].x
  18: sample r3.xyzw, r3.zwzz, t2.xyzw, s5
  19: mul r3.xyzw, r2.yyyy, r3.xyzw
  20: mul r3.w, r3.w, cb0[15].y
  21: add r3.xyzw, r3.xyzw, r5.xyzw
  22: sample r5.xyzw, r4.xyxx, t3.xyzw, s6
  23: mul r5.xyzw, r2.zzzz, r5.xyzw
  24: mul r5.w, r5.w, cb0[15].z
  25: add r3.xyzw, r3.xyzw, r5.xyzw
  26: sample r4.xyzw, r4.zwzz, t4.xyzw, s7
  27: mul r4.xyzw, r2.wwww, r4.xyzw
  28: mul r4.w, r4.w, cb0[15].w
  29: add r3.xyzw, r3.xyzw, r4.xyzw
  30: dp4 r2.x, r2.xyzw, cb0[14].xyzw
  31: mul r2.yz, v2.yyyy, cb0[5].xxyx
  32: mad r2.yz, cb0[4].xxyx, v2.xxxx, r2.yyzy
  33: mad r2.yz, cb0[6].xxyx, v2.zzzz, r2.yyzy
  34: add r2.yz, r2.yyzy, cb0[7].xxyx
  35: mov r4.x, cb4[9].z
  36: mov r4.y, cb4[10].z
  37: mov r4.z, cb4[11].z
  38: dp3 r2.w, r0.xyzx, r4.xyzx
  39: add r4.xyz, v2.xyzx, -cb3[25].xyzx
  40: dp3 r4.x, r4.xyzx, r4.xyzx
  41: sqrt r4.x, r4.x
  42: add r4.x, -r2.w, r4.x
  43: mad r2.w, cb3[25].w, r4.x, r2.w
  44: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  45: eq r4.x, cb5[0].x, l(1.000000)
  46: if_nz r4.x
  47:   eq r4.x, cb5[0].y, l(1.000000)
  48:   mul r4.yzw, v2.yyyy, cb5[2].xxyz
  49:   mad r4.yzw, cb5[1].xxyz, v2.xxxx, r4.yyzw
  50:   mad r4.yzw, cb5[3].xxyz, v2.zzzz, r4.yyzw
  51:   add r4.yzw, r4.yyzw, cb5[4].xxyz
  52:   movc r4.xyz, r4.xxxx, r4.yzwy, v2.xyzx
  53:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  54:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  55:   mad r4.y, r4.y, l(0.250000), l(0.750000)
  56:   mad r5.x, cb5[0].z, l(0.500000), l(0.750000)
  57:   max r4.x, r4.y, r5.x
  58:   sample r4.xyzw, r4.xzwx, t7.xyzw, s0
  59: else 
  60:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  61: endif 
  62: dp4_sat r4.x, r4.xyzw, cb2[46].xyzw
  63: div r4.yz, v5.xxyx, v5.wwww
  64: sample r5.xyzw, r4.yzyy, t5.xyzw, s1
  65: add r4.x, r4.x, -r5.x
  66: mad r2.w, r2.w, r4.x, r5.x
  67: sample r4.xyzw, r2.yzyy, t6.xyzw, s2
  68: mul r2.y, r2.w, r4.w
  69: mul r2.yzw, r2.yyyy, cb0[2].xxyz
  70: dp3 r4.x, v1.xyzx, v1.xyzx
  71: rsq r4.x, r4.x
  72: mul r4.xyz, r4.xxxx, v1.xyzx
  73: add r5.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  74: mad r5.xyz, r2.xxxx, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  75: mad r2.x, -r2.x, l(0.779084), l(0.779084)
  76: mul r3.xyz, r2.xxxx, r3.xyzx
  77: add r2.x, -r3.w, l(1.000000)
  78: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  79: dp3 r0.w, r0.xyzx, r0.xyzx
  80: max r0.w, r0.w, l(0.001000)
  81: rsq r0.w, r0.w
  82: mul r0.xyz, r0.wwww, r0.xyzx
  83: dp3 r0.w, r4.xyzx, r1.xyzx
  84: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
  85: dp3_sat r1.y, r4.xyzx, r0.xyzx
  86: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  87: mul r0.y, r0.x, r0.x
  88: dp2 r0.y, r0.yyyy, r2.xxxx
  89: add r0.y, r0.y, l(-0.500000)
  90: add r0.z, -r1.x, l(1.000000)
  91: mul r1.z, r0.z, r0.z
  92: mul r1.z, r1.z, r1.z
  93: mul r0.z, r0.z, r1.z
  94: mad r0.z, r0.y, r0.z, l(1.000000)
  95: add r1.z, -|r0.w|, l(1.000000)
  96: mul r3.w, r1.z, r1.z
  97: mul r3.w, r3.w, r3.w
  98: mul r1.z, r1.z, r3.w
  99: mad r0.y, r0.y, r1.z, l(1.000000)
 100: mul r0.y, r0.y, r0.z
 101: mul r0.z, r2.x, r2.x
 102: max r0.z, r0.z, l(0.002000)
 103: add r1.z, -r0.z, l(1.000000)
 104: mad r2.x, |r0.w|, r1.z, r0.z
 105: mad r1.z, r1.x, r1.z, r0.z
 106: mul r0.w, |r0.w|, r1.z
 107: mad r0.w, r1.x, r2.x, r0.w
 108: add r0.w, r0.w, l(0.000010)
 109: div r0.w, l(0.500000), r0.w
 110: mul r0.z, r0.z, r0.z
 111: mad r1.z, r1.y, r0.z, -r1.y
 112: mad r1.y, r1.z, r1.y, l(1.000000)
 113: mul r0.z, r0.z, l(0.318310)
 114: mad r1.y, r1.y, r1.y, l(0.000000)
 115: div r0.z, r0.z, r1.y
 116: mul r0.z, r0.z, r0.w
 117: mul r0.z, r0.z, l(3.141593)
 118: max r0.z, r0.z, l(0.000100)
 119: sqrt r0.z, r0.z
 120: mul r0.yz, r1.xxxx, r0.yyzy
 121: dp3 r0.w, r5.xyzx, r5.xyzx
 122: ne r0.w, r0.w, l(0.000000)
 123: and r0.w, r0.w, l(0x3f800000)
 124: mul r0.z, r0.w, r0.z
 125: mul r1.xyz, r0.yyyy, r2.yzwy
 126: mul r0.yzw, r2.yyzw, r0.zzzz
 127: add r0.x, -r0.x, l(1.000000)
 128: mul r2.x, r0.x, r0.x
 129: mul r2.x, r2.x, r2.x
 130: mul r0.x, r0.x, r2.x
 131: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 132: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 133: mul r0.xyz, r0.yzwy, r2.xyzx
 134: mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
 135: mul o0.xyz, r1.wwww, r0.xyzx
 136: mov o0.w, l(1.000000)
 137: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 20 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mul r1.xyz, v2.yyyy, cb1[1].xyzx
   9: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  10: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  11: dp3 r1.w, r1.xyzx, r1.xyzx
  12: rsq r1.w, r1.w
  13: mul o1.xyz, r1.wwww, r1.xyzx
  14: mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  15: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  16: mov o3.xy, v3.xyxx
  17: mov o3.zw, l(0,0,0,0)
  18: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  19: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  20: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  21: mad o4.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  22: mov o5.xyzw, l(0,0,0,0)
  23: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 135 math, 8 temp registers, 7 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_LightTexture0" to slot 5 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 7 sampler slot 1

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 224
  Float _Metallic1 at 228
  Float _Metallic2 at 232
  Float _Metallic3 at 236
  Float _Smoothness0 at 240
  Float _Smoothness1 at 244
  Float _Smoothness2 at 248
  Float _Smoothness3 at 252
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v3.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[9].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s3
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r5.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r6.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r6.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s4
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[15].x
  22: sample r5.xyzw, r5.zwzz, t2.xyzw, s5
  23: mul r5.xyzw, r4.yyyy, r5.xyzw
  24: mul r5.w, r5.w, cb0[15].y
  25: add r5.xyzw, r5.xyzw, r7.xyzw
  26: sample r7.xyzw, r6.xyxx, t3.xyzw, s6
  27: mul r7.xyzw, r4.zzzz, r7.xyzw
  28: mul r7.w, r7.w, cb0[15].z
  29: add r5.xyzw, r5.xyzw, r7.xyzw
  30: sample r6.xyzw, r6.zwzz, t4.xyzw, s7
  31: mul r6.xyzw, r4.wwww, r6.xyzw
  32: mul r6.w, r6.w, cb0[15].w
  33: add r5.xyzw, r5.xyzw, r6.xyzw
  34: dp4 r2.w, r4.xyzw, cb0[14].xyzw
  35: mul r4.xyz, v2.yyyy, cb0[5].xyzx
  36: mad r4.xyz, cb0[4].xyzx, v2.xxxx, r4.xyzx
  37: mad r4.xyz, cb0[6].xyzx, v2.zzzz, r4.xyzx
  38: add r4.xyz, r4.xyzx, cb0[7].xyzx
  39: mov r6.x, cb4[9].z
  40: mov r6.y, cb4[10].z
  41: mov r6.z, cb4[11].z
  42: dp3 r2.x, r2.xyzx, r6.xyzx
  43: add r6.xyz, v2.xyzx, -cb3[25].xyzx
  44: dp3 r2.y, r6.xyzx, r6.xyzx
  45: sqrt r2.y, r2.y
  46: add r2.y, -r2.x, r2.y
  47: mad r2.x, cb3[25].w, r2.y, r2.x
  48: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  49: eq r2.y, cb5[0].x, l(1.000000)
  50: if_nz r2.y
  51:   eq r2.y, cb5[0].y, l(1.000000)
  52:   mul r6.xyz, v2.yyyy, cb5[2].xyzx
  53:   mad r6.xyz, cb5[1].xyzx, v2.xxxx, r6.xyzx
  54:   mad r6.xyz, cb5[3].xyzx, v2.zzzz, r6.xyzx
  55:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  56:   movc r6.xyz, r2.yyyy, r6.xyzx, v2.xyzx
  57:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  58:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  59:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  60:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  61:   max r6.x, r2.z, r2.y
  62:   sample r6.xyzw, r6.xzwx, t6.xyzw, s0
  63: else 
  64:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  65: endif 
  66: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
  67: add r6.xyz, v2.xyzx, -cb2[1].xyzx
  68: max r2.z, |r6.y|, |r6.x|
  69: max r2.z, |r6.z|, r2.z
  70: add r2.z, r2.z, -cb2[2].z
  71: max r2.z, r2.z, l(0.000010)
  72: mul r2.z, r2.z, cb2[2].w
  73: div r2.z, cb2[2].y, r2.z
  74: add r2.z, r2.z, -cb2[2].x
  75: add r2.z, -r2.z, l(1.000000)
  76: sample_c_lz r2.z, r6.xyzx, t7.xxxx, s1, r2.z
  77: add r3.w, -cb3[24].x, l(1.000000)
  78: mad r2.z, r2.z, r3.w, cb3[24].x
  79: add r2.y, -r2.z, r2.y
  80: mad r2.x, r2.x, r2.y, r2.z
  81: dp3 r2.y, r4.xyzx, r4.xyzx
  82: sample r4.xyzw, r2.yyyy, t5.xyzw, s2
  83: mul r2.x, r2.x, r4.x
  84: mul r2.xyz, r2.xxxx, cb0[2].xyzx
  85: dp3 r3.w, v1.xyzx, v1.xyzx
  86: rsq r3.w, r3.w
  87: mul r4.xyz, r3.wwww, v1.xyzx
  88: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  89: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  90: mad r2.w, -r2.w, l(0.779084), l(0.779084)
  91: mul r5.xyz, r2.wwww, r5.xyzx
  92: add r2.w, -r5.w, l(1.000000)
  93: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
  94: dp3 r0.w, r0.xyzx, r0.xyzx
  95: max r0.w, r0.w, l(0.001000)
  96: rsq r0.w, r0.w
  97: mul r0.xyz, r0.wwww, r0.xyzx
  98: dp3 r0.w, r4.xyzx, r3.xyzx
  99: dp3_sat r3.x, r4.xyzx, r1.xyzx
 100: dp3_sat r3.y, r4.xyzx, r0.xyzx
 101: dp3_sat r0.x, r1.xyzx, r0.xyzx
 102: mul r0.y, r0.x, r0.x
 103: dp2 r0.y, r0.yyyy, r2.wwww
 104: add r0.y, r0.y, l(-0.500000)
 105: add r0.z, -r3.x, l(1.000000)
 106: mul r1.x, r0.z, r0.z
 107: mul r1.x, r1.x, r1.x
 108: mul r0.z, r0.z, r1.x
 109: mad r0.z, r0.y, r0.z, l(1.000000)
 110: add r1.x, -|r0.w|, l(1.000000)
 111: mul r1.y, r1.x, r1.x
 112: mul r1.y, r1.y, r1.y
 113: mul r1.x, r1.x, r1.y
 114: mad r0.y, r0.y, r1.x, l(1.000000)
 115: mul r0.y, r0.y, r0.z
 116: mul r0.z, r2.w, r2.w
 117: max r0.z, r0.z, l(0.002000)
 118: add r1.x, -r0.z, l(1.000000)
 119: mad r1.y, |r0.w|, r1.x, r0.z
 120: mad r1.x, r3.x, r1.x, r0.z
 121: mul r0.w, |r0.w|, r1.x
 122: mad r0.w, r3.x, r1.y, r0.w
 123: add r0.w, r0.w, l(0.000010)
 124: div r0.w, l(0.500000), r0.w
 125: mul r0.z, r0.z, r0.z
 126: mad r1.x, r3.y, r0.z, -r3.y
 127: mad r1.x, r1.x, r3.y, l(1.000000)
 128: mul r0.z, r0.z, l(0.318310)
 129: mad r1.x, r1.x, r1.x, l(0.000000)
 130: div r0.z, r0.z, r1.x
 131: mul r0.z, r0.z, r0.w
 132: mul r0.z, r0.z, l(3.141593)
 133: max r0.z, r0.z, l(0.000100)
 134: sqrt r0.z, r0.z
 135: mul r0.yz, r3.xxxx, r0.yyzy
 136: dp3 r0.w, r6.xyzx, r6.xyzx
 137: ne r0.w, r0.w, l(0.000000)
 138: and r0.w, r0.w, l(0x3f800000)
 139: mul r0.z, r0.w, r0.z
 140: mul r1.xyz, r0.yyyy, r2.xyzx
 141: mul r0.yzw, r2.xxyz, r0.zzzz
 142: add r0.x, -r0.x, l(1.000000)
 143: mul r2.x, r0.x, r0.x
 144: mul r2.x, r2.x, r2.x
 145: mul r0.x, r0.x, r2.x
 146: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 147: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 148: mul r0.xyz, r0.yzwy, r2.xyzx
 149: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 150: mul o0.xyz, r1.wwww, r0.xyzx
 151: mov o0.w, l(1.000000)
 152: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 20 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mul r1.xyz, v2.yyyy, cb1[1].xyzx
   9: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  10: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  11: dp3 r1.w, r1.xyzx, r1.xyzx
  12: rsq r1.w, r1.w
  13: mul o1.xyz, r1.wwww, r1.xyzx
  14: mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  15: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  16: mov o3.xy, v3.xyxx
  17: mov o3.zw, l(0,0,0,0)
  18: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  19: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  20: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  21: mad o4.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  22: mov o5.xyzw, l(0,0,0,0)
  23: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 141 math, 9 temp registers, 7 textures, 4 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_LightTexture0" to slot 5 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 7 sampler slot 1

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 224
  Float _Metallic1 at 228
  Float _Metallic2 at 232
  Float _Metallic3 at 236
  Float _Smoothness0 at 240
  Float _Smoothness1 at 244
  Float _Smoothness2 at 248
  Float _Smoothness3 at 252
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v3.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[9].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s3
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r5.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r6.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r6.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s4
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[15].x
  22: sample r5.xyzw, r5.zwzz, t2.xyzw, s5
  23: mul r5.xyzw, r4.yyyy, r5.xyzw
  24: mul r5.w, r5.w, cb0[15].y
  25: add r5.xyzw, r5.xyzw, r7.xyzw
  26: sample r7.xyzw, r6.xyxx, t3.xyzw, s6
  27: mul r7.xyzw, r4.zzzz, r7.xyzw
  28: mul r7.w, r7.w, cb0[15].z
  29: add r5.xyzw, r5.xyzw, r7.xyzw
  30: sample r6.xyzw, r6.zwzz, t4.xyzw, s7
  31: mul r6.xyzw, r4.wwww, r6.xyzw
  32: mul r6.w, r6.w, cb0[15].w
  33: add r5.xyzw, r5.xyzw, r6.xyzw
  34: dp4 r2.w, r4.xyzw, cb0[14].xyzw
  35: mul r4.xyz, v2.yyyy, cb0[5].xyzx
  36: mad r4.xyz, cb0[4].xyzx, v2.xxxx, r4.xyzx
  37: mad r4.xyz, cb0[6].xyzx, v2.zzzz, r4.xyzx
  38: add r4.xyz, r4.xyzx, cb0[7].xyzx
  39: mov r6.x, cb4[9].z
  40: mov r6.y, cb4[10].z
  41: mov r6.z, cb4[11].z
  42: dp3 r2.x, r2.xyzx, r6.xyzx
  43: add r6.xyz, v2.xyzx, -cb3[25].xyzx
  44: dp3 r2.y, r6.xyzx, r6.xyzx
  45: sqrt r2.y, r2.y
  46: add r2.y, -r2.x, r2.y
  47: mad r2.x, cb3[25].w, r2.y, r2.x
  48: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  49: eq r2.y, cb5[0].x, l(1.000000)
  50: if_nz r2.y
  51:   eq r2.y, cb5[0].y, l(1.000000)
  52:   mul r6.xyz, v2.yyyy, cb5[2].xyzx
  53:   mad r6.xyz, cb5[1].xyzx, v2.xxxx, r6.xyzx
  54:   mad r6.xyz, cb5[3].xyzx, v2.zzzz, r6.xyzx
  55:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  56:   movc r6.xyz, r2.yyyy, r6.xyzx, v2.xyzx
  57:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  58:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  59:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  60:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  61:   max r6.x, r2.z, r2.y
  62:   sample r6.xyzw, r6.xzwx, t6.xyzw, s0
  63: else 
  64:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  65: endif 
  66: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
  67: lt r2.z, r2.x, l(0.990000)
  68: if_nz r2.z
  69:   add r6.xyz, v2.xyzx, -cb2[1].xyzx
  70:   max r2.z, |r6.y|, |r6.x|
  71:   max r2.z, |r6.z|, r2.z
  72:   add r2.z, r2.z, -cb2[2].z
  73:   max r2.z, r2.z, l(0.000010)
  74:   mul r2.z, r2.z, cb2[2].w
  75:   div r2.z, cb2[2].y, r2.z
  76:   add r2.z, r2.z, -cb2[2].x
  77:   add r2.z, -r2.z, l(1.000000)
  78:   add r7.xyz, r6.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  79:   sample_c_lz r7.x, r7.xyzx, t7.xxxx, s1, r2.z
  80:   add r8.xyz, r6.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  81:   sample_c_lz r7.y, r8.xyzx, t7.xxxx, s1, r2.z
  82:   add r8.xyz, r6.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  83:   sample_c_lz r7.z, r8.xyzx, t7.xxxx, s1, r2.z
  84:   add r6.xyz, r6.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  85:   sample_c_lz r7.w, r6.xyzx, t7.xxxx, s1, r2.z
  86:   dp4 r2.z, r7.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  87:   add r3.w, -cb3[24].x, l(1.000000)
  88:   mad r2.z, r2.z, r3.w, cb3[24].x
  89: else 
  90:   mov r2.z, l(1.000000)
  91: endif 
  92: add r2.y, -r2.z, r2.y
  93: mad r2.x, r2.x, r2.y, r2.z
  94: dp3 r2.y, r4.xyzx, r4.xyzx
  95: sample r4.xyzw, r2.yyyy, t5.xyzw, s2
  96: mul r2.x, r2.x, r4.x
  97: mul r2.xyz, r2.xxxx, cb0[2].xyzx
  98: dp3 r3.w, v1.xyzx, v1.xyzx
  99: rsq r3.w, r3.w
 100: mul r4.xyz, r3.wwww, v1.xyzx
 101: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 102: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 103: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 104: mul r5.xyz, r2.wwww, r5.xyzx
 105: add r2.w, -r5.w, l(1.000000)
 106: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 107: dp3 r0.w, r0.xyzx, r0.xyzx
 108: max r0.w, r0.w, l(0.001000)
 109: rsq r0.w, r0.w
 110: mul r0.xyz, r0.wwww, r0.xyzx
 111: dp3 r0.w, r4.xyzx, r3.xyzx
 112: dp3_sat r3.x, r4.xyzx, r1.xyzx
 113: dp3_sat r3.y, r4.xyzx, r0.xyzx
 114: dp3_sat r0.x, r1.xyzx, r0.xyzx
 115: mul r0.y, r0.x, r0.x
 116: dp2 r0.y, r0.yyyy, r2.wwww
 117: add r0.y, r0.y, l(-0.500000)
 118: add r0.z, -r3.x, l(1.000000)
 119: mul r1.x, r0.z, r0.z
 120: mul r1.x, r1.x, r1.x
 121: mul r0.z, r0.z, r1.x
 122: mad r0.z, r0.y, r0.z, l(1.000000)
 123: add r1.x, -|r0.w|, l(1.000000)
 124: mul r1.y, r1.x, r1.x
 125: mul r1.y, r1.y, r1.y
 126: mul r1.x, r1.x, r1.y
 127: mad r0.y, r0.y, r1.x, l(1.000000)
 128: mul r0.y, r0.y, r0.z
 129: mul r0.z, r2.w, r2.w
 130: max r0.z, r0.z, l(0.002000)
 131: add r1.x, -r0.z, l(1.000000)
 132: mad r1.y, |r0.w|, r1.x, r0.z
 133: mad r1.x, r3.x, r1.x, r0.z
 134: mul r0.w, |r0.w|, r1.x
 135: mad r0.w, r3.x, r1.y, r0.w
 136: add r0.w, r0.w, l(0.000010)
 137: div r0.w, l(0.500000), r0.w
 138: mul r0.z, r0.z, r0.z
 139: mad r1.x, r3.y, r0.z, -r3.y
 140: mad r1.x, r1.x, r3.y, l(1.000000)
 141: mul r0.z, r0.z, l(0.318310)
 142: mad r1.x, r1.x, r1.x, l(0.000000)
 143: div r0.z, r0.z, r1.x
 144: mul r0.z, r0.z, r0.w
 145: mul r0.z, r0.z, l(3.141593)
 146: max r0.z, r0.z, l(0.000100)
 147: sqrt r0.z, r0.z
 148: mul r0.yz, r3.xxxx, r0.yyzy
 149: dp3 r0.w, r6.xyzx, r6.xyzx
 150: ne r0.w, r0.w, l(0.000000)
 151: and r0.w, r0.w, l(0x3f800000)
 152: mul r0.z, r0.w, r0.z
 153: mul r1.xyz, r0.yyyy, r2.xyzx
 154: mul r0.yzw, r2.xxyz, r0.zzzz
 155: add r0.x, -r0.x, l(1.000000)
 156: mul r2.x, r0.x, r0.x
 157: mul r2.x, r2.x, r2.x
 158: mul r0.x, r0.x, r2.x
 159: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 160: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 161: mul r0.xyz, r0.yzwy, r2.xyzx
 162: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 163: mul o0.xyz, r1.wwww, r0.xyzx
 164: mov o0.w, l(1.000000)
 165: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 20 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mul r1.xyz, v2.yyyy, cb1[1].xyzx
   9: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  10: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  11: dp3 r1.w, r1.xyzx, r1.xyzx
  12: rsq r1.w, r1.w
  13: mul o1.xyz, r1.wwww, r1.xyzx
  14: mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  15: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  16: mov o3.xy, v3.xyxx
  17: mov o3.zw, l(0,0,0,0)
  18: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  19: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  20: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  21: mad o4.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  22: mov o5.xyzw, l(0,0,0,0)
  23: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 136 math, 8 temp registers, 8 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 4
Set 2D Texture "_Splat0" to slot 1 sampler slot 5
Set 2D Texture "_Splat1" to slot 2 sampler slot 6
Set 2D Texture "_Splat2" to slot 3 sampler slot 7
Set 2D Texture "_Splat3" to slot 4 sampler slot 8
Set 2D Texture "_LightTextureB0" to slot 5 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 6 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 8 sampler slot 1

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 224
  Float _Metallic1 at 228
  Float _Metallic2 at 232
  Float _Metallic3 at 236
  Float _Smoothness0 at 240
  Float _Smoothness1 at 244
  Float _Smoothness2 at 248
  Float _Smoothness3 at 252
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_resource_texturecube (float,float,float,float) t8
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v3.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[9].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s4
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r5.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r6.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r6.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s5
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[15].x
  22: sample r5.xyzw, r5.zwzz, t2.xyzw, s6
  23: mul r5.xyzw, r4.yyyy, r5.xyzw
  24: mul r5.w, r5.w, cb0[15].y
  25: add r5.xyzw, r5.xyzw, r7.xyzw
  26: sample r7.xyzw, r6.xyxx, t3.xyzw, s7
  27: mul r7.xyzw, r4.zzzz, r7.xyzw
  28: mul r7.w, r7.w, cb0[15].z
  29: add r5.xyzw, r5.xyzw, r7.xyzw
  30: sample r6.xyzw, r6.zwzz, t4.xyzw, s8
  31: mul r6.xyzw, r4.wwww, r6.xyzw
  32: mul r6.w, r6.w, cb0[15].w
  33: add r5.xyzw, r5.xyzw, r6.xyzw
  34: dp4 r2.w, r4.xyzw, cb0[14].xyzw
  35: mul r4.xyz, v2.yyyy, cb0[5].xyzx
  36: mad r4.xyz, cb0[4].xyzx, v2.xxxx, r4.xyzx
  37: mad r4.xyz, cb0[6].xyzx, v2.zzzz, r4.xyzx
  38: add r4.xyz, r4.xyzx, cb0[7].xyzx
  39: mov r6.x, cb4[9].z
  40: mov r6.y, cb4[10].z
  41: mov r6.z, cb4[11].z
  42: dp3 r2.x, r2.xyzx, r6.xyzx
  43: add r6.xyz, v2.xyzx, -cb3[25].xyzx
  44: dp3 r2.y, r6.xyzx, r6.xyzx
  45: sqrt r2.y, r2.y
  46: add r2.y, -r2.x, r2.y
  47: mad r2.x, cb3[25].w, r2.y, r2.x
  48: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  49: eq r2.y, cb5[0].x, l(1.000000)
  50: if_nz r2.y
  51:   eq r2.y, cb5[0].y, l(1.000000)
  52:   mul r6.xyz, v2.yyyy, cb5[2].xyzx
  53:   mad r6.xyz, cb5[1].xyzx, v2.xxxx, r6.xyzx
  54:   mad r6.xyz, cb5[3].xyzx, v2.zzzz, r6.xyzx
  55:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  56:   movc r6.xyz, r2.yyyy, r6.xyzx, v2.xyzx
  57:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  58:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  59:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  60:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  61:   max r6.x, r2.z, r2.y
  62:   sample r6.xyzw, r6.xzwx, t7.xyzw, s0
  63: else 
  64:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  65: endif 
  66: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
  67: add r6.xyz, v2.xyzx, -cb2[1].xyzx
  68: max r2.z, |r6.y|, |r6.x|
  69: max r2.z, |r6.z|, r2.z
  70: add r2.z, r2.z, -cb2[2].z
  71: max r2.z, r2.z, l(0.000010)
  72: mul r2.z, r2.z, cb2[2].w
  73: div r2.z, cb2[2].y, r2.z
  74: add r2.z, r2.z, -cb2[2].x
  75: add r2.z, -r2.z, l(1.000000)
  76: sample_c_lz r2.z, r6.xyzx, t8.xxxx, s1, r2.z
  77: add r3.w, -cb3[24].x, l(1.000000)
  78: mad r2.z, r2.z, r3.w, cb3[24].x
  79: add r2.y, -r2.z, r2.y
  80: mad r2.x, r2.x, r2.y, r2.z
  81: dp3 r2.y, r4.xyzx, r4.xyzx
  82: sample r6.xyzw, r2.yyyy, t5.xyzw, s3
  83: sample r4.xyzw, r4.xyzx, t6.xyzw, s2
  84: mul r2.y, r4.w, r6.x
  85: mul r2.x, r2.x, r2.y
  86: mul r2.xyz, r2.xxxx, cb0[2].xyzx
  87: dp3 r3.w, v1.xyzx, v1.xyzx
  88: rsq r3.w, r3.w
  89: mul r4.xyz, r3.wwww, v1.xyzx
  90: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  91: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  92: mad r2.w, -r2.w, l(0.779084), l(0.779084)
  93: mul r5.xyz, r2.wwww, r5.xyzx
  94: add r2.w, -r5.w, l(1.000000)
  95: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
  96: dp3 r0.w, r0.xyzx, r0.xyzx
  97: max r0.w, r0.w, l(0.001000)
  98: rsq r0.w, r0.w
  99: mul r0.xyz, r0.wwww, r0.xyzx
 100: dp3 r0.w, r4.xyzx, r3.xyzx
 101: dp3_sat r3.x, r4.xyzx, r1.xyzx
 102: dp3_sat r3.y, r4.xyzx, r0.xyzx
 103: dp3_sat r0.x, r1.xyzx, r0.xyzx
 104: mul r0.y, r0.x, r0.x
 105: dp2 r0.y, r0.yyyy, r2.wwww
 106: add r0.y, r0.y, l(-0.500000)
 107: add r0.z, -r3.x, l(1.000000)
 108: mul r1.x, r0.z, r0.z
 109: mul r1.x, r1.x, r1.x
 110: mul r0.z, r0.z, r1.x
 111: mad r0.z, r0.y, r0.z, l(1.000000)
 112: add r1.x, -|r0.w|, l(1.000000)
 113: mul r1.y, r1.x, r1.x
 114: mul r1.y, r1.y, r1.y
 115: mul r1.x, r1.x, r1.y
 116: mad r0.y, r0.y, r1.x, l(1.000000)
 117: mul r0.y, r0.y, r0.z
 118: mul r0.z, r2.w, r2.w
 119: max r0.z, r0.z, l(0.002000)
 120: add r1.x, -r0.z, l(1.000000)
 121: mad r1.y, |r0.w|, r1.x, r0.z
 122: mad r1.x, r3.x, r1.x, r0.z
 123: mul r0.w, |r0.w|, r1.x
 124: mad r0.w, r3.x, r1.y, r0.w
 125: add r0.w, r0.w, l(0.000010)
 126: div r0.w, l(0.500000), r0.w
 127: mul r0.z, r0.z, r0.z
 128: mad r1.x, r3.y, r0.z, -r3.y
 129: mad r1.x, r1.x, r3.y, l(1.000000)
 130: mul r0.z, r0.z, l(0.318310)
 131: mad r1.x, r1.x, r1.x, l(0.000000)
 132: div r0.z, r0.z, r1.x
 133: mul r0.z, r0.z, r0.w
 134: mul r0.z, r0.z, l(3.141593)
 135: max r0.z, r0.z, l(0.000100)
 136: sqrt r0.z, r0.z
 137: mul r0.yz, r3.xxxx, r0.yyzy
 138: dp3 r0.w, r6.xyzx, r6.xyzx
 139: ne r0.w, r0.w, l(0.000000)
 140: and r0.w, r0.w, l(0x3f800000)
 141: mul r0.z, r0.w, r0.z
 142: mul r1.xyz, r0.yyyy, r2.xyzx
 143: mul r0.yzw, r2.xxyz, r0.zzzz
 144: add r0.x, -r0.x, l(1.000000)
 145: mul r2.x, r0.x, r0.x
 146: mul r2.x, r2.x, r2.x
 147: mul r0.x, r0.x, r2.x
 148: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 149: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 150: mul r0.xyz, r0.yzwy, r2.xyzx
 151: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 152: mul o0.xyz, r1.wwww, r0.xyzx
 153: mov o0.w, l(1.000000)
 154: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 20 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mul r1.xyz, v2.yyyy, cb1[1].xyzx
   9: mad r1.xyz, cb1[0].xyzx, v2.xxxx, r1.xyzx
  10: mad r1.xyz, cb1[2].xyzx, v2.zzzz, r1.xyzx
  11: dp3 r1.w, r1.xyzx, r1.xyzx
  12: rsq r1.w, r1.w
  13: mul o1.xyz, r1.wwww, r1.xyzx
  14: mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  15: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  16: mov o3.xy, v3.xyxx
  17: mov o3.zw, l(0,0,0,0)
  18: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  19: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  20: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  21: mad o4.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  22: mov o5.xyzw, l(0,0,0,0)
  23: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 142 math, 9 temp registers, 8 textures, 4 branches
Set 2D Texture "_Control" to slot 0 sampler slot 4
Set 2D Texture "_Splat0" to slot 1 sampler slot 5
Set 2D Texture "_Splat1" to slot 2 sampler slot 6
Set 2D Texture "_Splat2" to slot 3 sampler slot 7
Set 2D Texture "_Splat3" to slot 4 sampler slot 8
Set 2D Texture "_LightTextureB0" to slot 5 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 6 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 8 sampler slot 1

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 224
  Float _Metallic1 at 228
  Float _Metallic2 at 232
  Float _Metallic3 at 236
  Float _Smoothness0 at 240
  Float _Smoothness1 at 244
  Float _Smoothness2 at 248
  Float _Smoothness3 at 252
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_resource_texturecube (float,float,float,float) t8
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v3.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[9].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s4
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r5.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r6.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r6.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s5
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[15].x
  22: sample r5.xyzw, r5.zwzz, t2.xyzw, s6
  23: mul r5.xyzw, r4.yyyy, r5.xyzw
  24: mul r5.w, r5.w, cb0[15].y
  25: add r5.xyzw, r5.xyzw, r7.xyzw
  26: sample r7.xyzw, r6.xyxx, t3.xyzw, s7
  27: mul r7.xyzw, r4.zzzz, r7.xyzw
  28: mul r7.w, r7.w, cb0[15].z
  29: add r5.xyzw, r5.xyzw, r7.xyzw
  30: sample r6.xyzw, r6.zwzz, t4.xyzw, s8
  31: mul r6.xyzw, r4.wwww, r6.xyzw
  32: mul r6.w, r6.w, cb0[15].w
  33: add r5.xyzw, r5.xyzw, r6.xyzw
  34: dp4 r2.w, r4.xyzw, cb0[14].xyzw
  35: mul r4.xyz, v2.yyyy, cb0[5].xyzx
  36: mad r4.xyz, cb0[4].xyzx, v2.xxxx, r4.xyzx
  37: mad r4.xyz, cb0[6].xyzx, v2.zzzz, r4.xyzx
  38: add r4.xyz, r4.xyzx, cb0[7].xyzx
  39: mov r6.x, cb4[9].z
  40: mov r6.y, cb4[10].z
  41: mov r6.z, cb4[11].z
  42: dp3 r2.x, r2.xyzx, r6.xyzx
  43: add r6.xyz, v2.xyzx, -cb3[25].xyzx
  44: dp3 r2.y, r6.xyzx, r6.xyzx
  45: sqrt r2.y, r2.y
  46: add r2.y, -r2.x, r2.y
  47: mad r2.x, cb3[25].w, r2.y, r2.x
  48: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  49: eq r2.y, cb5[0].x, l(1.000000)
  50: if_nz r2.y
  51:   eq r2.y, cb5[0].y, l(1.000000)
  52:   mul r6.xyz, v2.yyyy, cb5[2].xyzx
  53:   mad r6.xyz, cb5[1].xyzx, v2.xxxx, r6.xyzx
  54:   mad r6.xyz, cb5[3].xyzx, v2.zzzz, r6.xyzx
  55:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  56:   movc r6.xyz, r2.yyyy, r6.xyzx, v2.xyzx
  57:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  58:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  59:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  60:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  61:   max r6.x, r2.z, r2.y
  62:   sample r6.xyzw, r6.xzwx, t7.xyzw, s0
  63: else 
  64:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  65: endif 
  66: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
  67: lt r2.z, r2.x, l(0.990000)
  68: if_nz r2.z
  69:   add r6.xyz, v2.xyzx, -cb2[1].xyzx
  70:   max r2.z, |r6.y|, |r6.x|
  71:   max r2.z, |r6.z|, r2.z
  72:   add r2.z, r2.z, -cb2[2].z
  73:   max r2.z, r2.z, l(0.000010)
  74:   mul r2.z, r2.z, cb2[2].w
  75:   div r2.z, cb2[2].y, r2.z
  76:   add r2.z, r2.z, -cb2[2].x
  77:   add r2.z, -r2.z, l(1.000000)
  78:   add r7.xyz, r6.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  79:   sample_c_lz r7.x, r7.xyzx, t8.xxxx, s1, r2.z
  80:   add r8.xyz, r6.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  81:   sample_c_lz r7.y, r8.xyzx, t8.xxxx, s1, r2.z
  82:   add r8.xyz, r6.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  83:   sample_c_lz r7.z, r8.xyzx, t8.xxxx, s1, r2.z
  84:   add r6.xyz, r6.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  85:   sample_c_lz r7.w, r6.xyzx, t8.xxxx, s1, r2.z
  86:   dp4 r2.z, r7.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  87:   add r3.w, -cb3[24].x, l(1.000000)
  88:   mad r2.z, r2.z, r3.w, cb3[24].x
  89: else 
  90:   mov r2.z, l(1.000000)
  91: endif 
  92: add r2.y, -r2.z, r2.y
  93: mad r2.x, r2.x, r2.y, r2.z
  94: dp3 r2.y, r4.xyzx, r4.xyzx
  95: sample r6.xyzw, r2.yyyy, t5.xyzw, s3
  96: sample r4.xyzw, r4.xyzx, t6.xyzw, s2
  97: mul r2.y, r4.w, r6.x
  98: mul r2.x, r2.x, r2.y
  99: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 100: dp3 r3.w, v1.xyzx, v1.xyzx
 101: rsq r3.w, r3.w
 102: mul r4.xyz, r3.wwww, v1.xyzx
 103: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 104: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 105: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 106: mul r5.xyz, r2.wwww, r5.xyzx
 107: add r2.w, -r5.w, l(1.000000)
 108: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 109: dp3 r0.w, r0.xyzx, r0.xyzx
 110: max r0.w, r0.w, l(0.001000)
 111: rsq r0.w, r0.w
 112: mul r0.xyz, r0.wwww, r0.xyzx
 113: dp3 r0.w, r4.xyzx, r3.xyzx
 114: dp3_sat r3.x, r4.xyzx, r1.xyzx
 115: dp3_sat r3.y, r4.xyzx, r0.xyzx
 116: dp3_sat r0.x, r1.xyzx, r0.xyzx
 117: mul r0.y, r0.x, r0.x
 118: dp2 r0.y, r0.yyyy, r2.wwww
 119: add r0.y, r0.y, l(-0.500000)
 120: add r0.z, -r3.x, l(1.000000)
 121: mul r1.x, r0.z, r0.z
 122: mul r1.x, r1.x, r1.x
 123: mul r0.z, r0.z, r1.x
 124: mad r0.z, r0.y, r0.z, l(1.000000)
 125: add r1.x, -|r0.w|, l(1.000000)
 126: mul r1.y, r1.x, r1.x
 127: mul r1.y, r1.y, r1.y
 128: mul r1.x, r1.x, r1.y
 129: mad r0.y, r0.y, r1.x, l(1.000000)
 130: mul r0.y, r0.y, r0.z
 131: mul r0.z, r2.w, r2.w
 132: max r0.z, r0.z, l(0.002000)
 133: add r1.x, -r0.z, l(1.000000)
 134: mad r1.y, |r0.w|, r1.x, r0.z
 135: mad r1.x, r3.x, r1.x, r0.z
 136: mul r0.w, |r0.w|, r1.x
 137: mad r0.w, r3.x, r1.y, r0.w
 138: add r0.w, r0.w, l(0.000010)
 139: div r0.w, l(0.500000), r0.w
 140: mul r0.z, r0.z, r0.z
 141: mad r1.x, r3.y, r0.z, -r3.y
 142: mad r1.x, r1.x, r3.y, l(1.000000)
 143: mul r0.z, r0.z, l(0.318310)
 144: mad r1.x, r1.x, r1.x, l(0.000000)
 145: div r0.z, r0.z, r1.x
 146: mul r0.z, r0.z, r0.w
 147: mul r0.z, r0.z, l(3.141593)
 148: max r0.z, r0.z, l(0.000100)
 149: sqrt r0.z, r0.z
 150: mul r0.yz, r3.xxxx, r0.yyzy
 151: dp3 r0.w, r6.xyzx, r6.xyzx
 152: ne r0.w, r0.w, l(0.000000)
 153: and r0.w, r0.w, l(0x3f800000)
 154: mul r0.z, r0.w, r0.z
 155: mul r1.xyz, r0.yyyy, r2.xyzx
 156: mul r0.yzw, r2.xxyz, r0.zzzz
 157: add r0.x, -r0.x, l(1.000000)
 158: mul r2.x, r0.x, r0.x
 159: mul r2.x, r2.x, r2.x
 160: mul r0.x, r0.x, r2.x
 161: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 162: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 163: mul r0.xyz, r0.yzwy, r2.xyzx
 164: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 165: mul o0.xyz, r1.wwww, r0.xyzx
 166: mov o0.w, l(1.000000)
 167: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mul r1.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
   9: mad r1.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r1.xyxx
  10: mul r1.yzw, r1.yyyy, cb1[1].yyzx
  11: mad r1.xyz, cb1[0].yzxy, r1.xxxx, r1.yzwy
  12: dp3 r1.w, r1.xyzx, r1.xyzx
  13: rsq r1.w, r1.w
  14: mul r1.xyz, r1.wwww, r1.xyzx
  15: mul r2.xyz, v2.yyyy, cb1[1].zxyz
  16: mad r2.xyz, cb1[0].zxyz, v2.xxxx, r2.xyzx
  17: mad r2.xyz, cb1[2].zxyz, v2.zzzz, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: mul r3.xyz, r1.xyzx, r2.xyzx
  22: mad r3.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
  23: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  24: mov o1.y, r3.x
  25: mov o1.x, r1.z
  26: mov o1.z, r2.y
  27: mov o2.x, r1.x
  28: mov o3.x, r1.y
  29: mov o2.z, r2.z
  30: mov o3.z, r2.x
  31: mov o2.y, r3.y
  32: mov o3.y, r3.z
  33: mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  34: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  35: mov o5.xy, v3.xyxx
  36: mov o5.zw, l(0,0,0,0)
  37: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  38: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  39: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  40: mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  41: mov o7.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 151 math, 8 temp registers, 11 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 2
Set 2D Texture "_Splat0" to slot 1 sampler slot 3
Set 2D Texture "_Splat1" to slot 2 sampler slot 4
Set 2D Texture "_Splat2" to slot 3 sampler slot 5
Set 2D Texture "_Splat3" to slot 4 sampler slot 6
Set 2D Texture "_Normal0" to slot 5 sampler slot 7
Set 2D Texture "_Normal1" to slot 6 sampler slot 8
Set 2D Texture "_Normal2" to slot 7 sampler slot 9
Set 2D Texture "_Normal3" to slot 8 sampler slot 10
Set 2D Texture "_LightTexture0" to slot 9 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 10 sampler slot 0

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 224
  Float _NormalScale1 at 228
  Float _NormalScale2 at 232
  Float _NormalScale3 at 236
  Float _Metallic0 at 240
  Float _Metallic1 at 244
  Float _Metallic2 at 248
  Float _Metallic3 at 252
  Float _Smoothness0 at 256
  Float _Smoothness1 at 260
  Float _Smoothness2 at 264
  Float _Smoothness3 at 268
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[17], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture3d (float,float,float,float) t10
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r3.xy, v5.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r3.xy, r3.xyxx, cb0[9].xyxx
  11: sample r3.xyzw, r3.xyxx, t0.xyzw, s2
  12: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r3.xyzw, r3.xyzw, r2.wwww
  15: mad r4.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r4.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r5.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r5.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r6.xyzw, r4.xyxx, t1.xyzw, s3
  20: mul r6.xyzw, r3.xxxx, r6.xyzw
  21: mul r6.w, r6.w, cb0[16].x
  22: sample r7.xyzw, r4.zwzz, t2.xyzw, s4
  23: mul r7.xyzw, r3.yyyy, r7.xyzw
  24: mul r7.w, r7.w, cb0[16].y
  25: add r6.xyzw, r6.xyzw, r7.xyzw
  26: sample r7.xyzw, r5.xyxx, t3.xyzw, s5
  27: mul r7.xyzw, r3.zzzz, r7.xyzw
  28: mul r7.w, r7.w, cb0[16].z
  29: add r6.xyzw, r6.xyzw, r7.xyzw
  30: sample r7.xyzw, r5.zwzz, t4.xyzw, s6
  31: mul r7.xyzw, r3.wwww, r7.xyzw
  32: mul r7.w, r7.w, cb0[16].w
  33: add r6.xyzw, r6.xyzw, r7.xyzw
  34: sample r7.xyzw, r4.xyxx, t5.xyzw, s7
  35: mul r7.x, r7.w, r7.x
  36: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  37: mul r7.xy, r4.xyxx, cb0[14].xxxx
  38: dp2 r2.w, r7.xyxx, r7.xyxx
  39: min r2.w, r2.w, l(1.000000)
  40: add r2.w, -r2.w, l(1.000000)
  41: sqrt r7.z, r2.w
  42: sample r4.xyzw, r4.zwzz, t6.xyzw, s8
  43: mul r4.x, r4.w, r4.x
  44: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  45: mul r4.xy, r4.xyxx, cb0[14].yyyy
  46: dp2 r2.w, r4.xyxx, r4.xyxx
  47: min r2.w, r2.w, l(1.000000)
  48: add r2.w, -r2.w, l(1.000000)
  49: sqrt r4.z, r2.w
  50: mul r4.xyz, r3.yyyy, r4.xyzx
  51: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  52: sample r7.xyzw, r5.xyxx, t7.xyzw, s9
  53: mul r7.x, r7.w, r7.x
  54: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  55: mul r7.xy, r5.xyxx, cb0[14].zzzz
  56: dp2 r2.w, r7.xyxx, r7.xyxx
  57: min r2.w, r2.w, l(1.000000)
  58: add r2.w, -r2.w, l(1.000000)
  59: sqrt r7.z, r2.w
  60: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  61: sample r5.xyzw, r5.zwzz, t8.xyzw, s10
  62: mul r5.x, r5.w, r5.x
  63: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  64: mul r5.xy, r5.xyxx, cb0[14].wwww
  65: dp2 r2.w, r5.xyxx, r5.xyxx
  66: min r2.w, r2.w, l(1.000000)
  67: add r2.w, -r2.w, l(1.000000)
  68: sqrt r5.z, r2.w
  69: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  70: dp4 r2.w, r3.xyzw, cb0[15].xyzw
  71: mul r3.xyz, v4.yyyy, cb0[5].xyzx
  72: mad r3.xyz, cb0[4].xyzx, v4.xxxx, r3.xyzx
  73: mad r3.xyz, cb0[6].xyzx, v4.zzzz, r3.xyzx
  74: add r3.xyz, r3.xyzx, cb0[7].xyzx
  75: eq r3.w, cb3[0].x, l(1.000000)
  76: if_nz r3.w
  77:   eq r3.w, cb3[0].y, l(1.000000)
  78:   mul r5.xyz, v4.yyyy, cb3[2].xyzx
  79:   mad r5.xyz, cb3[1].xyzx, v4.xxxx, r5.xyzx
  80:   mad r5.xyz, cb3[3].xyzx, v4.zzzz, r5.xyzx
  81:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  82:   movc r5.xyz, r3.wwww, r5.xyzx, v4.xyzx
  83:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
  84:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
  85:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  86:   mad r5.y, cb3[0].z, l(0.500000), l(0.750000)
  87:   max r5.x, r3.w, r5.y
  88:   sample r5.xyzw, r5.xzwx, t10.xyzw, s0
  89: else 
  90:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  91: endif 
  92: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
  93: dp3 r3.x, r3.xyzx, r3.xyzx
  94: sample r5.xyzw, r3.xxxx, t9.xyzw, s1
  95: mul r3.x, r3.w, r5.x
  96: add r4.w, r4.z, l(0.000010)
  97: dp3 r5.x, v1.xyzx, r4.xywx
  98: dp3 r5.y, v2.xyzx, r4.xywx
  99: dp3 r5.z, v3.xyzx, r4.xywx
 100: dp3 r3.y, r5.xyzx, r5.xyzx
 101: rsq r3.y, r3.y
 102: mul r3.yzw, r3.yyyy, r5.xxyz
 103: mul r4.xyz, r3.xxxx, cb0[2].xyzx
 104: add r5.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 105: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 106: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 107: mul r6.xyz, r2.wwww, r6.xyzx
 108: add r2.w, -r6.w, l(1.000000)
 109: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
 110: dp3 r0.w, r0.xyzx, r0.xyzx
 111: max r0.w, r0.w, l(0.001000)
 112: rsq r0.w, r0.w
 113: mul r0.xyz, r0.wwww, r0.xyzx
 114: dp3 r0.w, r3.yzwy, r2.xyzx
 115: dp3_sat r2.x, r3.yzwy, r1.xyzx
 116: dp3_sat r2.y, r3.yzwy, r0.xyzx
 117: dp3_sat r0.x, r1.xyzx, r0.xyzx
 118: mul r0.y, r0.x, r0.x
 119: dp2 r0.y, r0.yyyy, r2.wwww
 120: add r0.y, r0.y, l(-0.500000)
 121: add r0.z, -r2.x, l(1.000000)
 122: mul r1.x, r0.z, r0.z
 123: mul r1.x, r1.x, r1.x
 124: mul r0.z, r0.z, r1.x
 125: mad r0.z, r0.y, r0.z, l(1.000000)
 126: add r1.x, -|r0.w|, l(1.000000)
 127: mul r1.y, r1.x, r1.x
 128: mul r1.y, r1.y, r1.y
 129: mul r1.x, r1.x, r1.y
 130: mad r0.y, r0.y, r1.x, l(1.000000)
 131: mul r0.y, r0.y, r0.z
 132: mul r0.z, r2.w, r2.w
 133: max r0.z, r0.z, l(0.002000)
 134: add r1.x, -r0.z, l(1.000000)
 135: mad r1.y, |r0.w|, r1.x, r0.z
 136: mad r1.x, r2.x, r1.x, r0.z
 137: mul r0.w, |r0.w|, r1.x
 138: mad r0.w, r2.x, r1.y, r0.w
 139: add r0.w, r0.w, l(0.000010)
 140: div r0.w, l(0.500000), r0.w
 141: mul r0.z, r0.z, r0.z
 142: mad r1.x, r2.y, r0.z, -r2.y
 143: mad r1.x, r1.x, r2.y, l(1.000000)
 144: mul r0.z, r0.z, l(0.318310)
 145: mad r1.x, r1.x, r1.x, l(0.000000)
 146: div r0.z, r0.z, r1.x
 147: mul r0.z, r0.z, r0.w
 148: mul r0.z, r0.z, l(3.141593)
 149: max r0.z, r0.z, l(0.000100)
 150: sqrt r0.z, r0.z
 151: mul r0.yz, r2.xxxx, r0.yyzy
 152: dp3 r0.w, r5.xyzx, r5.xyzx
 153: ne r0.w, r0.w, l(0.000000)
 154: and r0.w, r0.w, l(0x3f800000)
 155: mul r0.z, r0.w, r0.z
 156: mul r1.xyz, r0.yyyy, r4.xyzx
 157: mul r0.yzw, r4.xxyz, r0.zzzz
 158: add r0.x, -r0.x, l(1.000000)
 159: mul r2.x, r0.x, r0.x
 160: mul r2.x, r2.x, r2.x
 161: mul r0.x, r0.x, r2.x
 162: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 163: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 164: mul r0.xyz, r0.yzwy, r2.xyzx
 165: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 166: mul o0.xyz, r1.wwww, r0.xyzx
 167: mov o0.w, l(1.000000)
 168: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerDraw" (176 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb0[3].xyzw
   4: mad o4.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb1[18].xyzw
   6: mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
   9: mul r0.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
  10: mad r0.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xyxx
  11: mul r0.yzw, r0.yyyy, cb0[1].yyzx
  12: mad r0.xyz, cb0[0].yzxy, r0.xxxx, r0.yzwy
  13: dp3 r0.w, r0.xyzx, r0.xyzx
  14: rsq r0.w, r0.w
  15: mul r0.xyz, r0.wwww, r0.xyzx
  16: mul r1.xyz, v2.yyyy, cb0[1].zxyz
  17: mad r1.xyz, cb0[0].zxyz, v2.xxxx, r1.xyzx
  18: mad r1.xyz, cb0[2].zxyz, v2.zzzz, r1.xyzx
  19: dp3 r0.w, r1.xyzx, r1.xyzx
  20: rsq r0.w, r0.w
  21: mul r1.xyz, r0.wwww, r1.xyzx
  22: mul r2.xyz, r0.xyzx, r1.xyzx
  23: mad r2.xyz, r1.zxyz, r0.yzxy, -r2.xyzx
  24: mul r2.xyz, r2.xyzx, -cb0[9].wwww
  25: mov o1.y, r2.x
  26: mov o1.x, r0.z
  27: mov o1.z, r1.y
  28: mov o2.x, r0.x
  29: mov o3.x, r0.y
  30: mov o2.z, r1.z
  31: mov o3.z, r1.x
  32: mov o2.y, r2.y
  33: mov o3.y, r2.z
  34: mov o5.xy, v3.xyxx
  35: mov o5.zw, l(0,0,0,0)
  36: mov o6.xyzw, l(0,0,0,0)
  37: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 141 math, 7 temp registers, 10 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 1
Set 2D Texture "_Splat0" to slot 1 sampler slot 2
Set 2D Texture "_Splat1" to slot 2 sampler slot 3
Set 2D Texture "_Splat2" to slot 3 sampler slot 4
Set 2D Texture "_Splat3" to slot 4 sampler slot 5
Set 2D Texture "_Normal0" to slot 5 sampler slot 6
Set 2D Texture "_Normal1" to slot 6 sampler slot 7
Set 2D Texture "_Normal2" to slot 7 sampler slot 8
Set 2D Texture "_Normal3" to slot 8 sampler slot 9
Set 3D Texture "unity_ProbeVolumeSH" to slot 9 sampler slot 0

Constant Buffer "$Globals" (208 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 160
  Float _NormalScale1 at 164
  Float _NormalScale2 at 168
  Float _NormalScale3 at 172
  Float _Metallic0 at 176
  Float _Metallic1 at 180
  Float _Metallic2 at 184
  Float _Metallic3 at 188
  Float _Smoothness0 at 192
  Float _Smoothness1 at 196
  Float _Smoothness2 at 200
  Float _Smoothness3 at 204
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 6   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[13], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture3d (float,float,float,float) t9
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: mul r2.xy, r2.xyxx, cb0[5].xyxx
   7: sample r2.xyzw, r2.xyxx, t0.xyzw, s1
   8: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   9: add r3.x, r1.w, l(0.001000)
  10: div r2.xyzw, r2.xyzw, r3.xxxx
  11: mad r3.xy, v5.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mad r3.zw, v5.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad r4.xy, v5.xyxx, cb0[8].xyxx, cb0[8].zwzz
  14: mad r4.zw, v5.xxxy, cb0[9].xxxy, cb0[9].zzzw
  15: sample r5.xyzw, r3.xyxx, t1.xyzw, s2
  16: mul r5.xyzw, r2.xxxx, r5.xyzw
  17: mul r5.w, r5.w, cb0[12].x
  18: sample r6.xyzw, r3.zwzz, t2.xyzw, s3
  19: mul r6.xyzw, r2.yyyy, r6.xyzw
  20: mul r6.w, r6.w, cb0[12].y
  21: add r5.xyzw, r5.xyzw, r6.xyzw
  22: sample r6.xyzw, r4.xyxx, t3.xyzw, s4
  23: mul r6.xyzw, r2.zzzz, r6.xyzw
  24: mul r6.w, r6.w, cb0[12].z
  25: add r5.xyzw, r5.xyzw, r6.xyzw
  26: sample r6.xyzw, r4.zwzz, t4.xyzw, s5
  27: mul r6.xyzw, r2.wwww, r6.xyzw
  28: mul r6.w, r6.w, cb0[12].w
  29: add r5.xyzw, r5.xyzw, r6.xyzw
  30: sample r6.xyzw, r3.xyxx, t5.xyzw, s6
  31: mul r6.x, r6.w, r6.x
  32: mad r3.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  33: mul r6.xy, r3.xyxx, cb0[10].xxxx
  34: dp2 r3.x, r6.xyxx, r6.xyxx
  35: min r3.x, r3.x, l(1.000000)
  36: add r3.x, -r3.x, l(1.000000)
  37: sqrt r6.z, r3.x
  38: sample r3.xyzw, r3.zwzz, t6.xyzw, s7
  39: mul r3.x, r3.w, r3.x
  40: mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  41: mul r3.xy, r3.xyxx, cb0[10].yyyy
  42: dp2 r3.w, r3.xyxx, r3.xyxx
  43: min r3.w, r3.w, l(1.000000)
  44: add r3.w, -r3.w, l(1.000000)
  45: sqrt r3.z, r3.w
  46: mul r3.xyz, r2.yyyy, r3.xyzx
  47: mad r3.xyz, r6.xyzx, r2.xxxx, r3.xyzx
  48: sample r6.xyzw, r4.xyxx, t7.xyzw, s8
  49: mul r6.x, r6.w, r6.x
  50: mad r4.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  51: mul r6.xy, r4.xyxx, cb0[10].zzzz
  52: dp2 r3.w, r6.xyxx, r6.xyxx
  53: min r3.w, r3.w, l(1.000000)
  54: add r3.w, -r3.w, l(1.000000)
  55: sqrt r6.z, r3.w
  56: mad r3.xyz, r6.xyzx, r2.zzzz, r3.xyzx
  57: sample r4.xyzw, r4.zwzz, t8.xyzw, s9
  58: mul r4.x, r4.w, r4.x
  59: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  60: mul r4.xy, r4.xyxx, cb0[10].wwww
  61: dp2 r3.w, r4.xyxx, r4.xyxx
  62: min r3.w, r3.w, l(1.000000)
  63: add r3.w, -r3.w, l(1.000000)
  64: sqrt r4.z, r3.w
  65: mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx
  66: dp4 r2.x, r2.xyzw, cb0[11].xyzw
  67: eq r2.y, cb3[0].x, l(1.000000)
  68: if_nz r2.y
  69:   eq r2.y, cb3[0].y, l(1.000000)
  70:   mul r4.xyz, v4.yyyy, cb3[2].xyzx
  71:   mad r4.xyz, cb3[1].xyzx, v4.xxxx, r4.xyzx
  72:   mad r4.xyz, cb3[3].xyzx, v4.zzzz, r4.xyzx
  73:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  74:   movc r2.yzw, r2.yyyy, r4.xxyz, v4.xxyz
  75:   add r2.yzw, r2.yyzw, -cb3[6].xxyz
  76:   mul r4.yzw, r2.yyzw, cb3[5].xxyz
  77:   mad r2.y, r4.y, l(0.250000), l(0.750000)
  78:   mad r2.z, cb3[0].z, l(0.500000), l(0.750000)
  79:   max r4.x, r2.z, r2.y
  80:   sample r4.xyzw, r4.xzwx, t9.xyzw, s0
  81: else 
  82:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  83: endif 
  84: dp4_sat r2.y, r4.xyzw, cb2[46].xyzw
  85: add r3.w, r3.z, l(0.000010)
  86: dp3 r4.x, v1.xyzx, r3.xywx
  87: dp3 r4.y, v2.xyzx, r3.xywx
  88: dp3 r4.z, v3.xyzx, r3.xywx
  89: dp3 r2.z, r4.xyzx, r4.xyzx
  90: rsq r2.z, r2.z
  91: mul r3.xyz, r2.zzzz, r4.xyzx
  92: mul r2.yzw, r2.yyyy, cb0[2].xxyz
  93: add r4.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  94: mad r4.xyz, r2.xxxx, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  95: mad r2.x, -r2.x, l(0.779084), l(0.779084)
  96: mul r5.xyz, r2.xxxx, r5.xyzx
  97: add r2.x, -r5.w, l(1.000000)
  98: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  99: dp3 r0.w, r0.xyzx, r0.xyzx
 100: max r0.w, r0.w, l(0.001000)
 101: rsq r0.w, r0.w
 102: mul r0.xyz, r0.wwww, r0.xyzx
 103: dp3 r0.w, r3.xyzx, r1.xyzx
 104: dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
 105: dp3_sat r1.y, r3.xyzx, r0.xyzx
 106: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 107: mul r0.y, r0.x, r0.x
 108: dp2 r0.y, r0.yyyy, r2.xxxx
 109: add r0.y, r0.y, l(-0.500000)
 110: add r0.z, -r1.x, l(1.000000)
 111: mul r1.z, r0.z, r0.z
 112: mul r1.z, r1.z, r1.z
 113: mul r0.z, r0.z, r1.z
 114: mad r0.z, r0.y, r0.z, l(1.000000)
 115: add r1.z, -|r0.w|, l(1.000000)
 116: mul r3.x, r1.z, r1.z
 117: mul r3.x, r3.x, r3.x
 118: mul r1.z, r1.z, r3.x
 119: mad r0.y, r0.y, r1.z, l(1.000000)
 120: mul r0.y, r0.y, r0.z
 121: mul r0.z, r2.x, r2.x
 122: max r0.z, r0.z, l(0.002000)
 123: add r1.z, -r0.z, l(1.000000)
 124: mad r2.x, |r0.w|, r1.z, r0.z
 125: mad r1.z, r1.x, r1.z, r0.z
 126: mul r0.w, |r0.w|, r1.z
 127: mad r0.w, r1.x, r2.x, r0.w
 128: add r0.w, r0.w, l(0.000010)
 129: div r0.w, l(0.500000), r0.w
 130: mul r0.z, r0.z, r0.z
 131: mad r1.z, r1.y, r0.z, -r1.y
 132: mad r1.y, r1.z, r1.y, l(1.000000)
 133: mul r0.z, r0.z, l(0.318310)
 134: mad r1.y, r1.y, r1.y, l(0.000000)
 135: div r0.z, r0.z, r1.y
 136: mul r0.z, r0.z, r0.w
 137: mul r0.z, r0.z, l(3.141593)
 138: max r0.z, r0.z, l(0.000100)
 139: sqrt r0.z, r0.z
 140: mul r0.yz, r1.xxxx, r0.yyzy
 141: dp3 r0.w, r4.xyzx, r4.xyzx
 142: ne r0.w, r0.w, l(0.000000)
 143: and r0.w, r0.w, l(0x3f800000)
 144: mul r0.z, r0.w, r0.z
 145: mul r1.xyz, r0.yyyy, r2.yzwy
 146: mul r0.yzw, r2.yyzw, r0.zzzz
 147: add r0.x, -r0.x, l(1.000000)
 148: mul r2.x, r0.x, r0.x
 149: mul r2.x, r2.x, r2.x
 150: mul r0.x, r0.x, r2.x
 151: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 152: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
 153: mul r0.xyz, r0.yzwy, r2.xyzx
 154: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 155: mul o0.xyz, r1.wwww, r0.xyzx
 156: mov o0.w, l(1.000000)
 157: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SPOT 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mul r1.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
   9: mad r1.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r1.xyxx
  10: mul r1.yzw, r1.yyyy, cb1[1].yyzx
  11: mad r1.xyz, cb1[0].yzxy, r1.xxxx, r1.yzwy
  12: dp3 r1.w, r1.xyzx, r1.xyzx
  13: rsq r1.w, r1.w
  14: mul r1.xyz, r1.wwww, r1.xyzx
  15: mul r2.xyz, v2.yyyy, cb1[1].zxyz
  16: mad r2.xyz, cb1[0].zxyz, v2.xxxx, r2.xyzx
  17: mad r2.xyz, cb1[2].zxyz, v2.zzzz, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: mul r3.xyz, r1.xyzx, r2.xyzx
  22: mad r3.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
  23: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  24: mov o1.y, r3.x
  25: mov o1.x, r1.z
  26: mov o1.z, r2.y
  27: mov o2.x, r1.x
  28: mov o3.x, r1.y
  29: mov o2.z, r2.z
  30: mov o3.z, r2.x
  31: mov o2.y, r3.y
  32: mov o3.y, r3.z
  33: mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  34: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  35: mov o5.xy, v3.xyxx
  36: mov o5.zw, l(0,0,0,0)
  37: mul r1.xyzw, r0.yyyy, cb0[5].xyzw
  38: mad r1.xyzw, cb0[4].xyzw, r0.xxxx, r1.xyzw
  39: mad r1.xyzw, cb0[6].xyzw, r0.zzzz, r1.xyzw
  40: mad o6.xyzw, cb0[7].xyzw, r0.wwww, r1.xyzw
  41: mov o7.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 157 math, 8 temp registers, 12 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_Normal0" to slot 5 sampler slot 8
Set 2D Texture "_Normal1" to slot 6 sampler slot 9
Set 2D Texture "_Normal2" to slot 7 sampler slot 10
Set 2D Texture "_Normal3" to slot 8 sampler slot 11
Set 2D Texture "_LightTexture0" to slot 9 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 10 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 11 sampler slot 0

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 224
  Float _NormalScale1 at 228
  Float _NormalScale2 at 232
  Float _NormalScale3 at 236
  Float _Metallic0 at 240
  Float _Metallic1 at 244
  Float _Metallic2 at 248
  Float _Metallic3 at 252
  Float _Smoothness0 at 256
  Float _Smoothness1 at 260
  Float _Smoothness2 at 264
  Float _Smoothness3 at 268
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[17], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture3d (float,float,float,float) t11
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r3.xy, v5.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r3.xy, r3.xyxx, cb0[9].xyxx
  11: sample r3.xyzw, r3.xyxx, t0.xyzw, s3
  12: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r3.xyzw, r3.xyzw, r2.wwww
  15: mad r4.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r4.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r5.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r5.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r6.xyzw, r4.xyxx, t1.xyzw, s4
  20: mul r6.xyzw, r3.xxxx, r6.xyzw
  21: mul r6.w, r6.w, cb0[16].x
  22: sample r7.xyzw, r4.zwzz, t2.xyzw, s5
  23: mul r7.xyzw, r3.yyyy, r7.xyzw
  24: mul r7.w, r7.w, cb0[16].y
  25: add r6.xyzw, r6.xyzw, r7.xyzw
  26: sample r7.xyzw, r5.xyxx, t3.xyzw, s6
  27: mul r7.xyzw, r3.zzzz, r7.xyzw
  28: mul r7.w, r7.w, cb0[16].z
  29: add r6.xyzw, r6.xyzw, r7.xyzw
  30: sample r7.xyzw, r5.zwzz, t4.xyzw, s7
  31: mul r7.xyzw, r3.wwww, r7.xyzw
  32: mul r7.w, r7.w, cb0[16].w
  33: add r6.xyzw, r6.xyzw, r7.xyzw
  34: sample r7.xyzw, r4.xyxx, t5.xyzw, s8
  35: mul r7.x, r7.w, r7.x
  36: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  37: mul r7.xy, r4.xyxx, cb0[14].xxxx
  38: dp2 r2.w, r7.xyxx, r7.xyxx
  39: min r2.w, r2.w, l(1.000000)
  40: add r2.w, -r2.w, l(1.000000)
  41: sqrt r7.z, r2.w
  42: sample r4.xyzw, r4.zwzz, t6.xyzw, s9
  43: mul r4.x, r4.w, r4.x
  44: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  45: mul r4.xy, r4.xyxx, cb0[14].yyyy
  46: dp2 r2.w, r4.xyxx, r4.xyxx
  47: min r2.w, r2.w, l(1.000000)
  48: add r2.w, -r2.w, l(1.000000)
  49: sqrt r4.z, r2.w
  50: mul r4.xyz, r3.yyyy, r4.xyzx
  51: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  52: sample r7.xyzw, r5.xyxx, t7.xyzw, s10
  53: mul r7.x, r7.w, r7.x
  54: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  55: mul r7.xy, r5.xyxx, cb0[14].zzzz
  56: dp2 r2.w, r7.xyxx, r7.xyxx
  57: min r2.w, r2.w, l(1.000000)
  58: add r2.w, -r2.w, l(1.000000)
  59: sqrt r7.z, r2.w
  60: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  61: sample r5.xyzw, r5.zwzz, t8.xyzw, s11
  62: mul r5.x, r5.w, r5.x
  63: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  64: mul r5.xy, r5.xyxx, cb0[14].wwww
  65: dp2 r2.w, r5.xyxx, r5.xyxx
  66: min r2.w, r2.w, l(1.000000)
  67: add r2.w, -r2.w, l(1.000000)
  68: sqrt r5.z, r2.w
  69: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  70: dp4 r2.w, r3.xyzw, cb0[15].xyzw
  71: mul r3.xyzw, v4.yyyy, cb0[5].xyzw
  72: mad r3.xyzw, cb0[4].xyzw, v4.xxxx, r3.xyzw
  73: mad r3.xyzw, cb0[6].xyzw, v4.zzzz, r3.xyzw
  74: add r3.xyzw, r3.xyzw, cb0[7].xyzw
  75: eq r5.x, cb3[0].x, l(1.000000)
  76: if_nz r5.x
  77:   eq r5.x, cb3[0].y, l(1.000000)
  78:   mul r5.yzw, v4.yyyy, cb3[2].xxyz
  79:   mad r5.yzw, cb3[1].xxyz, v4.xxxx, r5.yyzw
  80:   mad r5.yzw, cb3[3].xxyz, v4.zzzz, r5.yyzw
  81:   add r5.yzw, r5.yyzw, cb3[4].xxyz
  82:   movc r5.xyz, r5.xxxx, r5.yzwy, v4.xyzx
  83:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
  84:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
  85:   mad r5.y, r5.y, l(0.250000), l(0.750000)
  86:   mad r7.x, cb3[0].z, l(0.500000), l(0.750000)
  87:   max r5.x, r5.y, r7.x
  88:   sample r5.xyzw, r5.xzwx, t11.xyzw, s0
  89: else 
  90:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  91: endif 
  92: dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
  93: lt r5.y, l(0.000000), r3.z
  94: and r5.y, r5.y, l(0x3f800000)
  95: div r5.zw, r3.xxxy, r3.wwww
  96: add r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  97: sample r7.xyzw, r5.zwzz, t9.xyzw, s1
  98: mul r3.w, r5.y, r7.w
  99: dp3 r3.x, r3.xyzx, r3.xyzx
 100: sample r7.xyzw, r3.xxxx, t10.xyzw, s2
 101: mul r3.x, r3.w, r7.x
 102: mul r3.x, r5.x, r3.x
 103: add r4.w, r4.z, l(0.000010)
 104: dp3 r5.x, v1.xyzx, r4.xywx
 105: dp3 r5.y, v2.xyzx, r4.xywx
 106: dp3 r5.z, v3.xyzx, r4.xywx
 107: dp3 r3.y, r5.xyzx, r5.xyzx
 108: rsq r3.y, r3.y
 109: mul r3.yzw, r3.yyyy, r5.xxyz
 110: mul r4.xyz, r3.xxxx, cb0[2].xyzx
 111: add r5.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 112: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 113: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 114: mul r6.xyz, r2.wwww, r6.xyzx
 115: add r2.w, -r6.w, l(1.000000)
 116: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
 117: dp3 r0.w, r0.xyzx, r0.xyzx
 118: max r0.w, r0.w, l(0.001000)
 119: rsq r0.w, r0.w
 120: mul r0.xyz, r0.wwww, r0.xyzx
 121: dp3 r0.w, r3.yzwy, r2.xyzx
 122: dp3_sat r2.x, r3.yzwy, r1.xyzx
 123: dp3_sat r2.y, r3.yzwy, r0.xyzx
 124: dp3_sat r0.x, r1.xyzx, r0.xyzx
 125: mul r0.y, r0.x, r0.x
 126: dp2 r0.y, r0.yyyy, r2.wwww
 127: add r0.y, r0.y, l(-0.500000)
 128: add r0.z, -r2.x, l(1.000000)
 129: mul r1.x, r0.z, r0.z
 130: mul r1.x, r1.x, r1.x
 131: mul r0.z, r0.z, r1.x
 132: mad r0.z, r0.y, r0.z, l(1.000000)
 133: add r1.x, -|r0.w|, l(1.000000)
 134: mul r1.y, r1.x, r1.x
 135: mul r1.y, r1.y, r1.y
 136: mul r1.x, r1.x, r1.y
 137: mad r0.y, r0.y, r1.x, l(1.000000)
 138: mul r0.y, r0.y, r0.z
 139: mul r0.z, r2.w, r2.w
 140: max r0.z, r0.z, l(0.002000)
 141: add r1.x, -r0.z, l(1.000000)
 142: mad r1.y, |r0.w|, r1.x, r0.z
 143: mad r1.x, r2.x, r1.x, r0.z
 144: mul r0.w, |r0.w|, r1.x
 145: mad r0.w, r2.x, r1.y, r0.w
 146: add r0.w, r0.w, l(0.000010)
 147: div r0.w, l(0.500000), r0.w
 148: mul r0.z, r0.z, r0.z
 149: mad r1.x, r2.y, r0.z, -r2.y
 150: mad r1.x, r1.x, r2.y, l(1.000000)
 151: mul r0.z, r0.z, l(0.318310)
 152: mad r1.x, r1.x, r1.x, l(0.000000)
 153: div r0.z, r0.z, r1.x
 154: mul r0.z, r0.z, r0.w
 155: mul r0.z, r0.z, l(3.141593)
 156: max r0.z, r0.z, l(0.000100)
 157: sqrt r0.z, r0.z
 158: mul r0.yz, r2.xxxx, r0.yyzy
 159: dp3 r0.w, r5.xyzx, r5.xyzx
 160: ne r0.w, r0.w, l(0.000000)
 161: and r0.w, r0.w, l(0x3f800000)
 162: mul r0.z, r0.w, r0.z
 163: mul r1.xyz, r0.yyyy, r4.xyzx
 164: mul r0.yzw, r4.xxyz, r0.zzzz
 165: add r0.x, -r0.x, l(1.000000)
 166: mul r2.x, r0.x, r0.x
 167: mul r2.x, r2.x, r2.x
 168: mul r0.x, r0.x, r2.x
 169: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 170: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 171: mul r0.xyz, r0.yzwy, r2.xyzx
 172: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 173: mul o0.xyz, r1.wwww, r0.xyzx
 174: mov o0.w, l(1.000000)
 175: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mul r1.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
   9: mad r1.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r1.xyxx
  10: mul r1.yzw, r1.yyyy, cb1[1].yyzx
  11: mad r1.xyz, cb1[0].yzxy, r1.xxxx, r1.yzwy
  12: dp3 r1.w, r1.xyzx, r1.xyzx
  13: rsq r1.w, r1.w
  14: mul r1.xyz, r1.wwww, r1.xyzx
  15: mul r2.xyz, v2.yyyy, cb1[1].zxyz
  16: mad r2.xyz, cb1[0].zxyz, v2.xxxx, r2.xyzx
  17: mad r2.xyz, cb1[2].zxyz, v2.zzzz, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: mul r3.xyz, r1.xyzx, r2.xyzx
  22: mad r3.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
  23: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  24: mov o1.y, r3.x
  25: mov o1.x, r1.z
  26: mov o1.z, r2.y
  27: mov o2.x, r1.x
  28: mov o3.x, r1.y
  29: mov o2.z, r2.z
  30: mov o3.z, r2.x
  31: mov o2.y, r3.y
  32: mov o3.y, r3.z
  33: mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  34: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  35: mov o5.xy, v3.xyxx
  36: mov o5.zw, l(0,0,0,0)
  37: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  38: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  39: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  40: mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  41: mov o7.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 152 math, 8 temp registers, 12 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_Normal0" to slot 5 sampler slot 8
Set 2D Texture "_Normal1" to slot 6 sampler slot 9
Set 2D Texture "_Normal2" to slot 7 sampler slot 10
Set 2D Texture "_Normal3" to slot 8 sampler slot 11
Set 2D Texture "_LightTextureB0" to slot 9 sampler slot 2
Set CUBE Texture "_LightTexture0" to slot 10 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 11 sampler slot 0

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 224
  Float _NormalScale1 at 228
  Float _NormalScale2 at 232
  Float _NormalScale3 at 236
  Float _Metallic0 at 240
  Float _Metallic1 at 244
  Float _Metallic2 at 248
  Float _Metallic3 at 252
  Float _Smoothness0 at 256
  Float _Smoothness1 at 260
  Float _Smoothness2 at 264
  Float _Smoothness3 at 268
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[17], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texturecube (float,float,float,float) t10
      dcl_resource_texture3d (float,float,float,float) t11
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r3.xy, v5.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r3.xy, r3.xyxx, cb0[9].xyxx
  11: sample r3.xyzw, r3.xyxx, t0.xyzw, s3
  12: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r3.xyzw, r3.xyzw, r2.wwww
  15: mad r4.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r4.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r5.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r5.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r6.xyzw, r4.xyxx, t1.xyzw, s4
  20: mul r6.xyzw, r3.xxxx, r6.xyzw
  21: mul r6.w, r6.w, cb0[16].x
  22: sample r7.xyzw, r4.zwzz, t2.xyzw, s5
  23: mul r7.xyzw, r3.yyyy, r7.xyzw
  24: mul r7.w, r7.w, cb0[16].y
  25: add r6.xyzw, r6.xyzw, r7.xyzw
  26: sample r7.xyzw, r5.xyxx, t3.xyzw, s6
  27: mul r7.xyzw, r3.zzzz, r7.xyzw
  28: mul r7.w, r7.w, cb0[16].z
  29: add r6.xyzw, r6.xyzw, r7.xyzw
  30: sample r7.xyzw, r5.zwzz, t4.xyzw, s7
  31: mul r7.xyzw, r3.wwww, r7.xyzw
  32: mul r7.w, r7.w, cb0[16].w
  33: add r6.xyzw, r6.xyzw, r7.xyzw
  34: sample r7.xyzw, r4.xyxx, t5.xyzw, s8
  35: mul r7.x, r7.w, r7.x
  36: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  37: mul r7.xy, r4.xyxx, cb0[14].xxxx
  38: dp2 r2.w, r7.xyxx, r7.xyxx
  39: min r2.w, r2.w, l(1.000000)
  40: add r2.w, -r2.w, l(1.000000)
  41: sqrt r7.z, r2.w
  42: sample r4.xyzw, r4.zwzz, t6.xyzw, s9
  43: mul r4.x, r4.w, r4.x
  44: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  45: mul r4.xy, r4.xyxx, cb0[14].yyyy
  46: dp2 r2.w, r4.xyxx, r4.xyxx
  47: min r2.w, r2.w, l(1.000000)
  48: add r2.w, -r2.w, l(1.000000)
  49: sqrt r4.z, r2.w
  50: mul r4.xyz, r3.yyyy, r4.xyzx
  51: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  52: sample r7.xyzw, r5.xyxx, t7.xyzw, s10
  53: mul r7.x, r7.w, r7.x
  54: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  55: mul r7.xy, r5.xyxx, cb0[14].zzzz
  56: dp2 r2.w, r7.xyxx, r7.xyxx
  57: min r2.w, r2.w, l(1.000000)
  58: add r2.w, -r2.w, l(1.000000)
  59: sqrt r7.z, r2.w
  60: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  61: sample r5.xyzw, r5.zwzz, t8.xyzw, s11
  62: mul r5.x, r5.w, r5.x
  63: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  64: mul r5.xy, r5.xyxx, cb0[14].wwww
  65: dp2 r2.w, r5.xyxx, r5.xyxx
  66: min r2.w, r2.w, l(1.000000)
  67: add r2.w, -r2.w, l(1.000000)
  68: sqrt r5.z, r2.w
  69: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  70: dp4 r2.w, r3.xyzw, cb0[15].xyzw
  71: mul r3.xyz, v4.yyyy, cb0[5].xyzx
  72: mad r3.xyz, cb0[4].xyzx, v4.xxxx, r3.xyzx
  73: mad r3.xyz, cb0[6].xyzx, v4.zzzz, r3.xyzx
  74: add r3.xyz, r3.xyzx, cb0[7].xyzx
  75: eq r3.w, cb3[0].x, l(1.000000)
  76: if_nz r3.w
  77:   eq r3.w, cb3[0].y, l(1.000000)
  78:   mul r5.xyz, v4.yyyy, cb3[2].xyzx
  79:   mad r5.xyz, cb3[1].xyzx, v4.xxxx, r5.xyzx
  80:   mad r5.xyz, cb3[3].xyzx, v4.zzzz, r5.xyzx
  81:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  82:   movc r5.xyz, r3.wwww, r5.xyzx, v4.xyzx
  83:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
  84:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
  85:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  86:   mad r5.y, cb3[0].z, l(0.500000), l(0.750000)
  87:   max r5.x, r3.w, r5.y
  88:   sample r5.xyzw, r5.xzwx, t11.xyzw, s0
  89: else 
  90:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  91: endif 
  92: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
  93: dp3 r5.x, r3.xyzx, r3.xyzx
  94: sample r5.xyzw, r5.xxxx, t9.xyzw, s2
  95: sample r7.xyzw, r3.xyzx, t10.xyzw, s1
  96: mul r3.x, r5.x, r7.w
  97: mul r3.x, r3.w, r3.x
  98: add r4.w, r4.z, l(0.000010)
  99: dp3 r5.x, v1.xyzx, r4.xywx
 100: dp3 r5.y, v2.xyzx, r4.xywx
 101: dp3 r5.z, v3.xyzx, r4.xywx
 102: dp3 r3.y, r5.xyzx, r5.xyzx
 103: rsq r3.y, r3.y
 104: mul r3.yzw, r3.yyyy, r5.xxyz
 105: mul r4.xyz, r3.xxxx, cb0[2].xyzx
 106: add r5.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 107: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 108: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 109: mul r6.xyz, r2.wwww, r6.xyzx
 110: add r2.w, -r6.w, l(1.000000)
 111: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
 112: dp3 r0.w, r0.xyzx, r0.xyzx
 113: max r0.w, r0.w, l(0.001000)
 114: rsq r0.w, r0.w
 115: mul r0.xyz, r0.wwww, r0.xyzx
 116: dp3 r0.w, r3.yzwy, r2.xyzx
 117: dp3_sat r2.x, r3.yzwy, r1.xyzx
 118: dp3_sat r2.y, r3.yzwy, r0.xyzx
 119: dp3_sat r0.x, r1.xyzx, r0.xyzx
 120: mul r0.y, r0.x, r0.x
 121: dp2 r0.y, r0.yyyy, r2.wwww
 122: add r0.y, r0.y, l(-0.500000)
 123: add r0.z, -r2.x, l(1.000000)
 124: mul r1.x, r0.z, r0.z
 125: mul r1.x, r1.x, r1.x
 126: mul r0.z, r0.z, r1.x
 127: mad r0.z, r0.y, r0.z, l(1.000000)
 128: add r1.x, -|r0.w|, l(1.000000)
 129: mul r1.y, r1.x, r1.x
 130: mul r1.y, r1.y, r1.y
 131: mul r1.x, r1.x, r1.y
 132: mad r0.y, r0.y, r1.x, l(1.000000)
 133: mul r0.y, r0.y, r0.z
 134: mul r0.z, r2.w, r2.w
 135: max r0.z, r0.z, l(0.002000)
 136: add r1.x, -r0.z, l(1.000000)
 137: mad r1.y, |r0.w|, r1.x, r0.z
 138: mad r1.x, r2.x, r1.x, r0.z
 139: mul r0.w, |r0.w|, r1.x
 140: mad r0.w, r2.x, r1.y, r0.w
 141: add r0.w, r0.w, l(0.000010)
 142: div r0.w, l(0.500000), r0.w
 143: mul r0.z, r0.z, r0.z
 144: mad r1.x, r2.y, r0.z, -r2.y
 145: mad r1.x, r1.x, r2.y, l(1.000000)
 146: mul r0.z, r0.z, l(0.318310)
 147: mad r1.x, r1.x, r1.x, l(0.000000)
 148: div r0.z, r0.z, r1.x
 149: mul r0.z, r0.z, r0.w
 150: mul r0.z, r0.z, l(3.141593)
 151: max r0.z, r0.z, l(0.000100)
 152: sqrt r0.z, r0.z
 153: mul r0.yz, r2.xxxx, r0.yyzy
 154: dp3 r0.w, r5.xyzx, r5.xyzx
 155: ne r0.w, r0.w, l(0.000000)
 156: and r0.w, r0.w, l(0x3f800000)
 157: mul r0.z, r0.w, r0.z
 158: mul r1.xyz, r0.yyyy, r4.xyzx
 159: mul r0.yzw, r4.xxyz, r0.zzzz
 160: add r0.x, -r0.x, l(1.000000)
 161: mul r2.x, r0.x, r0.x
 162: mul r2.x, r2.x, r2.x
 163: mul r0.x, r0.x, r2.x
 164: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 165: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 166: mul r0.xyz, r0.yzwy, r2.xyzx
 167: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 168: mul o0.xyz, r1.wwww, r0.xyzx
 169: mov o0.w, l(1.000000)
 170: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xy
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mul r1.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
   9: mad r1.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r1.xyxx
  10: mul r1.yzw, r1.yyyy, cb1[1].yyzx
  11: mad r1.xyz, cb1[0].yzxy, r1.xxxx, r1.yzwy
  12: dp3 r1.w, r1.xyzx, r1.xyzx
  13: rsq r1.w, r1.w
  14: mul r1.xyz, r1.wwww, r1.xyzx
  15: mul r2.xyz, v2.yyyy, cb1[1].zxyz
  16: mad r2.xyz, cb1[0].zxyz, v2.xxxx, r2.xyzx
  17: mad r2.xyz, cb1[2].zxyz, v2.zzzz, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: mul r3.xyz, r1.xyzx, r2.xyzx
  22: mad r3.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
  23: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  24: mov o1.y, r3.x
  25: mov o1.x, r1.z
  26: mov o1.z, r2.y
  27: mov o2.x, r1.x
  28: mov o3.x, r1.y
  29: mov o2.z, r2.z
  30: mov o3.z, r2.x
  31: mov o2.y, r3.y
  32: mov o3.y, r3.z
  33: mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  34: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  35: mov o5.xy, v3.xyxx
  36: mov o5.zw, l(0,0,0,0)
  37: mul r1.xy, r0.yyyy, cb0[5].xyxx
  38: mad r0.xy, cb0[4].xyxx, r0.xxxx, r1.xyxx
  39: mad r0.xy, cb0[6].xyxx, r0.zzzz, r0.xyxx
  40: mad o6.xy, cb0[7].xyxx, r0.wwww, r0.xyxx
  41: mov o7.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 146 math, 7 temp registers, 11 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 2
Set 2D Texture "_Splat0" to slot 1 sampler slot 3
Set 2D Texture "_Splat1" to slot 2 sampler slot 4
Set 2D Texture "_Splat2" to slot 3 sampler slot 5
Set 2D Texture "_Splat3" to slot 4 sampler slot 6
Set 2D Texture "_Normal0" to slot 5 sampler slot 7
Set 2D Texture "_Normal1" to slot 6 sampler slot 8
Set 2D Texture "_Normal2" to slot 7 sampler slot 9
Set 2D Texture "_Normal3" to slot 8 sampler slot 10
Set 2D Texture "_LightTexture0" to slot 9 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 10 sampler slot 0

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 224
  Float _NormalScale1 at 228
  Float _NormalScale2 at 232
  Float _NormalScale3 at 236
  Float _Metallic0 at 240
  Float _Metallic1 at 244
  Float _Metallic2 at 248
  Float _Metallic3 at 252
  Float _Smoothness0 at 256
  Float _Smoothness1 at 260
  Float _Smoothness2 at 264
  Float _Smoothness3 at 268
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[17], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture3d (float,float,float,float) t10
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: mul r2.xy, r2.xyxx, cb0[9].xyxx
   7: sample r2.xyzw, r2.xyxx, t0.xyzw, s2
   8: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   9: add r3.x, r1.w, l(0.001000)
  10: div r2.xyzw, r2.xyzw, r3.xxxx
  11: mad r3.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  12: mad r3.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  13: mad r4.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  14: mad r4.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  15: sample r5.xyzw, r3.xyxx, t1.xyzw, s3
  16: mul r5.xyzw, r2.xxxx, r5.xyzw
  17: mul r5.w, r5.w, cb0[16].x
  18: sample r6.xyzw, r3.zwzz, t2.xyzw, s4
  19: mul r6.xyzw, r2.yyyy, r6.xyzw
  20: mul r6.w, r6.w, cb0[16].y
  21: add r5.xyzw, r5.xyzw, r6.xyzw
  22: sample r6.xyzw, r4.xyxx, t3.xyzw, s5
  23: mul r6.xyzw, r2.zzzz, r6.xyzw
  24: mul r6.w, r6.w, cb0[16].z
  25: add r5.xyzw, r5.xyzw, r6.xyzw
  26: sample r6.xyzw, r4.zwzz, t4.xyzw, s6
  27: mul r6.xyzw, r2.wwww, r6.xyzw
  28: mul r6.w, r6.w, cb0[16].w
  29: add r5.xyzw, r5.xyzw, r6.xyzw
  30: sample r6.xyzw, r3.xyxx, t5.xyzw, s7
  31: mul r6.x, r6.w, r6.x
  32: mad r3.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  33: mul r6.xy, r3.xyxx, cb0[14].xxxx
  34: dp2 r3.x, r6.xyxx, r6.xyxx
  35: min r3.x, r3.x, l(1.000000)
  36: add r3.x, -r3.x, l(1.000000)
  37: sqrt r6.z, r3.x
  38: sample r3.xyzw, r3.zwzz, t6.xyzw, s8
  39: mul r3.x, r3.w, r3.x
  40: mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  41: mul r3.xy, r3.xyxx, cb0[14].yyyy
  42: dp2 r3.w, r3.xyxx, r3.xyxx
  43: min r3.w, r3.w, l(1.000000)
  44: add r3.w, -r3.w, l(1.000000)
  45: sqrt r3.z, r3.w
  46: mul r3.xyz, r2.yyyy, r3.xyzx
  47: mad r3.xyz, r6.xyzx, r2.xxxx, r3.xyzx
  48: sample r6.xyzw, r4.xyxx, t7.xyzw, s9
  49: mul r6.x, r6.w, r6.x
  50: mad r4.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  51: mul r6.xy, r4.xyxx, cb0[14].zzzz
  52: dp2 r3.w, r6.xyxx, r6.xyxx
  53: min r3.w, r3.w, l(1.000000)
  54: add r3.w, -r3.w, l(1.000000)
  55: sqrt r6.z, r3.w
  56: mad r3.xyz, r6.xyzx, r2.zzzz, r3.xyzx
  57: sample r4.xyzw, r4.zwzz, t8.xyzw, s10
  58: mul r4.x, r4.w, r4.x
  59: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  60: mul r4.xy, r4.xyxx, cb0[14].wwww
  61: dp2 r3.w, r4.xyxx, r4.xyxx
  62: min r3.w, r3.w, l(1.000000)
  63: add r3.w, -r3.w, l(1.000000)
  64: sqrt r4.z, r3.w
  65: mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx
  66: dp4 r2.x, r2.xyzw, cb0[15].xyzw
  67: mul r2.yz, v4.yyyy, cb0[5].xxyx
  68: mad r2.yz, cb0[4].xxyx, v4.xxxx, r2.yyzy
  69: mad r2.yz, cb0[6].xxyx, v4.zzzz, r2.yyzy
  70: add r2.yz, r2.yyzy, cb0[7].xxyx
  71: eq r2.w, cb3[0].x, l(1.000000)
  72: if_nz r2.w
  73:   eq r2.w, cb3[0].y, l(1.000000)
  74:   mul r4.xyz, v4.yyyy, cb3[2].xyzx
  75:   mad r4.xyz, cb3[1].xyzx, v4.xxxx, r4.xyzx
  76:   mad r4.xyz, cb3[3].xyzx, v4.zzzz, r4.xyzx
  77:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  78:   movc r4.xyz, r2.wwww, r4.xyzx, v4.xyzx
  79:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  80:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
  81:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  82:   mad r4.y, cb3[0].z, l(0.500000), l(0.750000)
  83:   max r4.x, r2.w, r4.y
  84:   sample r4.xyzw, r4.xzwx, t10.xyzw, s0
  85: else 
  86:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  87: endif 
  88: dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
  89: sample r4.xyzw, r2.yzyy, t9.xyzw, s1
  90: mul r2.y, r2.w, r4.w
  91: add r3.w, r3.z, l(0.000010)
  92: dp3 r4.x, v1.xyzx, r3.xywx
  93: dp3 r4.y, v2.xyzx, r3.xywx
  94: dp3 r4.z, v3.xyzx, r3.xywx
  95: dp3 r2.z, r4.xyzx, r4.xyzx
  96: rsq r2.z, r2.z
  97: mul r3.xyz, r2.zzzz, r4.xyzx
  98: mul r2.yzw, r2.yyyy, cb0[2].xxyz
  99: add r4.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 100: mad r4.xyz, r2.xxxx, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 101: mad r2.x, -r2.x, l(0.779084), l(0.779084)
 102: mul r5.xyz, r2.xxxx, r5.xyzx
 103: add r2.x, -r5.w, l(1.000000)
 104: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 105: dp3 r0.w, r0.xyzx, r0.xyzx
 106: max r0.w, r0.w, l(0.001000)
 107: rsq r0.w, r0.w
 108: mul r0.xyz, r0.wwww, r0.xyzx
 109: dp3 r0.w, r3.xyzx, r1.xyzx
 110: dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
 111: dp3_sat r1.y, r3.xyzx, r0.xyzx
 112: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 113: mul r0.y, r0.x, r0.x
 114: dp2 r0.y, r0.yyyy, r2.xxxx
 115: add r0.y, r0.y, l(-0.500000)
 116: add r0.z, -r1.x, l(1.000000)
 117: mul r1.z, r0.z, r0.z
 118: mul r1.z, r1.z, r1.z
 119: mul r0.z, r0.z, r1.z
 120: mad r0.z, r0.y, r0.z, l(1.000000)
 121: add r1.z, -|r0.w|, l(1.000000)
 122: mul r3.x, r1.z, r1.z
 123: mul r3.x, r3.x, r3.x
 124: mul r1.z, r1.z, r3.x
 125: mad r0.y, r0.y, r1.z, l(1.000000)
 126: mul r0.y, r0.y, r0.z
 127: mul r0.z, r2.x, r2.x
 128: max r0.z, r0.z, l(0.002000)
 129: add r1.z, -r0.z, l(1.000000)
 130: mad r2.x, |r0.w|, r1.z, r0.z
 131: mad r1.z, r1.x, r1.z, r0.z
 132: mul r0.w, |r0.w|, r1.z
 133: mad r0.w, r1.x, r2.x, r0.w
 134: add r0.w, r0.w, l(0.000010)
 135: div r0.w, l(0.500000), r0.w
 136: mul r0.z, r0.z, r0.z
 137: mad r1.z, r1.y, r0.z, -r1.y
 138: mad r1.y, r1.z, r1.y, l(1.000000)
 139: mul r0.z, r0.z, l(0.318310)
 140: mad r1.y, r1.y, r1.y, l(0.000000)
 141: div r0.z, r0.z, r1.y
 142: mul r0.z, r0.z, r0.w
 143: mul r0.z, r0.z, l(3.141593)
 144: max r0.z, r0.z, l(0.000100)
 145: sqrt r0.z, r0.z
 146: mul r0.yz, r1.xxxx, r0.yyzy
 147: dp3 r0.w, r4.xyzx, r4.xyzx
 148: ne r0.w, r0.w, l(0.000000)
 149: and r0.w, r0.w, l(0x3f800000)
 150: mul r0.z, r0.w, r0.z
 151: mul r1.xyz, r0.yyyy, r2.yzwy
 152: mul r0.yzw, r2.yyzw, r0.zzzz
 153: add r0.x, -r0.x, l(1.000000)
 154: mul r2.x, r0.x, r0.x
 155: mul r2.x, r2.x, r2.x
 156: mul r0.x, r0.x, r2.x
 157: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 158: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
 159: mul r0.xyz, r0.yzwy, r2.xyzx
 160: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 161: mul o0.xyz, r1.wwww, r0.xyzx
 162: mov o0.w, l(1.000000)
 163: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SPOT 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mul r1.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
   9: mad r1.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r1.xyxx
  10: mul r1.yzw, r1.yyyy, cb1[1].yyzx
  11: mad r1.xyz, cb1[0].yzxy, r1.xxxx, r1.yzwy
  12: dp3 r1.w, r1.xyzx, r1.xyzx
  13: rsq r1.w, r1.w
  14: mul r1.xyz, r1.wwww, r1.xyzx
  15: mul r2.xyz, v2.yyyy, cb1[1].zxyz
  16: mad r2.xyz, cb1[0].zxyz, v2.xxxx, r2.xyzx
  17: mad r2.xyz, cb1[2].zxyz, v2.zzzz, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: mul r3.xyz, r1.xyzx, r2.xyzx
  22: mad r3.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
  23: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  24: mov o1.y, r3.x
  25: mov o1.x, r1.z
  26: mov o1.z, r2.y
  27: mov o2.x, r1.x
  28: mov o3.x, r1.y
  29: mov o2.z, r2.z
  30: mov o3.z, r2.x
  31: mov o2.y, r3.y
  32: mov o3.y, r3.z
  33: mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  34: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  35: mov o5.xy, v3.xyxx
  36: mov o5.zw, l(0,0,0,0)
  37: mul r1.xyzw, r0.yyyy, cb0[5].xyzw
  38: mad r1.xyzw, cb0[4].xyzw, r0.xxxx, r1.xyzw
  39: mad r1.xyzw, cb0[6].xyzw, r0.zzzz, r1.xyzw
  40: mad o6.xyzw, cb0[7].xyzw, r0.wwww, r1.xyzw
  41: mov o7.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 173 math, 9 temp registers, 12 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 4
Set 2D Texture "_Splat0" to slot 1 sampler slot 5
Set 2D Texture "_Splat1" to slot 2 sampler slot 6
Set 2D Texture "_Splat2" to slot 3 sampler slot 7
Set 2D Texture "_Splat3" to slot 4 sampler slot 8
Set 2D Texture "_Normal0" to slot 5 sampler slot 9
Set 2D Texture "_Normal1" to slot 6 sampler slot 10
Set 2D Texture "_Normal2" to slot 7 sampler slot 11
Set 2D Texture "_Normal3" to slot 8 sampler slot 12
Set 2D Texture "_LightTexture0" to slot 9 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 10 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 11 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 12 sampler slot 1

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 224
  Float _NormalScale1 at 228
  Float _NormalScale2 at 232
  Float _NormalScale3 at 236
  Float _Metallic0 at 240
  Float _Metallic1 at 244
  Float _Metallic2 at 248
  Float _Metallic3 at 252
  Float _Smoothness0 at 256
  Float _Smoothness1 at 260
  Float _Smoothness2 at 264
  Float _Smoothness3 at 268
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[17], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture3d (float,float,float,float) t11
      dcl_resource_texture2d (float,float,float,float) t12
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[9].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s4
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s5
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[16].x
  22: sample r8.xyzw, r5.zwzz, t2.xyzw, s6
  23: mul r8.xyzw, r4.yyyy, r8.xyzw
  24: mul r8.w, r8.w, cb0[16].y
  25: add r7.xyzw, r7.xyzw, r8.xyzw
  26: sample r8.xyzw, r6.xyxx, t3.xyzw, s7
  27: mul r8.xyzw, r4.zzzz, r8.xyzw
  28: mul r8.w, r8.w, cb0[16].z
  29: add r7.xyzw, r7.xyzw, r8.xyzw
  30: sample r8.xyzw, r6.zwzz, t4.xyzw, s8
  31: mul r8.xyzw, r4.wwww, r8.xyzw
  32: mul r8.w, r8.w, cb0[16].w
  33: add r7.xyzw, r7.xyzw, r8.xyzw
  34: sample r8.xyzw, r5.xyxx, t5.xyzw, s9
  35: mul r8.x, r8.w, r8.x
  36: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  37: mul r8.xy, r5.xyxx, cb0[14].xxxx
  38: dp2 r2.w, r8.xyxx, r8.xyxx
  39: min r2.w, r2.w, l(1.000000)
  40: add r2.w, -r2.w, l(1.000000)
  41: sqrt r8.z, r2.w
  42: sample r5.xyzw, r5.zwzz, t6.xyzw, s10
  43: mul r5.x, r5.w, r5.x
  44: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  45: mul r5.xy, r5.xyxx, cb0[14].yyyy
  46: dp2 r2.w, r5.xyxx, r5.xyxx
  47: min r2.w, r2.w, l(1.000000)
  48: add r2.w, -r2.w, l(1.000000)
  49: sqrt r5.z, r2.w
  50: mul r5.xyz, r4.yyyy, r5.xyzx
  51: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  52: sample r8.xyzw, r6.xyxx, t7.xyzw, s11
  53: mul r8.x, r8.w, r8.x
  54: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  55: mul r8.xy, r6.xyxx, cb0[14].zzzz
  56: dp2 r2.w, r8.xyxx, r8.xyxx
  57: min r2.w, r2.w, l(1.000000)
  58: add r2.w, -r2.w, l(1.000000)
  59: sqrt r8.z, r2.w
  60: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  61: sample r6.xyzw, r6.zwzz, t8.xyzw, s12
  62: mul r6.x, r6.w, r6.x
  63: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  64: mul r6.xy, r6.xyxx, cb0[14].wwww
  65: dp2 r2.w, r6.xyxx, r6.xyxx
  66: min r2.w, r2.w, l(1.000000)
  67: add r2.w, -r2.w, l(1.000000)
  68: sqrt r6.z, r2.w
  69: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  70: dp4 r2.w, r4.xyzw, cb0[15].xyzw
  71: mul r4.xyzw, v4.yyyy, cb0[5].xyzw
  72: mad r4.xyzw, cb0[4].xyzw, v4.xxxx, r4.xyzw
  73: mad r4.xyzw, cb0[6].xyzw, v4.zzzz, r4.xyzw
  74: add r4.xyzw, r4.xyzw, cb0[7].xyzw
  75: mov r6.x, cb4[9].z
  76: mov r6.y, cb4[10].z
  77: mov r6.z, cb4[11].z
  78: dp3 r2.x, r2.xyzx, r6.xyzx
  79: add r6.xyz, v4.xyzx, -cb3[25].xyzx
  80: dp3 r2.y, r6.xyzx, r6.xyzx
  81: sqrt r2.y, r2.y
  82: add r2.y, -r2.x, r2.y
  83: mad r2.x, cb3[25].w, r2.y, r2.x
  84: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  85: eq r2.y, cb5[0].x, l(1.000000)
  86: if_nz r2.y
  87:   eq r2.y, cb5[0].y, l(1.000000)
  88:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
  89:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
  90:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
  91:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  92:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
  93:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  94:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  95:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  96:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  97:   max r6.x, r2.z, r2.y
  98:   sample r6.xyzw, r6.xzwx, t11.xyzw, s0
  99: else 
 100:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 101: endif 
 102: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 103: mul r6.xyzw, v4.yyyy, cb3[9].xyzw
 104: mad r6.xyzw, cb3[8].xyzw, v4.xxxx, r6.xyzw
 105: mad r6.xyzw, cb3[10].xyzw, v4.zzzz, r6.xyzw
 106: add r6.xyzw, r6.xyzw, cb3[11].xyzw
 107: div r6.xyz, r6.xyzx, r6.wwww
 108: sample_c_lz r2.z, r6.xyxx, t12.xxxx, s1, r6.z
 109: add r3.w, -cb3[24].x, l(1.000000)
 110: mad r2.z, r2.z, r3.w, cb3[24].x
 111: add r2.y, -r2.z, r2.y
 112: mad r2.x, r2.x, r2.y, r2.z
 113: lt r2.y, l(0.000000), r4.z
 114: and r2.y, r2.y, l(0x3f800000)
 115: div r6.xy, r4.xyxx, r4.wwww
 116: add r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 117: sample r6.xyzw, r6.xyxx, t9.xyzw, s2
 118: mul r2.y, r2.y, r6.w
 119: dp3 r2.z, r4.xyzx, r4.xyzx
 120: sample r4.xyzw, r2.zzzz, t10.xyzw, s3
 121: mul r2.y, r2.y, r4.x
 122: mul r2.x, r2.x, r2.y
 123: add r5.w, r5.z, l(0.000010)
 124: dp3 r4.x, v1.xyzx, r5.xywx
 125: dp3 r4.y, v2.xyzx, r5.xywx
 126: dp3 r4.z, v3.xyzx, r5.xywx
 127: dp3 r2.y, r4.xyzx, r4.xyzx
 128: rsq r2.y, r2.y
 129: mul r4.xyz, r2.yyyy, r4.xyzx
 130: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 131: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 132: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 133: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 134: mul r6.xyz, r2.wwww, r7.xyzx
 135: add r2.w, -r7.w, l(1.000000)
 136: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 137: dp3 r0.w, r0.xyzx, r0.xyzx
 138: max r0.w, r0.w, l(0.001000)
 139: rsq r0.w, r0.w
 140: mul r0.xyz, r0.wwww, r0.xyzx
 141: dp3 r0.w, r4.xyzx, r3.xyzx
 142: dp3_sat r3.x, r4.xyzx, r1.xyzx
 143: dp3_sat r3.y, r4.xyzx, r0.xyzx
 144: dp3_sat r0.x, r1.xyzx, r0.xyzx
 145: mul r0.y, r0.x, r0.x
 146: dp2 r0.y, r0.yyyy, r2.wwww
 147: add r0.y, r0.y, l(-0.500000)
 148: add r0.z, -r3.x, l(1.000000)
 149: mul r1.x, r0.z, r0.z
 150: mul r1.x, r1.x, r1.x
 151: mul r0.z, r0.z, r1.x
 152: mad r0.z, r0.y, r0.z, l(1.000000)
 153: add r1.x, -|r0.w|, l(1.000000)
 154: mul r1.y, r1.x, r1.x
 155: mul r1.y, r1.y, r1.y
 156: mul r1.x, r1.x, r1.y
 157: mad r0.y, r0.y, r1.x, l(1.000000)
 158: mul r0.y, r0.y, r0.z
 159: mul r0.z, r2.w, r2.w
 160: max r0.z, r0.z, l(0.002000)
 161: add r1.x, -r0.z, l(1.000000)
 162: mad r1.y, |r0.w|, r1.x, r0.z
 163: mad r1.x, r3.x, r1.x, r0.z
 164: mul r0.w, |r0.w|, r1.x
 165: mad r0.w, r3.x, r1.y, r0.w
 166: add r0.w, r0.w, l(0.000010)
 167: div r0.w, l(0.500000), r0.w
 168: mul r0.z, r0.z, r0.z
 169: mad r1.x, r3.y, r0.z, -r3.y
 170: mad r1.x, r1.x, r3.y, l(1.000000)
 171: mul r0.z, r0.z, l(0.318310)
 172: mad r1.x, r1.x, r1.x, l(0.000000)
 173: div r0.z, r0.z, r1.x
 174: mul r0.z, r0.z, r0.w
 175: mul r0.z, r0.z, l(3.141593)
 176: max r0.z, r0.z, l(0.000100)
 177: sqrt r0.z, r0.z
 178: mul r0.yz, r3.xxxx, r0.yyzy
 179: dp3 r0.w, r5.xyzx, r5.xyzx
 180: ne r0.w, r0.w, l(0.000000)
 181: and r0.w, r0.w, l(0x3f800000)
 182: mul r0.z, r0.w, r0.z
 183: mul r1.xyz, r0.yyyy, r2.xyzx
 184: mul r0.yzw, r2.xxyz, r0.zzzz
 185: add r0.x, -r0.x, l(1.000000)
 186: mul r2.x, r0.x, r0.x
 187: mul r2.x, r2.x, r2.x
 188: mul r0.x, r0.x, r2.x
 189: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 190: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 191: mul r0.xyz, r0.yzwy, r2.xyzx
 192: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 193: mul o0.xyz, r1.wwww, r0.xyzx
 194: mov o0.w, l(1.000000)
 195: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SHADOWS_SOFT SPOT 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (352 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 144
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[13], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mul r1.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
   9: mad r1.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r1.xyxx
  10: mul r1.yzw, r1.yyyy, cb1[1].yyzx
  11: mad r1.xyz, cb1[0].yzxy, r1.xxxx, r1.yzwy
  12: dp3 r1.w, r1.xyzx, r1.xyzx
  13: rsq r1.w, r1.w
  14: mul r1.xyz, r1.wwww, r1.xyzx
  15: mul r2.xyz, v2.yyyy, cb1[1].zxyz
  16: mad r2.xyz, cb1[0].zxyz, v2.xxxx, r2.xyzx
  17: mad r2.xyz, cb1[2].zxyz, v2.zzzz, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: mul r3.xyz, r1.xyzx, r2.xyzx
  22: mad r3.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
  23: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  24: mov o1.y, r3.x
  25: mov o1.x, r1.z
  26: mov o1.z, r2.y
  27: mov o2.x, r1.x
  28: mov o3.x, r1.y
  29: mov o2.z, r2.z
  30: mov o3.z, r2.x
  31: mov o2.y, r3.y
  32: mov o3.y, r3.z
  33: mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  34: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  35: mov o5.xy, v3.xyxx
  36: mov o5.zw, l(0,0,0,0)
  37: mul r1.xyzw, r0.yyyy, cb0[10].xyzw
  38: mad r1.xyzw, cb0[9].xyzw, r0.xxxx, r1.xyzw
  39: mad r1.xyzw, cb0[11].xyzw, r0.zzzz, r1.xyzw
  40: mad o6.xyzw, cb0[12].xyzw, r0.wwww, r1.xyzw
  41: mov o7.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 202 math, 13 temp registers, 12 textures, 4 branches
Set 2D Texture "_Control" to slot 0 sampler slot 4
Set 2D Texture "_Splat0" to slot 1 sampler slot 5
Set 2D Texture "_Splat1" to slot 2 sampler slot 6
Set 2D Texture "_Splat2" to slot 3 sampler slot 7
Set 2D Texture "_Splat3" to slot 4 sampler slot 8
Set 2D Texture "_Normal0" to slot 5 sampler slot 9
Set 2D Texture "_Normal1" to slot 6 sampler slot 10
Set 2D Texture "_Normal2" to slot 7 sampler slot 11
Set 2D Texture "_Normal3" to slot 8 sampler slot 12
Set 2D Texture "_LightTexture0" to slot 9 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 10 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 11 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 12 sampler slot 1

Constant Buffer "$Globals" (352 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 144
  Vector4 _LightColor0 at 32
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _Control_TexelSize at 224
  Vector4 _Splat0_ST at 240
  Vector4 _Splat1_ST at 256
  Vector4 _Splat2_ST at 272
  Vector4 _Splat3_ST at 288
  Float _NormalScale0 at 304
  Float _NormalScale1 at 308
  Float _NormalScale2 at 312
  Float _NormalScale3 at 316
  Float _Metallic0 at 320
  Float _Metallic1 at 324
  Float _Metallic2 at 328
  Float _Metallic3 at 332
  Float _Smoothness0 at 336
  Float _Smoothness1 at 340
  Float _Smoothness2 at 344
  Float _Smoothness3 at 348
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[22], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture3d (float,float,float,float) t11
      dcl_resource_texture2d (float,float,float,float) t12
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_output o0.xyzw
      dcl_temps 13
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[14].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[14].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s4
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v5.xyxx, cb0[15].xyxx, cb0[15].zwzz
  16: mad r5.zw, v5.xxxy, cb0[16].xxxy, cb0[16].zzzw
  17: mad r6.xy, v5.xyxx, cb0[17].xyxx, cb0[17].zwzz
  18: mad r6.zw, v5.xxxy, cb0[18].xxxy, cb0[18].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s5
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[21].x
  22: sample r8.xyzw, r5.zwzz, t2.xyzw, s6
  23: mul r8.xyzw, r4.yyyy, r8.xyzw
  24: mul r8.w, r8.w, cb0[21].y
  25: add r7.xyzw, r7.xyzw, r8.xyzw
  26: sample r8.xyzw, r6.xyxx, t3.xyzw, s7
  27: mul r8.xyzw, r4.zzzz, r8.xyzw
  28: mul r8.w, r8.w, cb0[21].z
  29: add r7.xyzw, r7.xyzw, r8.xyzw
  30: sample r8.xyzw, r6.zwzz, t4.xyzw, s8
  31: mul r8.xyzw, r4.wwww, r8.xyzw
  32: mul r8.w, r8.w, cb0[21].w
  33: add r7.xyzw, r7.xyzw, r8.xyzw
  34: sample r8.xyzw, r5.xyxx, t5.xyzw, s9
  35: mul r8.x, r8.w, r8.x
  36: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  37: mul r8.xy, r5.xyxx, cb0[19].xxxx
  38: dp2 r2.w, r8.xyxx, r8.xyxx
  39: min r2.w, r2.w, l(1.000000)
  40: add r2.w, -r2.w, l(1.000000)
  41: sqrt r8.z, r2.w
  42: sample r5.xyzw, r5.zwzz, t6.xyzw, s10
  43: mul r5.x, r5.w, r5.x
  44: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  45: mul r5.xy, r5.xyxx, cb0[19].yyyy
  46: dp2 r2.w, r5.xyxx, r5.xyxx
  47: min r2.w, r2.w, l(1.000000)
  48: add r2.w, -r2.w, l(1.000000)
  49: sqrt r5.z, r2.w
  50: mul r5.xyz, r4.yyyy, r5.xyzx
  51: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  52: sample r8.xyzw, r6.xyxx, t7.xyzw, s11
  53: mul r8.x, r8.w, r8.x
  54: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  55: mul r8.xy, r6.xyxx, cb0[19].zzzz
  56: dp2 r2.w, r8.xyxx, r8.xyxx
  57: min r2.w, r2.w, l(1.000000)
  58: add r2.w, -r2.w, l(1.000000)
  59: sqrt r8.z, r2.w
  60: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  61: sample r6.xyzw, r6.zwzz, t8.xyzw, s12
  62: mul r6.x, r6.w, r6.x
  63: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  64: mul r6.xy, r6.xyxx, cb0[19].wwww
  65: dp2 r2.w, r6.xyxx, r6.xyxx
  66: min r2.w, r2.w, l(1.000000)
  67: add r2.w, -r2.w, l(1.000000)
  68: sqrt r6.z, r2.w
  69: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  70: dp4 r2.w, r4.xyzw, cb0[20].xyzw
  71: mul r4.xyzw, v4.yyyy, cb0[10].xyzw
  72: mad r4.xyzw, cb0[9].xyzw, v4.xxxx, r4.xyzw
  73: mad r4.xyzw, cb0[11].xyzw, v4.zzzz, r4.xyzw
  74: add r4.xyzw, r4.xyzw, cb0[12].xyzw
  75: mov r6.x, cb4[9].z
  76: mov r6.y, cb4[10].z
  77: mov r6.z, cb4[11].z
  78: dp3 r2.x, r2.xyzx, r6.xyzx
  79: add r6.xyz, v4.xyzx, -cb3[25].xyzx
  80: dp3 r2.y, r6.xyzx, r6.xyzx
  81: sqrt r2.y, r2.y
  82: add r2.y, -r2.x, r2.y
  83: mad r2.x, cb3[25].w, r2.y, r2.x
  84: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  85: eq r2.y, cb5[0].x, l(1.000000)
  86: if_nz r2.y
  87:   eq r2.y, cb5[0].y, l(1.000000)
  88:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
  89:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
  90:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
  91:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  92:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
  93:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  94:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  95:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  96:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  97:   max r6.x, r2.z, r2.y
  98:   sample r6.xyzw, r6.xzwx, t11.xyzw, s0
  99: else 
 100:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 101: endif 
 102: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 103: lt r2.z, r2.x, l(0.990000)
 104: if_nz r2.z
 105:   mul r6.xyzw, v4.yyyy, cb3[9].xyzw
 106:   mad r6.xyzw, cb3[8].xyzw, v4.xxxx, r6.xyzw
 107:   mad r6.xyzw, cb3[10].xyzw, v4.zzzz, r6.xyzw
 108:   add r6.xyzw, r6.xyzw, cb3[11].xyzw
 109:   div r6.xyz, r6.xyzx, r6.wwww
 110:   mad r8.xy, r6.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 111:   round_ni r8.xy, r8.xyxx
 112:   mad r6.xy, r6.xyxx, cb0[8].zwzz, -r8.xyxx
 113:   add r9.xyzw, r6.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 114:   mul r10.xw, r9.xxxz, r9.xxxz
 115:   mad r8.zw, r10.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r6.xxxy
 116:   add r9.xz, -r6.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
 117:   min r11.xy, r6.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 118:   mad r9.xz, -r11.xxyx, r11.xxyx, r9.xxzx
 119:   max r6.xy, r6.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 120:   mad r6.xy, -r6.xyxx, r6.xyxx, r9.ywyy
 121:   mov r11.x, r8.z
 122:   mov r11.y, r9.x
 123:   mov r11.z, r6.x
 124:   mov r11.w, r10.x
 125:   mul r11.xyzw, r11.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
 126:   mov r10.x, r8.w
 127:   mov r10.y, r9.z
 128:   mov r10.z, r6.y
 129:   mul r9.xyzw, r10.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
 130:   add r10.xyzw, r11.ywyw, r11.xzxz
 131:   add r12.xyzw, r9.yyww, r9.xxzz
 132:   div r6.xy, r11.ywyy, r10.zwzz
 133:   add r6.xy, r6.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
 134:   div r8.zw, r9.yyyw, r12.yyyw
 135:   add r8.zw, r8.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
 136:   mul r9.xy, r6.xyxx, cb0[8].xxxx
 137:   mul r9.zw, r8.zzzw, cb0[8].yyyy
 138:   mul r10.xyzw, r10.xyzw, r12.xyzw
 139:   mad r11.xyzw, r8.xyxy, cb0[8].xyxy, r9.xzyz
 140:   sample_c_lz r2.z, r11.xyxx, t12.xxxx, s1, r6.z
 141:   sample_c_lz r3.w, r11.zwzz, t12.xxxx, s1, r6.z
 142:   mul r3.w, r3.w, r10.y
 143:   mad r2.z, r10.x, r2.z, r3.w
 144:   mad r8.xyzw, r8.xyxy, cb0[8].xyxy, r9.xwyw
 145:   sample_c_lz r3.w, r8.xyxx, t12.xxxx, s1, r6.z
 146:   mad r2.z, r10.z, r3.w, r2.z
 147:   sample_c_lz r3.w, r8.zwzz, t12.xxxx, s1, r6.z
 148:   mad r2.z, r10.w, r3.w, r2.z
 149:   add r3.w, -cb3[24].x, l(1.000000)
 150:   mad r2.z, r2.z, r3.w, cb3[24].x
 151: else 
 152:   mov r2.z, l(1.000000)
 153: endif 
 154: add r2.y, -r2.z, r2.y
 155: mad r2.x, r2.x, r2.y, r2.z
 156: lt r2.y, l(0.000000), r4.z
 157: and r2.y, r2.y, l(0x3f800000)
 158: div r6.xy, r4.xyxx, r4.wwww
 159: add r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 160: sample r6.xyzw, r6.xyxx, t9.xyzw, s2
 161: mul r2.y, r2.y, r6.w
 162: dp3 r2.z, r4.xyzx, r4.xyzx
 163: sample r4.xyzw, r2.zzzz, t10.xyzw, s3
 164: mul r2.y, r2.y, r4.x
 165: mul r2.x, r2.x, r2.y
 166: add r5.w, r5.z, l(0.000010)
 167: dp3 r4.x, v1.xyzx, r5.xywx
 168: dp3 r4.y, v2.xyzx, r5.xywx
 169: dp3 r4.z, v3.xyzx, r5.xywx
 170: dp3 r2.y, r4.xyzx, r4.xyzx
 171: rsq r2.y, r2.y
 172: mul r4.xyz, r2.yyyy, r4.xyzx
 173: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 174: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 175: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 176: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 177: mul r6.xyz, r2.wwww, r7.xyzx
 178: add r2.w, -r7.w, l(1.000000)
 179: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 180: dp3 r0.w, r0.xyzx, r0.xyzx
 181: max r0.w, r0.w, l(0.001000)
 182: rsq r0.w, r0.w
 183: mul r0.xyz, r0.wwww, r0.xyzx
 184: dp3 r0.w, r4.xyzx, r3.xyzx
 185: dp3_sat r3.x, r4.xyzx, r1.xyzx
 186: dp3_sat r3.y, r4.xyzx, r0.xyzx
 187: dp3_sat r0.x, r1.xyzx, r0.xyzx
 188: mul r0.y, r0.x, r0.x
 189: dp2 r0.y, r0.yyyy, r2.wwww
 190: add r0.y, r0.y, l(-0.500000)
 191: add r0.z, -r3.x, l(1.000000)
 192: mul r1.x, r0.z, r0.z
 193: mul r1.x, r1.x, r1.x
 194: mul r0.z, r0.z, r1.x
 195: mad r0.z, r0.y, r0.z, l(1.000000)
 196: add r1.x, -|r0.w|, l(1.000000)
 197: mul r1.y, r1.x, r1.x
 198: mul r1.y, r1.y, r1.y
 199: mul r1.x, r1.x, r1.y
 200: mad r0.y, r0.y, r1.x, l(1.000000)
 201: mul r0.y, r0.y, r0.z
 202: mul r0.z, r2.w, r2.w
 203: max r0.z, r0.z, l(0.002000)
 204: add r1.x, -r0.z, l(1.000000)
 205: mad r1.y, |r0.w|, r1.x, r0.z
 206: mad r1.x, r3.x, r1.x, r0.z
 207: mul r0.w, |r0.w|, r1.x
 208: mad r0.w, r3.x, r1.y, r0.w
 209: add r0.w, r0.w, l(0.000010)
 210: div r0.w, l(0.500000), r0.w
 211: mul r0.z, r0.z, r0.z
 212: mad r1.x, r3.y, r0.z, -r3.y
 213: mad r1.x, r1.x, r3.y, l(1.000000)
 214: mul r0.z, r0.z, l(0.318310)
 215: mad r1.x, r1.x, r1.x, l(0.000000)
 216: div r0.z, r0.z, r1.x
 217: mul r0.z, r0.z, r0.w
 218: mul r0.z, r0.z, l(3.141593)
 219: max r0.z, r0.z, l(0.000100)
 220: sqrt r0.z, r0.z
 221: mul r0.yz, r3.xxxx, r0.yyzy
 222: dp3 r0.w, r5.xyzx, r5.xyzx
 223: ne r0.w, r0.w, l(0.000000)
 224: and r0.w, r0.w, l(0x3f800000)
 225: mul r0.z, r0.w, r0.z
 226: mul r1.xyz, r0.yyyy, r2.xyzx
 227: mul r0.yzw, r2.xxyz, r0.zzzz
 228: add r0.x, -r0.x, l(1.000000)
 229: mul r2.x, r0.x, r0.x
 230: mul r2.x, r2.x, r2.x
 231: mul r0.x, r0.x, r2.x
 232: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 233: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 234: mul r0.xyz, r0.yzwy, r2.xyzx
 235: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 236: mul o0.xyz, r1.wwww, r0.xyzx
 237: mov o0.w, l(1.000000)
 238: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerCamera" (144 bytes) on slot 0 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: mul r1.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
  11: mad r1.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r1.xyxx
  12: mul r1.yzw, r1.yyyy, cb1[1].yyzx
  13: mad r1.xyz, cb1[0].yzxy, r1.xxxx, r1.yzwy
  14: dp3 r1.w, r1.xyzx, r1.xyzx
  15: rsq r1.w, r1.w
  16: mul r1.xyz, r1.wwww, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb1[1].zxyz
  18: mad r2.xyz, cb1[0].zxyz, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].zxyz, v2.zzzz, r2.xyzx
  20: dp3 r1.w, r2.xyzx, r2.xyzx
  21: rsq r1.w, r1.w
  22: mul r2.xyz, r1.wwww, r2.xyzx
  23: mul r3.xyz, r1.xyzx, r2.xyzx
  24: mad r3.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
  25: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  26: mov o1.y, r3.x
  27: mov o1.x, r1.z
  28: mov o1.z, r2.y
  29: mov o2.x, r1.x
  30: mov o3.x, r1.y
  31: mov o2.z, r2.z
  32: mov o3.z, r2.x
  33: mov o2.y, r3.y
  34: mov o3.y, r3.z
  35: mov o5.xy, v3.xyxx
  36: mov o5.zw, l(0,0,0,0)
  37: mul r0.y, r0.y, cb0[5].x
  38: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  39: mov o6.zw, r0.zzzw
  40: add o6.xy, r1.zzzz, r1.xwxx
  41: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 151 math, 7 temp registers, 11 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 2
Set 2D Texture "_Splat0" to slot 1 sampler slot 3
Set 2D Texture "_Splat1" to slot 2 sampler slot 4
Set 2D Texture "_Splat2" to slot 3 sampler slot 5
Set 2D Texture "_Splat3" to slot 4 sampler slot 6
Set 2D Texture "_Normal0" to slot 5 sampler slot 7
Set 2D Texture "_Normal1" to slot 6 sampler slot 8
Set 2D Texture "_Normal2" to slot 7 sampler slot 9
Set 2D Texture "_Normal3" to slot 8 sampler slot 10
Set 2D Texture "_ShadowMapTexture" to slot 9 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 10 sampler slot 0

Constant Buffer "$Globals" (208 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 160
  Float _NormalScale1 at 164
  Float _NormalScale2 at 168
  Float _NormalScale3 at 172
  Float _Metallic0 at 176
  Float _Metallic1 at 180
  Float _Metallic2 at 184
  Float _Metallic3 at 188
  Float _Smoothness0 at 192
  Float _Smoothness1 at 196
  Float _Smoothness2 at 200
  Float _Smoothness3 at 204
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 6   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[13], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture3d (float,float,float,float) t10
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: mul r2.xy, r2.xyxx, cb0[5].xyxx
   7: sample r2.xyzw, r2.xyxx, t0.xyzw, s2
   8: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   9: add r3.x, r1.w, l(0.001000)
  10: div r2.xyzw, r2.xyzw, r3.xxxx
  11: mad r3.xy, v5.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mad r3.zw, v5.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad r4.xy, v5.xyxx, cb0[8].xyxx, cb0[8].zwzz
  14: mad r4.zw, v5.xxxy, cb0[9].xxxy, cb0[9].zzzw
  15: sample r5.xyzw, r3.xyxx, t1.xyzw, s3
  16: mul r5.xyzw, r2.xxxx, r5.xyzw
  17: mul r5.w, r5.w, cb0[12].x
  18: sample r6.xyzw, r3.zwzz, t2.xyzw, s4
  19: mul r6.xyzw, r2.yyyy, r6.xyzw
  20: mul r6.w, r6.w, cb0[12].y
  21: add r5.xyzw, r5.xyzw, r6.xyzw
  22: sample r6.xyzw, r4.xyxx, t3.xyzw, s5
  23: mul r6.xyzw, r2.zzzz, r6.xyzw
  24: mul r6.w, r6.w, cb0[12].z
  25: add r5.xyzw, r5.xyzw, r6.xyzw
  26: sample r6.xyzw, r4.zwzz, t4.xyzw, s6
  27: mul r6.xyzw, r2.wwww, r6.xyzw
  28: mul r6.w, r6.w, cb0[12].w
  29: add r5.xyzw, r5.xyzw, r6.xyzw
  30: sample r6.xyzw, r3.xyxx, t5.xyzw, s7
  31: mul r6.x, r6.w, r6.x
  32: mad r3.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  33: mul r6.xy, r3.xyxx, cb0[10].xxxx
  34: dp2 r3.x, r6.xyxx, r6.xyxx
  35: min r3.x, r3.x, l(1.000000)
  36: add r3.x, -r3.x, l(1.000000)
  37: sqrt r6.z, r3.x
  38: sample r3.xyzw, r3.zwzz, t6.xyzw, s8
  39: mul r3.x, r3.w, r3.x
  40: mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  41: mul r3.xy, r3.xyxx, cb0[10].yyyy
  42: dp2 r3.w, r3.xyxx, r3.xyxx
  43: min r3.w, r3.w, l(1.000000)
  44: add r3.w, -r3.w, l(1.000000)
  45: sqrt r3.z, r3.w
  46: mul r3.xyz, r2.yyyy, r3.xyzx
  47: mad r3.xyz, r6.xyzx, r2.xxxx, r3.xyzx
  48: sample r6.xyzw, r4.xyxx, t7.xyzw, s9
  49: mul r6.x, r6.w, r6.x
  50: mad r4.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  51: mul r6.xy, r4.xyxx, cb0[10].zzzz
  52: dp2 r3.w, r6.xyxx, r6.xyxx
  53: min r3.w, r3.w, l(1.000000)
  54: add r3.w, -r3.w, l(1.000000)
  55: sqrt r6.z, r3.w
  56: mad r3.xyz, r6.xyzx, r2.zzzz, r3.xyzx
  57: sample r4.xyzw, r4.zwzz, t8.xyzw, s10
  58: mul r4.x, r4.w, r4.x
  59: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  60: mul r4.xy, r4.xyxx, cb0[10].wwww
  61: dp2 r3.w, r4.xyxx, r4.xyxx
  62: min r3.w, r3.w, l(1.000000)
  63: add r3.w, -r3.w, l(1.000000)
  64: sqrt r4.z, r3.w
  65: mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx
  66: dp4 r2.x, r2.xyzw, cb0[11].xyzw
  67: mov r4.x, cb4[9].z
  68: mov r4.y, cb4[10].z
  69: mov r4.z, cb4[11].z
  70: dp3 r2.y, r0.xyzx, r4.xyzx
  71: add r4.xyz, v4.xyzx, -cb3[25].xyzx
  72: dp3 r2.z, r4.xyzx, r4.xyzx
  73: sqrt r2.z, r2.z
  74: add r2.z, -r2.y, r2.z
  75: mad r2.y, cb3[25].w, r2.z, r2.y
  76: mad_sat r2.y, r2.y, cb3[24].z, cb3[24].w
  77: eq r2.z, cb5[0].x, l(1.000000)
  78: if_nz r2.z
  79:   eq r2.z, cb5[0].y, l(1.000000)
  80:   mul r4.xyz, v4.yyyy, cb5[2].xyzx
  81:   mad r4.xyz, cb5[1].xyzx, v4.xxxx, r4.xyzx
  82:   mad r4.xyz, cb5[3].xyzx, v4.zzzz, r4.xyzx
  83:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  84:   movc r4.xyz, r2.zzzz, r4.xyzx, v4.xyzx
  85:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  86:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  87:   mad r2.z, r4.y, l(0.250000), l(0.750000)
  88:   mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
  89:   max r4.x, r2.w, r2.z
  90:   sample r4.xyzw, r4.xzwx, t10.xyzw, s0
  91: else 
  92:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  93: endif 
  94: dp4_sat r2.z, r4.xyzw, cb2[46].xyzw
  95: div r4.xy, v6.xyxx, v6.wwww
  96: sample r4.xyzw, r4.xyxx, t9.xyzw, s1
  97: add r2.z, r2.z, -r4.x
  98: mad r2.y, r2.y, r2.z, r4.x
  99: add r3.w, r3.z, l(0.000010)
 100: dp3 r4.x, v1.xyzx, r3.xywx
 101: dp3 r4.y, v2.xyzx, r3.xywx
 102: dp3 r4.z, v3.xyzx, r3.xywx
 103: dp3 r2.z, r4.xyzx, r4.xyzx
 104: rsq r2.z, r2.z
 105: mul r3.xyz, r2.zzzz, r4.xyzx
 106: mul r2.yzw, r2.yyyy, cb0[2].xxyz
 107: add r4.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 108: mad r4.xyz, r2.xxxx, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 109: mad r2.x, -r2.x, l(0.779084), l(0.779084)
 110: mul r5.xyz, r2.xxxx, r5.xyzx
 111: add r2.x, -r5.w, l(1.000000)
 112: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 113: dp3 r0.w, r0.xyzx, r0.xyzx
 114: max r0.w, r0.w, l(0.001000)
 115: rsq r0.w, r0.w
 116: mul r0.xyz, r0.wwww, r0.xyzx
 117: dp3 r0.w, r3.xyzx, r1.xyzx
 118: dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
 119: dp3_sat r1.y, r3.xyzx, r0.xyzx
 120: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 121: mul r0.y, r0.x, r0.x
 122: dp2 r0.y, r0.yyyy, r2.xxxx
 123: add r0.y, r0.y, l(-0.500000)
 124: add r0.z, -r1.x, l(1.000000)
 125: mul r1.z, r0.z, r0.z
 126: mul r1.z, r1.z, r1.z
 127: mul r0.z, r0.z, r1.z
 128: mad r0.z, r0.y, r0.z, l(1.000000)
 129: add r1.z, -|r0.w|, l(1.000000)
 130: mul r3.x, r1.z, r1.z
 131: mul r3.x, r3.x, r3.x
 132: mul r1.z, r1.z, r3.x
 133: mad r0.y, r0.y, r1.z, l(1.000000)
 134: mul r0.y, r0.y, r0.z
 135: mul r0.z, r2.x, r2.x
 136: max r0.z, r0.z, l(0.002000)
 137: add r1.z, -r0.z, l(1.000000)
 138: mad r2.x, |r0.w|, r1.z, r0.z
 139: mad r1.z, r1.x, r1.z, r0.z
 140: mul r0.w, |r0.w|, r1.z
 141: mad r0.w, r1.x, r2.x, r0.w
 142: add r0.w, r0.w, l(0.000010)
 143: div r0.w, l(0.500000), r0.w
 144: mul r0.z, r0.z, r0.z
 145: mad r1.z, r1.y, r0.z, -r1.y
 146: mad r1.y, r1.z, r1.y, l(1.000000)
 147: mul r0.z, r0.z, l(0.318310)
 148: mad r1.y, r1.y, r1.y, l(0.000000)
 149: div r0.z, r0.z, r1.y
 150: mul r0.z, r0.z, r0.w
 151: mul r0.z, r0.z, l(3.141593)
 152: max r0.z, r0.z, l(0.000100)
 153: sqrt r0.z, r0.z
 154: mul r0.yz, r1.xxxx, r0.yyzy
 155: dp3 r0.w, r4.xyzx, r4.xyzx
 156: ne r0.w, r0.w, l(0.000000)
 157: and r0.w, r0.w, l(0x3f800000)
 158: mul r0.z, r0.w, r0.z
 159: mul r1.xyz, r0.yyyy, r2.yzwy
 160: mul r0.yzw, r2.yyzw, r0.zzzz
 161: add r0.x, -r0.x, l(1.000000)
 162: mul r2.x, r0.x, r0.x
 163: mul r2.x, r2.x, r2.x
 164: mul r0.x, r0.x, r2.x
 165: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 166: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
 167: mul r0.xyz, r0.yzwy, r2.xyzx
 168: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 169: mul o0.xyz, r1.wwww, r0.xyzx
 170: mov o0.w, l(1.000000)
 171: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE SHADOWS_SCREEN 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xy
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb3[18].xyzw
   5: mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
   7: mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
   8: mov o0.xyzw, r1.xyzw
   9: mul r2.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
  10: mad r2.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r2.xyxx
  11: mul r2.yzw, r2.yyyy, cb2[1].yyzx
  12: mad r2.xyz, cb2[0].yzxy, r2.xxxx, r2.yzwy
  13: dp3 r2.w, r2.xyzx, r2.xyzx
  14: rsq r2.w, r2.w
  15: mul r2.xyz, r2.wwww, r2.xyzx
  16: mul r3.xyz, v2.yyyy, cb2[1].zxyz
  17: mad r3.xyz, cb2[0].zxyz, v2.xxxx, r3.xyzx
  18: mad r3.xyz, cb2[2].zxyz, v2.zzzz, r3.xyzx
  19: dp3 r2.w, r3.xyzx, r3.xyzx
  20: rsq r2.w, r2.w
  21: mul r3.xyz, r2.wwww, r3.xyzx
  22: mul r4.xyz, r2.xyzx, r3.xyzx
  23: mad r4.xyz, r3.zxyz, r2.yzxy, -r4.xyzx
  24: mul r4.xyz, r4.xyzx, -cb2[9].wwww
  25: mov o1.y, r4.x
  26: mov o1.x, r2.z
  27: mov o1.z, r3.y
  28: mov o2.x, r2.x
  29: mov o3.x, r2.y
  30: mov o2.z, r3.z
  31: mov o3.z, r3.x
  32: mov o2.y, r4.y
  33: mov o3.y, r4.z
  34: mad o4.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  35: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
  36: mov o5.xy, v3.xyxx
  37: mov o5.zw, l(0,0,0,0)
  38: mul r2.xy, r0.yyyy, cb0[5].xyxx
  39: mad r0.xy, cb0[4].xyxx, r0.xxxx, r2.xyxx
  40: mad r0.xy, cb0[6].xyxx, r0.zzzz, r0.xyxx
  41: mad o6.xy, cb0[7].xyxx, r0.wwww, r0.xyxx
  42: mul r0.x, r1.y, cb1[5].x
  43: mul r0.w, r0.x, l(0.500000)
  44: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  45: mov o7.zw, r1.zzzw
  46: add o7.xy, r0.zzzz, r0.xwxx
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 156 math, 7 temp registers, 12 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_Normal0" to slot 5 sampler slot 8
Set 2D Texture "_Normal1" to slot 6 sampler slot 9
Set 2D Texture "_Normal2" to slot 7 sampler slot 10
Set 2D Texture "_Normal3" to slot 8 sampler slot 11
Set 2D Texture "_ShadowMapTexture" to slot 9 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 10 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 11 sampler slot 0

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 224
  Float _NormalScale1 at 228
  Float _NormalScale2 at 232
  Float _NormalScale3 at 236
  Float _Metallic0 at 240
  Float _Metallic1 at 244
  Float _Metallic2 at 248
  Float _Metallic3 at 252
  Float _Smoothness0 at 256
  Float _Smoothness1 at 260
  Float _Smoothness2 at 264
  Float _Smoothness3 at 268
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[17], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture3d (float,float,float,float) t11
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: mul r2.xy, r2.xyxx, cb0[9].xyxx
   7: sample r2.xyzw, r2.xyxx, t0.xyzw, s3
   8: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   9: add r3.x, r1.w, l(0.001000)
  10: div r2.xyzw, r2.xyzw, r3.xxxx
  11: mad r3.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  12: mad r3.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  13: mad r4.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  14: mad r4.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  15: sample r5.xyzw, r3.xyxx, t1.xyzw, s4
  16: mul r5.xyzw, r2.xxxx, r5.xyzw
  17: mul r5.w, r5.w, cb0[16].x
  18: sample r6.xyzw, r3.zwzz, t2.xyzw, s5
  19: mul r6.xyzw, r2.yyyy, r6.xyzw
  20: mul r6.w, r6.w, cb0[16].y
  21: add r5.xyzw, r5.xyzw, r6.xyzw
  22: sample r6.xyzw, r4.xyxx, t3.xyzw, s6
  23: mul r6.xyzw, r2.zzzz, r6.xyzw
  24: mul r6.w, r6.w, cb0[16].z
  25: add r5.xyzw, r5.xyzw, r6.xyzw
  26: sample r6.xyzw, r4.zwzz, t4.xyzw, s7
  27: mul r6.xyzw, r2.wwww, r6.xyzw
  28: mul r6.w, r6.w, cb0[16].w
  29: add r5.xyzw, r5.xyzw, r6.xyzw
  30: sample r6.xyzw, r3.xyxx, t5.xyzw, s8
  31: mul r6.x, r6.w, r6.x
  32: mad r3.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  33: mul r6.xy, r3.xyxx, cb0[14].xxxx
  34: dp2 r3.x, r6.xyxx, r6.xyxx
  35: min r3.x, r3.x, l(1.000000)
  36: add r3.x, -r3.x, l(1.000000)
  37: sqrt r6.z, r3.x
  38: sample r3.xyzw, r3.zwzz, t6.xyzw, s9
  39: mul r3.x, r3.w, r3.x
  40: mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  41: mul r3.xy, r3.xyxx, cb0[14].yyyy
  42: dp2 r3.w, r3.xyxx, r3.xyxx
  43: min r3.w, r3.w, l(1.000000)
  44: add r3.w, -r3.w, l(1.000000)
  45: sqrt r3.z, r3.w
  46: mul r3.xyz, r2.yyyy, r3.xyzx
  47: mad r3.xyz, r6.xyzx, r2.xxxx, r3.xyzx
  48: sample r6.xyzw, r4.xyxx, t7.xyzw, s10
  49: mul r6.x, r6.w, r6.x
  50: mad r4.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  51: mul r6.xy, r4.xyxx, cb0[14].zzzz
  52: dp2 r3.w, r6.xyxx, r6.xyxx
  53: min r3.w, r3.w, l(1.000000)
  54: add r3.w, -r3.w, l(1.000000)
  55: sqrt r6.z, r3.w
  56: mad r3.xyz, r6.xyzx, r2.zzzz, r3.xyzx
  57: sample r4.xyzw, r4.zwzz, t8.xyzw, s11
  58: mul r4.x, r4.w, r4.x
  59: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  60: mul r4.xy, r4.xyxx, cb0[14].wwww
  61: dp2 r3.w, r4.xyxx, r4.xyxx
  62: min r3.w, r3.w, l(1.000000)
  63: add r3.w, -r3.w, l(1.000000)
  64: sqrt r4.z, r3.w
  65: mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx
  66: dp4 r2.x, r2.xyzw, cb0[15].xyzw
  67: mul r2.yz, v4.yyyy, cb0[5].xxyx
  68: mad r2.yz, cb0[4].xxyx, v4.xxxx, r2.yyzy
  69: mad r2.yz, cb0[6].xxyx, v4.zzzz, r2.yyzy
  70: add r2.yz, r2.yyzy, cb0[7].xxyx
  71: mov r4.x, cb4[9].z
  72: mov r4.y, cb4[10].z
  73: mov r4.z, cb4[11].z
  74: dp3 r2.w, r0.xyzx, r4.xyzx
  75: add r4.xyz, v4.xyzx, -cb3[25].xyzx
  76: dp3 r4.x, r4.xyzx, r4.xyzx
  77: sqrt r4.x, r4.x
  78: add r4.x, -r2.w, r4.x
  79: mad r2.w, cb3[25].w, r4.x, r2.w
  80: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  81: eq r4.x, cb5[0].x, l(1.000000)
  82: if_nz r4.x
  83:   eq r4.x, cb5[0].y, l(1.000000)
  84:   mul r4.yzw, v4.yyyy, cb5[2].xxyz
  85:   mad r4.yzw, cb5[1].xxyz, v4.xxxx, r4.yyzw
  86:   mad r4.yzw, cb5[3].xxyz, v4.zzzz, r4.yyzw
  87:   add r4.yzw, r4.yyzw, cb5[4].xxyz
  88:   movc r4.xyz, r4.xxxx, r4.yzwy, v4.xyzx
  89:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  90:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  91:   mad r4.y, r4.y, l(0.250000), l(0.750000)
  92:   mad r6.x, cb5[0].z, l(0.500000), l(0.750000)
  93:   max r4.x, r4.y, r6.x
  94:   sample r4.xyzw, r4.xzwx, t11.xyzw, s0
  95: else 
  96:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  97: endif 
  98: dp4_sat r4.x, r4.xyzw, cb2[46].xyzw
  99: div r4.yz, v7.xxyx, v7.wwww
 100: sample r6.xyzw, r4.yzyy, t9.xyzw, s1
 101: add r4.x, r4.x, -r6.x
 102: mad r2.w, r2.w, r4.x, r6.x
 103: sample r4.xyzw, r2.yzyy, t10.xyzw, s2
 104: mul r2.y, r2.w, r4.w
 105: add r3.w, r3.z, l(0.000010)
 106: dp3 r4.x, v1.xyzx, r3.xywx
 107: dp3 r4.y, v2.xyzx, r3.xywx
 108: dp3 r4.z, v3.xyzx, r3.xywx
 109: dp3 r2.z, r4.xyzx, r4.xyzx
 110: rsq r2.z, r2.z
 111: mul r3.xyz, r2.zzzz, r4.xyzx
 112: mul r2.yzw, r2.yyyy, cb0[2].xxyz
 113: add r4.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 114: mad r4.xyz, r2.xxxx, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 115: mad r2.x, -r2.x, l(0.779084), l(0.779084)
 116: mul r5.xyz, r2.xxxx, r5.xyzx
 117: add r2.x, -r5.w, l(1.000000)
 118: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 119: dp3 r0.w, r0.xyzx, r0.xyzx
 120: max r0.w, r0.w, l(0.001000)
 121: rsq r0.w, r0.w
 122: mul r0.xyz, r0.wwww, r0.xyzx
 123: dp3 r0.w, r3.xyzx, r1.xyzx
 124: dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
 125: dp3_sat r1.y, r3.xyzx, r0.xyzx
 126: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 127: mul r0.y, r0.x, r0.x
 128: dp2 r0.y, r0.yyyy, r2.xxxx
 129: add r0.y, r0.y, l(-0.500000)
 130: add r0.z, -r1.x, l(1.000000)
 131: mul r1.z, r0.z, r0.z
 132: mul r1.z, r1.z, r1.z
 133: mul r0.z, r0.z, r1.z
 134: mad r0.z, r0.y, r0.z, l(1.000000)
 135: add r1.z, -|r0.w|, l(1.000000)
 136: mul r3.x, r1.z, r1.z
 137: mul r3.x, r3.x, r3.x
 138: mul r1.z, r1.z, r3.x
 139: mad r0.y, r0.y, r1.z, l(1.000000)
 140: mul r0.y, r0.y, r0.z
 141: mul r0.z, r2.x, r2.x
 142: max r0.z, r0.z, l(0.002000)
 143: add r1.z, -r0.z, l(1.000000)
 144: mad r2.x, |r0.w|, r1.z, r0.z
 145: mad r1.z, r1.x, r1.z, r0.z
 146: mul r0.w, |r0.w|, r1.z
 147: mad r0.w, r1.x, r2.x, r0.w
 148: add r0.w, r0.w, l(0.000010)
 149: div r0.w, l(0.500000), r0.w
 150: mul r0.z, r0.z, r0.z
 151: mad r1.z, r1.y, r0.z, -r1.y
 152: mad r1.y, r1.z, r1.y, l(1.000000)
 153: mul r0.z, r0.z, l(0.318310)
 154: mad r1.y, r1.y, r1.y, l(0.000000)
 155: div r0.z, r0.z, r1.y
 156: mul r0.z, r0.z, r0.w
 157: mul r0.z, r0.z, l(3.141593)
 158: max r0.z, r0.z, l(0.000100)
 159: sqrt r0.z, r0.z
 160: mul r0.yz, r1.xxxx, r0.yyzy
 161: dp3 r0.w, r4.xyzx, r4.xyzx
 162: ne r0.w, r0.w, l(0.000000)
 163: and r0.w, r0.w, l(0x3f800000)
 164: mul r0.z, r0.w, r0.z
 165: mul r1.xyz, r0.yyyy, r2.yzwy
 166: mul r0.yzw, r2.yyzw, r0.zzzz
 167: add r0.x, -r0.x, l(1.000000)
 168: mul r2.x, r0.x, r0.x
 169: mul r2.x, r2.x, r2.x
 170: mul r0.x, r0.x, r2.x
 171: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 172: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
 173: mul r0.xyz, r0.yzwy, r2.xyzx
 174: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 175: mul o0.xyz, r1.wwww, r0.xyzx
 176: mov o0.w, l(1.000000)
 177: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mul r1.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
   9: mad r1.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r1.xyxx
  10: mul r1.yzw, r1.yyyy, cb1[1].yyzx
  11: mad r1.xyz, cb1[0].yzxy, r1.xxxx, r1.yzwy
  12: dp3 r1.w, r1.xyzx, r1.xyzx
  13: rsq r1.w, r1.w
  14: mul r1.xyz, r1.wwww, r1.xyzx
  15: mul r2.xyz, v2.yyyy, cb1[1].zxyz
  16: mad r2.xyz, cb1[0].zxyz, v2.xxxx, r2.xyzx
  17: mad r2.xyz, cb1[2].zxyz, v2.zzzz, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: mul r3.xyz, r1.xyzx, r2.xyzx
  22: mad r3.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
  23: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  24: mov o1.y, r3.x
  25: mov o1.x, r1.z
  26: mov o1.z, r2.y
  27: mov o2.x, r1.x
  28: mov o3.x, r1.y
  29: mov o2.z, r2.z
  30: mov o3.z, r2.x
  31: mov o2.y, r3.y
  32: mov o3.y, r3.z
  33: mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  34: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  35: mov o5.xy, v3.xyxx
  36: mov o5.zw, l(0,0,0,0)
  37: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  38: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  39: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  40: mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  41: mov o7.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 171 math, 9 temp registers, 11 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_Normal0" to slot 5 sampler slot 8
Set 2D Texture "_Normal1" to slot 6 sampler slot 9
Set 2D Texture "_Normal2" to slot 7 sampler slot 10
Set 2D Texture "_Normal3" to slot 8 sampler slot 11
Set 2D Texture "_LightTexture0" to slot 9 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 10 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 11 sampler slot 1

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 224
  Float _NormalScale1 at 228
  Float _NormalScale2 at 232
  Float _NormalScale3 at 236
  Float _Metallic0 at 240
  Float _Metallic1 at 244
  Float _Metallic2 at 248
  Float _Metallic3 at 252
  Float _Smoothness0 at 256
  Float _Smoothness1 at 260
  Float _Smoothness2 at 264
  Float _Smoothness3 at 268
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[17], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture3d (float,float,float,float) t10
      dcl_resource_texturecube (float,float,float,float) t11
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[9].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s3
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s4
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[16].x
  22: sample r8.xyzw, r5.zwzz, t2.xyzw, s5
  23: mul r8.xyzw, r4.yyyy, r8.xyzw
  24: mul r8.w, r8.w, cb0[16].y
  25: add r7.xyzw, r7.xyzw, r8.xyzw
  26: sample r8.xyzw, r6.xyxx, t3.xyzw, s6
  27: mul r8.xyzw, r4.zzzz, r8.xyzw
  28: mul r8.w, r8.w, cb0[16].z
  29: add r7.xyzw, r7.xyzw, r8.xyzw
  30: sample r8.xyzw, r6.zwzz, t4.xyzw, s7
  31: mul r8.xyzw, r4.wwww, r8.xyzw
  32: mul r8.w, r8.w, cb0[16].w
  33: add r7.xyzw, r7.xyzw, r8.xyzw
  34: sample r8.xyzw, r5.xyxx, t5.xyzw, s8
  35: mul r8.x, r8.w, r8.x
  36: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  37: mul r8.xy, r5.xyxx, cb0[14].xxxx
  38: dp2 r2.w, r8.xyxx, r8.xyxx
  39: min r2.w, r2.w, l(1.000000)
  40: add r2.w, -r2.w, l(1.000000)
  41: sqrt r8.z, r2.w
  42: sample r5.xyzw, r5.zwzz, t6.xyzw, s9
  43: mul r5.x, r5.w, r5.x
  44: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  45: mul r5.xy, r5.xyxx, cb0[14].yyyy
  46: dp2 r2.w, r5.xyxx, r5.xyxx
  47: min r2.w, r2.w, l(1.000000)
  48: add r2.w, -r2.w, l(1.000000)
  49: sqrt r5.z, r2.w
  50: mul r5.xyz, r4.yyyy, r5.xyzx
  51: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  52: sample r8.xyzw, r6.xyxx, t7.xyzw, s10
  53: mul r8.x, r8.w, r8.x
  54: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  55: mul r8.xy, r6.xyxx, cb0[14].zzzz
  56: dp2 r2.w, r8.xyxx, r8.xyxx
  57: min r2.w, r2.w, l(1.000000)
  58: add r2.w, -r2.w, l(1.000000)
  59: sqrt r8.z, r2.w
  60: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  61: sample r6.xyzw, r6.zwzz, t8.xyzw, s11
  62: mul r6.x, r6.w, r6.x
  63: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  64: mul r6.xy, r6.xyxx, cb0[14].wwww
  65: dp2 r2.w, r6.xyxx, r6.xyxx
  66: min r2.w, r2.w, l(1.000000)
  67: add r2.w, -r2.w, l(1.000000)
  68: sqrt r6.z, r2.w
  69: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  70: dp4 r2.w, r4.xyzw, cb0[15].xyzw
  71: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  72: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  73: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  74: add r4.xyz, r4.xyzx, cb0[7].xyzx
  75: mov r6.x, cb4[9].z
  76: mov r6.y, cb4[10].z
  77: mov r6.z, cb4[11].z
  78: dp3 r2.x, r2.xyzx, r6.xyzx
  79: add r6.xyz, v4.xyzx, -cb3[25].xyzx
  80: dp3 r2.y, r6.xyzx, r6.xyzx
  81: sqrt r2.y, r2.y
  82: add r2.y, -r2.x, r2.y
  83: mad r2.x, cb3[25].w, r2.y, r2.x
  84: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  85: eq r2.y, cb5[0].x, l(1.000000)
  86: if_nz r2.y
  87:   eq r2.y, cb5[0].y, l(1.000000)
  88:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
  89:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
  90:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
  91:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  92:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
  93:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  94:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  95:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  96:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  97:   max r6.x, r2.z, r2.y
  98:   sample r6.xyzw, r6.xzwx, t10.xyzw, s0
  99: else 
 100:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 101: endif 
 102: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 103: add r6.xyz, v4.xyzx, -cb2[1].xyzx
 104: max r2.z, |r6.y|, |r6.x|
 105: max r2.z, |r6.z|, r2.z
 106: add r2.z, r2.z, -cb2[2].z
 107: max r2.z, r2.z, l(0.000010)
 108: mul r2.z, r2.z, cb2[2].w
 109: div r2.z, cb2[2].y, r2.z
 110: add r2.z, r2.z, -cb2[2].x
 111: add r2.z, -r2.z, l(1.000000)
 112: sample_c_lz r2.z, r6.xyzx, t11.xxxx, s1, r2.z
 113: add r3.w, -cb3[24].x, l(1.000000)
 114: mad r2.z, r2.z, r3.w, cb3[24].x
 115: add r2.y, -r2.z, r2.y
 116: mad r2.x, r2.x, r2.y, r2.z
 117: dp3 r2.y, r4.xyzx, r4.xyzx
 118: sample r4.xyzw, r2.yyyy, t9.xyzw, s2
 119: mul r2.x, r2.x, r4.x
 120: add r5.w, r5.z, l(0.000010)
 121: dp3 r4.x, v1.xyzx, r5.xywx
 122: dp3 r4.y, v2.xyzx, r5.xywx
 123: dp3 r4.z, v3.xyzx, r5.xywx
 124: dp3 r2.y, r4.xyzx, r4.xyzx
 125: rsq r2.y, r2.y
 126: mul r4.xyz, r2.yyyy, r4.xyzx
 127: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 128: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 129: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 130: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 131: mul r6.xyz, r2.wwww, r7.xyzx
 132: add r2.w, -r7.w, l(1.000000)
 133: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 134: dp3 r0.w, r0.xyzx, r0.xyzx
 135: max r0.w, r0.w, l(0.001000)
 136: rsq r0.w, r0.w
 137: mul r0.xyz, r0.wwww, r0.xyzx
 138: dp3 r0.w, r4.xyzx, r3.xyzx
 139: dp3_sat r3.x, r4.xyzx, r1.xyzx
 140: dp3_sat r3.y, r4.xyzx, r0.xyzx
 141: dp3_sat r0.x, r1.xyzx, r0.xyzx
 142: mul r0.y, r0.x, r0.x
 143: dp2 r0.y, r0.yyyy, r2.wwww
 144: add r0.y, r0.y, l(-0.500000)
 145: add r0.z, -r3.x, l(1.000000)
 146: mul r1.x, r0.z, r0.z
 147: mul r1.x, r1.x, r1.x
 148: mul r0.z, r0.z, r1.x
 149: mad r0.z, r0.y, r0.z, l(1.000000)
 150: add r1.x, -|r0.w|, l(1.000000)
 151: mul r1.y, r1.x, r1.x
 152: mul r1.y, r1.y, r1.y
 153: mul r1.x, r1.x, r1.y
 154: mad r0.y, r0.y, r1.x, l(1.000000)
 155: mul r0.y, r0.y, r0.z
 156: mul r0.z, r2.w, r2.w
 157: max r0.z, r0.z, l(0.002000)
 158: add r1.x, -r0.z, l(1.000000)
 159: mad r1.y, |r0.w|, r1.x, r0.z
 160: mad r1.x, r3.x, r1.x, r0.z
 161: mul r0.w, |r0.w|, r1.x
 162: mad r0.w, r3.x, r1.y, r0.w
 163: add r0.w, r0.w, l(0.000010)
 164: div r0.w, l(0.500000), r0.w
 165: mul r0.z, r0.z, r0.z
 166: mad r1.x, r3.y, r0.z, -r3.y
 167: mad r1.x, r1.x, r3.y, l(1.000000)
 168: mul r0.z, r0.z, l(0.318310)
 169: mad r1.x, r1.x, r1.x, l(0.000000)
 170: div r0.z, r0.z, r1.x
 171: mul r0.z, r0.z, r0.w
 172: mul r0.z, r0.z, l(3.141593)
 173: max r0.z, r0.z, l(0.000100)
 174: sqrt r0.z, r0.z
 175: mul r0.yz, r3.xxxx, r0.yyzy
 176: dp3 r0.w, r5.xyzx, r5.xyzx
 177: ne r0.w, r0.w, l(0.000000)
 178: and r0.w, r0.w, l(0x3f800000)
 179: mul r0.z, r0.w, r0.z
 180: mul r1.xyz, r0.yyyy, r2.xyzx
 181: mul r0.yzw, r2.xxyz, r0.zzzz
 182: add r0.x, -r0.x, l(1.000000)
 183: mul r2.x, r0.x, r0.x
 184: mul r2.x, r2.x, r2.x
 185: mul r0.x, r0.x, r2.x
 186: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 187: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 188: mul r0.xyz, r0.yzwy, r2.xyzx
 189: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 190: mul o0.xyz, r1.wwww, r0.xyzx
 191: mov o0.w, l(1.000000)
 192: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mul r1.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
   9: mad r1.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r1.xyxx
  10: mul r1.yzw, r1.yyyy, cb1[1].yyzx
  11: mad r1.xyz, cb1[0].yzxy, r1.xxxx, r1.yzwy
  12: dp3 r1.w, r1.xyzx, r1.xyzx
  13: rsq r1.w, r1.w
  14: mul r1.xyz, r1.wwww, r1.xyzx
  15: mul r2.xyz, v2.yyyy, cb1[1].zxyz
  16: mad r2.xyz, cb1[0].zxyz, v2.xxxx, r2.xyzx
  17: mad r2.xyz, cb1[2].zxyz, v2.zzzz, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: mul r3.xyz, r1.xyzx, r2.xyzx
  22: mad r3.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
  23: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  24: mov o1.y, r3.x
  25: mov o1.x, r1.z
  26: mov o1.z, r2.y
  27: mov o2.x, r1.x
  28: mov o3.x, r1.y
  29: mov o2.z, r2.z
  30: mov o3.z, r2.x
  31: mov o2.y, r3.y
  32: mov o3.y, r3.z
  33: mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  34: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  35: mov o5.xy, v3.xyxx
  36: mov o5.zw, l(0,0,0,0)
  37: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  38: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  39: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  40: mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  41: mov o7.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 177 math, 10 temp registers, 11 textures, 4 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_Normal0" to slot 5 sampler slot 8
Set 2D Texture "_Normal1" to slot 6 sampler slot 9
Set 2D Texture "_Normal2" to slot 7 sampler slot 10
Set 2D Texture "_Normal3" to slot 8 sampler slot 11
Set 2D Texture "_LightTexture0" to slot 9 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 10 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 11 sampler slot 1

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 224
  Float _NormalScale1 at 228
  Float _NormalScale2 at 232
  Float _NormalScale3 at 236
  Float _Metallic0 at 240
  Float _Metallic1 at 244
  Float _Metallic2 at 248
  Float _Metallic3 at 252
  Float _Smoothness0 at 256
  Float _Smoothness1 at 260
  Float _Smoothness2 at 264
  Float _Smoothness3 at 268
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[17], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture3d (float,float,float,float) t10
      dcl_resource_texturecube (float,float,float,float) t11
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_output o0.xyzw
      dcl_temps 10
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[9].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s3
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s4
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[16].x
  22: sample r8.xyzw, r5.zwzz, t2.xyzw, s5
  23: mul r8.xyzw, r4.yyyy, r8.xyzw
  24: mul r8.w, r8.w, cb0[16].y
  25: add r7.xyzw, r7.xyzw, r8.xyzw
  26: sample r8.xyzw, r6.xyxx, t3.xyzw, s6
  27: mul r8.xyzw, r4.zzzz, r8.xyzw
  28: mul r8.w, r8.w, cb0[16].z
  29: add r7.xyzw, r7.xyzw, r8.xyzw
  30: sample r8.xyzw, r6.zwzz, t4.xyzw, s7
  31: mul r8.xyzw, r4.wwww, r8.xyzw
  32: mul r8.w, r8.w, cb0[16].w
  33: add r7.xyzw, r7.xyzw, r8.xyzw
  34: sample r8.xyzw, r5.xyxx, t5.xyzw, s8
  35: mul r8.x, r8.w, r8.x
  36: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  37: mul r8.xy, r5.xyxx, cb0[14].xxxx
  38: dp2 r2.w, r8.xyxx, r8.xyxx
  39: min r2.w, r2.w, l(1.000000)
  40: add r2.w, -r2.w, l(1.000000)
  41: sqrt r8.z, r2.w
  42: sample r5.xyzw, r5.zwzz, t6.xyzw, s9
  43: mul r5.x, r5.w, r5.x
  44: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  45: mul r5.xy, r5.xyxx, cb0[14].yyyy
  46: dp2 r2.w, r5.xyxx, r5.xyxx
  47: min r2.w, r2.w, l(1.000000)
  48: add r2.w, -r2.w, l(1.000000)
  49: sqrt r5.z, r2.w
  50: mul r5.xyz, r4.yyyy, r5.xyzx
  51: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  52: sample r8.xyzw, r6.xyxx, t7.xyzw, s10
  53: mul r8.x, r8.w, r8.x
  54: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  55: mul r8.xy, r6.xyxx, cb0[14].zzzz
  56: dp2 r2.w, r8.xyxx, r8.xyxx
  57: min r2.w, r2.w, l(1.000000)
  58: add r2.w, -r2.w, l(1.000000)
  59: sqrt r8.z, r2.w
  60: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  61: sample r6.xyzw, r6.zwzz, t8.xyzw, s11
  62: mul r6.x, r6.w, r6.x
  63: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  64: mul r6.xy, r6.xyxx, cb0[14].wwww
  65: dp2 r2.w, r6.xyxx, r6.xyxx
  66: min r2.w, r2.w, l(1.000000)
  67: add r2.w, -r2.w, l(1.000000)
  68: sqrt r6.z, r2.w
  69: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  70: dp4 r2.w, r4.xyzw, cb0[15].xyzw
  71: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  72: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  73: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  74: add r4.xyz, r4.xyzx, cb0[7].xyzx
  75: mov r6.x, cb4[9].z
  76: mov r6.y, cb4[10].z
  77: mov r6.z, cb4[11].z
  78: dp3 r2.x, r2.xyzx, r6.xyzx
  79: add r6.xyz, v4.xyzx, -cb3[25].xyzx
  80: dp3 r2.y, r6.xyzx, r6.xyzx
  81: sqrt r2.y, r2.y
  82: add r2.y, -r2.x, r2.y
  83: mad r2.x, cb3[25].w, r2.y, r2.x
  84: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  85: eq r2.y, cb5[0].x, l(1.000000)
  86: if_nz r2.y
  87:   eq r2.y, cb5[0].y, l(1.000000)
  88:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
  89:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
  90:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
  91:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  92:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
  93:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  94:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  95:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  96:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  97:   max r6.x, r2.z, r2.y
  98:   sample r6.xyzw, r6.xzwx, t10.xyzw, s0
  99: else 
 100:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 101: endif 
 102: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 103: lt r2.z, r2.x, l(0.990000)
 104: if_nz r2.z
 105:   add r6.xyz, v4.xyzx, -cb2[1].xyzx
 106:   max r2.z, |r6.y|, |r6.x|
 107:   max r2.z, |r6.z|, r2.z
 108:   add r2.z, r2.z, -cb2[2].z
 109:   max r2.z, r2.z, l(0.000010)
 110:   mul r2.z, r2.z, cb2[2].w
 111:   div r2.z, cb2[2].y, r2.z
 112:   add r2.z, r2.z, -cb2[2].x
 113:   add r2.z, -r2.z, l(1.000000)
 114:   add r8.xyz, r6.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
 115:   sample_c_lz r8.x, r8.xyzx, t11.xxxx, s1, r2.z
 116:   add r9.xyz, r6.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
 117:   sample_c_lz r8.y, r9.xyzx, t11.xxxx, s1, r2.z
 118:   add r9.xyz, r6.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
 119:   sample_c_lz r8.z, r9.xyzx, t11.xxxx, s1, r2.z
 120:   add r6.xyz, r6.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
 121:   sample_c_lz r8.w, r6.xyzx, t11.xxxx, s1, r2.z
 122:   dp4 r2.z, r8.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
 123:   add r3.w, -cb3[24].x, l(1.000000)
 124:   mad r2.z, r2.z, r3.w, cb3[24].x
 125: else 
 126:   mov r2.z, l(1.000000)
 127: endif 
 128: add r2.y, -r2.z, r2.y
 129: mad r2.x, r2.x, r2.y, r2.z
 130: dp3 r2.y, r4.xyzx, r4.xyzx
 131: sample r4.xyzw, r2.yyyy, t9.xyzw, s2
 132: mul r2.x, r2.x, r4.x
 133: add r5.w, r5.z, l(0.000010)
 134: dp3 r4.x, v1.xyzx, r5.xywx
 135: dp3 r4.y, v2.xyzx, r5.xywx
 136: dp3 r4.z, v3.xyzx, r5.xywx
 137: dp3 r2.y, r4.xyzx, r4.xyzx
 138: rsq r2.y, r2.y
 139: mul r4.xyz, r2.yyyy, r4.xyzx
 140: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 141: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 142: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 143: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 144: mul r6.xyz, r2.wwww, r7.xyzx
 145: add r2.w, -r7.w, l(1.000000)
 146: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 147: dp3 r0.w, r0.xyzx, r0.xyzx
 148: max r0.w, r0.w, l(0.001000)
 149: rsq r0.w, r0.w
 150: mul r0.xyz, r0.wwww, r0.xyzx
 151: dp3 r0.w, r4.xyzx, r3.xyzx
 152: dp3_sat r3.x, r4.xyzx, r1.xyzx
 153: dp3_sat r3.y, r4.xyzx, r0.xyzx
 154: dp3_sat r0.x, r1.xyzx, r0.xyzx
 155: mul r0.y, r0.x, r0.x
 156: dp2 r0.y, r0.yyyy, r2.wwww
 157: add r0.y, r0.y, l(-0.500000)
 158: add r0.z, -r3.x, l(1.000000)
 159: mul r1.x, r0.z, r0.z
 160: mul r1.x, r1.x, r1.x
 161: mul r0.z, r0.z, r1.x
 162: mad r0.z, r0.y, r0.z, l(1.000000)
 163: add r1.x, -|r0.w|, l(1.000000)
 164: mul r1.y, r1.x, r1.x
 165: mul r1.y, r1.y, r1.y
 166: mul r1.x, r1.x, r1.y
 167: mad r0.y, r0.y, r1.x, l(1.000000)
 168: mul r0.y, r0.y, r0.z
 169: mul r0.z, r2.w, r2.w
 170: max r0.z, r0.z, l(0.002000)
 171: add r1.x, -r0.z, l(1.000000)
 172: mad r1.y, |r0.w|, r1.x, r0.z
 173: mad r1.x, r3.x, r1.x, r0.z
 174: mul r0.w, |r0.w|, r1.x
 175: mad r0.w, r3.x, r1.y, r0.w
 176: add r0.w, r0.w, l(0.000010)
 177: div r0.w, l(0.500000), r0.w
 178: mul r0.z, r0.z, r0.z
 179: mad r1.x, r3.y, r0.z, -r3.y
 180: mad r1.x, r1.x, r3.y, l(1.000000)
 181: mul r0.z, r0.z, l(0.318310)
 182: mad r1.x, r1.x, r1.x, l(0.000000)
 183: div r0.z, r0.z, r1.x
 184: mul r0.z, r0.z, r0.w
 185: mul r0.z, r0.z, l(3.141593)
 186: max r0.z, r0.z, l(0.000100)
 187: sqrt r0.z, r0.z
 188: mul r0.yz, r3.xxxx, r0.yyzy
 189: dp3 r0.w, r5.xyzx, r5.xyzx
 190: ne r0.w, r0.w, l(0.000000)
 191: and r0.w, r0.w, l(0x3f800000)
 192: mul r0.z, r0.w, r0.z
 193: mul r1.xyz, r0.yyyy, r2.xyzx
 194: mul r0.yzw, r2.xxyz, r0.zzzz
 195: add r0.x, -r0.x, l(1.000000)
 196: mul r2.x, r0.x, r0.x
 197: mul r2.x, r2.x, r2.x
 198: mul r0.x, r0.x, r2.x
 199: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 200: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 201: mul r0.xyz, r0.yzwy, r2.xyzx
 202: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 203: mul o0.xyz, r1.wwww, r0.xyzx
 204: mov o0.w, l(1.000000)
 205: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mul r1.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
   9: mad r1.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r1.xyxx
  10: mul r1.yzw, r1.yyyy, cb1[1].yyzx
  11: mad r1.xyz, cb1[0].yzxy, r1.xxxx, r1.yzwy
  12: dp3 r1.w, r1.xyzx, r1.xyzx
  13: rsq r1.w, r1.w
  14: mul r1.xyz, r1.wwww, r1.xyzx
  15: mul r2.xyz, v2.yyyy, cb1[1].zxyz
  16: mad r2.xyz, cb1[0].zxyz, v2.xxxx, r2.xyzx
  17: mad r2.xyz, cb1[2].zxyz, v2.zzzz, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: mul r3.xyz, r1.xyzx, r2.xyzx
  22: mad r3.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
  23: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  24: mov o1.y, r3.x
  25: mov o1.x, r1.z
  26: mov o1.z, r2.y
  27: mov o2.x, r1.x
  28: mov o3.x, r1.y
  29: mov o2.z, r2.z
  30: mov o3.z, r2.x
  31: mov o2.y, r3.y
  32: mov o3.y, r3.z
  33: mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  34: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  35: mov o5.xy, v3.xyxx
  36: mov o5.zw, l(0,0,0,0)
  37: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  38: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  39: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  40: mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  41: mov o7.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 172 math, 9 temp registers, 12 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 4
Set 2D Texture "_Splat0" to slot 1 sampler slot 5
Set 2D Texture "_Splat1" to slot 2 sampler slot 6
Set 2D Texture "_Splat2" to slot 3 sampler slot 7
Set 2D Texture "_Splat3" to slot 4 sampler slot 8
Set 2D Texture "_Normal0" to slot 5 sampler slot 9
Set 2D Texture "_Normal1" to slot 6 sampler slot 10
Set 2D Texture "_Normal2" to slot 7 sampler slot 11
Set 2D Texture "_Normal3" to slot 8 sampler slot 12
Set 2D Texture "_LightTextureB0" to slot 9 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 10 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 11 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 12 sampler slot 1

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 224
  Float _NormalScale1 at 228
  Float _NormalScale2 at 232
  Float _NormalScale3 at 236
  Float _Metallic0 at 240
  Float _Metallic1 at 244
  Float _Metallic2 at 248
  Float _Metallic3 at 252
  Float _Smoothness0 at 256
  Float _Smoothness1 at 260
  Float _Smoothness2 at 264
  Float _Smoothness3 at 268
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[17], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texturecube (float,float,float,float) t10
      dcl_resource_texture3d (float,float,float,float) t11
      dcl_resource_texturecube (float,float,float,float) t12
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[9].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s4
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s5
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[16].x
  22: sample r8.xyzw, r5.zwzz, t2.xyzw, s6
  23: mul r8.xyzw, r4.yyyy, r8.xyzw
  24: mul r8.w, r8.w, cb0[16].y
  25: add r7.xyzw, r7.xyzw, r8.xyzw
  26: sample r8.xyzw, r6.xyxx, t3.xyzw, s7
  27: mul r8.xyzw, r4.zzzz, r8.xyzw
  28: mul r8.w, r8.w, cb0[16].z
  29: add r7.xyzw, r7.xyzw, r8.xyzw
  30: sample r8.xyzw, r6.zwzz, t4.xyzw, s8
  31: mul r8.xyzw, r4.wwww, r8.xyzw
  32: mul r8.w, r8.w, cb0[16].w
  33: add r7.xyzw, r7.xyzw, r8.xyzw
  34: sample r8.xyzw, r5.xyxx, t5.xyzw, s9
  35: mul r8.x, r8.w, r8.x
  36: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  37: mul r8.xy, r5.xyxx, cb0[14].xxxx
  38: dp2 r2.w, r8.xyxx, r8.xyxx
  39: min r2.w, r2.w, l(1.000000)
  40: add r2.w, -r2.w, l(1.000000)
  41: sqrt r8.z, r2.w
  42: sample r5.xyzw, r5.zwzz, t6.xyzw, s10
  43: mul r5.x, r5.w, r5.x
  44: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  45: mul r5.xy, r5.xyxx, cb0[14].yyyy
  46: dp2 r2.w, r5.xyxx, r5.xyxx
  47: min r2.w, r2.w, l(1.000000)
  48: add r2.w, -r2.w, l(1.000000)
  49: sqrt r5.z, r2.w
  50: mul r5.xyz, r4.yyyy, r5.xyzx
  51: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  52: sample r8.xyzw, r6.xyxx, t7.xyzw, s11
  53: mul r8.x, r8.w, r8.x
  54: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  55: mul r8.xy, r6.xyxx, cb0[14].zzzz
  56: dp2 r2.w, r8.xyxx, r8.xyxx
  57: min r2.w, r2.w, l(1.000000)
  58: add r2.w, -r2.w, l(1.000000)
  59: sqrt r8.z, r2.w
  60: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  61: sample r6.xyzw, r6.zwzz, t8.xyzw, s12
  62: mul r6.x, r6.w, r6.x
  63: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  64: mul r6.xy, r6.xyxx, cb0[14].wwww
  65: dp2 r2.w, r6.xyxx, r6.xyxx
  66: min r2.w, r2.w, l(1.000000)
  67: add r2.w, -r2.w, l(1.000000)
  68: sqrt r6.z, r2.w
  69: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  70: dp4 r2.w, r4.xyzw, cb0[15].xyzw
  71: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  72: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  73: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  74: add r4.xyz, r4.xyzx, cb0[7].xyzx
  75: mov r6.x, cb4[9].z
  76: mov r6.y, cb4[10].z
  77: mov r6.z, cb4[11].z
  78: dp3 r2.x, r2.xyzx, r6.xyzx
  79: add r6.xyz, v4.xyzx, -cb3[25].xyzx
  80: dp3 r2.y, r6.xyzx, r6.xyzx
  81: sqrt r2.y, r2.y
  82: add r2.y, -r2.x, r2.y
  83: mad r2.x, cb3[25].w, r2.y, r2.x
  84: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  85: eq r2.y, cb5[0].x, l(1.000000)
  86: if_nz r2.y
  87:   eq r2.y, cb5[0].y, l(1.000000)
  88:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
  89:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
  90:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
  91:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  92:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
  93:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  94:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  95:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  96:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  97:   max r6.x, r2.z, r2.y
  98:   sample r6.xyzw, r6.xzwx, t11.xyzw, s0
  99: else 
 100:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 101: endif 
 102: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 103: add r6.xyz, v4.xyzx, -cb2[1].xyzx
 104: max r2.z, |r6.y|, |r6.x|
 105: max r2.z, |r6.z|, r2.z
 106: add r2.z, r2.z, -cb2[2].z
 107: max r2.z, r2.z, l(0.000010)
 108: mul r2.z, r2.z, cb2[2].w
 109: div r2.z, cb2[2].y, r2.z
 110: add r2.z, r2.z, -cb2[2].x
 111: add r2.z, -r2.z, l(1.000000)
 112: sample_c_lz r2.z, r6.xyzx, t12.xxxx, s1, r2.z
 113: add r3.w, -cb3[24].x, l(1.000000)
 114: mad r2.z, r2.z, r3.w, cb3[24].x
 115: add r2.y, -r2.z, r2.y
 116: mad r2.x, r2.x, r2.y, r2.z
 117: dp3 r2.y, r4.xyzx, r4.xyzx
 118: sample r6.xyzw, r2.yyyy, t9.xyzw, s3
 119: sample r4.xyzw, r4.xyzx, t10.xyzw, s2
 120: mul r2.y, r4.w, r6.x
 121: mul r2.x, r2.x, r2.y
 122: add r5.w, r5.z, l(0.000010)
 123: dp3 r4.x, v1.xyzx, r5.xywx
 124: dp3 r4.y, v2.xyzx, r5.xywx
 125: dp3 r4.z, v3.xyzx, r5.xywx
 126: dp3 r2.y, r4.xyzx, r4.xyzx
 127: rsq r2.y, r2.y
 128: mul r4.xyz, r2.yyyy, r4.xyzx
 129: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 130: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 131: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 132: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 133: mul r6.xyz, r2.wwww, r7.xyzx
 134: add r2.w, -r7.w, l(1.000000)
 135: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 136: dp3 r0.w, r0.xyzx, r0.xyzx
 137: max r0.w, r0.w, l(0.001000)
 138: rsq r0.w, r0.w
 139: mul r0.xyz, r0.wwww, r0.xyzx
 140: dp3 r0.w, r4.xyzx, r3.xyzx
 141: dp3_sat r3.x, r4.xyzx, r1.xyzx
 142: dp3_sat r3.y, r4.xyzx, r0.xyzx
 143: dp3_sat r0.x, r1.xyzx, r0.xyzx
 144: mul r0.y, r0.x, r0.x
 145: dp2 r0.y, r0.yyyy, r2.wwww
 146: add r0.y, r0.y, l(-0.500000)
 147: add r0.z, -r3.x, l(1.000000)
 148: mul r1.x, r0.z, r0.z
 149: mul r1.x, r1.x, r1.x
 150: mul r0.z, r0.z, r1.x
 151: mad r0.z, r0.y, r0.z, l(1.000000)
 152: add r1.x, -|r0.w|, l(1.000000)
 153: mul r1.y, r1.x, r1.x
 154: mul r1.y, r1.y, r1.y
 155: mul r1.x, r1.x, r1.y
 156: mad r0.y, r0.y, r1.x, l(1.000000)
 157: mul r0.y, r0.y, r0.z
 158: mul r0.z, r2.w, r2.w
 159: max r0.z, r0.z, l(0.002000)
 160: add r1.x, -r0.z, l(1.000000)
 161: mad r1.y, |r0.w|, r1.x, r0.z
 162: mad r1.x, r3.x, r1.x, r0.z
 163: mul r0.w, |r0.w|, r1.x
 164: mad r0.w, r3.x, r1.y, r0.w
 165: add r0.w, r0.w, l(0.000010)
 166: div r0.w, l(0.500000), r0.w
 167: mul r0.z, r0.z, r0.z
 168: mad r1.x, r3.y, r0.z, -r3.y
 169: mad r1.x, r1.x, r3.y, l(1.000000)
 170: mul r0.z, r0.z, l(0.318310)
 171: mad r1.x, r1.x, r1.x, l(0.000000)
 172: div r0.z, r0.z, r1.x
 173: mul r0.z, r0.z, r0.w
 174: mul r0.z, r0.z, l(3.141593)
 175: max r0.z, r0.z, l(0.000100)
 176: sqrt r0.z, r0.z
 177: mul r0.yz, r3.xxxx, r0.yyzy
 178: dp3 r0.w, r5.xyzx, r5.xyzx
 179: ne r0.w, r0.w, l(0.000000)
 180: and r0.w, r0.w, l(0x3f800000)
 181: mul r0.z, r0.w, r0.z
 182: mul r1.xyz, r0.yyyy, r2.xyzx
 183: mul r0.yzw, r2.xxyz, r0.zzzz
 184: add r0.x, -r0.x, l(1.000000)
 185: mul r2.x, r0.x, r0.x
 186: mul r2.x, r2.x, r2.x
 187: mul r0.x, r0.x, r2.x
 188: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 189: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 190: mul r0.xyz, r0.yzwy, r2.xyzx
 191: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 192: mul o0.xyz, r1.wwww, r0.xyzx
 193: mov o0.w, l(1.000000)
 194: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[8], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   5: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   6: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   7: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   8: mul r1.xy, v2.zxzz, l(0.000000, 1.000000, 0.000000, 0.000000)
   9: mad r1.xy, v2.yzyy, l(1.000000, 0.000000, 0.000000, 0.000000), -r1.xyxx
  10: mul r1.yzw, r1.yyyy, cb1[1].yyzx
  11: mad r1.xyz, cb1[0].yzxy, r1.xxxx, r1.yzwy
  12: dp3 r1.w, r1.xyzx, r1.xyzx
  13: rsq r1.w, r1.w
  14: mul r1.xyz, r1.wwww, r1.xyzx
  15: mul r2.xyz, v2.yyyy, cb1[1].zxyz
  16: mad r2.xyz, cb1[0].zxyz, v2.xxxx, r2.xyzx
  17: mad r2.xyz, cb1[2].zxyz, v2.zzzz, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: mul r3.xyz, r1.xyzx, r2.xyzx
  22: mad r3.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
  23: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  24: mov o1.y, r3.x
  25: mov o1.x, r1.z
  26: mov o1.z, r2.y
  27: mov o2.x, r1.x
  28: mov o3.x, r1.y
  29: mov o2.z, r2.z
  30: mov o3.z, r2.x
  31: mov o2.y, r3.y
  32: mov o3.y, r3.z
  33: mad o4.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
  34: mad r0.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
  35: mov o5.xy, v3.xyxx
  36: mov o5.zw, l(0,0,0,0)
  37: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  38: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  39: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  40: mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  41: mov o7.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 178 math, 10 temp registers, 12 textures, 4 branches
Set 2D Texture "_Control" to slot 0 sampler slot 4
Set 2D Texture "_Splat0" to slot 1 sampler slot 5
Set 2D Texture "_Splat1" to slot 2 sampler slot 6
Set 2D Texture "_Splat2" to slot 3 sampler slot 7
Set 2D Texture "_Splat3" to slot 4 sampler slot 8
Set 2D Texture "_Normal0" to slot 5 sampler slot 9
Set 2D Texture "_Normal1" to slot 6 sampler slot 10
Set 2D Texture "_Normal2" to slot 7 sampler slot 11
Set 2D Texture "_Normal3" to slot 8 sampler slot 12
Set 2D Texture "_LightTextureB0" to slot 9 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 10 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 11 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 12 sampler slot 1

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 224
  Float _NormalScale1 at 228
  Float _NormalScale2 at 232
  Float _NormalScale3 at 236
  Float _Metallic0 at 240
  Float _Metallic1 at 244
  Float _Metallic2 at 248
  Float _Metallic3 at 252
  Float _Smoothness0 at 256
  Float _Smoothness1 at 260
  Float _Smoothness2 at 264
  Float _Smoothness3 at 268
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[17], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texturecube (float,float,float,float) t10
      dcl_resource_texture3d (float,float,float,float) t11
      dcl_resource_texturecube (float,float,float,float) t12
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_output o0.xyzw
      dcl_temps 10
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[9].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s4
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s5
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[16].x
  22: sample r8.xyzw, r5.zwzz, t2.xyzw, s6
  23: mul r8.xyzw, r4.yyyy, r8.xyzw
  24: mul r8.w, r8.w, cb0[16].y
  25: add r7.xyzw, r7.xyzw, r8.xyzw
  26: sample r8.xyzw, r6.xyxx, t3.xyzw, s7
  27: mul r8.xyzw, r4.zzzz, r8.xyzw
  28: mul r8.w, r8.w, cb0[16].z
  29: add r7.xyzw, r7.xyzw, r8.xyzw
  30: sample r8.xyzw, r6.zwzz, t4.xyzw, s8
  31: mul r8.xyzw, r4.wwww, r8.xyzw
  32: mul r8.w, r8.w, cb0[16].w
  33: add r7.xyzw, r7.xyzw, r8.xyzw
  34: sample r8.xyzw, r5.xyxx, t5.xyzw, s9
  35: mul r8.x, r8.w, r8.x
  36: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  37: mul r8.xy, r5.xyxx, cb0[14].xxxx
  38: dp2 r2.w, r8.xyxx, r8.xyxx
  39: min r2.w, r2.w, l(1.000000)
  40: add r2.w, -r2.w, l(1.000000)
  41: sqrt r8.z, r2.w
  42: sample r5.xyzw, r5.zwzz, t6.xyzw, s10
  43: mul r5.x, r5.w, r5.x
  44: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  45: mul r5.xy, r5.xyxx, cb0[14].yyyy
  46: dp2 r2.w, r5.xyxx, r5.xyxx
  47: min r2.w, r2.w, l(1.000000)
  48: add r2.w, -r2.w, l(1.000000)
  49: sqrt r5.z, r2.w
  50: mul r5.xyz, r4.yyyy, r5.xyzx
  51: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  52: sample r8.xyzw, r6.xyxx, t7.xyzw, s11
  53: mul r8.x, r8.w, r8.x
  54: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  55: mul r8.xy, r6.xyxx, cb0[14].zzzz
  56: dp2 r2.w, r8.xyxx, r8.xyxx
  57: min r2.w, r2.w, l(1.000000)
  58: add r2.w, -r2.w, l(1.000000)
  59: sqrt r8.z, r2.w
  60: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  61: sample r6.xyzw, r6.zwzz, t8.xyzw, s12
  62: mul r6.x, r6.w, r6.x
  63: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  64: mul r6.xy, r6.xyxx, cb0[14].wwww
  65: dp2 r2.w, r6.xyxx, r6.xyxx
  66: min r2.w, r2.w, l(1.000000)
  67: add r2.w, -r2.w, l(1.000000)
  68: sqrt r6.z, r2.w
  69: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  70: dp4 r2.w, r4.xyzw, cb0[15].xyzw
  71: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  72: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  73: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  74: add r4.xyz, r4.xyzx, cb0[7].xyzx
  75: mov r6.x, cb4[9].z
  76: mov r6.y, cb4[10].z
  77: mov r6.z, cb4[11].z
  78: dp3 r2.x, r2.xyzx, r6.xyzx
  79: add r6.xyz, v4.xyzx, -cb3[25].xyzx
  80: dp3 r2.y, r6.xyzx, r6.xyzx
  81: sqrt r2.y, r2.y
  82: add r2.y, -r2.x, r2.y
  83: mad r2.x, cb3[25].w, r2.y, r2.x
  84: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  85: eq r2.y, cb5[0].x, l(1.000000)
  86: if_nz r2.y
  87:   eq r2.y, cb5[0].y, l(1.000000)
  88:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
  89:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
  90:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
  91:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  92:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
  93:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  94:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  95:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  96:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  97:   max r6.x, r2.z, r2.y
  98:   sample r6.xyzw, r6.xzwx, t11.xyzw, s0
  99: else 
 100:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 101: endif 
 102: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 103: lt r2.z, r2.x, l(0.990000)
 104: if_nz r2.z
 105:   add r6.xyz, v4.xyzx, -cb2[1].xyzx
 106:   max r2.z, |r6.y|, |r6.x|
 107:   max r2.z, |r6.z|, r2.z
 108:   add r2.z, r2.z, -cb2[2].z
 109:   max r2.z, r2.z, l(0.000010)
 110:   mul r2.z, r2.z, cb2[2].w
 111:   div r2.z, cb2[2].y, r2.z
 112:   add r2.z, r2.z, -cb2[2].x
 113:   add r2.z, -r2.z, l(1.000000)
 114:   add r8.xyz, r6.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
 115:   sample_c_lz r8.x, r8.xyzx, t12.xxxx, s1, r2.z
 116:   add r9.xyz, r6.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
 117:   sample_c_lz r8.y, r9.xyzx, t12.xxxx, s1, r2.z
 118:   add r9.xyz, r6.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
 119:   sample_c_lz r8.z, r9.xyzx, t12.xxxx, s1, r2.z
 120:   add r6.xyz, r6.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
 121:   sample_c_lz r8.w, r6.xyzx, t12.xxxx, s1, r2.z
 122:   dp4 r2.z, r8.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
 123:   add r3.w, -cb3[24].x, l(1.000000)
 124:   mad r2.z, r2.z, r3.w, cb3[24].x
 125: else 
 126:   mov r2.z, l(1.000000)
 127: endif 
 128: add r2.y, -r2.z, r2.y
 129: mad r2.x, r2.x, r2.y, r2.z
 130: dp3 r2.y, r4.xyzx, r4.xyzx
 131: sample r6.xyzw, r2.yyyy, t9.xyzw, s3
 132: sample r4.xyzw, r4.xyzx, t10.xyzw, s2
 133: mul r2.y, r4.w, r6.x
 134: mul r2.x, r2.x, r2.y
 135: add r5.w, r5.z, l(0.000010)
 136: dp3 r4.x, v1.xyzx, r5.xywx
 137: dp3 r4.y, v2.xyzx, r5.xywx
 138: dp3 r4.z, v3.xyzx, r5.xywx
 139: dp3 r2.y, r4.xyzx, r4.xyzx
 140: rsq r2.y, r2.y
 141: mul r4.xyz, r2.yyyy, r4.xyzx
 142: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 143: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 144: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 145: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 146: mul r6.xyz, r2.wwww, r7.xyzx
 147: add r2.w, -r7.w, l(1.000000)
 148: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 149: dp3 r0.w, r0.xyzx, r0.xyzx
 150: max r0.w, r0.w, l(0.001000)
 151: rsq r0.w, r0.w
 152: mul r0.xyz, r0.wwww, r0.xyzx
 153: dp3 r0.w, r4.xyzx, r3.xyzx
 154: dp3_sat r3.x, r4.xyzx, r1.xyzx
 155: dp3_sat r3.y, r4.xyzx, r0.xyzx
 156: dp3_sat r0.x, r1.xyzx, r0.xyzx
 157: mul r0.y, r0.x, r0.x
 158: dp2 r0.y, r0.yyyy, r2.wwww
 159: add r0.y, r0.y, l(-0.500000)
 160: add r0.z, -r3.x, l(1.000000)
 161: mul r1.x, r0.z, r0.z
 162: mul r1.x, r1.x, r1.x
 163: mul r0.z, r0.z, r1.x
 164: mad r0.z, r0.y, r0.z, l(1.000000)
 165: add r1.x, -|r0.w|, l(1.000000)
 166: mul r1.y, r1.x, r1.x
 167: mul r1.y, r1.y, r1.y
 168: mul r1.x, r1.x, r1.y
 169: mad r0.y, r0.y, r1.x, l(1.000000)
 170: mul r0.y, r0.y, r0.z
 171: mul r0.z, r2.w, r2.w
 172: max r0.z, r0.z, l(0.002000)
 173: add r1.x, -r0.z, l(1.000000)
 174: mad r1.y, |r0.w|, r1.x, r0.z
 175: mad r1.x, r3.x, r1.x, r0.z
 176: mul r0.w, |r0.w|, r1.x
 177: mad r0.w, r3.x, r1.y, r0.w
 178: add r0.w, r0.w, l(0.000010)
 179: div r0.w, l(0.500000), r0.w
 180: mul r0.z, r0.z, r0.z
 181: mad r1.x, r3.y, r0.z, -r3.y
 182: mad r1.x, r1.x, r3.y, l(1.000000)
 183: mul r0.z, r0.z, l(0.318310)
 184: mad r1.x, r1.x, r1.x, l(0.000000)
 185: div r0.z, r0.z, r1.x
 186: mul r0.z, r0.z, r0.w
 187: mul r0.z, r0.z, l(3.141593)
 188: max r0.z, r0.z, l(0.000100)
 189: sqrt r0.z, r0.z
 190: mul r0.yz, r3.xxxx, r0.yyzy
 191: dp3 r0.w, r5.xyzx, r5.xyzx
 192: ne r0.w, r0.w, l(0.000000)
 193: and r0.w, r0.w, l(0x3f800000)
 194: mul r0.z, r0.w, r0.z
 195: mul r1.xyz, r0.yyyy, r2.xyzx
 196: mul r0.yzw, r2.xxyz, r0.zzzz
 197: add r0.x, -r0.x, l(1.000000)
 198: mul r2.x, r0.x, r0.x
 199: mul r2.x, r2.x, r2.x
 200: mul r0.x, r0.x, r2.x
 201: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 202: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 203: mul r0.xyz, r0.yzwy, r2.xyzx
 204: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 205: mul o0.xyz, r1.wwww, r0.xyzx
 206: mov o0.w, l(1.000000)
 207: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _TerrainHeightmapRecipSize at 224
  Vector4 _TerrainHeightmapScale at 240
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[14].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[14].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[15].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[15].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: dp3 r1.x, cb1[1].xyzx, cb1[1].xyzx
  21: rsq r1.x, r1.x
  22: mul r1.xyz, r1.xxxx, cb1[1].zxyz
  23: dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
  24: rsq r1.w, r1.w
  25: mul r2.xyz, r1.wwww, cb1[0].yzxy
  26: mul r3.xyz, r1.xyzx, r2.xyzx
  27: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  28: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  29: mov o1.y, r3.x
  30: mov o1.x, r2.z
  31: mov o1.z, r1.y
  32: mov o2.x, r2.x
  33: mov o3.x, r2.y
  34: mov o2.z, r1.z
  35: mov o3.z, r1.x
  36: mov o2.y, r3.y
  37: mov o3.y, r3.z
  38: mov o4.xyz, r0.xyzx
  39: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  40: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  41: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  42: mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  43: mov o7.xyzw, l(0,0,0,0)
  44: mov o8.x, v8.x
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 27 math, 3 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// SV_InstanceID            0   x           7     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.x
      dcl_temps 3
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: mov o4.xyz, r0.xyzx
  21: dp3 r0.x, cb1[1].xyzx, cb1[1].xyzx
  22: rsq r0.x, r0.x
  23: mul r0.xyz, r0.xxxx, cb1[1].zxyz
  24: dp3 r0.w, cb1[0].xyzx, cb1[0].xyzx
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, cb1[0].yzxy
  27: mul r2.xyz, r0.xyzx, r1.xyzx
  28: mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
  29: mul r2.xyz, r2.xyzx, -cb1[9].wwww
  30: mov o1.y, r2.x
  31: mov o1.x, r1.z
  32: mov o1.z, r0.y
  33: mov o2.x, r1.x
  34: mov o3.x, r1.y
  35: mov o2.z, r0.z
  36: mov o3.z, r0.x
  37: mov o2.y, r2.y
  38: mov o3.y, r2.z
  39: mov o6.xyzw, l(0,0,0,0)
  40: mov o7.x, v8.x
  41: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SPOT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _TerrainHeightmapRecipSize at 224
  Vector4 _TerrainHeightmapScale at 240
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[14].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[14].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[15].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[15].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: dp3 r1.x, cb1[1].xyzx, cb1[1].xyzx
  21: rsq r1.x, r1.x
  22: mul r1.xyz, r1.xxxx, cb1[1].zxyz
  23: dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
  24: rsq r1.w, r1.w
  25: mul r2.xyz, r1.wwww, cb1[0].yzxy
  26: mul r3.xyz, r1.xyzx, r2.xyzx
  27: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  28: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  29: mov o1.y, r3.x
  30: mov o1.x, r2.z
  31: mov o1.z, r1.y
  32: mov o2.x, r2.x
  33: mov o3.x, r2.y
  34: mov o2.z, r1.z
  35: mov o3.z, r1.x
  36: mov o2.y, r3.y
  37: mov o3.y, r3.z
  38: mov o4.xyz, r0.xyzx
  39: mul r1.xyzw, r0.yyyy, cb0[5].xyzw
  40: mad r1.xyzw, cb0[4].xyzw, r0.xxxx, r1.xyzw
  41: mad r1.xyzw, cb0[6].xyzw, r0.zzzz, r1.xyzw
  42: mad o6.xyzw, cb0[7].xyzw, r0.wwww, r1.xyzw
  43: mov o7.xyzw, l(0,0,0,0)
  44: mov o8.x, v8.x
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT_COOKIE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _TerrainHeightmapRecipSize at 224
  Vector4 _TerrainHeightmapScale at 240
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[14].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[14].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[15].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[15].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: dp3 r1.x, cb1[1].xyzx, cb1[1].xyzx
  21: rsq r1.x, r1.x
  22: mul r1.xyz, r1.xxxx, cb1[1].zxyz
  23: dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
  24: rsq r1.w, r1.w
  25: mul r2.xyz, r1.wwww, cb1[0].yzxy
  26: mul r3.xyz, r1.xyzx, r2.xyzx
  27: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  28: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  29: mov o1.y, r3.x
  30: mov o1.x, r2.z
  31: mov o1.z, r1.y
  32: mov o2.x, r2.x
  33: mov o3.x, r2.y
  34: mov o2.z, r1.z
  35: mov o3.z, r1.x
  36: mov o2.y, r3.y
  37: mov o3.y, r3.z
  38: mov o4.xyz, r0.xyzx
  39: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  40: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  41: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  42: mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  43: mov o7.xyzw, l(0,0,0,0)
  44: mov o8.x, v8.x
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE INSTANCING_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _TerrainHeightmapRecipSize at 224
  Vector4 _TerrainHeightmapScale at 240
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xy
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[14].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[14].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[15].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[15].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: dp3 r1.x, cb1[1].xyzx, cb1[1].xyzx
  21: rsq r1.x, r1.x
  22: mul r1.xyz, r1.xxxx, cb1[1].zxyz
  23: dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
  24: rsq r1.w, r1.w
  25: mul r2.xyz, r1.wwww, cb1[0].yzxy
  26: mul r3.xyz, r1.xyzx, r2.xyzx
  27: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  28: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  29: mov o1.y, r3.x
  30: mov o1.x, r2.z
  31: mov o1.z, r1.y
  32: mov o2.x, r2.x
  33: mov o3.x, r2.y
  34: mov o2.z, r1.z
  35: mov o3.z, r1.x
  36: mov o2.y, r3.y
  37: mov o3.y, r3.z
  38: mov o4.xyz, r0.xyzx
  39: mul r1.xy, r0.yyyy, cb0[5].xyxx
  40: mad r0.xy, cb0[4].xyxx, r0.xxxx, r1.xyxx
  41: mad r0.xy, cb0[6].xyxx, r0.zzzz, r0.xyxx
  42: mad o6.xy, cb0[7].xyxx, r0.wwww, r0.xyxx
  43: mov o7.xyzw, l(0,0,0,0)
  44: mov o8.x, v8.x
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_DEPTH SPOT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _TerrainHeightmapRecipSize at 224
  Vector4 _TerrainHeightmapScale at 240
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[14].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[14].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[15].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[15].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: dp3 r1.x, cb1[1].xyzx, cb1[1].xyzx
  21: rsq r1.x, r1.x
  22: mul r1.xyz, r1.xxxx, cb1[1].zxyz
  23: dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
  24: rsq r1.w, r1.w
  25: mul r2.xyz, r1.wwww, cb1[0].yzxy
  26: mul r3.xyz, r1.xyzx, r2.xyzx
  27: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  28: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  29: mov o1.y, r3.x
  30: mov o1.x, r2.z
  31: mov o1.z, r1.y
  32: mov o2.x, r2.x
  33: mov o3.x, r2.y
  34: mov o2.z, r1.z
  35: mov o3.z, r1.x
  36: mov o2.y, r3.y
  37: mov o3.y, r3.z
  38: mov o4.xyz, r0.xyzx
  39: mul r1.xyzw, r0.yyyy, cb0[5].xyzw
  40: mad r1.xyzw, cb0[4].xyzw, r0.xxxx, r1.xyzw
  41: mad r1.xyzw, cb0[6].xyzw, r0.zzzz, r1.xyzw
  42: mad o6.xyzw, cb0[7].xyzw, r0.wwww, r1.xyzw
  43: mov o7.xyzw, l(0,0,0,0)
  44: mov o8.x, v8.x
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_DEPTH SHADOWS_SOFT SPOT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (368 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 144
  Vector4 _TerrainHeightmapRecipSize at 304
  Vector4 _TerrainHeightmapScale at 320
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[21], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[19].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[19].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[20].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[20].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: dp3 r1.x, cb1[1].xyzx, cb1[1].xyzx
  21: rsq r1.x, r1.x
  22: mul r1.xyz, r1.xxxx, cb1[1].zxyz
  23: dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
  24: rsq r1.w, r1.w
  25: mul r2.xyz, r1.wwww, cb1[0].yzxy
  26: mul r3.xyz, r1.xyzx, r2.xyzx
  27: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  28: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  29: mov o1.y, r3.x
  30: mov o1.x, r2.z
  31: mov o1.z, r1.y
  32: mov o2.x, r2.x
  33: mov o3.x, r2.y
  34: mov o2.z, r1.z
  35: mov o3.z, r1.x
  36: mov o2.y, r3.y
  37: mov o3.y, r3.z
  38: mov o4.xyz, r0.xyzx
  39: mul r1.xyzw, r0.yyyy, cb0[10].xyzw
  40: mad r1.xyzw, cb0[9].xyzw, r0.xxxx, r1.xyzw
  41: mad r1.xyzw, cb0[11].xyzw, r0.zzzz, r1.xyzw
  42: mad o6.xyzw, cb0[12].xyzw, r0.wwww, r1.xyzw
  43: mov o7.xyzw, l(0,0,0,0)
  44: mov o8.x, v8.x
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 4 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 5 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// SV_InstanceID            0   x           7     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb4[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb5[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb5[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  10: add r0.yz, v0.xxyx, cb5[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb5[r0.x + 0].zzzz
  13: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb2[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb2[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  17: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  19: mad r1.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  20: mov o4.xyz, r0.xyzx
  21: mov o0.xyzw, r1.xyzw
  22: dp3 r0.x, cb2[1].xyzx, cb2[1].xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, cb2[1].zxyz
  25: dp3 r0.w, cb2[0].xyzx, cb2[0].xyzx
  26: rsq r0.w, r0.w
  27: mul r2.xyz, r0.wwww, cb2[0].yzxy
  28: mul r3.xyz, r0.xyzx, r2.xyzx
  29: mad r3.xyz, r0.zxyz, r2.yzxy, -r3.xyzx
  30: mul r3.xyz, r3.xyzx, -cb2[9].wwww
  31: mov o1.y, r3.x
  32: mov o1.x, r2.z
  33: mov o1.z, r0.y
  34: mov o2.x, r2.x
  35: mov o3.x, r2.y
  36: mov o2.z, r0.z
  37: mov o3.z, r0.x
  38: mov o2.y, r3.y
  39: mov o3.y, r3.z
  40: mul r0.x, r1.y, cb1[5].x
  41: mul r0.w, r0.x, l(0.500000)
  42: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  43: mov o6.zw, r1.zzzw
  44: add o6.xy, r0.zzzz, r0.xwxx
  45: mov o7.x, v8.x
  46: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE INSTANCING_ON SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 5 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _TerrainHeightmapRecipSize at 224
  Vector4 _TerrainHeightmapScale at 240
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 4 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 5 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xy
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 5
   0: iadd r0.x, v8.x, cb4[0].x
   1: mul r1.xyzw, cb0[14].xyzw, cb5[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb5[r0.x + 0].xyxy
   3: mad r0.yz, cb0[14].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[15].y
   9: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  10: add r0.yz, v0.xxyx, cb5[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[15].xxzx
  12: mul r0.xy, r0.yzyy, cb5[r0.x + 0].zzzz
  13: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb2[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb2[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  17: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  19: mad r1.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  20: mov o0.xyzw, r1.xyzw
  21: dp3 r2.x, cb2[1].xyzx, cb2[1].xyzx
  22: rsq r2.x, r2.x
  23: mul r2.xyz, r2.xxxx, cb2[1].zxyz
  24: dp3 r2.w, cb2[0].xyzx, cb2[0].xyzx
  25: rsq r2.w, r2.w
  26: mul r3.xyz, r2.wwww, cb2[0].yzxy
  27: mul r4.xyz, r2.xyzx, r3.xyzx
  28: mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
  29: mul r4.xyz, r4.xyzx, -cb2[9].wwww
  30: mov o1.y, r4.x
  31: mov o1.x, r3.z
  32: mov o1.z, r2.y
  33: mov o2.x, r3.x
  34: mov o3.x, r3.y
  35: mov o2.z, r2.z
  36: mov o3.z, r2.x
  37: mov o2.y, r4.y
  38: mov o3.y, r4.z
  39: mov o4.xyz, r0.xyzx
  40: mul r2.xy, r0.yyyy, cb0[5].xyxx
  41: mad r0.xy, cb0[4].xyxx, r0.xxxx, r2.xyxx
  42: mad r0.xy, cb0[6].xyxx, r0.zzzz, r0.xyxx
  43: mad o6.xy, cb0[7].xyxx, r0.wwww, r0.xyxx
  44: mul r0.x, r1.y, cb1[5].x
  45: mul r0.w, r0.x, l(0.500000)
  46: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  47: mov o7.zw, r1.zzzw
  48: add o7.xy, r0.zzzz, r0.xwxx
  49: mov o8.x, v8.x
  50: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT SHADOWS_CUBE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _TerrainHeightmapRecipSize at 224
  Vector4 _TerrainHeightmapScale at 240
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[14].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[14].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[15].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[15].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: dp3 r1.x, cb1[1].xyzx, cb1[1].xyzx
  21: rsq r1.x, r1.x
  22: mul r1.xyz, r1.xxxx, cb1[1].zxyz
  23: dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
  24: rsq r1.w, r1.w
  25: mul r2.xyz, r1.wwww, cb1[0].yzxy
  26: mul r3.xyz, r1.xyzx, r2.xyzx
  27: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  28: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  29: mov o1.y, r3.x
  30: mov o1.x, r2.z
  31: mov o1.z, r1.y
  32: mov o2.x, r2.x
  33: mov o3.x, r2.y
  34: mov o2.z, r1.z
  35: mov o3.z, r1.x
  36: mov o2.y, r3.y
  37: mov o3.y, r3.z
  38: mov o4.xyz, r0.xyzx
  39: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  40: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  41: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  42: mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  43: mov o7.xyzw, l(0,0,0,0)
  44: mov o8.x, v8.x
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _TerrainHeightmapRecipSize at 224
  Vector4 _TerrainHeightmapScale at 240
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[14].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[14].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[15].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[15].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: dp3 r1.x, cb1[1].xyzx, cb1[1].xyzx
  21: rsq r1.x, r1.x
  22: mul r1.xyz, r1.xxxx, cb1[1].zxyz
  23: dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
  24: rsq r1.w, r1.w
  25: mul r2.xyz, r1.wwww, cb1[0].yzxy
  26: mul r3.xyz, r1.xyzx, r2.xyzx
  27: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  28: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  29: mov o1.y, r3.x
  30: mov o1.x, r2.z
  31: mov o1.z, r1.y
  32: mov o2.x, r2.x
  33: mov o3.x, r2.y
  34: mov o2.z, r1.z
  35: mov o3.z, r1.x
  36: mov o2.y, r3.y
  37: mov o3.y, r3.z
  38: mov o4.xyz, r0.xyzx
  39: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  40: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  41: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  42: mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  43: mov o7.xyzw, l(0,0,0,0)
  44: mov o8.x, v8.x
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT_COOKIE SHADOWS_CUBE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _TerrainHeightmapRecipSize at 224
  Vector4 _TerrainHeightmapScale at 240
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[14].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[14].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[15].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[15].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: dp3 r1.x, cb1[1].xyzx, cb1[1].xyzx
  21: rsq r1.x, r1.x
  22: mul r1.xyz, r1.xxxx, cb1[1].zxyz
  23: dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
  24: rsq r1.w, r1.w
  25: mul r2.xyz, r1.wwww, cb1[0].yzxy
  26: mul r3.xyz, r1.xyzx, r2.xyzx
  27: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  28: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  29: mov o1.y, r3.x
  30: mov o1.x, r2.z
  31: mov o1.z, r1.y
  32: mov o2.x, r2.x
  33: mov o3.x, r2.y
  34: mov o2.z, r1.z
  35: mov o3.z, r1.x
  36: mov o2.y, r3.y
  37: mov o3.y, r3.z
  38: mov o4.xyz, r0.xyzx
  39: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  40: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  41: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  42: mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  43: mov o7.xyzw, l(0,0,0,0)
  44: mov o8.x, v8.x
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _TerrainHeightmapRecipSize at 224
  Vector4 _TerrainHeightmapScale at 240
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[14].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[14].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[15].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[15].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: dp3 r1.x, cb1[1].xyzx, cb1[1].xyzx
  21: rsq r1.x, r1.x
  22: mul r1.xyz, r1.xxxx, cb1[1].zxyz
  23: dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
  24: rsq r1.w, r1.w
  25: mul r2.xyz, r1.wwww, cb1[0].yzxy
  26: mul r3.xyz, r1.xyzx, r2.xyzx
  27: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  28: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  29: mov o1.y, r3.x
  30: mov o1.x, r2.z
  31: mov o1.z, r1.y
  32: mov o2.x, r2.x
  33: mov o3.x, r2.y
  34: mov o2.z, r1.z
  35: mov o3.z, r1.x
  36: mov o2.y, r3.y
  37: mov o3.y, r3.z
  38: mov o4.xyz, r0.xyzx
  39: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  40: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  41: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  42: mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  43: mov o7.xyzw, l(0,0,0,0)
  44: mov o8.x, v8.x
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _TerrainHeightmapRecipSize at 224
  Vector4 _TerrainHeightmapScale at 240
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[14].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[14].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[15].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[15].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: dp3 r1.x, cb1[1].xyzx, cb1[1].xyzx
  21: rsq r1.x, r1.x
  22: mul r1.xyz, r1.xxxx, cb1[1].zxyz
  23: dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
  24: rsq r1.w, r1.w
  25: mul r2.xyz, r1.wwww, cb1[0].yzxy
  26: mul r3.xyz, r1.xyzx, r2.xyzx
  27: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  28: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  29: mov o1.y, r3.x
  30: mov o1.x, r2.z
  31: mov o1.z, r1.y
  32: mov o2.x, r2.x
  33: mov o3.x, r2.y
  34: mov o2.z, r1.z
  35: mov o3.z, r1.x
  36: mov o2.y, r3.y
  37: mov o3.y, r3.z
  38: mov o4.xyz, r0.xyzx
  39: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  40: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  41: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  42: mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  43: mov o7.xyzw, l(0,0,0,0)
  44: mov o8.x, v8.x
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 27 math, 3 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// SV_InstanceID            0   x           7     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.x
      dcl_temps 3
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: mov o4.xyz, r0.xyzx
  21: dp3 r0.x, cb1[1].xyzx, cb1[1].xyzx
  22: rsq r0.x, r0.x
  23: mul r0.xyz, r0.xxxx, cb1[1].zxyz
  24: dp3 r0.w, cb1[0].xyzx, cb1[0].xyzx
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, cb1[0].yzxy
  27: mul r2.xyz, r0.xyzx, r1.xyzx
  28: mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
  29: mul r2.xyz, r2.xyzx, -cb1[9].wwww
  30: mov o1.y, r2.x
  31: mov o1.x, r1.z
  32: mov o1.z, r0.y
  33: mov o2.x, r1.x
  34: mov o3.x, r1.y
  35: mov o2.z, r0.z
  36: mov o3.z, r0.x
  37: mov o2.y, r2.y
  38: mov o3.y, r2.z
  39: mov o6.xyzw, l(0,0,0,0)
  40: mov o7.x, v8.x
  41: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SPOT 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _TerrainHeightmapRecipSize at 224
  Vector4 _TerrainHeightmapScale at 240
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[14].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[14].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[15].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[15].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: dp3 r1.x, cb1[1].xyzx, cb1[1].xyzx
  21: rsq r1.x, r1.x
  22: mul r1.xyz, r1.xxxx, cb1[1].zxyz
  23: dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
  24: rsq r1.w, r1.w
  25: mul r2.xyz, r1.wwww, cb1[0].yzxy
  26: mul r3.xyz, r1.xyzx, r2.xyzx
  27: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  28: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  29: mov o1.y, r3.x
  30: mov o1.x, r2.z
  31: mov o1.z, r1.y
  32: mov o2.x, r2.x
  33: mov o3.x, r2.y
  34: mov o2.z, r1.z
  35: mov o3.z, r1.x
  36: mov o2.y, r3.y
  37: mov o3.y, r3.z
  38: mov o4.xyz, r0.xyzx
  39: mul r1.xyzw, r0.yyyy, cb0[5].xyzw
  40: mad r1.xyzw, cb0[4].xyzw, r0.xxxx, r1.xyzw
  41: mad r1.xyzw, cb0[6].xyzw, r0.zzzz, r1.xyzw
  42: mad o6.xyzw, cb0[7].xyzw, r0.wwww, r1.xyzw
  43: mov o7.xyzw, l(0,0,0,0)
  44: mov o8.x, v8.x
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT_COOKIE 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _TerrainHeightmapRecipSize at 224
  Vector4 _TerrainHeightmapScale at 240
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[14].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[14].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[15].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[15].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: dp3 r1.x, cb1[1].xyzx, cb1[1].xyzx
  21: rsq r1.x, r1.x
  22: mul r1.xyz, r1.xxxx, cb1[1].zxyz
  23: dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
  24: rsq r1.w, r1.w
  25: mul r2.xyz, r1.wwww, cb1[0].yzxy
  26: mul r3.xyz, r1.xyzx, r2.xyzx
  27: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  28: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  29: mov o1.y, r3.x
  30: mov o1.x, r2.z
  31: mov o1.z, r1.y
  32: mov o2.x, r2.x
  33: mov o3.x, r2.y
  34: mov o2.z, r1.z
  35: mov o3.z, r1.x
  36: mov o2.y, r3.y
  37: mov o3.y, r3.z
  38: mov o4.xyz, r0.xyzx
  39: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  40: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  41: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  42: mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  43: mov o7.xyzw, l(0,0,0,0)
  44: mov o8.x, v8.x
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE INSTANCING_ON 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _TerrainHeightmapRecipSize at 224
  Vector4 _TerrainHeightmapScale at 240
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xy
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[14].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[14].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[15].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[15].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: dp3 r1.x, cb1[1].xyzx, cb1[1].xyzx
  21: rsq r1.x, r1.x
  22: mul r1.xyz, r1.xxxx, cb1[1].zxyz
  23: dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
  24: rsq r1.w, r1.w
  25: mul r2.xyz, r1.wwww, cb1[0].yzxy
  26: mul r3.xyz, r1.xyzx, r2.xyzx
  27: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  28: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  29: mov o1.y, r3.x
  30: mov o1.x, r2.z
  31: mov o1.z, r1.y
  32: mov o2.x, r2.x
  33: mov o3.x, r2.y
  34: mov o2.z, r1.z
  35: mov o3.z, r1.x
  36: mov o2.y, r3.y
  37: mov o3.y, r3.z
  38: mov o4.xyz, r0.xyzx
  39: mul r1.xy, r0.yyyy, cb0[5].xyxx
  40: mad r0.xy, cb0[4].xyxx, r0.xxxx, r1.xyxx
  41: mad r0.xy, cb0[6].xyxx, r0.zzzz, r0.xyxx
  42: mad o6.xy, cb0[7].xyxx, r0.wwww, r0.xyxx
  43: mov o7.xyzw, l(0,0,0,0)
  44: mov o8.x, v8.x
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_DEPTH SPOT 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _TerrainHeightmapRecipSize at 224
  Vector4 _TerrainHeightmapScale at 240
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[14].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[14].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[15].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[15].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: dp3 r1.x, cb1[1].xyzx, cb1[1].xyzx
  21: rsq r1.x, r1.x
  22: mul r1.xyz, r1.xxxx, cb1[1].zxyz
  23: dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
  24: rsq r1.w, r1.w
  25: mul r2.xyz, r1.wwww, cb1[0].yzxy
  26: mul r3.xyz, r1.xyzx, r2.xyzx
  27: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  28: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  29: mov o1.y, r3.x
  30: mov o1.x, r2.z
  31: mov o1.z, r1.y
  32: mov o2.x, r2.x
  33: mov o3.x, r2.y
  34: mov o2.z, r1.z
  35: mov o3.z, r1.x
  36: mov o2.y, r3.y
  37: mov o3.y, r3.z
  38: mov o4.xyz, r0.xyzx
  39: mul r1.xyzw, r0.yyyy, cb0[5].xyzw
  40: mad r1.xyzw, cb0[4].xyzw, r0.xxxx, r1.xyzw
  41: mad r1.xyzw, cb0[6].xyzw, r0.zzzz, r1.xyzw
  42: mad o6.xyzw, cb0[7].xyzw, r0.wwww, r1.xyzw
  43: mov o7.xyzw, l(0,0,0,0)
  44: mov o8.x, v8.x
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_DEPTH SHADOWS_SOFT SPOT 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (384 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 144
  Vector4 _TerrainHeightmapRecipSize at 304
  Vector4 _TerrainHeightmapScale at 320
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[21], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[19].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[19].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[20].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[20].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: dp3 r1.x, cb1[1].xyzx, cb1[1].xyzx
  21: rsq r1.x, r1.x
  22: mul r1.xyz, r1.xxxx, cb1[1].zxyz
  23: dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
  24: rsq r1.w, r1.w
  25: mul r2.xyz, r1.wwww, cb1[0].yzxy
  26: mul r3.xyz, r1.xyzx, r2.xyzx
  27: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  28: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  29: mov o1.y, r3.x
  30: mov o1.x, r2.z
  31: mov o1.z, r1.y
  32: mov o2.x, r2.x
  33: mov o3.x, r2.y
  34: mov o2.z, r1.z
  35: mov o3.z, r1.x
  36: mov o2.y, r3.y
  37: mov o3.y, r3.z
  38: mov o4.xyz, r0.xyzx
  39: mul r1.xyzw, r0.yyyy, cb0[10].xyzw
  40: mad r1.xyzw, cb0[9].xyzw, r0.xxxx, r1.xyzw
  41: mad r1.xyzw, cb0[11].xyzw, r0.zzzz, r1.xyzw
  42: mad o6.xyzw, cb0[12].xyzw, r0.wwww, r1.xyzw
  43: mov o7.xyzw, l(0,0,0,0)
  44: mov o8.x, v8.x
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON SHADOWS_SCREEN 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 4 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 5 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// SV_InstanceID            0   x           7     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb4[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb5[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb5[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  10: add r0.yz, v0.xxyx, cb5[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb5[r0.x + 0].zzzz
  13: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb2[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb2[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  17: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  19: mad r1.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  20: mov o4.xyz, r0.xyzx
  21: mov o0.xyzw, r1.xyzw
  22: dp3 r0.x, cb2[1].xyzx, cb2[1].xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, cb2[1].zxyz
  25: dp3 r0.w, cb2[0].xyzx, cb2[0].xyzx
  26: rsq r0.w, r0.w
  27: mul r2.xyz, r0.wwww, cb2[0].yzxy
  28: mul r3.xyz, r0.xyzx, r2.xyzx
  29: mad r3.xyz, r0.zxyz, r2.yzxy, -r3.xyzx
  30: mul r3.xyz, r3.xyzx, -cb2[9].wwww
  31: mov o1.y, r3.x
  32: mov o1.x, r2.z
  33: mov o1.z, r0.y
  34: mov o2.x, r2.x
  35: mov o3.x, r2.y
  36: mov o2.z, r0.z
  37: mov o3.z, r0.x
  38: mov o2.y, r3.y
  39: mov o3.y, r3.z
  40: mul r0.x, r1.y, cb1[5].x
  41: mul r0.w, r0.x, l(0.500000)
  42: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  43: mov o6.zw, r1.zzzw
  44: add o6.xy, r0.zzzz, r0.xwxx
  45: mov o7.x, v8.x
  46: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE INSTANCING_ON SHADOWS_SCREEN 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 5 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _TerrainHeightmapRecipSize at 224
  Vector4 _TerrainHeightmapScale at 240
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 4 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 5 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float   xy  
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xy
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 5
   0: iadd r0.x, v8.x, cb4[0].x
   1: mul r1.xyzw, cb0[14].xyzw, cb5[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb5[r0.x + 0].xyxy
   3: mad r0.yz, cb0[14].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[15].y
   9: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  10: add r0.yz, v0.xxyx, cb5[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[15].xxzx
  12: mul r0.xy, r0.yzyy, cb5[r0.x + 0].zzzz
  13: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb2[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb2[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  17: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  19: mad r1.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  20: mov o0.xyzw, r1.xyzw
  21: dp3 r2.x, cb2[1].xyzx, cb2[1].xyzx
  22: rsq r2.x, r2.x
  23: mul r2.xyz, r2.xxxx, cb2[1].zxyz
  24: dp3 r2.w, cb2[0].xyzx, cb2[0].xyzx
  25: rsq r2.w, r2.w
  26: mul r3.xyz, r2.wwww, cb2[0].yzxy
  27: mul r4.xyz, r2.xyzx, r3.xyzx
  28: mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
  29: mul r4.xyz, r4.xyzx, -cb2[9].wwww
  30: mov o1.y, r4.x
  31: mov o1.x, r3.z
  32: mov o1.z, r2.y
  33: mov o2.x, r3.x
  34: mov o3.x, r3.y
  35: mov o2.z, r2.z
  36: mov o3.z, r2.x
  37: mov o2.y, r4.y
  38: mov o3.y, r4.z
  39: mov o4.xyz, r0.xyzx
  40: mul r2.xy, r0.yyyy, cb0[5].xyxx
  41: mad r0.xy, cb0[4].xyxx, r0.xxxx, r2.xyxx
  42: mad r0.xy, cb0[6].xyxx, r0.zzzz, r0.xyxx
  43: mad o6.xy, cb0[7].xyxx, r0.wwww, r0.xyxx
  44: mul r0.x, r1.y, cb1[5].x
  45: mul r0.w, r0.x, l(0.500000)
  46: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  47: mov o7.zw, r1.zzzw
  48: add o7.xy, r0.zzzz, r0.xwxx
  49: mov o8.x, v8.x
  50: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT SHADOWS_CUBE 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _TerrainHeightmapRecipSize at 224
  Vector4 _TerrainHeightmapScale at 240
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[14].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[14].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[15].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[15].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: dp3 r1.x, cb1[1].xyzx, cb1[1].xyzx
  21: rsq r1.x, r1.x
  22: mul r1.xyz, r1.xxxx, cb1[1].zxyz
  23: dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
  24: rsq r1.w, r1.w
  25: mul r2.xyz, r1.wwww, cb1[0].yzxy
  26: mul r3.xyz, r1.xyzx, r2.xyzx
  27: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  28: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  29: mov o1.y, r3.x
  30: mov o1.x, r2.z
  31: mov o1.z, r1.y
  32: mov o2.x, r2.x
  33: mov o3.x, r2.y
  34: mov o2.z, r1.z
  35: mov o3.z, r1.x
  36: mov o2.y, r3.y
  37: mov o3.y, r3.z
  38: mov o4.xyz, r0.xyzx
  39: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  40: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  41: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  42: mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  43: mov o7.xyzw, l(0,0,0,0)
  44: mov o8.x, v8.x
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _TerrainHeightmapRecipSize at 224
  Vector4 _TerrainHeightmapScale at 240
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[14].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[14].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[15].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[15].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: dp3 r1.x, cb1[1].xyzx, cb1[1].xyzx
  21: rsq r1.x, r1.x
  22: mul r1.xyz, r1.xxxx, cb1[1].zxyz
  23: dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
  24: rsq r1.w, r1.w
  25: mul r2.xyz, r1.wwww, cb1[0].yzxy
  26: mul r3.xyz, r1.xyzx, r2.xyzx
  27: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  28: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  29: mov o1.y, r3.x
  30: mov o1.x, r2.z
  31: mov o1.z, r1.y
  32: mov o2.x, r2.x
  33: mov o3.x, r2.y
  34: mov o2.z, r1.z
  35: mov o3.z, r1.x
  36: mov o2.y, r3.y
  37: mov o3.y, r3.z
  38: mov o4.xyz, r0.xyzx
  39: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  40: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  41: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  42: mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  43: mov o7.xyzw, l(0,0,0,0)
  44: mov o8.x, v8.x
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT_COOKIE SHADOWS_CUBE 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _TerrainHeightmapRecipSize at 224
  Vector4 _TerrainHeightmapScale at 240
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[14].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[14].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[15].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[15].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: dp3 r1.x, cb1[1].xyzx, cb1[1].xyzx
  21: rsq r1.x, r1.x
  22: mul r1.xyz, r1.xxxx, cb1[1].zxyz
  23: dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
  24: rsq r1.w, r1.w
  25: mul r2.xyz, r1.wwww, cb1[0].yzxy
  26: mul r3.xyz, r1.xyzx, r2.xyzx
  27: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  28: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  29: mov o1.y, r3.x
  30: mov o1.x, r2.z
  31: mov o1.z, r1.y
  32: mov o2.x, r2.x
  33: mov o3.x, r2.y
  34: mov o2.z, r1.z
  35: mov o3.z, r1.x
  36: mov o2.y, r3.y
  37: mov o3.y, r3.z
  38: mov o4.xyz, r0.xyzx
  39: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  40: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  41: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  42: mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  43: mov o7.xyzw, l(0,0,0,0)
  44: mov o8.x, v8.x
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _TerrainHeightmapRecipSize at 224
  Vector4 _TerrainHeightmapScale at 240
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[14].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[14].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o5.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o5.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[15].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[15].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: dp3 r1.x, cb1[1].xyzx, cb1[1].xyzx
  21: rsq r1.x, r1.x
  22: mul r1.xyz, r1.xxxx, cb1[1].zxyz
  23: dp3 r1.w, cb1[0].xyzx, cb1[0].xyzx
  24: rsq r1.w, r1.w
  25: mul r2.xyz, r1.wwww, cb1[0].yzxy
  26: mul r3.xyz, r1.xyzx, r2.xyzx
  27: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  28: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  29: mov o1.y, r3.x
  30: mov o1.x, r2.z
  31: mov o1.z, r1.y
  32: mov o2.x, r2.x
  33: mov o3.x, r2.y
  34: mov o2.z, r1.z
  35: mov o3.z, r1.x
  36: mov o2.y, r3.y
  37: mov o3.y, r3.z
  38: mov o4.xyz, r0.xyzx
  39: mul r1.xyz, r0.yyyy, cb0[5].xyzx
  40: mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
  41: mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
  42: mad o6.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
  43: mov o7.xyzw, l(0,0,0,0)
  44: mov o8.x, v8.x
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: POINT 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 116 math, 7 temp registers, 8 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 7
Set 2D Texture "_Control" to slot 1 sampler slot 2
Set 2D Texture "_Splat0" to slot 2 sampler slot 3
Set 2D Texture "_Splat1" to slot 3 sampler slot 4
Set 2D Texture "_Splat2" to slot 4 sampler slot 5
Set 2D Texture "_Splat3" to slot 5 sampler slot 6
Set 2D Texture "_LightTexture0" to slot 6 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 0

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 224
  Float _Metallic1 at 228
  Float _Metallic2 at 232
  Float _Metallic3 at 236
  Float _Smoothness0 at 240
  Float _Smoothness1 at 244
  Float _Smoothness2 at 248
  Float _Smoothness3 at 252
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: sample r3.xyzw, v3.xyxx, t0.xyzw, s7
   9: eq r1.w, r3.x, l(0.000000)
  10: discard_nz r1.w
  11: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r3.xy, v3.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, cb0[9].xyxx
  14: sample r3.xyzw, r3.xyxx, t1.xyzw, s2
  15: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r3.xyzw, r3.xyzw, r2.wwww
  18: mad r4.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r4.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r5.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r5.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r6.xyzw, r4.xyxx, t2.xyzw, s3
  23: mul r6.xyzw, r3.xxxx, r6.xyzw
  24: mul r6.w, r6.w, cb0[15].x
  25: sample r4.xyzw, r4.zwzz, t3.xyzw, s4
  26: mul r4.xyzw, r3.yyyy, r4.xyzw
  27: mul r4.w, r4.w, cb0[15].y
  28: add r4.xyzw, r4.xyzw, r6.xyzw
  29: sample r6.xyzw, r5.xyxx, t4.xyzw, s5
  30: mul r6.xyzw, r3.zzzz, r6.xyzw
  31: mul r6.w, r6.w, cb0[15].z
  32: add r4.xyzw, r4.xyzw, r6.xyzw
  33: sample r5.xyzw, r5.zwzz, t5.xyzw, s6
  34: mul r5.xyzw, r3.wwww, r5.xyzw
  35: mul r5.w, r5.w, cb0[15].w
  36: add r4.xyzw, r4.xyzw, r5.xyzw
  37: dp4 r2.w, r3.xyzw, cb0[14].xyzw
  38: mul r3.xyz, v2.yyyy, cb0[5].xyzx
  39: mad r3.xyz, cb0[4].xyzx, v2.xxxx, r3.xyzx
  40: mad r3.xyz, cb0[6].xyzx, v2.zzzz, r3.xyzx
  41: add r3.xyz, r3.xyzx, cb0[7].xyzx
  42: eq r3.w, cb3[0].x, l(1.000000)
  43: if_nz r3.w
  44:   eq r3.w, cb3[0].y, l(1.000000)
  45:   mul r5.xyz, v2.yyyy, cb3[2].xyzx
  46:   mad r5.xyz, cb3[1].xyzx, v2.xxxx, r5.xyzx
  47:   mad r5.xyz, cb3[3].xyzx, v2.zzzz, r5.xyzx
  48:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  49:   movc r5.xyz, r3.wwww, r5.xyzx, v2.xyzx
  50:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
  51:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
  52:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  53:   mad r5.y, cb3[0].z, l(0.500000), l(0.750000)
  54:   max r5.x, r3.w, r5.y
  55:   sample r5.xyzw, r5.xzwx, t7.xyzw, s0
  56: else 
  57:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  58: endif 
  59: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
  60: dp3 r3.x, r3.xyzx, r3.xyzx
  61: sample r5.xyzw, r3.xxxx, t6.xyzw, s1
  62: mul r3.x, r3.w, r5.x
  63: mul r3.xyz, r3.xxxx, cb0[2].xyzx
  64: dp3 r3.w, v1.xyzx, v1.xyzx
  65: rsq r3.w, r3.w
  66: mul r5.xyz, r3.wwww, v1.xyzx
  67: add r6.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  68: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  69: mad r2.w, -r2.w, l(0.779084), l(0.779084)
  70: mul r4.xyz, r2.wwww, r4.xyzx
  71: add r2.w, -r4.w, l(1.000000)
  72: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
  73: dp3 r0.w, r0.xyzx, r0.xyzx
  74: max r0.w, r0.w, l(0.001000)
  75: rsq r0.w, r0.w
  76: mul r0.xyz, r0.wwww, r0.xyzx
  77: dp3 r0.w, r5.xyzx, r2.xyzx
  78: dp3_sat r2.x, r5.xyzx, r1.xyzx
  79: dp3_sat r2.y, r5.xyzx, r0.xyzx
  80: dp3_sat r0.x, r1.xyzx, r0.xyzx
  81: mul r0.y, r0.x, r0.x
  82: dp2 r0.y, r0.yyyy, r2.wwww
  83: add r0.y, r0.y, l(-0.500000)
  84: add r0.z, -r2.x, l(1.000000)
  85: mul r1.x, r0.z, r0.z
  86: mul r1.x, r1.x, r1.x
  87: mul r0.z, r0.z, r1.x
  88: mad r0.z, r0.y, r0.z, l(1.000000)
  89: add r1.x, -|r0.w|, l(1.000000)
  90: mul r1.y, r1.x, r1.x
  91: mul r1.y, r1.y, r1.y
  92: mul r1.x, r1.x, r1.y
  93: mad r0.y, r0.y, r1.x, l(1.000000)
  94: mul r0.y, r0.y, r0.z
  95: mul r0.z, r2.w, r2.w
  96: max r0.z, r0.z, l(0.002000)
  97: add r1.x, -r0.z, l(1.000000)
  98: mad r1.y, |r0.w|, r1.x, r0.z
  99: mad r1.x, r2.x, r1.x, r0.z
 100: mul r0.w, |r0.w|, r1.x
 101: mad r0.w, r2.x, r1.y, r0.w
 102: add r0.w, r0.w, l(0.000010)
 103: div r0.w, l(0.500000), r0.w
 104: mul r0.z, r0.z, r0.z
 105: mad r1.x, r2.y, r0.z, -r2.y
 106: mad r1.x, r1.x, r2.y, l(1.000000)
 107: mul r0.z, r0.z, l(0.318310)
 108: mad r1.x, r1.x, r1.x, l(0.000000)
 109: div r0.z, r0.z, r1.x
 110: mul r0.z, r0.z, r0.w
 111: mul r0.z, r0.z, l(3.141593)
 112: max r0.z, r0.z, l(0.000100)
 113: sqrt r0.z, r0.z
 114: mul r0.yz, r2.xxxx, r0.yyzy
 115: dp3 r0.w, r6.xyzx, r6.xyzx
 116: ne r0.w, r0.w, l(0.000000)
 117: and r0.w, r0.w, l(0x3f800000)
 118: mul r0.z, r0.w, r0.z
 119: mul r1.xyz, r0.yyyy, r3.xyzx
 120: mul r0.yzw, r3.xxyz, r0.zzzz
 121: add r0.x, -r0.x, l(1.000000)
 122: mul r2.x, r0.x, r0.x
 123: mul r2.x, r2.x, r2.x
 124: mul r0.x, r0.x, r2.x
 125: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 126: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 127: mul r0.xyz, r0.yzwy, r2.xyzx
 128: mad r0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
 129: mul o0.xyz, r1.wwww, r0.xyzx
 130: mov o0.w, l(1.000000)
 131: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 106 math, 6 temp registers, 7 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 6
Set 2D Texture "_Control" to slot 1
Set 2D Texture "_Splat0" to slot 2
Set 2D Texture "_Splat1" to slot 3
Set 2D Texture "_Splat2" to slot 4
Set 2D Texture "_Splat3" to slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 0

Constant Buffer "$Globals" (192 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 160
  Float _Metallic1 at 164
  Float _Metallic2 at 168
  Float _Metallic3 at 172
  Float _Smoothness0 at 176
  Float _Smoothness1 at 180
  Float _Smoothness2 at 184
  Float _Smoothness3 at 188
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v3.xyxx, t0.xyzw, s6
   5: eq r1.w, r2.x, l(0.000000)
   6: discard_nz r1.w
   7: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r2.xy, v3.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r2.xy, r2.xyxx, cb0[5].xyxx
  10: sample r2.xyzw, r2.xyxx, t1.xyzw, s1
  11: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r3.x, r1.w, l(0.001000)
  13: div r2.xyzw, r2.xyzw, r3.xxxx
  14: mad r3.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r3.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r4.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r4.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r5.xyzw, r3.xyxx, t2.xyzw, s2
  19: mul r5.xyzw, r2.xxxx, r5.xyzw
  20: mul r5.w, r5.w, cb0[11].x
  21: sample r3.xyzw, r3.zwzz, t3.xyzw, s3
  22: mul r3.xyzw, r2.yyyy, r3.xyzw
  23: mul r3.w, r3.w, cb0[11].y
  24: add r3.xyzw, r3.xyzw, r5.xyzw
  25: sample r5.xyzw, r4.xyxx, t4.xyzw, s4
  26: mul r5.xyzw, r2.zzzz, r5.xyzw
  27: mul r5.w, r5.w, cb0[11].z
  28: add r3.xyzw, r3.xyzw, r5.xyzw
  29: sample r4.xyzw, r4.zwzz, t5.xyzw, s5
  30: mul r4.xyzw, r2.wwww, r4.xyzw
  31: mul r4.w, r4.w, cb0[11].w
  32: add r3.xyzw, r3.xyzw, r4.xyzw
  33: dp4 r2.x, r2.xyzw, cb0[10].xyzw
  34: eq r2.y, cb3[0].x, l(1.000000)
  35: if_nz r2.y
  36:   eq r2.y, cb3[0].y, l(1.000000)
  37:   mul r4.xyz, v2.yyyy, cb3[2].xyzx
  38:   mad r4.xyz, cb3[1].xyzx, v2.xxxx, r4.xyzx
  39:   mad r4.xyz, cb3[3].xyzx, v2.zzzz, r4.xyzx
  40:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  41:   movc r2.yzw, r2.yyyy, r4.xxyz, v2.xxyz
  42:   add r2.yzw, r2.yyzw, -cb3[6].xxyz
  43:   mul r4.yzw, r2.yyzw, cb3[5].xxyz
  44:   mad r2.y, r4.y, l(0.250000), l(0.750000)
  45:   mad r2.z, cb3[0].z, l(0.500000), l(0.750000)
  46:   max r4.x, r2.z, r2.y
  47:   sample r4.xyzw, r4.xzwx, t6.xyzw, s0
  48: else 
  49:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  50: endif 
  51: dp4_sat r2.y, r4.xyzw, cb2[46].xyzw
  52: mul r2.yzw, r2.yyyy, cb0[2].xxyz
  53: dp3 r4.x, v1.xyzx, v1.xyzx
  54: rsq r4.x, r4.x
  55: mul r4.xyz, r4.xxxx, v1.xyzx
  56: add r5.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  57: mad r5.xyz, r2.xxxx, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  58: mad r2.x, -r2.x, l(0.779084), l(0.779084)
  59: mul r3.xyz, r2.xxxx, r3.xyzx
  60: add r2.x, -r3.w, l(1.000000)
  61: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  62: dp3 r0.w, r0.xyzx, r0.xyzx
  63: max r0.w, r0.w, l(0.001000)
  64: rsq r0.w, r0.w
  65: mul r0.xyz, r0.wwww, r0.xyzx
  66: dp3 r0.w, r4.xyzx, r1.xyzx
  67: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
  68: dp3_sat r1.y, r4.xyzx, r0.xyzx
  69: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  70: mul r0.y, r0.x, r0.x
  71: dp2 r0.y, r0.yyyy, r2.xxxx
  72: add r0.y, r0.y, l(-0.500000)
  73: add r0.z, -r1.x, l(1.000000)
  74: mul r1.z, r0.z, r0.z
  75: mul r1.z, r1.z, r1.z
  76: mul r0.z, r0.z, r1.z
  77: mad r0.z, r0.y, r0.z, l(1.000000)
  78: add r1.z, -|r0.w|, l(1.000000)
  79: mul r3.w, r1.z, r1.z
  80: mul r3.w, r3.w, r3.w
  81: mul r1.z, r1.z, r3.w
  82: mad r0.y, r0.y, r1.z, l(1.000000)
  83: mul r0.y, r0.y, r0.z
  84: mul r0.z, r2.x, r2.x
  85: max r0.z, r0.z, l(0.002000)
  86: add r1.z, -r0.z, l(1.000000)
  87: mad r2.x, |r0.w|, r1.z, r0.z
  88: mad r1.z, r1.x, r1.z, r0.z
  89: mul r0.w, |r0.w|, r1.z
  90: mad r0.w, r1.x, r2.x, r0.w
  91: add r0.w, r0.w, l(0.000010)
  92: div r0.w, l(0.500000), r0.w
  93: mul r0.z, r0.z, r0.z
  94: mad r1.z, r1.y, r0.z, -r1.y
  95: mad r1.y, r1.z, r1.y, l(1.000000)
  96: mul r0.z, r0.z, l(0.318310)
  97: mad r1.y, r1.y, r1.y, l(0.000000)
  98: div r0.z, r0.z, r1.y
  99: mul r0.z, r0.z, r0.w
 100: mul r0.z, r0.z, l(3.141593)
 101: max r0.z, r0.z, l(0.000100)
 102: sqrt r0.z, r0.z
 103: mul r0.yz, r1.xxxx, r0.yyzy
 104: dp3 r0.w, r5.xyzx, r5.xyzx
 105: ne r0.w, r0.w, l(0.000000)
 106: and r0.w, r0.w, l(0x3f800000)
 107: mul r0.z, r0.w, r0.z
 108: mul r1.xyz, r0.yyyy, r2.yzwy
 109: mul r0.yzw, r2.yyzw, r0.zzzz
 110: add r0.x, -r0.x, l(1.000000)
 111: mul r2.x, r0.x, r0.x
 112: mul r2.x, r2.x, r2.x
 113: mul r0.x, r0.x, r2.x
 114: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 115: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 116: mul r0.xyz, r0.yzwy, r2.xyzx
 117: mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
 118: mul o0.xyz, r1.wwww, r0.xyzx
 119: mov o0.w, l(1.000000)
 120: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SPOT 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 122 math, 7 temp registers, 9 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 8
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_LightTexture0" to slot 6 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 7 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 0

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 224
  Float _Metallic1 at 228
  Float _Metallic2 at 232
  Float _Metallic3 at 236
  Float _Smoothness0 at 240
  Float _Smoothness1 at 244
  Float _Smoothness2 at 248
  Float _Smoothness3 at 252
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: sample r3.xyzw, v3.xyxx, t0.xyzw, s8
   9: eq r1.w, r3.x, l(0.000000)
  10: discard_nz r1.w
  11: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r3.xy, v3.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, cb0[9].xyxx
  14: sample r3.xyzw, r3.xyxx, t1.xyzw, s3
  15: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r3.xyzw, r3.xyzw, r2.wwww
  18: mad r4.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r4.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r5.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r5.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r6.xyzw, r4.xyxx, t2.xyzw, s4
  23: mul r6.xyzw, r3.xxxx, r6.xyzw
  24: mul r6.w, r6.w, cb0[15].x
  25: sample r4.xyzw, r4.zwzz, t3.xyzw, s5
  26: mul r4.xyzw, r3.yyyy, r4.xyzw
  27: mul r4.w, r4.w, cb0[15].y
  28: add r4.xyzw, r4.xyzw, r6.xyzw
  29: sample r6.xyzw, r5.xyxx, t4.xyzw, s6
  30: mul r6.xyzw, r3.zzzz, r6.xyzw
  31: mul r6.w, r6.w, cb0[15].z
  32: add r4.xyzw, r4.xyzw, r6.xyzw
  33: sample r5.xyzw, r5.zwzz, t5.xyzw, s7
  34: mul r5.xyzw, r3.wwww, r5.xyzw
  35: mul r5.w, r5.w, cb0[15].w
  36: add r4.xyzw, r4.xyzw, r5.xyzw
  37: dp4 r2.w, r3.xyzw, cb0[14].xyzw
  38: mul r3.xyzw, v2.yyyy, cb0[5].xyzw
  39: mad r3.xyzw, cb0[4].xyzw, v2.xxxx, r3.xyzw
  40: mad r3.xyzw, cb0[6].xyzw, v2.zzzz, r3.xyzw
  41: add r3.xyzw, r3.xyzw, cb0[7].xyzw
  42: eq r5.x, cb3[0].x, l(1.000000)
  43: if_nz r5.x
  44:   eq r5.x, cb3[0].y, l(1.000000)
  45:   mul r5.yzw, v2.yyyy, cb3[2].xxyz
  46:   mad r5.yzw, cb3[1].xxyz, v2.xxxx, r5.yyzw
  47:   mad r5.yzw, cb3[3].xxyz, v2.zzzz, r5.yyzw
  48:   add r5.yzw, r5.yyzw, cb3[4].xxyz
  49:   movc r5.xyz, r5.xxxx, r5.yzwy, v2.xyzx
  50:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
  51:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
  52:   mad r5.y, r5.y, l(0.250000), l(0.750000)
  53:   mad r6.x, cb3[0].z, l(0.500000), l(0.750000)
  54:   max r5.x, r5.y, r6.x
  55:   sample r5.xyzw, r5.xzwx, t8.xyzw, s0
  56: else 
  57:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  58: endif 
  59: dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
  60: lt r5.y, l(0.000000), r3.z
  61: and r5.y, r5.y, l(0x3f800000)
  62: div r5.zw, r3.xxxy, r3.wwww
  63: add r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  64: sample r6.xyzw, r5.zwzz, t6.xyzw, s1
  65: mul r3.w, r5.y, r6.w
  66: dp3 r3.x, r3.xyzx, r3.xyzx
  67: sample r6.xyzw, r3.xxxx, t7.xyzw, s2
  68: mul r3.x, r3.w, r6.x
  69: mul r3.x, r5.x, r3.x
  70: mul r3.xyz, r3.xxxx, cb0[2].xyzx
  71: dp3 r3.w, v1.xyzx, v1.xyzx
  72: rsq r3.w, r3.w
  73: mul r5.xyz, r3.wwww, v1.xyzx
  74: add r6.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  75: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  76: mad r2.w, -r2.w, l(0.779084), l(0.779084)
  77: mul r4.xyz, r2.wwww, r4.xyzx
  78: add r2.w, -r4.w, l(1.000000)
  79: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
  80: dp3 r0.w, r0.xyzx, r0.xyzx
  81: max r0.w, r0.w, l(0.001000)
  82: rsq r0.w, r0.w
  83: mul r0.xyz, r0.wwww, r0.xyzx
  84: dp3 r0.w, r5.xyzx, r2.xyzx
  85: dp3_sat r2.x, r5.xyzx, r1.xyzx
  86: dp3_sat r2.y, r5.xyzx, r0.xyzx
  87: dp3_sat r0.x, r1.xyzx, r0.xyzx
  88: mul r0.y, r0.x, r0.x
  89: dp2 r0.y, r0.yyyy, r2.wwww
  90: add r0.y, r0.y, l(-0.500000)
  91: add r0.z, -r2.x, l(1.000000)
  92: mul r1.x, r0.z, r0.z
  93: mul r1.x, r1.x, r1.x
  94: mul r0.z, r0.z, r1.x
  95: mad r0.z, r0.y, r0.z, l(1.000000)
  96: add r1.x, -|r0.w|, l(1.000000)
  97: mul r1.y, r1.x, r1.x
  98: mul r1.y, r1.y, r1.y
  99: mul r1.x, r1.x, r1.y
 100: mad r0.y, r0.y, r1.x, l(1.000000)
 101: mul r0.y, r0.y, r0.z
 102: mul r0.z, r2.w, r2.w
 103: max r0.z, r0.z, l(0.002000)
 104: add r1.x, -r0.z, l(1.000000)
 105: mad r1.y, |r0.w|, r1.x, r0.z
 106: mad r1.x, r2.x, r1.x, r0.z
 107: mul r0.w, |r0.w|, r1.x
 108: mad r0.w, r2.x, r1.y, r0.w
 109: add r0.w, r0.w, l(0.000010)
 110: div r0.w, l(0.500000), r0.w
 111: mul r0.z, r0.z, r0.z
 112: mad r1.x, r2.y, r0.z, -r2.y
 113: mad r1.x, r1.x, r2.y, l(1.000000)
 114: mul r0.z, r0.z, l(0.318310)
 115: mad r1.x, r1.x, r1.x, l(0.000000)
 116: div r0.z, r0.z, r1.x
 117: mul r0.z, r0.z, r0.w
 118: mul r0.z, r0.z, l(3.141593)
 119: max r0.z, r0.z, l(0.000100)
 120: sqrt r0.z, r0.z
 121: mul r0.yz, r2.xxxx, r0.yyzy
 122: dp3 r0.w, r6.xyzx, r6.xyzx
 123: ne r0.w, r0.w, l(0.000000)
 124: and r0.w, r0.w, l(0x3f800000)
 125: mul r0.z, r0.w, r0.z
 126: mul r1.xyz, r0.yyyy, r3.xyzx
 127: mul r0.yzw, r3.xxyz, r0.zzzz
 128: add r0.x, -r0.x, l(1.000000)
 129: mul r2.x, r0.x, r0.x
 130: mul r2.x, r2.x, r2.x
 131: mul r0.x, r0.x, r2.x
 132: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 133: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 134: mul r0.xyz, r0.yzwy, r2.xyzx
 135: mad r0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
 136: mul o0.xyz, r1.wwww, r0.xyzx
 137: mov o0.w, l(1.000000)
 138: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 117 math, 7 temp registers, 9 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 8
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_LightTextureB0" to slot 6 sampler slot 2
Set CUBE Texture "_LightTexture0" to slot 7 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 0

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 224
  Float _Metallic1 at 228
  Float _Metallic2 at 232
  Float _Metallic3 at 236
  Float _Smoothness0 at 240
  Float _Smoothness1 at 244
  Float _Smoothness2 at 248
  Float _Smoothness3 at 252
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: sample r3.xyzw, v3.xyxx, t0.xyzw, s8
   9: eq r1.w, r3.x, l(0.000000)
  10: discard_nz r1.w
  11: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r3.xy, v3.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, cb0[9].xyxx
  14: sample r3.xyzw, r3.xyxx, t1.xyzw, s3
  15: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r3.xyzw, r3.xyzw, r2.wwww
  18: mad r4.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r4.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r5.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r5.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r6.xyzw, r4.xyxx, t2.xyzw, s4
  23: mul r6.xyzw, r3.xxxx, r6.xyzw
  24: mul r6.w, r6.w, cb0[15].x
  25: sample r4.xyzw, r4.zwzz, t3.xyzw, s5
  26: mul r4.xyzw, r3.yyyy, r4.xyzw
  27: mul r4.w, r4.w, cb0[15].y
  28: add r4.xyzw, r4.xyzw, r6.xyzw
  29: sample r6.xyzw, r5.xyxx, t4.xyzw, s6
  30: mul r6.xyzw, r3.zzzz, r6.xyzw
  31: mul r6.w, r6.w, cb0[15].z
  32: add r4.xyzw, r4.xyzw, r6.xyzw
  33: sample r5.xyzw, r5.zwzz, t5.xyzw, s7
  34: mul r5.xyzw, r3.wwww, r5.xyzw
  35: mul r5.w, r5.w, cb0[15].w
  36: add r4.xyzw, r4.xyzw, r5.xyzw
  37: dp4 r2.w, r3.xyzw, cb0[14].xyzw
  38: mul r3.xyz, v2.yyyy, cb0[5].xyzx
  39: mad r3.xyz, cb0[4].xyzx, v2.xxxx, r3.xyzx
  40: mad r3.xyz, cb0[6].xyzx, v2.zzzz, r3.xyzx
  41: add r3.xyz, r3.xyzx, cb0[7].xyzx
  42: eq r3.w, cb3[0].x, l(1.000000)
  43: if_nz r3.w
  44:   eq r3.w, cb3[0].y, l(1.000000)
  45:   mul r5.xyz, v2.yyyy, cb3[2].xyzx
  46:   mad r5.xyz, cb3[1].xyzx, v2.xxxx, r5.xyzx
  47:   mad r5.xyz, cb3[3].xyzx, v2.zzzz, r5.xyzx
  48:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  49:   movc r5.xyz, r3.wwww, r5.xyzx, v2.xyzx
  50:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
  51:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
  52:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  53:   mad r5.y, cb3[0].z, l(0.500000), l(0.750000)
  54:   max r5.x, r3.w, r5.y
  55:   sample r5.xyzw, r5.xzwx, t8.xyzw, s0
  56: else 
  57:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  58: endif 
  59: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
  60: dp3 r5.x, r3.xyzx, r3.xyzx
  61: sample r5.xyzw, r5.xxxx, t6.xyzw, s2
  62: sample r6.xyzw, r3.xyzx, t7.xyzw, s1
  63: mul r3.x, r5.x, r6.w
  64: mul r3.x, r3.w, r3.x
  65: mul r3.xyz, r3.xxxx, cb0[2].xyzx
  66: dp3 r3.w, v1.xyzx, v1.xyzx
  67: rsq r3.w, r3.w
  68: mul r5.xyz, r3.wwww, v1.xyzx
  69: add r6.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  70: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  71: mad r2.w, -r2.w, l(0.779084), l(0.779084)
  72: mul r4.xyz, r2.wwww, r4.xyzx
  73: add r2.w, -r4.w, l(1.000000)
  74: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
  75: dp3 r0.w, r0.xyzx, r0.xyzx
  76: max r0.w, r0.w, l(0.001000)
  77: rsq r0.w, r0.w
  78: mul r0.xyz, r0.wwww, r0.xyzx
  79: dp3 r0.w, r5.xyzx, r2.xyzx
  80: dp3_sat r2.x, r5.xyzx, r1.xyzx
  81: dp3_sat r2.y, r5.xyzx, r0.xyzx
  82: dp3_sat r0.x, r1.xyzx, r0.xyzx
  83: mul r0.y, r0.x, r0.x
  84: dp2 r0.y, r0.yyyy, r2.wwww
  85: add r0.y, r0.y, l(-0.500000)
  86: add r0.z, -r2.x, l(1.000000)
  87: mul r1.x, r0.z, r0.z
  88: mul r1.x, r1.x, r1.x
  89: mul r0.z, r0.z, r1.x
  90: mad r0.z, r0.y, r0.z, l(1.000000)
  91: add r1.x, -|r0.w|, l(1.000000)
  92: mul r1.y, r1.x, r1.x
  93: mul r1.y, r1.y, r1.y
  94: mul r1.x, r1.x, r1.y
  95: mad r0.y, r0.y, r1.x, l(1.000000)
  96: mul r0.y, r0.y, r0.z
  97: mul r0.z, r2.w, r2.w
  98: max r0.z, r0.z, l(0.002000)
  99: add r1.x, -r0.z, l(1.000000)
 100: mad r1.y, |r0.w|, r1.x, r0.z
 101: mad r1.x, r2.x, r1.x, r0.z
 102: mul r0.w, |r0.w|, r1.x
 103: mad r0.w, r2.x, r1.y, r0.w
 104: add r0.w, r0.w, l(0.000010)
 105: div r0.w, l(0.500000), r0.w
 106: mul r0.z, r0.z, r0.z
 107: mad r1.x, r2.y, r0.z, -r2.y
 108: mad r1.x, r1.x, r2.y, l(1.000000)
 109: mul r0.z, r0.z, l(0.318310)
 110: mad r1.x, r1.x, r1.x, l(0.000000)
 111: div r0.z, r0.z, r1.x
 112: mul r0.z, r0.z, r0.w
 113: mul r0.z, r0.z, l(3.141593)
 114: max r0.z, r0.z, l(0.000100)
 115: sqrt r0.z, r0.z
 116: mul r0.yz, r2.xxxx, r0.yyzy
 117: dp3 r0.w, r6.xyzx, r6.xyzx
 118: ne r0.w, r0.w, l(0.000000)
 119: and r0.w, r0.w, l(0x3f800000)
 120: mul r0.z, r0.w, r0.z
 121: mul r1.xyz, r0.yyyy, r3.xyzx
 122: mul r0.yzw, r3.xxyz, r0.zzzz
 123: add r0.x, -r0.x, l(1.000000)
 124: mul r2.x, r0.x, r0.x
 125: mul r2.x, r2.x, r2.x
 126: mul r0.x, r0.x, r2.x
 127: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 128: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 129: mul r0.xyz, r0.yzwy, r2.xyzx
 130: mad r0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
 131: mul o0.xyz, r1.wwww, r0.xyzx
 132: mov o0.w, l(1.000000)
 133: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 111 math, 6 temp registers, 8 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 7
Set 2D Texture "_Control" to slot 1 sampler slot 2
Set 2D Texture "_Splat0" to slot 2 sampler slot 3
Set 2D Texture "_Splat1" to slot 3 sampler slot 4
Set 2D Texture "_Splat2" to slot 4 sampler slot 5
Set 2D Texture "_Splat3" to slot 5 sampler slot 6
Set 2D Texture "_LightTexture0" to slot 6 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 0

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 224
  Float _Metallic1 at 228
  Float _Metallic2 at 232
  Float _Metallic3 at 236
  Float _Smoothness0 at 240
  Float _Smoothness1 at 244
  Float _Smoothness2 at 248
  Float _Smoothness3 at 252
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xy          4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v3.xyxx, t0.xyzw, s7
   5: eq r1.w, r2.x, l(0.000000)
   6: discard_nz r1.w
   7: add r2.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r2.xy, v3.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r2.xy, r2.xyxx, cb0[9].xyxx
  10: sample r2.xyzw, r2.xyxx, t1.xyzw, s2
  11: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r3.x, r1.w, l(0.001000)
  13: div r2.xyzw, r2.xyzw, r3.xxxx
  14: mad r3.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
  15: mad r3.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
  16: mad r4.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
  17: mad r4.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
  18: sample r5.xyzw, r3.xyxx, t2.xyzw, s3
  19: mul r5.xyzw, r2.xxxx, r5.xyzw
  20: mul r5.w, r5.w, cb0[15].x
  21: sample r3.xyzw, r3.zwzz, t3.xyzw, s4
  22: mul r3.xyzw, r2.yyyy, r3.xyzw
  23: mul r3.w, r3.w, cb0[15].y
  24: add r3.xyzw, r3.xyzw, r5.xyzw
  25: sample r5.xyzw, r4.xyxx, t4.xyzw, s5
  26: mul r5.xyzw, r2.zzzz, r5.xyzw
  27: mul r5.w, r5.w, cb0[15].z
  28: add r3.xyzw, r3.xyzw, r5.xyzw
  29: sample r4.xyzw, r4.zwzz, t5.xyzw, s6
  30: mul r4.xyzw, r2.wwww, r4.xyzw
  31: mul r4.w, r4.w, cb0[15].w
  32: add r3.xyzw, r3.xyzw, r4.xyzw
  33: dp4 r2.x, r2.xyzw, cb0[14].xyzw
  34: mul r2.yz, v2.yyyy, cb0[5].xxyx
  35: mad r2.yz, cb0[4].xxyx, v2.xxxx, r2.yyzy
  36: mad r2.yz, cb0[6].xxyx, v2.zzzz, r2.yyzy
  37: add r2.yz, r2.yyzy, cb0[7].xxyx
  38: eq r2.w, cb3[0].x, l(1.000000)
  39: if_nz r2.w
  40:   eq r2.w, cb3[0].y, l(1.000000)
  41:   mul r4.xyz, v2.yyyy, cb3[2].xyzx
  42:   mad r4.xyz, cb3[1].xyzx, v2.xxxx, r4.xyzx
  43:   mad r4.xyz, cb3[3].xyzx, v2.zzzz, r4.xyzx
  44:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  45:   movc r4.xyz, r2.wwww, r4.xyzx, v2.xyzx
  46:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  47:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
  48:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  49:   mad r4.y, cb3[0].z, l(0.500000), l(0.750000)
  50:   max r4.x, r2.w, r4.y
  51:   sample r4.xyzw, r4.xzwx, t7.xyzw, s0
  52: else 
  53:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  54: endif 
  55: dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
  56: sample r4.xyzw, r2.yzyy, t6.xyzw, s1
  57: mul r2.y, r2.w, r4.w
  58: mul r2.yzw, r2.yyyy, cb0[2].xxyz
  59: dp3 r4.x, v1.xyzx, v1.xyzx
  60: rsq r4.x, r4.x
  61: mul r4.xyz, r4.xxxx, v1.xyzx
  62: add r5.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  63: mad r5.xyz, r2.xxxx, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  64: mad r2.x, -r2.x, l(0.779084), l(0.779084)
  65: mul r3.xyz, r2.xxxx, r3.xyzx
  66: add r2.x, -r3.w, l(1.000000)
  67: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  68: dp3 r0.w, r0.xyzx, r0.xyzx
  69: max r0.w, r0.w, l(0.001000)
  70: rsq r0.w, r0.w
  71: mul r0.xyz, r0.wwww, r0.xyzx
  72: dp3 r0.w, r4.xyzx, r1.xyzx
  73: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
  74: dp3_sat r1.y, r4.xyzx, r0.xyzx
  75: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  76: mul r0.y, r0.x, r0.x
  77: dp2 r0.y, r0.yyyy, r2.xxxx
  78: add r0.y, r0.y, l(-0.500000)
  79: add r0.z, -r1.x, l(1.000000)
  80: mul r1.z, r0.z, r0.z
  81: mul r1.z, r1.z, r1.z
  82: mul r0.z, r0.z, r1.z
  83: mad r0.z, r0.y, r0.z, l(1.000000)
  84: add r1.z, -|r0.w|, l(1.000000)
  85: mul r3.w, r1.z, r1.z
  86: mul r3.w, r3.w, r3.w
  87: mul r1.z, r1.z, r3.w
  88: mad r0.y, r0.y, r1.z, l(1.000000)
  89: mul r0.y, r0.y, r0.z
  90: mul r0.z, r2.x, r2.x
  91: max r0.z, r0.z, l(0.002000)
  92: add r1.z, -r0.z, l(1.000000)
  93: mad r2.x, |r0.w|, r1.z, r0.z
  94: mad r1.z, r1.x, r1.z, r0.z
  95: mul r0.w, |r0.w|, r1.z
  96: mad r0.w, r1.x, r2.x, r0.w
  97: add r0.w, r0.w, l(0.000010)
  98: div r0.w, l(0.500000), r0.w
  99: mul r0.z, r0.z, r0.z
 100: mad r1.z, r1.y, r0.z, -r1.y
 101: mad r1.y, r1.z, r1.y, l(1.000000)
 102: mul r0.z, r0.z, l(0.318310)
 103: mad r1.y, r1.y, r1.y, l(0.000000)
 104: div r0.z, r0.z, r1.y
 105: mul r0.z, r0.z, r0.w
 106: mul r0.z, r0.z, l(3.141593)
 107: max r0.z, r0.z, l(0.000100)
 108: sqrt r0.z, r0.z
 109: mul r0.yz, r1.xxxx, r0.yyzy
 110: dp3 r0.w, r5.xyzx, r5.xyzx
 111: ne r0.w, r0.w, l(0.000000)
 112: and r0.w, r0.w, l(0x3f800000)
 113: mul r0.z, r0.w, r0.z
 114: mul r1.xyz, r0.yyyy, r2.yzwy
 115: mul r0.yzw, r2.yyzw, r0.zzzz
 116: add r0.x, -r0.x, l(1.000000)
 117: mul r2.x, r0.x, r0.x
 118: mul r2.x, r2.x, r2.x
 119: mul r0.x, r0.x, r2.x
 120: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 121: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 122: mul r0.xyz, r0.yzwy, r2.xyzx
 123: mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
 124: mul o0.xyz, r1.wwww, r0.xyzx
 125: mov o0.w, l(1.000000)
 126: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SPOT 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 138 math, 8 temp registers, 9 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 9
Set 2D Texture "_Control" to slot 1 sampler slot 4
Set 2D Texture "_Splat0" to slot 2 sampler slot 5
Set 2D Texture "_Splat1" to slot 3 sampler slot 6
Set 2D Texture "_Splat2" to slot 4 sampler slot 7
Set 2D Texture "_Splat3" to slot 5 sampler slot 8
Set 2D Texture "_LightTexture0" to slot 6 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 7 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 9 sampler slot 1

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 224
  Float _Metallic1 at 228
  Float _Metallic2 at 232
  Float _Metallic3 at 236
  Float _Smoothness0 at 240
  Float _Smoothness1 at 244
  Float _Smoothness2 at 248
  Float _Smoothness3 at 252
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v3.xyxx, t0.xyzw, s9
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v3.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[9].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s4
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r5.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r6.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r6.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s5
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[15].x
  25: sample r5.xyzw, r5.zwzz, t3.xyzw, s6
  26: mul r5.xyzw, r4.yyyy, r5.xyzw
  27: mul r5.w, r5.w, cb0[15].y
  28: add r5.xyzw, r5.xyzw, r7.xyzw
  29: sample r7.xyzw, r6.xyxx, t4.xyzw, s7
  30: mul r7.xyzw, r4.zzzz, r7.xyzw
  31: mul r7.w, r7.w, cb0[15].z
  32: add r5.xyzw, r5.xyzw, r7.xyzw
  33: sample r6.xyzw, r6.zwzz, t5.xyzw, s8
  34: mul r6.xyzw, r4.wwww, r6.xyzw
  35: mul r6.w, r6.w, cb0[15].w
  36: add r5.xyzw, r5.xyzw, r6.xyzw
  37: dp4 r2.w, r4.xyzw, cb0[14].xyzw
  38: mul r4.xyzw, v2.yyyy, cb0[5].xyzw
  39: mad r4.xyzw, cb0[4].xyzw, v2.xxxx, r4.xyzw
  40: mad r4.xyzw, cb0[6].xyzw, v2.zzzz, r4.xyzw
  41: add r4.xyzw, r4.xyzw, cb0[7].xyzw
  42: mov r6.x, cb4[9].z
  43: mov r6.y, cb4[10].z
  44: mov r6.z, cb4[11].z
  45: dp3 r2.x, r2.xyzx, r6.xyzx
  46: add r6.xyz, v2.xyzx, -cb3[25].xyzx
  47: dp3 r2.y, r6.xyzx, r6.xyzx
  48: sqrt r2.y, r2.y
  49: add r2.y, -r2.x, r2.y
  50: mad r2.x, cb3[25].w, r2.y, r2.x
  51: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  52: eq r2.y, cb5[0].x, l(1.000000)
  53: if_nz r2.y
  54:   eq r2.y, cb5[0].y, l(1.000000)
  55:   mul r6.xyz, v2.yyyy, cb5[2].xyzx
  56:   mad r6.xyz, cb5[1].xyzx, v2.xxxx, r6.xyzx
  57:   mad r6.xyz, cb5[3].xyzx, v2.zzzz, r6.xyzx
  58:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  59:   movc r6.xyz, r2.yyyy, r6.xyzx, v2.xyzx
  60:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  61:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  62:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  63:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  64:   max r6.x, r2.z, r2.y
  65:   sample r6.xyzw, r6.xzwx, t8.xyzw, s0
  66: else 
  67:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  68: endif 
  69: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
  70: mul r6.xyzw, v2.yyyy, cb3[9].xyzw
  71: mad r6.xyzw, cb3[8].xyzw, v2.xxxx, r6.xyzw
  72: mad r6.xyzw, cb3[10].xyzw, v2.zzzz, r6.xyzw
  73: add r6.xyzw, r6.xyzw, cb3[11].xyzw
  74: div r6.xyz, r6.xyzx, r6.wwww
  75: sample_c_lz r2.z, r6.xyxx, t9.xxxx, s1, r6.z
  76: add r3.w, -cb3[24].x, l(1.000000)
  77: mad r2.z, r2.z, r3.w, cb3[24].x
  78: add r2.y, -r2.z, r2.y
  79: mad r2.x, r2.x, r2.y, r2.z
  80: lt r2.y, l(0.000000), r4.z
  81: and r2.y, r2.y, l(0x3f800000)
  82: div r6.xy, r4.xyxx, r4.wwww
  83: add r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  84: sample r6.xyzw, r6.xyxx, t6.xyzw, s2
  85: mul r2.y, r2.y, r6.w
  86: dp3 r2.z, r4.xyzx, r4.xyzx
  87: sample r4.xyzw, r2.zzzz, t7.xyzw, s3
  88: mul r2.y, r2.y, r4.x
  89: mul r2.x, r2.x, r2.y
  90: mul r2.xyz, r2.xxxx, cb0[2].xyzx
  91: dp3 r3.w, v1.xyzx, v1.xyzx
  92: rsq r3.w, r3.w
  93: mul r4.xyz, r3.wwww, v1.xyzx
  94: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  95: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  96: mad r2.w, -r2.w, l(0.779084), l(0.779084)
  97: mul r5.xyz, r2.wwww, r5.xyzx
  98: add r2.w, -r5.w, l(1.000000)
  99: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 100: dp3 r0.w, r0.xyzx, r0.xyzx
 101: max r0.w, r0.w, l(0.001000)
 102: rsq r0.w, r0.w
 103: mul r0.xyz, r0.wwww, r0.xyzx
 104: dp3 r0.w, r4.xyzx, r3.xyzx
 105: dp3_sat r3.x, r4.xyzx, r1.xyzx
 106: dp3_sat r3.y, r4.xyzx, r0.xyzx
 107: dp3_sat r0.x, r1.xyzx, r0.xyzx
 108: mul r0.y, r0.x, r0.x
 109: dp2 r0.y, r0.yyyy, r2.wwww
 110: add r0.y, r0.y, l(-0.500000)
 111: add r0.z, -r3.x, l(1.000000)
 112: mul r1.x, r0.z, r0.z
 113: mul r1.x, r1.x, r1.x
 114: mul r0.z, r0.z, r1.x
 115: mad r0.z, r0.y, r0.z, l(1.000000)
 116: add r1.x, -|r0.w|, l(1.000000)
 117: mul r1.y, r1.x, r1.x
 118: mul r1.y, r1.y, r1.y
 119: mul r1.x, r1.x, r1.y
 120: mad r0.y, r0.y, r1.x, l(1.000000)
 121: mul r0.y, r0.y, r0.z
 122: mul r0.z, r2.w, r2.w
 123: max r0.z, r0.z, l(0.002000)
 124: add r1.x, -r0.z, l(1.000000)
 125: mad r1.y, |r0.w|, r1.x, r0.z
 126: mad r1.x, r3.x, r1.x, r0.z
 127: mul r0.w, |r0.w|, r1.x
 128: mad r0.w, r3.x, r1.y, r0.w
 129: add r0.w, r0.w, l(0.000010)
 130: div r0.w, l(0.500000), r0.w
 131: mul r0.z, r0.z, r0.z
 132: mad r1.x, r3.y, r0.z, -r3.y
 133: mad r1.x, r1.x, r3.y, l(1.000000)
 134: mul r0.z, r0.z, l(0.318310)
 135: mad r1.x, r1.x, r1.x, l(0.000000)
 136: div r0.z, r0.z, r1.x
 137: mul r0.z, r0.z, r0.w
 138: mul r0.z, r0.z, l(3.141593)
 139: max r0.z, r0.z, l(0.000100)
 140: sqrt r0.z, r0.z
 141: mul r0.yz, r3.xxxx, r0.yyzy
 142: dp3 r0.w, r6.xyzx, r6.xyzx
 143: ne r0.w, r0.w, l(0.000000)
 144: and r0.w, r0.w, l(0x3f800000)
 145: mul r0.z, r0.w, r0.z
 146: mul r1.xyz, r0.yyyy, r2.xyzx
 147: mul r0.yzw, r2.xxyz, r0.zzzz
 148: add r0.x, -r0.x, l(1.000000)
 149: mul r2.x, r0.x, r0.x
 150: mul r2.x, r2.x, r2.x
 151: mul r0.x, r0.x, r2.x
 152: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 153: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 154: mul r0.xyz, r0.yzwy, r2.xyzx
 155: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 156: mul o0.xyz, r1.wwww, r0.xyzx
 157: mov o0.w, l(1.000000)
 158: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SHADOWS_SOFT SPOT 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 167 math, 12 temp registers, 9 textures, 4 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 9
Set 2D Texture "_Control" to slot 1 sampler slot 4
Set 2D Texture "_Splat0" to slot 2 sampler slot 5
Set 2D Texture "_Splat1" to slot 3 sampler slot 6
Set 2D Texture "_Splat2" to slot 4 sampler slot 7
Set 2D Texture "_Splat3" to slot 5 sampler slot 8
Set 2D Texture "_LightTexture0" to slot 6 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 7 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 9 sampler slot 1

Constant Buffer "$Globals" (336 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 144
  Vector4 _LightColor0 at 32
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _Control_TexelSize at 224
  Vector4 _Splat0_ST at 240
  Vector4 _Splat1_ST at 256
  Vector4 _Splat2_ST at 272
  Vector4 _Splat3_ST at 288
  Float _Metallic0 at 304
  Float _Metallic1 at 308
  Float _Metallic2 at 312
  Float _Metallic3 at 316
  Float _Smoothness0 at 320
  Float _Smoothness1 at 324
  Float _Smoothness2 at 328
  Float _Smoothness3 at 332
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[21], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 12
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v3.xyxx, t0.xyzw, s9
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[14].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v3.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[14].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s4
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v3.xyxx, cb0[15].xyxx, cb0[15].zwzz
  19: mad r5.zw, v3.xxxy, cb0[16].xxxy, cb0[16].zzzw
  20: mad r6.xy, v3.xyxx, cb0[17].xyxx, cb0[17].zwzz
  21: mad r6.zw, v3.xxxy, cb0[18].xxxy, cb0[18].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s5
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[20].x
  25: sample r5.xyzw, r5.zwzz, t3.xyzw, s6
  26: mul r5.xyzw, r4.yyyy, r5.xyzw
  27: mul r5.w, r5.w, cb0[20].y
  28: add r5.xyzw, r5.xyzw, r7.xyzw
  29: sample r7.xyzw, r6.xyxx, t4.xyzw, s7
  30: mul r7.xyzw, r4.zzzz, r7.xyzw
  31: mul r7.w, r7.w, cb0[20].z
  32: add r5.xyzw, r5.xyzw, r7.xyzw
  33: sample r6.xyzw, r6.zwzz, t5.xyzw, s8
  34: mul r6.xyzw, r4.wwww, r6.xyzw
  35: mul r6.w, r6.w, cb0[20].w
  36: add r5.xyzw, r5.xyzw, r6.xyzw
  37: dp4 r2.w, r4.xyzw, cb0[19].xyzw
  38: mul r4.xyzw, v2.yyyy, cb0[10].xyzw
  39: mad r4.xyzw, cb0[9].xyzw, v2.xxxx, r4.xyzw
  40: mad r4.xyzw, cb0[11].xyzw, v2.zzzz, r4.xyzw
  41: add r4.xyzw, r4.xyzw, cb0[12].xyzw
  42: mov r6.x, cb4[9].z
  43: mov r6.y, cb4[10].z
  44: mov r6.z, cb4[11].z
  45: dp3 r2.x, r2.xyzx, r6.xyzx
  46: add r6.xyz, v2.xyzx, -cb3[25].xyzx
  47: dp3 r2.y, r6.xyzx, r6.xyzx
  48: sqrt r2.y, r2.y
  49: add r2.y, -r2.x, r2.y
  50: mad r2.x, cb3[25].w, r2.y, r2.x
  51: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  52: eq r2.y, cb5[0].x, l(1.000000)
  53: if_nz r2.y
  54:   eq r2.y, cb5[0].y, l(1.000000)
  55:   mul r6.xyz, v2.yyyy, cb5[2].xyzx
  56:   mad r6.xyz, cb5[1].xyzx, v2.xxxx, r6.xyzx
  57:   mad r6.xyz, cb5[3].xyzx, v2.zzzz, r6.xyzx
  58:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  59:   movc r6.xyz, r2.yyyy, r6.xyzx, v2.xyzx
  60:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  61:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  62:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  63:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  64:   max r6.x, r2.z, r2.y
  65:   sample r6.xyzw, r6.xzwx, t8.xyzw, s0
  66: else 
  67:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  68: endif 
  69: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
  70: lt r2.z, r2.x, l(0.990000)
  71: if_nz r2.z
  72:   mul r6.xyzw, v2.yyyy, cb3[9].xyzw
  73:   mad r6.xyzw, cb3[8].xyzw, v2.xxxx, r6.xyzw
  74:   mad r6.xyzw, cb3[10].xyzw, v2.zzzz, r6.xyzw
  75:   add r6.xyzw, r6.xyzw, cb3[11].xyzw
  76:   div r6.xyz, r6.xyzx, r6.wwww
  77:   mad r7.xy, r6.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  78:   round_ni r7.xy, r7.xyxx
  79:   mad r6.xy, r6.xyxx, cb0[8].zwzz, -r7.xyxx
  80:   add r8.xyzw, r6.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  81:   mul r9.xw, r8.xxxz, r8.xxxz
  82:   mad r7.zw, r9.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r6.xxxy
  83:   add r8.xz, -r6.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
  84:   min r10.xy, r6.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  85:   mad r8.xz, -r10.xxyx, r10.xxyx, r8.xxzx
  86:   max r6.xy, r6.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  87:   mad r6.xy, -r6.xyxx, r6.xyxx, r8.ywyy
  88:   mov r10.x, r7.z
  89:   mov r10.y, r8.x
  90:   mov r10.z, r6.x
  91:   mov r10.w, r9.x
  92:   mul r10.xyzw, r10.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  93:   mov r9.x, r7.w
  94:   mov r9.y, r8.z
  95:   mov r9.z, r6.y
  96:   mul r8.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  97:   add r9.xyzw, r10.ywyw, r10.xzxz
  98:   add r11.xyzw, r8.yyww, r8.xxzz
  99:   div r6.xy, r10.ywyy, r9.zwzz
 100:   add r6.xy, r6.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
 101:   div r7.zw, r8.yyyw, r11.yyyw
 102:   add r7.zw, r7.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
 103:   mul r8.xy, r6.xyxx, cb0[8].xxxx
 104:   mul r8.zw, r7.zzzw, cb0[8].yyyy
 105:   mul r9.xyzw, r9.xyzw, r11.xyzw
 106:   mad r10.xyzw, r7.xyxy, cb0[8].xyxy, r8.xzyz
 107:   sample_c_lz r2.z, r10.xyxx, t9.xxxx, s1, r6.z
 108:   sample_c_lz r3.w, r10.zwzz, t9.xxxx, s1, r6.z
 109:   mul r3.w, r3.w, r9.y
 110:   mad r2.z, r9.x, r2.z, r3.w
 111:   mad r7.xyzw, r7.xyxy, cb0[8].xyxy, r8.xwyw
 112:   sample_c_lz r3.w, r7.xyxx, t9.xxxx, s1, r6.z
 113:   mad r2.z, r9.z, r3.w, r2.z
 114:   sample_c_lz r3.w, r7.zwzz, t9.xxxx, s1, r6.z
 115:   mad r2.z, r9.w, r3.w, r2.z
 116:   add r3.w, -cb3[24].x, l(1.000000)
 117:   mad r2.z, r2.z, r3.w, cb3[24].x
 118: else 
 119:   mov r2.z, l(1.000000)
 120: endif 
 121: add r2.y, -r2.z, r2.y
 122: mad r2.x, r2.x, r2.y, r2.z
 123: lt r2.y, l(0.000000), r4.z
 124: and r2.y, r2.y, l(0x3f800000)
 125: div r6.xy, r4.xyxx, r4.wwww
 126: add r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 127: sample r6.xyzw, r6.xyxx, t6.xyzw, s2
 128: mul r2.y, r2.y, r6.w
 129: dp3 r2.z, r4.xyzx, r4.xyzx
 130: sample r4.xyzw, r2.zzzz, t7.xyzw, s3
 131: mul r2.y, r2.y, r4.x
 132: mul r2.x, r2.x, r2.y
 133: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 134: dp3 r3.w, v1.xyzx, v1.xyzx
 135: rsq r3.w, r3.w
 136: mul r4.xyz, r3.wwww, v1.xyzx
 137: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 138: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 139: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 140: mul r5.xyz, r2.wwww, r5.xyzx
 141: add r2.w, -r5.w, l(1.000000)
 142: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 143: dp3 r0.w, r0.xyzx, r0.xyzx
 144: max r0.w, r0.w, l(0.001000)
 145: rsq r0.w, r0.w
 146: mul r0.xyz, r0.wwww, r0.xyzx
 147: dp3 r0.w, r4.xyzx, r3.xyzx
 148: dp3_sat r3.x, r4.xyzx, r1.xyzx
 149: dp3_sat r3.y, r4.xyzx, r0.xyzx
 150: dp3_sat r0.x, r1.xyzx, r0.xyzx
 151: mul r0.y, r0.x, r0.x
 152: dp2 r0.y, r0.yyyy, r2.wwww
 153: add r0.y, r0.y, l(-0.500000)
 154: add r0.z, -r3.x, l(1.000000)
 155: mul r1.x, r0.z, r0.z
 156: mul r1.x, r1.x, r1.x
 157: mul r0.z, r0.z, r1.x
 158: mad r0.z, r0.y, r0.z, l(1.000000)
 159: add r1.x, -|r0.w|, l(1.000000)
 160: mul r1.y, r1.x, r1.x
 161: mul r1.y, r1.y, r1.y
 162: mul r1.x, r1.x, r1.y
 163: mad r0.y, r0.y, r1.x, l(1.000000)
 164: mul r0.y, r0.y, r0.z
 165: mul r0.z, r2.w, r2.w
 166: max r0.z, r0.z, l(0.002000)
 167: add r1.x, -r0.z, l(1.000000)
 168: mad r1.y, |r0.w|, r1.x, r0.z
 169: mad r1.x, r3.x, r1.x, r0.z
 170: mul r0.w, |r0.w|, r1.x
 171: mad r0.w, r3.x, r1.y, r0.w
 172: add r0.w, r0.w, l(0.000010)
 173: div r0.w, l(0.500000), r0.w
 174: mul r0.z, r0.z, r0.z
 175: mad r1.x, r3.y, r0.z, -r3.y
 176: mad r1.x, r1.x, r3.y, l(1.000000)
 177: mul r0.z, r0.z, l(0.318310)
 178: mad r1.x, r1.x, r1.x, l(0.000000)
 179: div r0.z, r0.z, r1.x
 180: mul r0.z, r0.z, r0.w
 181: mul r0.z, r0.z, l(3.141593)
 182: max r0.z, r0.z, l(0.000100)
 183: sqrt r0.z, r0.z
 184: mul r0.yz, r3.xxxx, r0.yyzy
 185: dp3 r0.w, r6.xyzx, r6.xyzx
 186: ne r0.w, r0.w, l(0.000000)
 187: and r0.w, r0.w, l(0x3f800000)
 188: mul r0.z, r0.w, r0.z
 189: mul r1.xyz, r0.yyyy, r2.xyzx
 190: mul r0.yzw, r2.xxyz, r0.zzzz
 191: add r0.x, -r0.x, l(1.000000)
 192: mul r2.x, r0.x, r0.x
 193: mul r2.x, r2.x, r2.x
 194: mul r0.x, r0.x, r2.x
 195: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 196: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 197: mul r0.xyz, r0.yzwy, r2.xyzx
 198: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 199: mul o0.xyz, r1.wwww, r0.xyzx
 200: mov o0.w, l(1.000000)
 201: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 116 math, 6 temp registers, 8 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 7
Set 2D Texture "_Control" to slot 1 sampler slot 2
Set 2D Texture "_Splat0" to slot 2 sampler slot 3
Set 2D Texture "_Splat1" to slot 3 sampler slot 4
Set 2D Texture "_Splat2" to slot 4 sampler slot 5
Set 2D Texture "_Splat3" to slot 5 sampler slot 6
Set 2D Texture "_ShadowMapTexture" to slot 6 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 0

Constant Buffer "$Globals" (192 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 160
  Float _Metallic1 at 164
  Float _Metallic2 at 168
  Float _Metallic3 at 172
  Float _Smoothness0 at 176
  Float _Smoothness1 at 180
  Float _Smoothness2 at 184
  Float _Smoothness3 at 188
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_input_ps linear v4.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v3.xyxx, t0.xyzw, s7
   5: eq r1.w, r2.x, l(0.000000)
   6: discard_nz r1.w
   7: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r2.xy, v3.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r2.xy, r2.xyxx, cb0[5].xyxx
  10: sample r2.xyzw, r2.xyxx, t1.xyzw, s2
  11: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r3.x, r1.w, l(0.001000)
  13: div r2.xyzw, r2.xyzw, r3.xxxx
  14: mad r3.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r3.zw, v3.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r4.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r4.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r5.xyzw, r3.xyxx, t2.xyzw, s3
  19: mul r5.xyzw, r2.xxxx, r5.xyzw
  20: mul r5.w, r5.w, cb0[11].x
  21: sample r3.xyzw, r3.zwzz, t3.xyzw, s4
  22: mul r3.xyzw, r2.yyyy, r3.xyzw
  23: mul r3.w, r3.w, cb0[11].y
  24: add r3.xyzw, r3.xyzw, r5.xyzw
  25: sample r5.xyzw, r4.xyxx, t4.xyzw, s5
  26: mul r5.xyzw, r2.zzzz, r5.xyzw
  27: mul r5.w, r5.w, cb0[11].z
  28: add r3.xyzw, r3.xyzw, r5.xyzw
  29: sample r4.xyzw, r4.zwzz, t5.xyzw, s6
  30: mul r4.xyzw, r2.wwww, r4.xyzw
  31: mul r4.w, r4.w, cb0[11].w
  32: add r3.xyzw, r3.xyzw, r4.xyzw
  33: dp4 r2.x, r2.xyzw, cb0[10].xyzw
  34: mov r4.x, cb4[9].z
  35: mov r4.y, cb4[10].z
  36: mov r4.z, cb4[11].z
  37: dp3 r2.y, r0.xyzx, r4.xyzx
  38: add r4.xyz, v2.xyzx, -cb3[25].xyzx
  39: dp3 r2.z, r4.xyzx, r4.xyzx
  40: sqrt r2.z, r2.z
  41: add r2.z, -r2.y, r2.z
  42: mad r2.y, cb3[25].w, r2.z, r2.y
  43: mad_sat r2.y, r2.y, cb3[24].z, cb3[24].w
  44: eq r2.z, cb5[0].x, l(1.000000)
  45: if_nz r2.z
  46:   eq r2.z, cb5[0].y, l(1.000000)
  47:   mul r4.xyz, v2.yyyy, cb5[2].xyzx
  48:   mad r4.xyz, cb5[1].xyzx, v2.xxxx, r4.xyzx
  49:   mad r4.xyz, cb5[3].xyzx, v2.zzzz, r4.xyzx
  50:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  51:   movc r4.xyz, r2.zzzz, r4.xyzx, v2.xyzx
  52:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  53:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  54:   mad r2.z, r4.y, l(0.250000), l(0.750000)
  55:   mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
  56:   max r4.x, r2.w, r2.z
  57:   sample r4.xyzw, r4.xzwx, t7.xyzw, s0
  58: else 
  59:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  60: endif 
  61: dp4_sat r2.z, r4.xyzw, cb2[46].xyzw
  62: div r4.xy, v4.xyxx, v4.wwww
  63: sample r4.xyzw, r4.xyxx, t6.xyzw, s1
  64: add r2.z, r2.z, -r4.x
  65: mad r2.y, r2.y, r2.z, r4.x
  66: mul r2.yzw, r2.yyyy, cb0[2].xxyz
  67: dp3 r4.x, v1.xyzx, v1.xyzx
  68: rsq r4.x, r4.x
  69: mul r4.xyz, r4.xxxx, v1.xyzx
  70: add r5.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  71: mad r5.xyz, r2.xxxx, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  72: mad r2.x, -r2.x, l(0.779084), l(0.779084)
  73: mul r3.xyz, r2.xxxx, r3.xyzx
  74: add r2.x, -r3.w, l(1.000000)
  75: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  76: dp3 r0.w, r0.xyzx, r0.xyzx
  77: max r0.w, r0.w, l(0.001000)
  78: rsq r0.w, r0.w
  79: mul r0.xyz, r0.wwww, r0.xyzx
  80: dp3 r0.w, r4.xyzx, r1.xyzx
  81: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
  82: dp3_sat r1.y, r4.xyzx, r0.xyzx
  83: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  84: mul r0.y, r0.x, r0.x
  85: dp2 r0.y, r0.yyyy, r2.xxxx
  86: add r0.y, r0.y, l(-0.500000)
  87: add r0.z, -r1.x, l(1.000000)
  88: mul r1.z, r0.z, r0.z
  89: mul r1.z, r1.z, r1.z
  90: mul r0.z, r0.z, r1.z
  91: mad r0.z, r0.y, r0.z, l(1.000000)
  92: add r1.z, -|r0.w|, l(1.000000)
  93: mul r3.w, r1.z, r1.z
  94: mul r3.w, r3.w, r3.w
  95: mul r1.z, r1.z, r3.w
  96: mad r0.y, r0.y, r1.z, l(1.000000)
  97: mul r0.y, r0.y, r0.z
  98: mul r0.z, r2.x, r2.x
  99: max r0.z, r0.z, l(0.002000)
 100: add r1.z, -r0.z, l(1.000000)
 101: mad r2.x, |r0.w|, r1.z, r0.z
 102: mad r1.z, r1.x, r1.z, r0.z
 103: mul r0.w, |r0.w|, r1.z
 104: mad r0.w, r1.x, r2.x, r0.w
 105: add r0.w, r0.w, l(0.000010)
 106: div r0.w, l(0.500000), r0.w
 107: mul r0.z, r0.z, r0.z
 108: mad r1.z, r1.y, r0.z, -r1.y
 109: mad r1.y, r1.z, r1.y, l(1.000000)
 110: mul r0.z, r0.z, l(0.318310)
 111: mad r1.y, r1.y, r1.y, l(0.000000)
 112: div r0.z, r0.z, r1.y
 113: mul r0.z, r0.z, r0.w
 114: mul r0.z, r0.z, l(3.141593)
 115: max r0.z, r0.z, l(0.000100)
 116: sqrt r0.z, r0.z
 117: mul r0.yz, r1.xxxx, r0.yyzy
 118: dp3 r0.w, r5.xyzx, r5.xyzx
 119: ne r0.w, r0.w, l(0.000000)
 120: and r0.w, r0.w, l(0x3f800000)
 121: mul r0.z, r0.w, r0.z
 122: mul r1.xyz, r0.yyyy, r2.yzwy
 123: mul r0.yzw, r2.yyzw, r0.zzzz
 124: add r0.x, -r0.x, l(1.000000)
 125: mul r2.x, r0.x, r0.x
 126: mul r2.x, r2.x, r2.x
 127: mul r0.x, r0.x, r2.x
 128: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 129: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 130: mul r0.xyz, r0.yzwy, r2.xyzx
 131: mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
 132: mul o0.xyz, r1.wwww, r0.xyzx
 133: mov o0.w, l(1.000000)
 134: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 121 math, 6 temp registers, 9 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 8
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_ShadowMapTexture" to slot 6 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 7 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 0

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 224
  Float _Metallic1 at 228
  Float _Metallic2 at 232
  Float _Metallic3 at 236
  Float _Smoothness0 at 240
  Float _Smoothness1 at 244
  Float _Smoothness2 at 248
  Float _Smoothness3 at 252
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xy          4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_input_ps linear v5.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v2.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v3.xyxx, t0.xyzw, s8
   5: eq r1.w, r2.x, l(0.000000)
   6: discard_nz r1.w
   7: add r2.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r2.xy, v3.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r2.xy, r2.xyxx, cb0[9].xyxx
  10: sample r2.xyzw, r2.xyxx, t1.xyzw, s3
  11: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r3.x, r1.w, l(0.001000)
  13: div r2.xyzw, r2.xyzw, r3.xxxx
  14: mad r3.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
  15: mad r3.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
  16: mad r4.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
  17: mad r4.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
  18: sample r5.xyzw, r3.xyxx, t2.xyzw, s4
  19: mul r5.xyzw, r2.xxxx, r5.xyzw
  20: mul r5.w, r5.w, cb0[15].x
  21: sample r3.xyzw, r3.zwzz, t3.xyzw, s5
  22: mul r3.xyzw, r2.yyyy, r3.xyzw
  23: mul r3.w, r3.w, cb0[15].y
  24: add r3.xyzw, r3.xyzw, r5.xyzw
  25: sample r5.xyzw, r4.xyxx, t4.xyzw, s6
  26: mul r5.xyzw, r2.zzzz, r5.xyzw
  27: mul r5.w, r5.w, cb0[15].z
  28: add r3.xyzw, r3.xyzw, r5.xyzw
  29: sample r4.xyzw, r4.zwzz, t5.xyzw, s7
  30: mul r4.xyzw, r2.wwww, r4.xyzw
  31: mul r4.w, r4.w, cb0[15].w
  32: add r3.xyzw, r3.xyzw, r4.xyzw
  33: dp4 r2.x, r2.xyzw, cb0[14].xyzw
  34: mul r2.yz, v2.yyyy, cb0[5].xxyx
  35: mad r2.yz, cb0[4].xxyx, v2.xxxx, r2.yyzy
  36: mad r2.yz, cb0[6].xxyx, v2.zzzz, r2.yyzy
  37: add r2.yz, r2.yyzy, cb0[7].xxyx
  38: mov r4.x, cb4[9].z
  39: mov r4.y, cb4[10].z
  40: mov r4.z, cb4[11].z
  41: dp3 r2.w, r0.xyzx, r4.xyzx
  42: add r4.xyz, v2.xyzx, -cb3[25].xyzx
  43: dp3 r4.x, r4.xyzx, r4.xyzx
  44: sqrt r4.x, r4.x
  45: add r4.x, -r2.w, r4.x
  46: mad r2.w, cb3[25].w, r4.x, r2.w
  47: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  48: eq r4.x, cb5[0].x, l(1.000000)
  49: if_nz r4.x
  50:   eq r4.x, cb5[0].y, l(1.000000)
  51:   mul r4.yzw, v2.yyyy, cb5[2].xxyz
  52:   mad r4.yzw, cb5[1].xxyz, v2.xxxx, r4.yyzw
  53:   mad r4.yzw, cb5[3].xxyz, v2.zzzz, r4.yyzw
  54:   add r4.yzw, r4.yyzw, cb5[4].xxyz
  55:   movc r4.xyz, r4.xxxx, r4.yzwy, v2.xyzx
  56:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  57:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  58:   mad r4.y, r4.y, l(0.250000), l(0.750000)
  59:   mad r5.x, cb5[0].z, l(0.500000), l(0.750000)
  60:   max r4.x, r4.y, r5.x
  61:   sample r4.xyzw, r4.xzwx, t8.xyzw, s0
  62: else 
  63:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  64: endif 
  65: dp4_sat r4.x, r4.xyzw, cb2[46].xyzw
  66: div r4.yz, v5.xxyx, v5.wwww
  67: sample r5.xyzw, r4.yzyy, t6.xyzw, s1
  68: add r4.x, r4.x, -r5.x
  69: mad r2.w, r2.w, r4.x, r5.x
  70: sample r4.xyzw, r2.yzyy, t7.xyzw, s2
  71: mul r2.y, r2.w, r4.w
  72: mul r2.yzw, r2.yyyy, cb0[2].xxyz
  73: dp3 r4.x, v1.xyzx, v1.xyzx
  74: rsq r4.x, r4.x
  75: mul r4.xyz, r4.xxxx, v1.xyzx
  76: add r5.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  77: mad r5.xyz, r2.xxxx, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  78: mad r2.x, -r2.x, l(0.779084), l(0.779084)
  79: mul r3.xyz, r2.xxxx, r3.xyzx
  80: add r2.x, -r3.w, l(1.000000)
  81: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  82: dp3 r0.w, r0.xyzx, r0.xyzx
  83: max r0.w, r0.w, l(0.001000)
  84: rsq r0.w, r0.w
  85: mul r0.xyz, r0.wwww, r0.xyzx
  86: dp3 r0.w, r4.xyzx, r1.xyzx
  87: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
  88: dp3_sat r1.y, r4.xyzx, r0.xyzx
  89: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  90: mul r0.y, r0.x, r0.x
  91: dp2 r0.y, r0.yyyy, r2.xxxx
  92: add r0.y, r0.y, l(-0.500000)
  93: add r0.z, -r1.x, l(1.000000)
  94: mul r1.z, r0.z, r0.z
  95: mul r1.z, r1.z, r1.z
  96: mul r0.z, r0.z, r1.z
  97: mad r0.z, r0.y, r0.z, l(1.000000)
  98: add r1.z, -|r0.w|, l(1.000000)
  99: mul r3.w, r1.z, r1.z
 100: mul r3.w, r3.w, r3.w
 101: mul r1.z, r1.z, r3.w
 102: mad r0.y, r0.y, r1.z, l(1.000000)
 103: mul r0.y, r0.y, r0.z
 104: mul r0.z, r2.x, r2.x
 105: max r0.z, r0.z, l(0.002000)
 106: add r1.z, -r0.z, l(1.000000)
 107: mad r2.x, |r0.w|, r1.z, r0.z
 108: mad r1.z, r1.x, r1.z, r0.z
 109: mul r0.w, |r0.w|, r1.z
 110: mad r0.w, r1.x, r2.x, r0.w
 111: add r0.w, r0.w, l(0.000010)
 112: div r0.w, l(0.500000), r0.w
 113: mul r0.z, r0.z, r0.z
 114: mad r1.z, r1.y, r0.z, -r1.y
 115: mad r1.y, r1.z, r1.y, l(1.000000)
 116: mul r0.z, r0.z, l(0.318310)
 117: mad r1.y, r1.y, r1.y, l(0.000000)
 118: div r0.z, r0.z, r1.y
 119: mul r0.z, r0.z, r0.w
 120: mul r0.z, r0.z, l(3.141593)
 121: max r0.z, r0.z, l(0.000100)
 122: sqrt r0.z, r0.z
 123: mul r0.yz, r1.xxxx, r0.yyzy
 124: dp3 r0.w, r5.xyzx, r5.xyzx
 125: ne r0.w, r0.w, l(0.000000)
 126: and r0.w, r0.w, l(0x3f800000)
 127: mul r0.z, r0.w, r0.z
 128: mul r1.xyz, r0.yyyy, r2.yzwy
 129: mul r0.yzw, r2.yyzw, r0.zzzz
 130: add r0.x, -r0.x, l(1.000000)
 131: mul r2.x, r0.x, r0.x
 132: mul r2.x, r2.x, r2.x
 133: mul r0.x, r0.x, r2.x
 134: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 135: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 136: mul r0.xyz, r0.yzwy, r2.xyzx
 137: mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
 138: mul o0.xyz, r1.wwww, r0.xyzx
 139: mov o0.w, l(1.000000)
 140: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 136 math, 8 temp registers, 8 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 8
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_LightTexture0" to slot 6 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 8 sampler slot 1

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 224
  Float _Metallic1 at 228
  Float _Metallic2 at 232
  Float _Metallic3 at 236
  Float _Smoothness0 at 240
  Float _Smoothness1 at 244
  Float _Smoothness2 at 248
  Float _Smoothness3 at 252
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_resource_texturecube (float,float,float,float) t8
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v3.xyxx, t0.xyzw, s8
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v3.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[9].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s3
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r5.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r6.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r6.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s4
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[15].x
  25: sample r5.xyzw, r5.zwzz, t3.xyzw, s5
  26: mul r5.xyzw, r4.yyyy, r5.xyzw
  27: mul r5.w, r5.w, cb0[15].y
  28: add r5.xyzw, r5.xyzw, r7.xyzw
  29: sample r7.xyzw, r6.xyxx, t4.xyzw, s6
  30: mul r7.xyzw, r4.zzzz, r7.xyzw
  31: mul r7.w, r7.w, cb0[15].z
  32: add r5.xyzw, r5.xyzw, r7.xyzw
  33: sample r6.xyzw, r6.zwzz, t5.xyzw, s7
  34: mul r6.xyzw, r4.wwww, r6.xyzw
  35: mul r6.w, r6.w, cb0[15].w
  36: add r5.xyzw, r5.xyzw, r6.xyzw
  37: dp4 r2.w, r4.xyzw, cb0[14].xyzw
  38: mul r4.xyz, v2.yyyy, cb0[5].xyzx
  39: mad r4.xyz, cb0[4].xyzx, v2.xxxx, r4.xyzx
  40: mad r4.xyz, cb0[6].xyzx, v2.zzzz, r4.xyzx
  41: add r4.xyz, r4.xyzx, cb0[7].xyzx
  42: mov r6.x, cb4[9].z
  43: mov r6.y, cb4[10].z
  44: mov r6.z, cb4[11].z
  45: dp3 r2.x, r2.xyzx, r6.xyzx
  46: add r6.xyz, v2.xyzx, -cb3[25].xyzx
  47: dp3 r2.y, r6.xyzx, r6.xyzx
  48: sqrt r2.y, r2.y
  49: add r2.y, -r2.x, r2.y
  50: mad r2.x, cb3[25].w, r2.y, r2.x
  51: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  52: eq r2.y, cb5[0].x, l(1.000000)
  53: if_nz r2.y
  54:   eq r2.y, cb5[0].y, l(1.000000)
  55:   mul r6.xyz, v2.yyyy, cb5[2].xyzx
  56:   mad r6.xyz, cb5[1].xyzx, v2.xxxx, r6.xyzx
  57:   mad r6.xyz, cb5[3].xyzx, v2.zzzz, r6.xyzx
  58:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  59:   movc r6.xyz, r2.yyyy, r6.xyzx, v2.xyzx
  60:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  61:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  62:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  63:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  64:   max r6.x, r2.z, r2.y
  65:   sample r6.xyzw, r6.xzwx, t7.xyzw, s0
  66: else 
  67:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  68: endif 
  69: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
  70: add r6.xyz, v2.xyzx, -cb2[1].xyzx
  71: max r2.z, |r6.y|, |r6.x|
  72: max r2.z, |r6.z|, r2.z
  73: add r2.z, r2.z, -cb2[2].z
  74: max r2.z, r2.z, l(0.000010)
  75: mul r2.z, r2.z, cb2[2].w
  76: div r2.z, cb2[2].y, r2.z
  77: add r2.z, r2.z, -cb2[2].x
  78: add r2.z, -r2.z, l(1.000000)
  79: sample_c_lz r2.z, r6.xyzx, t8.xxxx, s1, r2.z
  80: add r3.w, -cb3[24].x, l(1.000000)
  81: mad r2.z, r2.z, r3.w, cb3[24].x
  82: add r2.y, -r2.z, r2.y
  83: mad r2.x, r2.x, r2.y, r2.z
  84: dp3 r2.y, r4.xyzx, r4.xyzx
  85: sample r4.xyzw, r2.yyyy, t6.xyzw, s2
  86: mul r2.x, r2.x, r4.x
  87: mul r2.xyz, r2.xxxx, cb0[2].xyzx
  88: dp3 r3.w, v1.xyzx, v1.xyzx
  89: rsq r3.w, r3.w
  90: mul r4.xyz, r3.wwww, v1.xyzx
  91: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  92: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  93: mad r2.w, -r2.w, l(0.779084), l(0.779084)
  94: mul r5.xyz, r2.wwww, r5.xyzx
  95: add r2.w, -r5.w, l(1.000000)
  96: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
  97: dp3 r0.w, r0.xyzx, r0.xyzx
  98: max r0.w, r0.w, l(0.001000)
  99: rsq r0.w, r0.w
 100: mul r0.xyz, r0.wwww, r0.xyzx
 101: dp3 r0.w, r4.xyzx, r3.xyzx
 102: dp3_sat r3.x, r4.xyzx, r1.xyzx
 103: dp3_sat r3.y, r4.xyzx, r0.xyzx
 104: dp3_sat r0.x, r1.xyzx, r0.xyzx
 105: mul r0.y, r0.x, r0.x
 106: dp2 r0.y, r0.yyyy, r2.wwww
 107: add r0.y, r0.y, l(-0.500000)
 108: add r0.z, -r3.x, l(1.000000)
 109: mul r1.x, r0.z, r0.z
 110: mul r1.x, r1.x, r1.x
 111: mul r0.z, r0.z, r1.x
 112: mad r0.z, r0.y, r0.z, l(1.000000)
 113: add r1.x, -|r0.w|, l(1.000000)
 114: mul r1.y, r1.x, r1.x
 115: mul r1.y, r1.y, r1.y
 116: mul r1.x, r1.x, r1.y
 117: mad r0.y, r0.y, r1.x, l(1.000000)
 118: mul r0.y, r0.y, r0.z
 119: mul r0.z, r2.w, r2.w
 120: max r0.z, r0.z, l(0.002000)
 121: add r1.x, -r0.z, l(1.000000)
 122: mad r1.y, |r0.w|, r1.x, r0.z
 123: mad r1.x, r3.x, r1.x, r0.z
 124: mul r0.w, |r0.w|, r1.x
 125: mad r0.w, r3.x, r1.y, r0.w
 126: add r0.w, r0.w, l(0.000010)
 127: div r0.w, l(0.500000), r0.w
 128: mul r0.z, r0.z, r0.z
 129: mad r1.x, r3.y, r0.z, -r3.y
 130: mad r1.x, r1.x, r3.y, l(1.000000)
 131: mul r0.z, r0.z, l(0.318310)
 132: mad r1.x, r1.x, r1.x, l(0.000000)
 133: div r0.z, r0.z, r1.x
 134: mul r0.z, r0.z, r0.w
 135: mul r0.z, r0.z, l(3.141593)
 136: max r0.z, r0.z, l(0.000100)
 137: sqrt r0.z, r0.z
 138: mul r0.yz, r3.xxxx, r0.yyzy
 139: dp3 r0.w, r6.xyzx, r6.xyzx
 140: ne r0.w, r0.w, l(0.000000)
 141: and r0.w, r0.w, l(0x3f800000)
 142: mul r0.z, r0.w, r0.z
 143: mul r1.xyz, r0.yyyy, r2.xyzx
 144: mul r0.yzw, r2.xxyz, r0.zzzz
 145: add r0.x, -r0.x, l(1.000000)
 146: mul r2.x, r0.x, r0.x
 147: mul r2.x, r2.x, r2.x
 148: mul r0.x, r0.x, r2.x
 149: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 150: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 151: mul r0.xyz, r0.yzwy, r2.xyzx
 152: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 153: mul o0.xyz, r1.wwww, r0.xyzx
 154: mov o0.w, l(1.000000)
 155: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 142 math, 9 temp registers, 8 textures, 4 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 8
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_LightTexture0" to slot 6 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 8 sampler slot 1

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 224
  Float _Metallic1 at 228
  Float _Metallic2 at 232
  Float _Metallic3 at 236
  Float _Smoothness0 at 240
  Float _Smoothness1 at 244
  Float _Smoothness2 at 248
  Float _Smoothness3 at 252
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_resource_texturecube (float,float,float,float) t8
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v3.xyxx, t0.xyzw, s8
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v3.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[9].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s3
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r5.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r6.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r6.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s4
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[15].x
  25: sample r5.xyzw, r5.zwzz, t3.xyzw, s5
  26: mul r5.xyzw, r4.yyyy, r5.xyzw
  27: mul r5.w, r5.w, cb0[15].y
  28: add r5.xyzw, r5.xyzw, r7.xyzw
  29: sample r7.xyzw, r6.xyxx, t4.xyzw, s6
  30: mul r7.xyzw, r4.zzzz, r7.xyzw
  31: mul r7.w, r7.w, cb0[15].z
  32: add r5.xyzw, r5.xyzw, r7.xyzw
  33: sample r6.xyzw, r6.zwzz, t5.xyzw, s7
  34: mul r6.xyzw, r4.wwww, r6.xyzw
  35: mul r6.w, r6.w, cb0[15].w
  36: add r5.xyzw, r5.xyzw, r6.xyzw
  37: dp4 r2.w, r4.xyzw, cb0[14].xyzw
  38: mul r4.xyz, v2.yyyy, cb0[5].xyzx
  39: mad r4.xyz, cb0[4].xyzx, v2.xxxx, r4.xyzx
  40: mad r4.xyz, cb0[6].xyzx, v2.zzzz, r4.xyzx
  41: add r4.xyz, r4.xyzx, cb0[7].xyzx
  42: mov r6.x, cb4[9].z
  43: mov r6.y, cb4[10].z
  44: mov r6.z, cb4[11].z
  45: dp3 r2.x, r2.xyzx, r6.xyzx
  46: add r6.xyz, v2.xyzx, -cb3[25].xyzx
  47: dp3 r2.y, r6.xyzx, r6.xyzx
  48: sqrt r2.y, r2.y
  49: add r2.y, -r2.x, r2.y
  50: mad r2.x, cb3[25].w, r2.y, r2.x
  51: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  52: eq r2.y, cb5[0].x, l(1.000000)
  53: if_nz r2.y
  54:   eq r2.y, cb5[0].y, l(1.000000)
  55:   mul r6.xyz, v2.yyyy, cb5[2].xyzx
  56:   mad r6.xyz, cb5[1].xyzx, v2.xxxx, r6.xyzx
  57:   mad r6.xyz, cb5[3].xyzx, v2.zzzz, r6.xyzx
  58:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  59:   movc r6.xyz, r2.yyyy, r6.xyzx, v2.xyzx
  60:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  61:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  62:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  63:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  64:   max r6.x, r2.z, r2.y
  65:   sample r6.xyzw, r6.xzwx, t7.xyzw, s0
  66: else 
  67:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  68: endif 
  69: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
  70: lt r2.z, r2.x, l(0.990000)
  71: if_nz r2.z
  72:   add r6.xyz, v2.xyzx, -cb2[1].xyzx
  73:   max r2.z, |r6.y|, |r6.x|
  74:   max r2.z, |r6.z|, r2.z
  75:   add r2.z, r2.z, -cb2[2].z
  76:   max r2.z, r2.z, l(0.000010)
  77:   mul r2.z, r2.z, cb2[2].w
  78:   div r2.z, cb2[2].y, r2.z
  79:   add r2.z, r2.z, -cb2[2].x
  80:   add r2.z, -r2.z, l(1.000000)
  81:   add r7.xyz, r6.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  82:   sample_c_lz r7.x, r7.xyzx, t8.xxxx, s1, r2.z
  83:   add r8.xyz, r6.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  84:   sample_c_lz r7.y, r8.xyzx, t8.xxxx, s1, r2.z
  85:   add r8.xyz, r6.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  86:   sample_c_lz r7.z, r8.xyzx, t8.xxxx, s1, r2.z
  87:   add r6.xyz, r6.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  88:   sample_c_lz r7.w, r6.xyzx, t8.xxxx, s1, r2.z
  89:   dp4 r2.z, r7.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  90:   add r3.w, -cb3[24].x, l(1.000000)
  91:   mad r2.z, r2.z, r3.w, cb3[24].x
  92: else 
  93:   mov r2.z, l(1.000000)
  94: endif 
  95: add r2.y, -r2.z, r2.y
  96: mad r2.x, r2.x, r2.y, r2.z
  97: dp3 r2.y, r4.xyzx, r4.xyzx
  98: sample r4.xyzw, r2.yyyy, t6.xyzw, s2
  99: mul r2.x, r2.x, r4.x
 100: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 101: dp3 r3.w, v1.xyzx, v1.xyzx
 102: rsq r3.w, r3.w
 103: mul r4.xyz, r3.wwww, v1.xyzx
 104: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 105: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 106: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 107: mul r5.xyz, r2.wwww, r5.xyzx
 108: add r2.w, -r5.w, l(1.000000)
 109: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 110: dp3 r0.w, r0.xyzx, r0.xyzx
 111: max r0.w, r0.w, l(0.001000)
 112: rsq r0.w, r0.w
 113: mul r0.xyz, r0.wwww, r0.xyzx
 114: dp3 r0.w, r4.xyzx, r3.xyzx
 115: dp3_sat r3.x, r4.xyzx, r1.xyzx
 116: dp3_sat r3.y, r4.xyzx, r0.xyzx
 117: dp3_sat r0.x, r1.xyzx, r0.xyzx
 118: mul r0.y, r0.x, r0.x
 119: dp2 r0.y, r0.yyyy, r2.wwww
 120: add r0.y, r0.y, l(-0.500000)
 121: add r0.z, -r3.x, l(1.000000)
 122: mul r1.x, r0.z, r0.z
 123: mul r1.x, r1.x, r1.x
 124: mul r0.z, r0.z, r1.x
 125: mad r0.z, r0.y, r0.z, l(1.000000)
 126: add r1.x, -|r0.w|, l(1.000000)
 127: mul r1.y, r1.x, r1.x
 128: mul r1.y, r1.y, r1.y
 129: mul r1.x, r1.x, r1.y
 130: mad r0.y, r0.y, r1.x, l(1.000000)
 131: mul r0.y, r0.y, r0.z
 132: mul r0.z, r2.w, r2.w
 133: max r0.z, r0.z, l(0.002000)
 134: add r1.x, -r0.z, l(1.000000)
 135: mad r1.y, |r0.w|, r1.x, r0.z
 136: mad r1.x, r3.x, r1.x, r0.z
 137: mul r0.w, |r0.w|, r1.x
 138: mad r0.w, r3.x, r1.y, r0.w
 139: add r0.w, r0.w, l(0.000010)
 140: div r0.w, l(0.500000), r0.w
 141: mul r0.z, r0.z, r0.z
 142: mad r1.x, r3.y, r0.z, -r3.y
 143: mad r1.x, r1.x, r3.y, l(1.000000)
 144: mul r0.z, r0.z, l(0.318310)
 145: mad r1.x, r1.x, r1.x, l(0.000000)
 146: div r0.z, r0.z, r1.x
 147: mul r0.z, r0.z, r0.w
 148: mul r0.z, r0.z, l(3.141593)
 149: max r0.z, r0.z, l(0.000100)
 150: sqrt r0.z, r0.z
 151: mul r0.yz, r3.xxxx, r0.yyzy
 152: dp3 r0.w, r6.xyzx, r6.xyzx
 153: ne r0.w, r0.w, l(0.000000)
 154: and r0.w, r0.w, l(0x3f800000)
 155: mul r0.z, r0.w, r0.z
 156: mul r1.xyz, r0.yyyy, r2.xyzx
 157: mul r0.yzw, r2.xxyz, r0.zzzz
 158: add r0.x, -r0.x, l(1.000000)
 159: mul r2.x, r0.x, r0.x
 160: mul r2.x, r2.x, r2.x
 161: mul r0.x, r0.x, r2.x
 162: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 163: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 164: mul r0.xyz, r0.yzwy, r2.xyzx
 165: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 166: mul o0.xyz, r1.wwww, r0.xyzx
 167: mov o0.w, l(1.000000)
 168: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 137 math, 8 temp registers, 9 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 9
Set 2D Texture "_Control" to slot 1 sampler slot 4
Set 2D Texture "_Splat0" to slot 2 sampler slot 5
Set 2D Texture "_Splat1" to slot 3 sampler slot 6
Set 2D Texture "_Splat2" to slot 4 sampler slot 7
Set 2D Texture "_Splat3" to slot 5 sampler slot 8
Set 2D Texture "_LightTextureB0" to slot 6 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 7 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 9 sampler slot 1

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 224
  Float _Metallic1 at 228
  Float _Metallic2 at 232
  Float _Metallic3 at 236
  Float _Smoothness0 at 240
  Float _Smoothness1 at 244
  Float _Smoothness2 at 248
  Float _Smoothness3 at 252
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_resource_texturecube (float,float,float,float) t9
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v3.xyxx, t0.xyzw, s9
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v3.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[9].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s4
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r5.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r6.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r6.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s5
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[15].x
  25: sample r5.xyzw, r5.zwzz, t3.xyzw, s6
  26: mul r5.xyzw, r4.yyyy, r5.xyzw
  27: mul r5.w, r5.w, cb0[15].y
  28: add r5.xyzw, r5.xyzw, r7.xyzw
  29: sample r7.xyzw, r6.xyxx, t4.xyzw, s7
  30: mul r7.xyzw, r4.zzzz, r7.xyzw
  31: mul r7.w, r7.w, cb0[15].z
  32: add r5.xyzw, r5.xyzw, r7.xyzw
  33: sample r6.xyzw, r6.zwzz, t5.xyzw, s8
  34: mul r6.xyzw, r4.wwww, r6.xyzw
  35: mul r6.w, r6.w, cb0[15].w
  36: add r5.xyzw, r5.xyzw, r6.xyzw
  37: dp4 r2.w, r4.xyzw, cb0[14].xyzw
  38: mul r4.xyz, v2.yyyy, cb0[5].xyzx
  39: mad r4.xyz, cb0[4].xyzx, v2.xxxx, r4.xyzx
  40: mad r4.xyz, cb0[6].xyzx, v2.zzzz, r4.xyzx
  41: add r4.xyz, r4.xyzx, cb0[7].xyzx
  42: mov r6.x, cb4[9].z
  43: mov r6.y, cb4[10].z
  44: mov r6.z, cb4[11].z
  45: dp3 r2.x, r2.xyzx, r6.xyzx
  46: add r6.xyz, v2.xyzx, -cb3[25].xyzx
  47: dp3 r2.y, r6.xyzx, r6.xyzx
  48: sqrt r2.y, r2.y
  49: add r2.y, -r2.x, r2.y
  50: mad r2.x, cb3[25].w, r2.y, r2.x
  51: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  52: eq r2.y, cb5[0].x, l(1.000000)
  53: if_nz r2.y
  54:   eq r2.y, cb5[0].y, l(1.000000)
  55:   mul r6.xyz, v2.yyyy, cb5[2].xyzx
  56:   mad r6.xyz, cb5[1].xyzx, v2.xxxx, r6.xyzx
  57:   mad r6.xyz, cb5[3].xyzx, v2.zzzz, r6.xyzx
  58:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  59:   movc r6.xyz, r2.yyyy, r6.xyzx, v2.xyzx
  60:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  61:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  62:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  63:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  64:   max r6.x, r2.z, r2.y
  65:   sample r6.xyzw, r6.xzwx, t8.xyzw, s0
  66: else 
  67:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  68: endif 
  69: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
  70: add r6.xyz, v2.xyzx, -cb2[1].xyzx
  71: max r2.z, |r6.y|, |r6.x|
  72: max r2.z, |r6.z|, r2.z
  73: add r2.z, r2.z, -cb2[2].z
  74: max r2.z, r2.z, l(0.000010)
  75: mul r2.z, r2.z, cb2[2].w
  76: div r2.z, cb2[2].y, r2.z
  77: add r2.z, r2.z, -cb2[2].x
  78: add r2.z, -r2.z, l(1.000000)
  79: sample_c_lz r2.z, r6.xyzx, t9.xxxx, s1, r2.z
  80: add r3.w, -cb3[24].x, l(1.000000)
  81: mad r2.z, r2.z, r3.w, cb3[24].x
  82: add r2.y, -r2.z, r2.y
  83: mad r2.x, r2.x, r2.y, r2.z
  84: dp3 r2.y, r4.xyzx, r4.xyzx
  85: sample r6.xyzw, r2.yyyy, t6.xyzw, s3
  86: sample r4.xyzw, r4.xyzx, t7.xyzw, s2
  87: mul r2.y, r4.w, r6.x
  88: mul r2.x, r2.x, r2.y
  89: mul r2.xyz, r2.xxxx, cb0[2].xyzx
  90: dp3 r3.w, v1.xyzx, v1.xyzx
  91: rsq r3.w, r3.w
  92: mul r4.xyz, r3.wwww, v1.xyzx
  93: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  94: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  95: mad r2.w, -r2.w, l(0.779084), l(0.779084)
  96: mul r5.xyz, r2.wwww, r5.xyzx
  97: add r2.w, -r5.w, l(1.000000)
  98: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
  99: dp3 r0.w, r0.xyzx, r0.xyzx
 100: max r0.w, r0.w, l(0.001000)
 101: rsq r0.w, r0.w
 102: mul r0.xyz, r0.wwww, r0.xyzx
 103: dp3 r0.w, r4.xyzx, r3.xyzx
 104: dp3_sat r3.x, r4.xyzx, r1.xyzx
 105: dp3_sat r3.y, r4.xyzx, r0.xyzx
 106: dp3_sat r0.x, r1.xyzx, r0.xyzx
 107: mul r0.y, r0.x, r0.x
 108: dp2 r0.y, r0.yyyy, r2.wwww
 109: add r0.y, r0.y, l(-0.500000)
 110: add r0.z, -r3.x, l(1.000000)
 111: mul r1.x, r0.z, r0.z
 112: mul r1.x, r1.x, r1.x
 113: mul r0.z, r0.z, r1.x
 114: mad r0.z, r0.y, r0.z, l(1.000000)
 115: add r1.x, -|r0.w|, l(1.000000)
 116: mul r1.y, r1.x, r1.x
 117: mul r1.y, r1.y, r1.y
 118: mul r1.x, r1.x, r1.y
 119: mad r0.y, r0.y, r1.x, l(1.000000)
 120: mul r0.y, r0.y, r0.z
 121: mul r0.z, r2.w, r2.w
 122: max r0.z, r0.z, l(0.002000)
 123: add r1.x, -r0.z, l(1.000000)
 124: mad r1.y, |r0.w|, r1.x, r0.z
 125: mad r1.x, r3.x, r1.x, r0.z
 126: mul r0.w, |r0.w|, r1.x
 127: mad r0.w, r3.x, r1.y, r0.w
 128: add r0.w, r0.w, l(0.000010)
 129: div r0.w, l(0.500000), r0.w
 130: mul r0.z, r0.z, r0.z
 131: mad r1.x, r3.y, r0.z, -r3.y
 132: mad r1.x, r1.x, r3.y, l(1.000000)
 133: mul r0.z, r0.z, l(0.318310)
 134: mad r1.x, r1.x, r1.x, l(0.000000)
 135: div r0.z, r0.z, r1.x
 136: mul r0.z, r0.z, r0.w
 137: mul r0.z, r0.z, l(3.141593)
 138: max r0.z, r0.z, l(0.000100)
 139: sqrt r0.z, r0.z
 140: mul r0.yz, r3.xxxx, r0.yyzy
 141: dp3 r0.w, r6.xyzx, r6.xyzx
 142: ne r0.w, r0.w, l(0.000000)
 143: and r0.w, r0.w, l(0x3f800000)
 144: mul r0.z, r0.w, r0.z
 145: mul r1.xyz, r0.yyyy, r2.xyzx
 146: mul r0.yzw, r2.xxyz, r0.zzzz
 147: add r0.x, -r0.x, l(1.000000)
 148: mul r2.x, r0.x, r0.x
 149: mul r2.x, r2.x, r2.x
 150: mul r0.x, r0.x, r2.x
 151: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 152: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 153: mul r0.xyz, r0.yzwy, r2.xyzx
 154: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 155: mul o0.xyz, r1.wwww, r0.xyzx
 156: mov o0.w, l(1.000000)
 157: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 143 math, 9 temp registers, 9 textures, 4 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 9
Set 2D Texture "_Control" to slot 1 sampler slot 4
Set 2D Texture "_Splat0" to slot 2 sampler slot 5
Set 2D Texture "_Splat1" to slot 3 sampler slot 6
Set 2D Texture "_Splat2" to slot 4 sampler slot 7
Set 2D Texture "_Splat3" to slot 5 sampler slot 8
Set 2D Texture "_LightTextureB0" to slot 6 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 7 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 9 sampler slot 1

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 224
  Float _Metallic1 at 228
  Float _Metallic2 at 232
  Float _Metallic3 at 236
  Float _Smoothness0 at 240
  Float _Smoothness1 at 244
  Float _Smoothness2 at 248
  Float _Smoothness3 at 252
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 3   xyz         4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[16], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_resource_texturecube (float,float,float,float) t9
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: add r0.xyz, -v2.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v2.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v3.xyxx, t0.xyzw, s9
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v3.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[9].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s4
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v3.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r5.zw, v3.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r6.xy, v3.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r6.zw, v3.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s5
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[15].x
  25: sample r5.xyzw, r5.zwzz, t3.xyzw, s6
  26: mul r5.xyzw, r4.yyyy, r5.xyzw
  27: mul r5.w, r5.w, cb0[15].y
  28: add r5.xyzw, r5.xyzw, r7.xyzw
  29: sample r7.xyzw, r6.xyxx, t4.xyzw, s7
  30: mul r7.xyzw, r4.zzzz, r7.xyzw
  31: mul r7.w, r7.w, cb0[15].z
  32: add r5.xyzw, r5.xyzw, r7.xyzw
  33: sample r6.xyzw, r6.zwzz, t5.xyzw, s8
  34: mul r6.xyzw, r4.wwww, r6.xyzw
  35: mul r6.w, r6.w, cb0[15].w
  36: add r5.xyzw, r5.xyzw, r6.xyzw
  37: dp4 r2.w, r4.xyzw, cb0[14].xyzw
  38: mul r4.xyz, v2.yyyy, cb0[5].xyzx
  39: mad r4.xyz, cb0[4].xyzx, v2.xxxx, r4.xyzx
  40: mad r4.xyz, cb0[6].xyzx, v2.zzzz, r4.xyzx
  41: add r4.xyz, r4.xyzx, cb0[7].xyzx
  42: mov r6.x, cb4[9].z
  43: mov r6.y, cb4[10].z
  44: mov r6.z, cb4[11].z
  45: dp3 r2.x, r2.xyzx, r6.xyzx
  46: add r6.xyz, v2.xyzx, -cb3[25].xyzx
  47: dp3 r2.y, r6.xyzx, r6.xyzx
  48: sqrt r2.y, r2.y
  49: add r2.y, -r2.x, r2.y
  50: mad r2.x, cb3[25].w, r2.y, r2.x
  51: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  52: eq r2.y, cb5[0].x, l(1.000000)
  53: if_nz r2.y
  54:   eq r2.y, cb5[0].y, l(1.000000)
  55:   mul r6.xyz, v2.yyyy, cb5[2].xyzx
  56:   mad r6.xyz, cb5[1].xyzx, v2.xxxx, r6.xyzx
  57:   mad r6.xyz, cb5[3].xyzx, v2.zzzz, r6.xyzx
  58:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  59:   movc r6.xyz, r2.yyyy, r6.xyzx, v2.xyzx
  60:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  61:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  62:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  63:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  64:   max r6.x, r2.z, r2.y
  65:   sample r6.xyzw, r6.xzwx, t8.xyzw, s0
  66: else 
  67:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  68: endif 
  69: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
  70: lt r2.z, r2.x, l(0.990000)
  71: if_nz r2.z
  72:   add r6.xyz, v2.xyzx, -cb2[1].xyzx
  73:   max r2.z, |r6.y|, |r6.x|
  74:   max r2.z, |r6.z|, r2.z
  75:   add r2.z, r2.z, -cb2[2].z
  76:   max r2.z, r2.z, l(0.000010)
  77:   mul r2.z, r2.z, cb2[2].w
  78:   div r2.z, cb2[2].y, r2.z
  79:   add r2.z, r2.z, -cb2[2].x
  80:   add r2.z, -r2.z, l(1.000000)
  81:   add r7.xyz, r6.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  82:   sample_c_lz r7.x, r7.xyzx, t9.xxxx, s1, r2.z
  83:   add r8.xyz, r6.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  84:   sample_c_lz r7.y, r8.xyzx, t9.xxxx, s1, r2.z
  85:   add r8.xyz, r6.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  86:   sample_c_lz r7.z, r8.xyzx, t9.xxxx, s1, r2.z
  87:   add r6.xyz, r6.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  88:   sample_c_lz r7.w, r6.xyzx, t9.xxxx, s1, r2.z
  89:   dp4 r2.z, r7.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  90:   add r3.w, -cb3[24].x, l(1.000000)
  91:   mad r2.z, r2.z, r3.w, cb3[24].x
  92: else 
  93:   mov r2.z, l(1.000000)
  94: endif 
  95: add r2.y, -r2.z, r2.y
  96: mad r2.x, r2.x, r2.y, r2.z
  97: dp3 r2.y, r4.xyzx, r4.xyzx
  98: sample r6.xyzw, r2.yyyy, t6.xyzw, s3
  99: sample r4.xyzw, r4.xyzx, t7.xyzw, s2
 100: mul r2.y, r4.w, r6.x
 101: mul r2.x, r2.x, r2.y
 102: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 103: dp3 r3.w, v1.xyzx, v1.xyzx
 104: rsq r3.w, r3.w
 105: mul r4.xyz, r3.wwww, v1.xyzx
 106: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 107: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 108: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 109: mul r5.xyz, r2.wwww, r5.xyzx
 110: add r2.w, -r5.w, l(1.000000)
 111: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 112: dp3 r0.w, r0.xyzx, r0.xyzx
 113: max r0.w, r0.w, l(0.001000)
 114: rsq r0.w, r0.w
 115: mul r0.xyz, r0.wwww, r0.xyzx
 116: dp3 r0.w, r4.xyzx, r3.xyzx
 117: dp3_sat r3.x, r4.xyzx, r1.xyzx
 118: dp3_sat r3.y, r4.xyzx, r0.xyzx
 119: dp3_sat r0.x, r1.xyzx, r0.xyzx
 120: mul r0.y, r0.x, r0.x
 121: dp2 r0.y, r0.yyyy, r2.wwww
 122: add r0.y, r0.y, l(-0.500000)
 123: add r0.z, -r3.x, l(1.000000)
 124: mul r1.x, r0.z, r0.z
 125: mul r1.x, r1.x, r1.x
 126: mul r0.z, r0.z, r1.x
 127: mad r0.z, r0.y, r0.z, l(1.000000)
 128: add r1.x, -|r0.w|, l(1.000000)
 129: mul r1.y, r1.x, r1.x
 130: mul r1.y, r1.y, r1.y
 131: mul r1.x, r1.x, r1.y
 132: mad r0.y, r0.y, r1.x, l(1.000000)
 133: mul r0.y, r0.y, r0.z
 134: mul r0.z, r2.w, r2.w
 135: max r0.z, r0.z, l(0.002000)
 136: add r1.x, -r0.z, l(1.000000)
 137: mad r1.y, |r0.w|, r1.x, r0.z
 138: mad r1.x, r3.x, r1.x, r0.z
 139: mul r0.w, |r0.w|, r1.x
 140: mad r0.w, r3.x, r1.y, r0.w
 141: add r0.w, r0.w, l(0.000010)
 142: div r0.w, l(0.500000), r0.w
 143: mul r0.z, r0.z, r0.z
 144: mad r1.x, r3.y, r0.z, -r3.y
 145: mad r1.x, r1.x, r3.y, l(1.000000)
 146: mul r0.z, r0.z, l(0.318310)
 147: mad r1.x, r1.x, r1.x, l(0.000000)
 148: div r0.z, r0.z, r1.x
 149: mul r0.z, r0.z, r0.w
 150: mul r0.z, r0.z, l(3.141593)
 151: max r0.z, r0.z, l(0.000100)
 152: sqrt r0.z, r0.z
 153: mul r0.yz, r3.xxxx, r0.yyzy
 154: dp3 r0.w, r6.xyzx, r6.xyzx
 155: ne r0.w, r0.w, l(0.000000)
 156: and r0.w, r0.w, l(0x3f800000)
 157: mul r0.z, r0.w, r0.z
 158: mul r1.xyz, r0.yyyy, r2.xyzx
 159: mul r0.yzw, r2.xxyz, r0.zzzz
 160: add r0.x, -r0.x, l(1.000000)
 161: mul r2.x, r0.x, r0.x
 162: mul r2.x, r2.x, r2.x
 163: mul r0.x, r0.x, r2.x
 164: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 165: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 166: mul r0.xyz, r0.yzwy, r2.xyzx
 167: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 168: mul o0.xyz, r1.wwww, r0.xyzx
 169: mov o0.w, l(1.000000)
 170: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 152 math, 8 temp registers, 12 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 11
Set 2D Texture "_Control" to slot 1 sampler slot 2
Set 2D Texture "_Splat0" to slot 2 sampler slot 3
Set 2D Texture "_Splat1" to slot 3 sampler slot 4
Set 2D Texture "_Splat2" to slot 4 sampler slot 5
Set 2D Texture "_Splat3" to slot 5 sampler slot 6
Set 2D Texture "_Normal0" to slot 6 sampler slot 7
Set 2D Texture "_Normal1" to slot 7 sampler slot 8
Set 2D Texture "_Normal2" to slot 8 sampler slot 9
Set 2D Texture "_Normal3" to slot 9 sampler slot 10
Set 2D Texture "_LightTexture0" to slot 10 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 11 sampler slot 0

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 224
  Float _NormalScale1 at 228
  Float _NormalScale2 at 232
  Float _NormalScale3 at 236
  Float _Metallic0 at 240
  Float _Metallic1 at 244
  Float _Metallic2 at 248
  Float _Metallic3 at 252
  Float _Smoothness0 at 256
  Float _Smoothness1 at 260
  Float _Smoothness2 at 264
  Float _Smoothness3 at 268
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[17], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture3d (float,float,float,float) t11
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: sample r3.xyzw, v5.xyxx, t0.xyzw, s11
   9: eq r1.w, r3.x, l(0.000000)
  10: discard_nz r1.w
  11: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r3.xy, v5.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, cb0[9].xyxx
  14: sample r3.xyzw, r3.xyxx, t1.xyzw, s2
  15: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r3.xyzw, r3.xyzw, r2.wwww
  18: mad r4.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r4.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r5.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r5.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r6.xyzw, r4.xyxx, t2.xyzw, s3
  23: mul r6.xyzw, r3.xxxx, r6.xyzw
  24: mul r6.w, r6.w, cb0[16].x
  25: sample r7.xyzw, r4.zwzz, t3.xyzw, s4
  26: mul r7.xyzw, r3.yyyy, r7.xyzw
  27: mul r7.w, r7.w, cb0[16].y
  28: add r6.xyzw, r6.xyzw, r7.xyzw
  29: sample r7.xyzw, r5.xyxx, t4.xyzw, s5
  30: mul r7.xyzw, r3.zzzz, r7.xyzw
  31: mul r7.w, r7.w, cb0[16].z
  32: add r6.xyzw, r6.xyzw, r7.xyzw
  33: sample r7.xyzw, r5.zwzz, t5.xyzw, s6
  34: mul r7.xyzw, r3.wwww, r7.xyzw
  35: mul r7.w, r7.w, cb0[16].w
  36: add r6.xyzw, r6.xyzw, r7.xyzw
  37: sample r7.xyzw, r4.xyxx, t6.xyzw, s7
  38: mul r7.x, r7.w, r7.x
  39: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  40: mul r7.xy, r4.xyxx, cb0[14].xxxx
  41: dp2 r2.w, r7.xyxx, r7.xyxx
  42: min r2.w, r2.w, l(1.000000)
  43: add r2.w, -r2.w, l(1.000000)
  44: sqrt r7.z, r2.w
  45: sample r4.xyzw, r4.zwzz, t7.xyzw, s8
  46: mul r4.x, r4.w, r4.x
  47: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  48: mul r4.xy, r4.xyxx, cb0[14].yyyy
  49: dp2 r2.w, r4.xyxx, r4.xyxx
  50: min r2.w, r2.w, l(1.000000)
  51: add r2.w, -r2.w, l(1.000000)
  52: sqrt r4.z, r2.w
  53: mul r4.xyz, r3.yyyy, r4.xyzx
  54: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  55: sample r7.xyzw, r5.xyxx, t8.xyzw, s9
  56: mul r7.x, r7.w, r7.x
  57: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  58: mul r7.xy, r5.xyxx, cb0[14].zzzz
  59: dp2 r2.w, r7.xyxx, r7.xyxx
  60: min r2.w, r2.w, l(1.000000)
  61: add r2.w, -r2.w, l(1.000000)
  62: sqrt r7.z, r2.w
  63: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  64: sample r5.xyzw, r5.zwzz, t9.xyzw, s10
  65: mul r5.x, r5.w, r5.x
  66: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  67: mul r5.xy, r5.xyxx, cb0[14].wwww
  68: dp2 r2.w, r5.xyxx, r5.xyxx
  69: min r2.w, r2.w, l(1.000000)
  70: add r2.w, -r2.w, l(1.000000)
  71: sqrt r5.z, r2.w
  72: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  73: dp4 r2.w, r3.xyzw, cb0[15].xyzw
  74: mul r3.xyz, v4.yyyy, cb0[5].xyzx
  75: mad r3.xyz, cb0[4].xyzx, v4.xxxx, r3.xyzx
  76: mad r3.xyz, cb0[6].xyzx, v4.zzzz, r3.xyzx
  77: add r3.xyz, r3.xyzx, cb0[7].xyzx
  78: eq r3.w, cb3[0].x, l(1.000000)
  79: if_nz r3.w
  80:   eq r3.w, cb3[0].y, l(1.000000)
  81:   mul r5.xyz, v4.yyyy, cb3[2].xyzx
  82:   mad r5.xyz, cb3[1].xyzx, v4.xxxx, r5.xyzx
  83:   mad r5.xyz, cb3[3].xyzx, v4.zzzz, r5.xyzx
  84:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  85:   movc r5.xyz, r3.wwww, r5.xyzx, v4.xyzx
  86:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
  87:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
  88:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  89:   mad r5.y, cb3[0].z, l(0.500000), l(0.750000)
  90:   max r5.x, r3.w, r5.y
  91:   sample r5.xyzw, r5.xzwx, t11.xyzw, s0
  92: else 
  93:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  94: endif 
  95: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
  96: dp3 r3.x, r3.xyzx, r3.xyzx
  97: sample r5.xyzw, r3.xxxx, t10.xyzw, s1
  98: mul r3.x, r3.w, r5.x
  99: add r4.w, r4.z, l(0.000010)
 100: dp3 r5.x, v1.xyzx, r4.xywx
 101: dp3 r5.y, v2.xyzx, r4.xywx
 102: dp3 r5.z, v3.xyzx, r4.xywx
 103: dp3 r3.y, r5.xyzx, r5.xyzx
 104: rsq r3.y, r3.y
 105: mul r3.yzw, r3.yyyy, r5.xxyz
 106: mul r4.xyz, r3.xxxx, cb0[2].xyzx
 107: add r5.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 108: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 109: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 110: mul r6.xyz, r2.wwww, r6.xyzx
 111: add r2.w, -r6.w, l(1.000000)
 112: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
 113: dp3 r0.w, r0.xyzx, r0.xyzx
 114: max r0.w, r0.w, l(0.001000)
 115: rsq r0.w, r0.w
 116: mul r0.xyz, r0.wwww, r0.xyzx
 117: dp3 r0.w, r3.yzwy, r2.xyzx
 118: dp3_sat r2.x, r3.yzwy, r1.xyzx
 119: dp3_sat r2.y, r3.yzwy, r0.xyzx
 120: dp3_sat r0.x, r1.xyzx, r0.xyzx
 121: mul r0.y, r0.x, r0.x
 122: dp2 r0.y, r0.yyyy, r2.wwww
 123: add r0.y, r0.y, l(-0.500000)
 124: add r0.z, -r2.x, l(1.000000)
 125: mul r1.x, r0.z, r0.z
 126: mul r1.x, r1.x, r1.x
 127: mul r0.z, r0.z, r1.x
 128: mad r0.z, r0.y, r0.z, l(1.000000)
 129: add r1.x, -|r0.w|, l(1.000000)
 130: mul r1.y, r1.x, r1.x
 131: mul r1.y, r1.y, r1.y
 132: mul r1.x, r1.x, r1.y
 133: mad r0.y, r0.y, r1.x, l(1.000000)
 134: mul r0.y, r0.y, r0.z
 135: mul r0.z, r2.w, r2.w
 136: max r0.z, r0.z, l(0.002000)
 137: add r1.x, -r0.z, l(1.000000)
 138: mad r1.y, |r0.w|, r1.x, r0.z
 139: mad r1.x, r2.x, r1.x, r0.z
 140: mul r0.w, |r0.w|, r1.x
 141: mad r0.w, r2.x, r1.y, r0.w
 142: add r0.w, r0.w, l(0.000010)
 143: div r0.w, l(0.500000), r0.w
 144: mul r0.z, r0.z, r0.z
 145: mad r1.x, r2.y, r0.z, -r2.y
 146: mad r1.x, r1.x, r2.y, l(1.000000)
 147: mul r0.z, r0.z, l(0.318310)
 148: mad r1.x, r1.x, r1.x, l(0.000000)
 149: div r0.z, r0.z, r1.x
 150: mul r0.z, r0.z, r0.w
 151: mul r0.z, r0.z, l(3.141593)
 152: max r0.z, r0.z, l(0.000100)
 153: sqrt r0.z, r0.z
 154: mul r0.yz, r2.xxxx, r0.yyzy
 155: dp3 r0.w, r5.xyzx, r5.xyzx
 156: ne r0.w, r0.w, l(0.000000)
 157: and r0.w, r0.w, l(0x3f800000)
 158: mul r0.z, r0.w, r0.z
 159: mul r1.xyz, r0.yyyy, r4.xyzx
 160: mul r0.yzw, r4.xxyz, r0.zzzz
 161: add r0.x, -r0.x, l(1.000000)
 162: mul r2.x, r0.x, r0.x
 163: mul r2.x, r2.x, r2.x
 164: mul r0.x, r0.x, r2.x
 165: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 166: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 167: mul r0.xyz, r0.yzwy, r2.xyzx
 168: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 169: mul o0.xyz, r1.wwww, r0.xyzx
 170: mov o0.w, l(1.000000)
 171: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 142 math, 7 temp registers, 11 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 10
Set 2D Texture "_Control" to slot 1
Set 2D Texture "_Splat0" to slot 2
Set 2D Texture "_Splat1" to slot 3
Set 2D Texture "_Splat2" to slot 4
Set 2D Texture "_Splat3" to slot 5
Set 2D Texture "_Normal0" to slot 6
Set 2D Texture "_Normal1" to slot 7
Set 2D Texture "_Normal2" to slot 8
Set 2D Texture "_Normal3" to slot 9
Set 3D Texture "unity_ProbeVolumeSH" to slot 10 sampler slot 0

Constant Buffer "$Globals" (208 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 160
  Float _NormalScale1 at 164
  Float _NormalScale2 at 168
  Float _NormalScale3 at 172
  Float _Metallic0 at 176
  Float _Metallic1 at 180
  Float _Metallic2 at 184
  Float _Metallic3 at 188
  Float _Smoothness0 at 192
  Float _Smoothness1 at 196
  Float _Smoothness2 at 200
  Float _Smoothness3 at 204
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 6   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[13], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture3d (float,float,float,float) t10
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v5.xyxx, t0.xyzw, s10
   5: eq r1.w, r2.x, l(0.000000)
   6: discard_nz r1.w
   7: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r2.xy, r2.xyxx, cb0[5].xyxx
  10: sample r2.xyzw, r2.xyxx, t1.xyzw, s1
  11: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r3.x, r1.w, l(0.001000)
  13: div r2.xyzw, r2.xyzw, r3.xxxx
  14: mad r3.xy, v5.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r3.zw, v5.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r4.xy, v5.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r4.zw, v5.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r5.xyzw, r3.xyxx, t2.xyzw, s2
  19: mul r5.xyzw, r2.xxxx, r5.xyzw
  20: mul r5.w, r5.w, cb0[12].x
  21: sample r6.xyzw, r3.zwzz, t3.xyzw, s3
  22: mul r6.xyzw, r2.yyyy, r6.xyzw
  23: mul r6.w, r6.w, cb0[12].y
  24: add r5.xyzw, r5.xyzw, r6.xyzw
  25: sample r6.xyzw, r4.xyxx, t4.xyzw, s4
  26: mul r6.xyzw, r2.zzzz, r6.xyzw
  27: mul r6.w, r6.w, cb0[12].z
  28: add r5.xyzw, r5.xyzw, r6.xyzw
  29: sample r6.xyzw, r4.zwzz, t5.xyzw, s5
  30: mul r6.xyzw, r2.wwww, r6.xyzw
  31: mul r6.w, r6.w, cb0[12].w
  32: add r5.xyzw, r5.xyzw, r6.xyzw
  33: sample r6.xyzw, r3.xyxx, t6.xyzw, s6
  34: mul r6.x, r6.w, r6.x
  35: mad r3.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  36: mul r6.xy, r3.xyxx, cb0[10].xxxx
  37: dp2 r3.x, r6.xyxx, r6.xyxx
  38: min r3.x, r3.x, l(1.000000)
  39: add r3.x, -r3.x, l(1.000000)
  40: sqrt r6.z, r3.x
  41: sample r3.xyzw, r3.zwzz, t7.xyzw, s7
  42: mul r3.x, r3.w, r3.x
  43: mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  44: mul r3.xy, r3.xyxx, cb0[10].yyyy
  45: dp2 r3.w, r3.xyxx, r3.xyxx
  46: min r3.w, r3.w, l(1.000000)
  47: add r3.w, -r3.w, l(1.000000)
  48: sqrt r3.z, r3.w
  49: mul r3.xyz, r2.yyyy, r3.xyzx
  50: mad r3.xyz, r6.xyzx, r2.xxxx, r3.xyzx
  51: sample r6.xyzw, r4.xyxx, t8.xyzw, s8
  52: mul r6.x, r6.w, r6.x
  53: mad r4.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  54: mul r6.xy, r4.xyxx, cb0[10].zzzz
  55: dp2 r3.w, r6.xyxx, r6.xyxx
  56: min r3.w, r3.w, l(1.000000)
  57: add r3.w, -r3.w, l(1.000000)
  58: sqrt r6.z, r3.w
  59: mad r3.xyz, r6.xyzx, r2.zzzz, r3.xyzx
  60: sample r4.xyzw, r4.zwzz, t9.xyzw, s9
  61: mul r4.x, r4.w, r4.x
  62: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  63: mul r4.xy, r4.xyxx, cb0[10].wwww
  64: dp2 r3.w, r4.xyxx, r4.xyxx
  65: min r3.w, r3.w, l(1.000000)
  66: add r3.w, -r3.w, l(1.000000)
  67: sqrt r4.z, r3.w
  68: mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx
  69: dp4 r2.x, r2.xyzw, cb0[11].xyzw
  70: eq r2.y, cb3[0].x, l(1.000000)
  71: if_nz r2.y
  72:   eq r2.y, cb3[0].y, l(1.000000)
  73:   mul r4.xyz, v4.yyyy, cb3[2].xyzx
  74:   mad r4.xyz, cb3[1].xyzx, v4.xxxx, r4.xyzx
  75:   mad r4.xyz, cb3[3].xyzx, v4.zzzz, r4.xyzx
  76:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  77:   movc r2.yzw, r2.yyyy, r4.xxyz, v4.xxyz
  78:   add r2.yzw, r2.yyzw, -cb3[6].xxyz
  79:   mul r4.yzw, r2.yyzw, cb3[5].xxyz
  80:   mad r2.y, r4.y, l(0.250000), l(0.750000)
  81:   mad r2.z, cb3[0].z, l(0.500000), l(0.750000)
  82:   max r4.x, r2.z, r2.y
  83:   sample r4.xyzw, r4.xzwx, t10.xyzw, s0
  84: else 
  85:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  86: endif 
  87: dp4_sat r2.y, r4.xyzw, cb2[46].xyzw
  88: add r3.w, r3.z, l(0.000010)
  89: dp3 r4.x, v1.xyzx, r3.xywx
  90: dp3 r4.y, v2.xyzx, r3.xywx
  91: dp3 r4.z, v3.xyzx, r3.xywx
  92: dp3 r2.z, r4.xyzx, r4.xyzx
  93: rsq r2.z, r2.z
  94: mul r3.xyz, r2.zzzz, r4.xyzx
  95: mul r2.yzw, r2.yyyy, cb0[2].xxyz
  96: add r4.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  97: mad r4.xyz, r2.xxxx, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  98: mad r2.x, -r2.x, l(0.779084), l(0.779084)
  99: mul r5.xyz, r2.xxxx, r5.xyzx
 100: add r2.x, -r5.w, l(1.000000)
 101: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 102: dp3 r0.w, r0.xyzx, r0.xyzx
 103: max r0.w, r0.w, l(0.001000)
 104: rsq r0.w, r0.w
 105: mul r0.xyz, r0.wwww, r0.xyzx
 106: dp3 r0.w, r3.xyzx, r1.xyzx
 107: dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
 108: dp3_sat r1.y, r3.xyzx, r0.xyzx
 109: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 110: mul r0.y, r0.x, r0.x
 111: dp2 r0.y, r0.yyyy, r2.xxxx
 112: add r0.y, r0.y, l(-0.500000)
 113: add r0.z, -r1.x, l(1.000000)
 114: mul r1.z, r0.z, r0.z
 115: mul r1.z, r1.z, r1.z
 116: mul r0.z, r0.z, r1.z
 117: mad r0.z, r0.y, r0.z, l(1.000000)
 118: add r1.z, -|r0.w|, l(1.000000)
 119: mul r3.x, r1.z, r1.z
 120: mul r3.x, r3.x, r3.x
 121: mul r1.z, r1.z, r3.x
 122: mad r0.y, r0.y, r1.z, l(1.000000)
 123: mul r0.y, r0.y, r0.z
 124: mul r0.z, r2.x, r2.x
 125: max r0.z, r0.z, l(0.002000)
 126: add r1.z, -r0.z, l(1.000000)
 127: mad r2.x, |r0.w|, r1.z, r0.z
 128: mad r1.z, r1.x, r1.z, r0.z
 129: mul r0.w, |r0.w|, r1.z
 130: mad r0.w, r1.x, r2.x, r0.w
 131: add r0.w, r0.w, l(0.000010)
 132: div r0.w, l(0.500000), r0.w
 133: mul r0.z, r0.z, r0.z
 134: mad r1.z, r1.y, r0.z, -r1.y
 135: mad r1.y, r1.z, r1.y, l(1.000000)
 136: mul r0.z, r0.z, l(0.318310)
 137: mad r1.y, r1.y, r1.y, l(0.000000)
 138: div r0.z, r0.z, r1.y
 139: mul r0.z, r0.z, r0.w
 140: mul r0.z, r0.z, l(3.141593)
 141: max r0.z, r0.z, l(0.000100)
 142: sqrt r0.z, r0.z
 143: mul r0.yz, r1.xxxx, r0.yyzy
 144: dp3 r0.w, r4.xyzx, r4.xyzx
 145: ne r0.w, r0.w, l(0.000000)
 146: and r0.w, r0.w, l(0x3f800000)
 147: mul r0.z, r0.w, r0.z
 148: mul r1.xyz, r0.yyyy, r2.yzwy
 149: mul r0.yzw, r2.yyzw, r0.zzzz
 150: add r0.x, -r0.x, l(1.000000)
 151: mul r2.x, r0.x, r0.x
 152: mul r2.x, r2.x, r2.x
 153: mul r0.x, r0.x, r2.x
 154: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 155: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
 156: mul r0.xyz, r0.yzwy, r2.xyzx
 157: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 158: mul o0.xyz, r1.wwww, r0.xyzx
 159: mov o0.w, l(1.000000)
 160: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SPOT 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 158 math, 8 temp registers, 13 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 12
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_Normal0" to slot 6 sampler slot 8
Set 2D Texture "_Normal1" to slot 7 sampler slot 9
Set 2D Texture "_Normal2" to slot 8 sampler slot 10
Set 2D Texture "_Normal3" to slot 9 sampler slot 11
Set 2D Texture "_LightTexture0" to slot 10 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 11 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 0

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 224
  Float _NormalScale1 at 228
  Float _NormalScale2 at 232
  Float _NormalScale3 at 236
  Float _Metallic0 at 240
  Float _Metallic1 at 244
  Float _Metallic2 at 248
  Float _Metallic3 at 252
  Float _Smoothness0 at 256
  Float _Smoothness1 at 260
  Float _Smoothness2 at 264
  Float _Smoothness3 at 268
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[17], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture2d (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: sample r3.xyzw, v5.xyxx, t0.xyzw, s12
   9: eq r1.w, r3.x, l(0.000000)
  10: discard_nz r1.w
  11: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r3.xy, v5.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, cb0[9].xyxx
  14: sample r3.xyzw, r3.xyxx, t1.xyzw, s3
  15: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r3.xyzw, r3.xyzw, r2.wwww
  18: mad r4.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r4.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r5.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r5.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r6.xyzw, r4.xyxx, t2.xyzw, s4
  23: mul r6.xyzw, r3.xxxx, r6.xyzw
  24: mul r6.w, r6.w, cb0[16].x
  25: sample r7.xyzw, r4.zwzz, t3.xyzw, s5
  26: mul r7.xyzw, r3.yyyy, r7.xyzw
  27: mul r7.w, r7.w, cb0[16].y
  28: add r6.xyzw, r6.xyzw, r7.xyzw
  29: sample r7.xyzw, r5.xyxx, t4.xyzw, s6
  30: mul r7.xyzw, r3.zzzz, r7.xyzw
  31: mul r7.w, r7.w, cb0[16].z
  32: add r6.xyzw, r6.xyzw, r7.xyzw
  33: sample r7.xyzw, r5.zwzz, t5.xyzw, s7
  34: mul r7.xyzw, r3.wwww, r7.xyzw
  35: mul r7.w, r7.w, cb0[16].w
  36: add r6.xyzw, r6.xyzw, r7.xyzw
  37: sample r7.xyzw, r4.xyxx, t6.xyzw, s8
  38: mul r7.x, r7.w, r7.x
  39: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  40: mul r7.xy, r4.xyxx, cb0[14].xxxx
  41: dp2 r2.w, r7.xyxx, r7.xyxx
  42: min r2.w, r2.w, l(1.000000)
  43: add r2.w, -r2.w, l(1.000000)
  44: sqrt r7.z, r2.w
  45: sample r4.xyzw, r4.zwzz, t7.xyzw, s9
  46: mul r4.x, r4.w, r4.x
  47: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  48: mul r4.xy, r4.xyxx, cb0[14].yyyy
  49: dp2 r2.w, r4.xyxx, r4.xyxx
  50: min r2.w, r2.w, l(1.000000)
  51: add r2.w, -r2.w, l(1.000000)
  52: sqrt r4.z, r2.w
  53: mul r4.xyz, r3.yyyy, r4.xyzx
  54: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  55: sample r7.xyzw, r5.xyxx, t8.xyzw, s10
  56: mul r7.x, r7.w, r7.x
  57: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  58: mul r7.xy, r5.xyxx, cb0[14].zzzz
  59: dp2 r2.w, r7.xyxx, r7.xyxx
  60: min r2.w, r2.w, l(1.000000)
  61: add r2.w, -r2.w, l(1.000000)
  62: sqrt r7.z, r2.w
  63: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  64: sample r5.xyzw, r5.zwzz, t9.xyzw, s11
  65: mul r5.x, r5.w, r5.x
  66: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  67: mul r5.xy, r5.xyxx, cb0[14].wwww
  68: dp2 r2.w, r5.xyxx, r5.xyxx
  69: min r2.w, r2.w, l(1.000000)
  70: add r2.w, -r2.w, l(1.000000)
  71: sqrt r5.z, r2.w
  72: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  73: dp4 r2.w, r3.xyzw, cb0[15].xyzw
  74: mul r3.xyzw, v4.yyyy, cb0[5].xyzw
  75: mad r3.xyzw, cb0[4].xyzw, v4.xxxx, r3.xyzw
  76: mad r3.xyzw, cb0[6].xyzw, v4.zzzz, r3.xyzw
  77: add r3.xyzw, r3.xyzw, cb0[7].xyzw
  78: eq r5.x, cb3[0].x, l(1.000000)
  79: if_nz r5.x
  80:   eq r5.x, cb3[0].y, l(1.000000)
  81:   mul r5.yzw, v4.yyyy, cb3[2].xxyz
  82:   mad r5.yzw, cb3[1].xxyz, v4.xxxx, r5.yyzw
  83:   mad r5.yzw, cb3[3].xxyz, v4.zzzz, r5.yyzw
  84:   add r5.yzw, r5.yyzw, cb3[4].xxyz
  85:   movc r5.xyz, r5.xxxx, r5.yzwy, v4.xyzx
  86:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
  87:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
  88:   mad r5.y, r5.y, l(0.250000), l(0.750000)
  89:   mad r7.x, cb3[0].z, l(0.500000), l(0.750000)
  90:   max r5.x, r5.y, r7.x
  91:   sample r5.xyzw, r5.xzwx, t12.xyzw, s0
  92: else 
  93:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  94: endif 
  95: dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
  96: lt r5.y, l(0.000000), r3.z
  97: and r5.y, r5.y, l(0x3f800000)
  98: div r5.zw, r3.xxxy, r3.wwww
  99: add r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
 100: sample r7.xyzw, r5.zwzz, t10.xyzw, s1
 101: mul r3.w, r5.y, r7.w
 102: dp3 r3.x, r3.xyzx, r3.xyzx
 103: sample r7.xyzw, r3.xxxx, t11.xyzw, s2
 104: mul r3.x, r3.w, r7.x
 105: mul r3.x, r5.x, r3.x
 106: add r4.w, r4.z, l(0.000010)
 107: dp3 r5.x, v1.xyzx, r4.xywx
 108: dp3 r5.y, v2.xyzx, r4.xywx
 109: dp3 r5.z, v3.xyzx, r4.xywx
 110: dp3 r3.y, r5.xyzx, r5.xyzx
 111: rsq r3.y, r3.y
 112: mul r3.yzw, r3.yyyy, r5.xxyz
 113: mul r4.xyz, r3.xxxx, cb0[2].xyzx
 114: add r5.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 115: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 116: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 117: mul r6.xyz, r2.wwww, r6.xyzx
 118: add r2.w, -r6.w, l(1.000000)
 119: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
 120: dp3 r0.w, r0.xyzx, r0.xyzx
 121: max r0.w, r0.w, l(0.001000)
 122: rsq r0.w, r0.w
 123: mul r0.xyz, r0.wwww, r0.xyzx
 124: dp3 r0.w, r3.yzwy, r2.xyzx
 125: dp3_sat r2.x, r3.yzwy, r1.xyzx
 126: dp3_sat r2.y, r3.yzwy, r0.xyzx
 127: dp3_sat r0.x, r1.xyzx, r0.xyzx
 128: mul r0.y, r0.x, r0.x
 129: dp2 r0.y, r0.yyyy, r2.wwww
 130: add r0.y, r0.y, l(-0.500000)
 131: add r0.z, -r2.x, l(1.000000)
 132: mul r1.x, r0.z, r0.z
 133: mul r1.x, r1.x, r1.x
 134: mul r0.z, r0.z, r1.x
 135: mad r0.z, r0.y, r0.z, l(1.000000)
 136: add r1.x, -|r0.w|, l(1.000000)
 137: mul r1.y, r1.x, r1.x
 138: mul r1.y, r1.y, r1.y
 139: mul r1.x, r1.x, r1.y
 140: mad r0.y, r0.y, r1.x, l(1.000000)
 141: mul r0.y, r0.y, r0.z
 142: mul r0.z, r2.w, r2.w
 143: max r0.z, r0.z, l(0.002000)
 144: add r1.x, -r0.z, l(1.000000)
 145: mad r1.y, |r0.w|, r1.x, r0.z
 146: mad r1.x, r2.x, r1.x, r0.z
 147: mul r0.w, |r0.w|, r1.x
 148: mad r0.w, r2.x, r1.y, r0.w
 149: add r0.w, r0.w, l(0.000010)
 150: div r0.w, l(0.500000), r0.w
 151: mul r0.z, r0.z, r0.z
 152: mad r1.x, r2.y, r0.z, -r2.y
 153: mad r1.x, r1.x, r2.y, l(1.000000)
 154: mul r0.z, r0.z, l(0.318310)
 155: mad r1.x, r1.x, r1.x, l(0.000000)
 156: div r0.z, r0.z, r1.x
 157: mul r0.z, r0.z, r0.w
 158: mul r0.z, r0.z, l(3.141593)
 159: max r0.z, r0.z, l(0.000100)
 160: sqrt r0.z, r0.z
 161: mul r0.yz, r2.xxxx, r0.yyzy
 162: dp3 r0.w, r5.xyzx, r5.xyzx
 163: ne r0.w, r0.w, l(0.000000)
 164: and r0.w, r0.w, l(0x3f800000)
 165: mul r0.z, r0.w, r0.z
 166: mul r1.xyz, r0.yyyy, r4.xyzx
 167: mul r0.yzw, r4.xxyz, r0.zzzz
 168: add r0.x, -r0.x, l(1.000000)
 169: mul r2.x, r0.x, r0.x
 170: mul r2.x, r2.x, r2.x
 171: mul r0.x, r0.x, r2.x
 172: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 173: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 174: mul r0.xyz, r0.yzwy, r2.xyzx
 175: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 176: mul o0.xyz, r1.wwww, r0.xyzx
 177: mov o0.w, l(1.000000)
 178: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 153 math, 8 temp registers, 13 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 12
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_Normal0" to slot 6 sampler slot 8
Set 2D Texture "_Normal1" to slot 7 sampler slot 9
Set 2D Texture "_Normal2" to slot 8 sampler slot 10
Set 2D Texture "_Normal3" to slot 9 sampler slot 11
Set 2D Texture "_LightTextureB0" to slot 10 sampler slot 2
Set CUBE Texture "_LightTexture0" to slot 11 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 0

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 224
  Float _NormalScale1 at 228
  Float _NormalScale2 at 232
  Float _NormalScale3 at 236
  Float _Metallic0 at 240
  Float _Metallic1 at 244
  Float _Metallic2 at 248
  Float _Metallic3 at 252
  Float _Smoothness0 at 256
  Float _Smoothness1 at 260
  Float _Smoothness2 at 264
  Float _Smoothness3 at 268
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[17], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texturecube (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: sample r3.xyzw, v5.xyxx, t0.xyzw, s12
   9: eq r1.w, r3.x, l(0.000000)
  10: discard_nz r1.w
  11: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r3.xy, v5.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, cb0[9].xyxx
  14: sample r3.xyzw, r3.xyxx, t1.xyzw, s3
  15: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r3.xyzw, r3.xyzw, r2.wwww
  18: mad r4.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r4.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r5.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r5.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r6.xyzw, r4.xyxx, t2.xyzw, s4
  23: mul r6.xyzw, r3.xxxx, r6.xyzw
  24: mul r6.w, r6.w, cb0[16].x
  25: sample r7.xyzw, r4.zwzz, t3.xyzw, s5
  26: mul r7.xyzw, r3.yyyy, r7.xyzw
  27: mul r7.w, r7.w, cb0[16].y
  28: add r6.xyzw, r6.xyzw, r7.xyzw
  29: sample r7.xyzw, r5.xyxx, t4.xyzw, s6
  30: mul r7.xyzw, r3.zzzz, r7.xyzw
  31: mul r7.w, r7.w, cb0[16].z
  32: add r6.xyzw, r6.xyzw, r7.xyzw
  33: sample r7.xyzw, r5.zwzz, t5.xyzw, s7
  34: mul r7.xyzw, r3.wwww, r7.xyzw
  35: mul r7.w, r7.w, cb0[16].w
  36: add r6.xyzw, r6.xyzw, r7.xyzw
  37: sample r7.xyzw, r4.xyxx, t6.xyzw, s8
  38: mul r7.x, r7.w, r7.x
  39: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  40: mul r7.xy, r4.xyxx, cb0[14].xxxx
  41: dp2 r2.w, r7.xyxx, r7.xyxx
  42: min r2.w, r2.w, l(1.000000)
  43: add r2.w, -r2.w, l(1.000000)
  44: sqrt r7.z, r2.w
  45: sample r4.xyzw, r4.zwzz, t7.xyzw, s9
  46: mul r4.x, r4.w, r4.x
  47: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  48: mul r4.xy, r4.xyxx, cb0[14].yyyy
  49: dp2 r2.w, r4.xyxx, r4.xyxx
  50: min r2.w, r2.w, l(1.000000)
  51: add r2.w, -r2.w, l(1.000000)
  52: sqrt r4.z, r2.w
  53: mul r4.xyz, r3.yyyy, r4.xyzx
  54: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  55: sample r7.xyzw, r5.xyxx, t8.xyzw, s10
  56: mul r7.x, r7.w, r7.x
  57: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  58: mul r7.xy, r5.xyxx, cb0[14].zzzz
  59: dp2 r2.w, r7.xyxx, r7.xyxx
  60: min r2.w, r2.w, l(1.000000)
  61: add r2.w, -r2.w, l(1.000000)
  62: sqrt r7.z, r2.w
  63: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  64: sample r5.xyzw, r5.zwzz, t9.xyzw, s11
  65: mul r5.x, r5.w, r5.x
  66: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  67: mul r5.xy, r5.xyxx, cb0[14].wwww
  68: dp2 r2.w, r5.xyxx, r5.xyxx
  69: min r2.w, r2.w, l(1.000000)
  70: add r2.w, -r2.w, l(1.000000)
  71: sqrt r5.z, r2.w
  72: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  73: dp4 r2.w, r3.xyzw, cb0[15].xyzw
  74: mul r3.xyz, v4.yyyy, cb0[5].xyzx
  75: mad r3.xyz, cb0[4].xyzx, v4.xxxx, r3.xyzx
  76: mad r3.xyz, cb0[6].xyzx, v4.zzzz, r3.xyzx
  77: add r3.xyz, r3.xyzx, cb0[7].xyzx
  78: eq r3.w, cb3[0].x, l(1.000000)
  79: if_nz r3.w
  80:   eq r3.w, cb3[0].y, l(1.000000)
  81:   mul r5.xyz, v4.yyyy, cb3[2].xyzx
  82:   mad r5.xyz, cb3[1].xyzx, v4.xxxx, r5.xyzx
  83:   mad r5.xyz, cb3[3].xyzx, v4.zzzz, r5.xyzx
  84:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  85:   movc r5.xyz, r3.wwww, r5.xyzx, v4.xyzx
  86:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
  87:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
  88:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  89:   mad r5.y, cb3[0].z, l(0.500000), l(0.750000)
  90:   max r5.x, r3.w, r5.y
  91:   sample r5.xyzw, r5.xzwx, t12.xyzw, s0
  92: else 
  93:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  94: endif 
  95: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
  96: dp3 r5.x, r3.xyzx, r3.xyzx
  97: sample r5.xyzw, r5.xxxx, t10.xyzw, s2
  98: sample r7.xyzw, r3.xyzx, t11.xyzw, s1
  99: mul r3.x, r5.x, r7.w
 100: mul r3.x, r3.w, r3.x
 101: add r4.w, r4.z, l(0.000010)
 102: dp3 r5.x, v1.xyzx, r4.xywx
 103: dp3 r5.y, v2.xyzx, r4.xywx
 104: dp3 r5.z, v3.xyzx, r4.xywx
 105: dp3 r3.y, r5.xyzx, r5.xyzx
 106: rsq r3.y, r3.y
 107: mul r3.yzw, r3.yyyy, r5.xxyz
 108: mul r4.xyz, r3.xxxx, cb0[2].xyzx
 109: add r5.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 110: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 111: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 112: mul r6.xyz, r2.wwww, r6.xyzx
 113: add r2.w, -r6.w, l(1.000000)
 114: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
 115: dp3 r0.w, r0.xyzx, r0.xyzx
 116: max r0.w, r0.w, l(0.001000)
 117: rsq r0.w, r0.w
 118: mul r0.xyz, r0.wwww, r0.xyzx
 119: dp3 r0.w, r3.yzwy, r2.xyzx
 120: dp3_sat r2.x, r3.yzwy, r1.xyzx
 121: dp3_sat r2.y, r3.yzwy, r0.xyzx
 122: dp3_sat r0.x, r1.xyzx, r0.xyzx
 123: mul r0.y, r0.x, r0.x
 124: dp2 r0.y, r0.yyyy, r2.wwww
 125: add r0.y, r0.y, l(-0.500000)
 126: add r0.z, -r2.x, l(1.000000)
 127: mul r1.x, r0.z, r0.z
 128: mul r1.x, r1.x, r1.x
 129: mul r0.z, r0.z, r1.x
 130: mad r0.z, r0.y, r0.z, l(1.000000)
 131: add r1.x, -|r0.w|, l(1.000000)
 132: mul r1.y, r1.x, r1.x
 133: mul r1.y, r1.y, r1.y
 134: mul r1.x, r1.x, r1.y
 135: mad r0.y, r0.y, r1.x, l(1.000000)
 136: mul r0.y, r0.y, r0.z
 137: mul r0.z, r2.w, r2.w
 138: max r0.z, r0.z, l(0.002000)
 139: add r1.x, -r0.z, l(1.000000)
 140: mad r1.y, |r0.w|, r1.x, r0.z
 141: mad r1.x, r2.x, r1.x, r0.z
 142: mul r0.w, |r0.w|, r1.x
 143: mad r0.w, r2.x, r1.y, r0.w
 144: add r0.w, r0.w, l(0.000010)
 145: div r0.w, l(0.500000), r0.w
 146: mul r0.z, r0.z, r0.z
 147: mad r1.x, r2.y, r0.z, -r2.y
 148: mad r1.x, r1.x, r2.y, l(1.000000)
 149: mul r0.z, r0.z, l(0.318310)
 150: mad r1.x, r1.x, r1.x, l(0.000000)
 151: div r0.z, r0.z, r1.x
 152: mul r0.z, r0.z, r0.w
 153: mul r0.z, r0.z, l(3.141593)
 154: max r0.z, r0.z, l(0.000100)
 155: sqrt r0.z, r0.z
 156: mul r0.yz, r2.xxxx, r0.yyzy
 157: dp3 r0.w, r5.xyzx, r5.xyzx
 158: ne r0.w, r0.w, l(0.000000)
 159: and r0.w, r0.w, l(0x3f800000)
 160: mul r0.z, r0.w, r0.z
 161: mul r1.xyz, r0.yyyy, r4.xyzx
 162: mul r0.yzw, r4.xxyz, r0.zzzz
 163: add r0.x, -r0.x, l(1.000000)
 164: mul r2.x, r0.x, r0.x
 165: mul r2.x, r2.x, r2.x
 166: mul r0.x, r0.x, r2.x
 167: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 168: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 169: mul r0.xyz, r0.yzwy, r2.xyzx
 170: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 171: mul o0.xyz, r1.wwww, r0.xyzx
 172: mov o0.w, l(1.000000)
 173: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 147 math, 7 temp registers, 12 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 11
Set 2D Texture "_Control" to slot 1 sampler slot 2
Set 2D Texture "_Splat0" to slot 2 sampler slot 3
Set 2D Texture "_Splat1" to slot 3 sampler slot 4
Set 2D Texture "_Splat2" to slot 4 sampler slot 5
Set 2D Texture "_Splat3" to slot 5 sampler slot 6
Set 2D Texture "_Normal0" to slot 6 sampler slot 7
Set 2D Texture "_Normal1" to slot 7 sampler slot 8
Set 2D Texture "_Normal2" to slot 8 sampler slot 9
Set 2D Texture "_Normal3" to slot 9 sampler slot 10
Set 2D Texture "_LightTexture0" to slot 10 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 11 sampler slot 0

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 224
  Float _NormalScale1 at 228
  Float _NormalScale2 at 232
  Float _NormalScale3 at 236
  Float _Metallic0 at 240
  Float _Metallic1 at 244
  Float _Metallic2 at 248
  Float _Metallic3 at 252
  Float _Smoothness0 at 256
  Float _Smoothness1 at 260
  Float _Smoothness2 at 264
  Float _Smoothness3 at 268
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[17], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture3d (float,float,float,float) t11
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v5.xyxx, t0.xyzw, s11
   5: eq r1.w, r2.x, l(0.000000)
   6: discard_nz r1.w
   7: add r2.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r2.xy, r2.xyxx, cb0[9].xyxx
  10: sample r2.xyzw, r2.xyxx, t1.xyzw, s2
  11: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r3.x, r1.w, l(0.001000)
  13: div r2.xyzw, r2.xyzw, r3.xxxx
  14: mad r3.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  15: mad r3.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  16: mad r4.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  17: mad r4.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  18: sample r5.xyzw, r3.xyxx, t2.xyzw, s3
  19: mul r5.xyzw, r2.xxxx, r5.xyzw
  20: mul r5.w, r5.w, cb0[16].x
  21: sample r6.xyzw, r3.zwzz, t3.xyzw, s4
  22: mul r6.xyzw, r2.yyyy, r6.xyzw
  23: mul r6.w, r6.w, cb0[16].y
  24: add r5.xyzw, r5.xyzw, r6.xyzw
  25: sample r6.xyzw, r4.xyxx, t4.xyzw, s5
  26: mul r6.xyzw, r2.zzzz, r6.xyzw
  27: mul r6.w, r6.w, cb0[16].z
  28: add r5.xyzw, r5.xyzw, r6.xyzw
  29: sample r6.xyzw, r4.zwzz, t5.xyzw, s6
  30: mul r6.xyzw, r2.wwww, r6.xyzw
  31: mul r6.w, r6.w, cb0[16].w
  32: add r5.xyzw, r5.xyzw, r6.xyzw
  33: sample r6.xyzw, r3.xyxx, t6.xyzw, s7
  34: mul r6.x, r6.w, r6.x
  35: mad r3.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  36: mul r6.xy, r3.xyxx, cb0[14].xxxx
  37: dp2 r3.x, r6.xyxx, r6.xyxx
  38: min r3.x, r3.x, l(1.000000)
  39: add r3.x, -r3.x, l(1.000000)
  40: sqrt r6.z, r3.x
  41: sample r3.xyzw, r3.zwzz, t7.xyzw, s8
  42: mul r3.x, r3.w, r3.x
  43: mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  44: mul r3.xy, r3.xyxx, cb0[14].yyyy
  45: dp2 r3.w, r3.xyxx, r3.xyxx
  46: min r3.w, r3.w, l(1.000000)
  47: add r3.w, -r3.w, l(1.000000)
  48: sqrt r3.z, r3.w
  49: mul r3.xyz, r2.yyyy, r3.xyzx
  50: mad r3.xyz, r6.xyzx, r2.xxxx, r3.xyzx
  51: sample r6.xyzw, r4.xyxx, t8.xyzw, s9
  52: mul r6.x, r6.w, r6.x
  53: mad r4.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  54: mul r6.xy, r4.xyxx, cb0[14].zzzz
  55: dp2 r3.w, r6.xyxx, r6.xyxx
  56: min r3.w, r3.w, l(1.000000)
  57: add r3.w, -r3.w, l(1.000000)
  58: sqrt r6.z, r3.w
  59: mad r3.xyz, r6.xyzx, r2.zzzz, r3.xyzx
  60: sample r4.xyzw, r4.zwzz, t9.xyzw, s10
  61: mul r4.x, r4.w, r4.x
  62: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  63: mul r4.xy, r4.xyxx, cb0[14].wwww
  64: dp2 r3.w, r4.xyxx, r4.xyxx
  65: min r3.w, r3.w, l(1.000000)
  66: add r3.w, -r3.w, l(1.000000)
  67: sqrt r4.z, r3.w
  68: mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx
  69: dp4 r2.x, r2.xyzw, cb0[15].xyzw
  70: mul r2.yz, v4.yyyy, cb0[5].xxyx
  71: mad r2.yz, cb0[4].xxyx, v4.xxxx, r2.yyzy
  72: mad r2.yz, cb0[6].xxyx, v4.zzzz, r2.yyzy
  73: add r2.yz, r2.yyzy, cb0[7].xxyx
  74: eq r2.w, cb3[0].x, l(1.000000)
  75: if_nz r2.w
  76:   eq r2.w, cb3[0].y, l(1.000000)
  77:   mul r4.xyz, v4.yyyy, cb3[2].xyzx
  78:   mad r4.xyz, cb3[1].xyzx, v4.xxxx, r4.xyzx
  79:   mad r4.xyz, cb3[3].xyzx, v4.zzzz, r4.xyzx
  80:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  81:   movc r4.xyz, r2.wwww, r4.xyzx, v4.xyzx
  82:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  83:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
  84:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  85:   mad r4.y, cb3[0].z, l(0.500000), l(0.750000)
  86:   max r4.x, r2.w, r4.y
  87:   sample r4.xyzw, r4.xzwx, t11.xyzw, s0
  88: else 
  89:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  90: endif 
  91: dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
  92: sample r4.xyzw, r2.yzyy, t10.xyzw, s1
  93: mul r2.y, r2.w, r4.w
  94: add r3.w, r3.z, l(0.000010)
  95: dp3 r4.x, v1.xyzx, r3.xywx
  96: dp3 r4.y, v2.xyzx, r3.xywx
  97: dp3 r4.z, v3.xyzx, r3.xywx
  98: dp3 r2.z, r4.xyzx, r4.xyzx
  99: rsq r2.z, r2.z
 100: mul r3.xyz, r2.zzzz, r4.xyzx
 101: mul r2.yzw, r2.yyyy, cb0[2].xxyz
 102: add r4.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 103: mad r4.xyz, r2.xxxx, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 104: mad r2.x, -r2.x, l(0.779084), l(0.779084)
 105: mul r5.xyz, r2.xxxx, r5.xyzx
 106: add r2.x, -r5.w, l(1.000000)
 107: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 108: dp3 r0.w, r0.xyzx, r0.xyzx
 109: max r0.w, r0.w, l(0.001000)
 110: rsq r0.w, r0.w
 111: mul r0.xyz, r0.wwww, r0.xyzx
 112: dp3 r0.w, r3.xyzx, r1.xyzx
 113: dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
 114: dp3_sat r1.y, r3.xyzx, r0.xyzx
 115: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 116: mul r0.y, r0.x, r0.x
 117: dp2 r0.y, r0.yyyy, r2.xxxx
 118: add r0.y, r0.y, l(-0.500000)
 119: add r0.z, -r1.x, l(1.000000)
 120: mul r1.z, r0.z, r0.z
 121: mul r1.z, r1.z, r1.z
 122: mul r0.z, r0.z, r1.z
 123: mad r0.z, r0.y, r0.z, l(1.000000)
 124: add r1.z, -|r0.w|, l(1.000000)
 125: mul r3.x, r1.z, r1.z
 126: mul r3.x, r3.x, r3.x
 127: mul r1.z, r1.z, r3.x
 128: mad r0.y, r0.y, r1.z, l(1.000000)
 129: mul r0.y, r0.y, r0.z
 130: mul r0.z, r2.x, r2.x
 131: max r0.z, r0.z, l(0.002000)
 132: add r1.z, -r0.z, l(1.000000)
 133: mad r2.x, |r0.w|, r1.z, r0.z
 134: mad r1.z, r1.x, r1.z, r0.z
 135: mul r0.w, |r0.w|, r1.z
 136: mad r0.w, r1.x, r2.x, r0.w
 137: add r0.w, r0.w, l(0.000010)
 138: div r0.w, l(0.500000), r0.w
 139: mul r0.z, r0.z, r0.z
 140: mad r1.z, r1.y, r0.z, -r1.y
 141: mad r1.y, r1.z, r1.y, l(1.000000)
 142: mul r0.z, r0.z, l(0.318310)
 143: mad r1.y, r1.y, r1.y, l(0.000000)
 144: div r0.z, r0.z, r1.y
 145: mul r0.z, r0.z, r0.w
 146: mul r0.z, r0.z, l(3.141593)
 147: max r0.z, r0.z, l(0.000100)
 148: sqrt r0.z, r0.z
 149: mul r0.yz, r1.xxxx, r0.yyzy
 150: dp3 r0.w, r4.xyzx, r4.xyzx
 151: ne r0.w, r0.w, l(0.000000)
 152: and r0.w, r0.w, l(0x3f800000)
 153: mul r0.z, r0.w, r0.z
 154: mul r1.xyz, r0.yyyy, r2.yzwy
 155: mul r0.yzw, r2.yyzw, r0.zzzz
 156: add r0.x, -r0.x, l(1.000000)
 157: mul r2.x, r0.x, r0.x
 158: mul r2.x, r2.x, r2.x
 159: mul r0.x, r0.x, r2.x
 160: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 161: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
 162: mul r0.xyz, r0.yzwy, r2.xyzx
 163: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 164: mul o0.xyz, r1.wwww, r0.xyzx
 165: mov o0.w, l(1.000000)
 166: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SPOT 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 174 math, 9 temp registers, 13 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 13
Set 2D Texture "_Control" to slot 1 sampler slot 4
Set 2D Texture "_Splat0" to slot 2 sampler slot 5
Set 2D Texture "_Splat1" to slot 3 sampler slot 6
Set 2D Texture "_Splat2" to slot 4 sampler slot 7
Set 2D Texture "_Splat3" to slot 5 sampler slot 8
Set 2D Texture "_Normal0" to slot 6 sampler slot 9
Set 2D Texture "_Normal1" to slot 7 sampler slot 10
Set 2D Texture "_Normal2" to slot 8 sampler slot 11
Set 2D Texture "_Normal3" to slot 9 sampler slot 12
Set 2D Texture "_LightTexture0" to slot 10 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 11 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 13 sampler slot 1

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 224
  Float _NormalScale1 at 228
  Float _NormalScale2 at 232
  Float _NormalScale3 at 236
  Float _Metallic0 at 240
  Float _Metallic1 at 244
  Float _Metallic2 at 248
  Float _Metallic3 at 252
  Float _Smoothness0 at 256
  Float _Smoothness1 at 260
  Float _Smoothness2 at 264
  Float _Smoothness3 at 268
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[17], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_sampler s13, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture2d (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_resource_texture2d (float,float,float,float) t13
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v5.xyxx, t0.xyzw, s13
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[9].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s4
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s5
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[16].x
  25: sample r8.xyzw, r5.zwzz, t3.xyzw, s6
  26: mul r8.xyzw, r4.yyyy, r8.xyzw
  27: mul r8.w, r8.w, cb0[16].y
  28: add r7.xyzw, r7.xyzw, r8.xyzw
  29: sample r8.xyzw, r6.xyxx, t4.xyzw, s7
  30: mul r8.xyzw, r4.zzzz, r8.xyzw
  31: mul r8.w, r8.w, cb0[16].z
  32: add r7.xyzw, r7.xyzw, r8.xyzw
  33: sample r8.xyzw, r6.zwzz, t5.xyzw, s8
  34: mul r8.xyzw, r4.wwww, r8.xyzw
  35: mul r8.w, r8.w, cb0[16].w
  36: add r7.xyzw, r7.xyzw, r8.xyzw
  37: sample r8.xyzw, r5.xyxx, t6.xyzw, s9
  38: mul r8.x, r8.w, r8.x
  39: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  40: mul r8.xy, r5.xyxx, cb0[14].xxxx
  41: dp2 r2.w, r8.xyxx, r8.xyxx
  42: min r2.w, r2.w, l(1.000000)
  43: add r2.w, -r2.w, l(1.000000)
  44: sqrt r8.z, r2.w
  45: sample r5.xyzw, r5.zwzz, t7.xyzw, s10
  46: mul r5.x, r5.w, r5.x
  47: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  48: mul r5.xy, r5.xyxx, cb0[14].yyyy
  49: dp2 r2.w, r5.xyxx, r5.xyxx
  50: min r2.w, r2.w, l(1.000000)
  51: add r2.w, -r2.w, l(1.000000)
  52: sqrt r5.z, r2.w
  53: mul r5.xyz, r4.yyyy, r5.xyzx
  54: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  55: sample r8.xyzw, r6.xyxx, t8.xyzw, s11
  56: mul r8.x, r8.w, r8.x
  57: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  58: mul r8.xy, r6.xyxx, cb0[14].zzzz
  59: dp2 r2.w, r8.xyxx, r8.xyxx
  60: min r2.w, r2.w, l(1.000000)
  61: add r2.w, -r2.w, l(1.000000)
  62: sqrt r8.z, r2.w
  63: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  64: sample r6.xyzw, r6.zwzz, t9.xyzw, s12
  65: mul r6.x, r6.w, r6.x
  66: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  67: mul r6.xy, r6.xyxx, cb0[14].wwww
  68: dp2 r2.w, r6.xyxx, r6.xyxx
  69: min r2.w, r2.w, l(1.000000)
  70: add r2.w, -r2.w, l(1.000000)
  71: sqrt r6.z, r2.w
  72: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  73: dp4 r2.w, r4.xyzw, cb0[15].xyzw
  74: mul r4.xyzw, v4.yyyy, cb0[5].xyzw
  75: mad r4.xyzw, cb0[4].xyzw, v4.xxxx, r4.xyzw
  76: mad r4.xyzw, cb0[6].xyzw, v4.zzzz, r4.xyzw
  77: add r4.xyzw, r4.xyzw, cb0[7].xyzw
  78: mov r6.x, cb4[9].z
  79: mov r6.y, cb4[10].z
  80: mov r6.z, cb4[11].z
  81: dp3 r2.x, r2.xyzx, r6.xyzx
  82: add r6.xyz, v4.xyzx, -cb3[25].xyzx
  83: dp3 r2.y, r6.xyzx, r6.xyzx
  84: sqrt r2.y, r2.y
  85: add r2.y, -r2.x, r2.y
  86: mad r2.x, cb3[25].w, r2.y, r2.x
  87: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  88: eq r2.y, cb5[0].x, l(1.000000)
  89: if_nz r2.y
  90:   eq r2.y, cb5[0].y, l(1.000000)
  91:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
  92:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
  93:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
  94:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  95:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
  96:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  97:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  98:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  99:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
 100:   max r6.x, r2.z, r2.y
 101:   sample r6.xyzw, r6.xzwx, t12.xyzw, s0
 102: else 
 103:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 104: endif 
 105: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 106: mul r6.xyzw, v4.yyyy, cb3[9].xyzw
 107: mad r6.xyzw, cb3[8].xyzw, v4.xxxx, r6.xyzw
 108: mad r6.xyzw, cb3[10].xyzw, v4.zzzz, r6.xyzw
 109: add r6.xyzw, r6.xyzw, cb3[11].xyzw
 110: div r6.xyz, r6.xyzx, r6.wwww
 111: sample_c_lz r2.z, r6.xyxx, t13.xxxx, s1, r6.z
 112: add r3.w, -cb3[24].x, l(1.000000)
 113: mad r2.z, r2.z, r3.w, cb3[24].x
 114: add r2.y, -r2.z, r2.y
 115: mad r2.x, r2.x, r2.y, r2.z
 116: lt r2.y, l(0.000000), r4.z
 117: and r2.y, r2.y, l(0x3f800000)
 118: div r6.xy, r4.xyxx, r4.wwww
 119: add r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 120: sample r6.xyzw, r6.xyxx, t10.xyzw, s2
 121: mul r2.y, r2.y, r6.w
 122: dp3 r2.z, r4.xyzx, r4.xyzx
 123: sample r4.xyzw, r2.zzzz, t11.xyzw, s3
 124: mul r2.y, r2.y, r4.x
 125: mul r2.x, r2.x, r2.y
 126: add r5.w, r5.z, l(0.000010)
 127: dp3 r4.x, v1.xyzx, r5.xywx
 128: dp3 r4.y, v2.xyzx, r5.xywx
 129: dp3 r4.z, v3.xyzx, r5.xywx
 130: dp3 r2.y, r4.xyzx, r4.xyzx
 131: rsq r2.y, r2.y
 132: mul r4.xyz, r2.yyyy, r4.xyzx
 133: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 134: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 135: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 136: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 137: mul r6.xyz, r2.wwww, r7.xyzx
 138: add r2.w, -r7.w, l(1.000000)
 139: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 140: dp3 r0.w, r0.xyzx, r0.xyzx
 141: max r0.w, r0.w, l(0.001000)
 142: rsq r0.w, r0.w
 143: mul r0.xyz, r0.wwww, r0.xyzx
 144: dp3 r0.w, r4.xyzx, r3.xyzx
 145: dp3_sat r3.x, r4.xyzx, r1.xyzx
 146: dp3_sat r3.y, r4.xyzx, r0.xyzx
 147: dp3_sat r0.x, r1.xyzx, r0.xyzx
 148: mul r0.y, r0.x, r0.x
 149: dp2 r0.y, r0.yyyy, r2.wwww
 150: add r0.y, r0.y, l(-0.500000)
 151: add r0.z, -r3.x, l(1.000000)
 152: mul r1.x, r0.z, r0.z
 153: mul r1.x, r1.x, r1.x
 154: mul r0.z, r0.z, r1.x
 155: mad r0.z, r0.y, r0.z, l(1.000000)
 156: add r1.x, -|r0.w|, l(1.000000)
 157: mul r1.y, r1.x, r1.x
 158: mul r1.y, r1.y, r1.y
 159: mul r1.x, r1.x, r1.y
 160: mad r0.y, r0.y, r1.x, l(1.000000)
 161: mul r0.y, r0.y, r0.z
 162: mul r0.z, r2.w, r2.w
 163: max r0.z, r0.z, l(0.002000)
 164: add r1.x, -r0.z, l(1.000000)
 165: mad r1.y, |r0.w|, r1.x, r0.z
 166: mad r1.x, r3.x, r1.x, r0.z
 167: mul r0.w, |r0.w|, r1.x
 168: mad r0.w, r3.x, r1.y, r0.w
 169: add r0.w, r0.w, l(0.000010)
 170: div r0.w, l(0.500000), r0.w
 171: mul r0.z, r0.z, r0.z
 172: mad r1.x, r3.y, r0.z, -r3.y
 173: mad r1.x, r1.x, r3.y, l(1.000000)
 174: mul r0.z, r0.z, l(0.318310)
 175: mad r1.x, r1.x, r1.x, l(0.000000)
 176: div r0.z, r0.z, r1.x
 177: mul r0.z, r0.z, r0.w
 178: mul r0.z, r0.z, l(3.141593)
 179: max r0.z, r0.z, l(0.000100)
 180: sqrt r0.z, r0.z
 181: mul r0.yz, r3.xxxx, r0.yyzy
 182: dp3 r0.w, r5.xyzx, r5.xyzx
 183: ne r0.w, r0.w, l(0.000000)
 184: and r0.w, r0.w, l(0x3f800000)
 185: mul r0.z, r0.w, r0.z
 186: mul r1.xyz, r0.yyyy, r2.xyzx
 187: mul r0.yzw, r2.xxyz, r0.zzzz
 188: add r0.x, -r0.x, l(1.000000)
 189: mul r2.x, r0.x, r0.x
 190: mul r2.x, r2.x, r2.x
 191: mul r0.x, r0.x, r2.x
 192: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 193: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 194: mul r0.xyz, r0.yzwy, r2.xyzx
 195: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 196: mul o0.xyz, r1.wwww, r0.xyzx
 197: mov o0.w, l(1.000000)
 198: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SHADOWS_SOFT SPOT 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 203 math, 13 temp registers, 13 textures, 4 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 13
Set 2D Texture "_Control" to slot 1 sampler slot 4
Set 2D Texture "_Splat0" to slot 2 sampler slot 5
Set 2D Texture "_Splat1" to slot 3 sampler slot 6
Set 2D Texture "_Splat2" to slot 4 sampler slot 7
Set 2D Texture "_Splat3" to slot 5 sampler slot 8
Set 2D Texture "_Normal0" to slot 6 sampler slot 9
Set 2D Texture "_Normal1" to slot 7 sampler slot 10
Set 2D Texture "_Normal2" to slot 8 sampler slot 11
Set 2D Texture "_Normal3" to slot 9 sampler slot 12
Set 2D Texture "_LightTexture0" to slot 10 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 11 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 13 sampler slot 1

Constant Buffer "$Globals" (352 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 144
  Vector4 _LightColor0 at 32
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _Control_TexelSize at 224
  Vector4 _Splat0_ST at 240
  Vector4 _Splat1_ST at 256
  Vector4 _Splat2_ST at 272
  Vector4 _Splat3_ST at 288
  Float _NormalScale0 at 304
  Float _NormalScale1 at 308
  Float _NormalScale2 at 312
  Float _NormalScale3 at 316
  Float _Metallic0 at 320
  Float _Metallic1 at 324
  Float _Metallic2 at 328
  Float _Metallic3 at 332
  Float _Smoothness0 at 336
  Float _Smoothness1 at 340
  Float _Smoothness2 at 344
  Float _Smoothness3 at 348
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[22], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_sampler s13, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture2d (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_resource_texture2d (float,float,float,float) t13
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_output o0.xyzw
      dcl_temps 13
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v5.xyxx, t0.xyzw, s13
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[14].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[14].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s4
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v5.xyxx, cb0[15].xyxx, cb0[15].zwzz
  19: mad r5.zw, v5.xxxy, cb0[16].xxxy, cb0[16].zzzw
  20: mad r6.xy, v5.xyxx, cb0[17].xyxx, cb0[17].zwzz
  21: mad r6.zw, v5.xxxy, cb0[18].xxxy, cb0[18].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s5
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[21].x
  25: sample r8.xyzw, r5.zwzz, t3.xyzw, s6
  26: mul r8.xyzw, r4.yyyy, r8.xyzw
  27: mul r8.w, r8.w, cb0[21].y
  28: add r7.xyzw, r7.xyzw, r8.xyzw
  29: sample r8.xyzw, r6.xyxx, t4.xyzw, s7
  30: mul r8.xyzw, r4.zzzz, r8.xyzw
  31: mul r8.w, r8.w, cb0[21].z
  32: add r7.xyzw, r7.xyzw, r8.xyzw
  33: sample r8.xyzw, r6.zwzz, t5.xyzw, s8
  34: mul r8.xyzw, r4.wwww, r8.xyzw
  35: mul r8.w, r8.w, cb0[21].w
  36: add r7.xyzw, r7.xyzw, r8.xyzw
  37: sample r8.xyzw, r5.xyxx, t6.xyzw, s9
  38: mul r8.x, r8.w, r8.x
  39: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  40: mul r8.xy, r5.xyxx, cb0[19].xxxx
  41: dp2 r2.w, r8.xyxx, r8.xyxx
  42: min r2.w, r2.w, l(1.000000)
  43: add r2.w, -r2.w, l(1.000000)
  44: sqrt r8.z, r2.w
  45: sample r5.xyzw, r5.zwzz, t7.xyzw, s10
  46: mul r5.x, r5.w, r5.x
  47: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  48: mul r5.xy, r5.xyxx, cb0[19].yyyy
  49: dp2 r2.w, r5.xyxx, r5.xyxx
  50: min r2.w, r2.w, l(1.000000)
  51: add r2.w, -r2.w, l(1.000000)
  52: sqrt r5.z, r2.w
  53: mul r5.xyz, r4.yyyy, r5.xyzx
  54: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  55: sample r8.xyzw, r6.xyxx, t8.xyzw, s11
  56: mul r8.x, r8.w, r8.x
  57: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  58: mul r8.xy, r6.xyxx, cb0[19].zzzz
  59: dp2 r2.w, r8.xyxx, r8.xyxx
  60: min r2.w, r2.w, l(1.000000)
  61: add r2.w, -r2.w, l(1.000000)
  62: sqrt r8.z, r2.w
  63: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  64: sample r6.xyzw, r6.zwzz, t9.xyzw, s12
  65: mul r6.x, r6.w, r6.x
  66: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  67: mul r6.xy, r6.xyxx, cb0[19].wwww
  68: dp2 r2.w, r6.xyxx, r6.xyxx
  69: min r2.w, r2.w, l(1.000000)
  70: add r2.w, -r2.w, l(1.000000)
  71: sqrt r6.z, r2.w
  72: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  73: dp4 r2.w, r4.xyzw, cb0[20].xyzw
  74: mul r4.xyzw, v4.yyyy, cb0[10].xyzw
  75: mad r4.xyzw, cb0[9].xyzw, v4.xxxx, r4.xyzw
  76: mad r4.xyzw, cb0[11].xyzw, v4.zzzz, r4.xyzw
  77: add r4.xyzw, r4.xyzw, cb0[12].xyzw
  78: mov r6.x, cb4[9].z
  79: mov r6.y, cb4[10].z
  80: mov r6.z, cb4[11].z
  81: dp3 r2.x, r2.xyzx, r6.xyzx
  82: add r6.xyz, v4.xyzx, -cb3[25].xyzx
  83: dp3 r2.y, r6.xyzx, r6.xyzx
  84: sqrt r2.y, r2.y
  85: add r2.y, -r2.x, r2.y
  86: mad r2.x, cb3[25].w, r2.y, r2.x
  87: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  88: eq r2.y, cb5[0].x, l(1.000000)
  89: if_nz r2.y
  90:   eq r2.y, cb5[0].y, l(1.000000)
  91:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
  92:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
  93:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
  94:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  95:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
  96:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  97:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  98:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  99:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
 100:   max r6.x, r2.z, r2.y
 101:   sample r6.xyzw, r6.xzwx, t12.xyzw, s0
 102: else 
 103:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 104: endif 
 105: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 106: lt r2.z, r2.x, l(0.990000)
 107: if_nz r2.z
 108:   mul r6.xyzw, v4.yyyy, cb3[9].xyzw
 109:   mad r6.xyzw, cb3[8].xyzw, v4.xxxx, r6.xyzw
 110:   mad r6.xyzw, cb3[10].xyzw, v4.zzzz, r6.xyzw
 111:   add r6.xyzw, r6.xyzw, cb3[11].xyzw
 112:   div r6.xyz, r6.xyzx, r6.wwww
 113:   mad r8.xy, r6.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 114:   round_ni r8.xy, r8.xyxx
 115:   mad r6.xy, r6.xyxx, cb0[8].zwzz, -r8.xyxx
 116:   add r9.xyzw, r6.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 117:   mul r10.xw, r9.xxxz, r9.xxxz
 118:   mad r8.zw, r10.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r6.xxxy
 119:   add r9.xz, -r6.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
 120:   min r11.xy, r6.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 121:   mad r9.xz, -r11.xxyx, r11.xxyx, r9.xxzx
 122:   max r6.xy, r6.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 123:   mad r6.xy, -r6.xyxx, r6.xyxx, r9.ywyy
 124:   mov r11.x, r8.z
 125:   mov r11.y, r9.x
 126:   mov r11.z, r6.x
 127:   mov r11.w, r10.x
 128:   mul r11.xyzw, r11.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
 129:   mov r10.x, r8.w
 130:   mov r10.y, r9.z
 131:   mov r10.z, r6.y
 132:   mul r9.xyzw, r10.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
 133:   add r10.xyzw, r11.ywyw, r11.xzxz
 134:   add r12.xyzw, r9.yyww, r9.xxzz
 135:   div r6.xy, r11.ywyy, r10.zwzz
 136:   add r6.xy, r6.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
 137:   div r8.zw, r9.yyyw, r12.yyyw
 138:   add r8.zw, r8.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
 139:   mul r9.xy, r6.xyxx, cb0[8].xxxx
 140:   mul r9.zw, r8.zzzw, cb0[8].yyyy
 141:   mul r10.xyzw, r10.xyzw, r12.xyzw
 142:   mad r11.xyzw, r8.xyxy, cb0[8].xyxy, r9.xzyz
 143:   sample_c_lz r2.z, r11.xyxx, t13.xxxx, s1, r6.z
 144:   sample_c_lz r3.w, r11.zwzz, t13.xxxx, s1, r6.z
 145:   mul r3.w, r3.w, r10.y
 146:   mad r2.z, r10.x, r2.z, r3.w
 147:   mad r8.xyzw, r8.xyxy, cb0[8].xyxy, r9.xwyw
 148:   sample_c_lz r3.w, r8.xyxx, t13.xxxx, s1, r6.z
 149:   mad r2.z, r10.z, r3.w, r2.z
 150:   sample_c_lz r3.w, r8.zwzz, t13.xxxx, s1, r6.z
 151:   mad r2.z, r10.w, r3.w, r2.z
 152:   add r3.w, -cb3[24].x, l(1.000000)
 153:   mad r2.z, r2.z, r3.w, cb3[24].x
 154: else 
 155:   mov r2.z, l(1.000000)
 156: endif 
 157: add r2.y, -r2.z, r2.y
 158: mad r2.x, r2.x, r2.y, r2.z
 159: lt r2.y, l(0.000000), r4.z
 160: and r2.y, r2.y, l(0x3f800000)
 161: div r6.xy, r4.xyxx, r4.wwww
 162: add r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 163: sample r6.xyzw, r6.xyxx, t10.xyzw, s2
 164: mul r2.y, r2.y, r6.w
 165: dp3 r2.z, r4.xyzx, r4.xyzx
 166: sample r4.xyzw, r2.zzzz, t11.xyzw, s3
 167: mul r2.y, r2.y, r4.x
 168: mul r2.x, r2.x, r2.y
 169: add r5.w, r5.z, l(0.000010)
 170: dp3 r4.x, v1.xyzx, r5.xywx
 171: dp3 r4.y, v2.xyzx, r5.xywx
 172: dp3 r4.z, v3.xyzx, r5.xywx
 173: dp3 r2.y, r4.xyzx, r4.xyzx
 174: rsq r2.y, r2.y
 175: mul r4.xyz, r2.yyyy, r4.xyzx
 176: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 177: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 178: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 179: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 180: mul r6.xyz, r2.wwww, r7.xyzx
 181: add r2.w, -r7.w, l(1.000000)
 182: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 183: dp3 r0.w, r0.xyzx, r0.xyzx
 184: max r0.w, r0.w, l(0.001000)
 185: rsq r0.w, r0.w
 186: mul r0.xyz, r0.wwww, r0.xyzx
 187: dp3 r0.w, r4.xyzx, r3.xyzx
 188: dp3_sat r3.x, r4.xyzx, r1.xyzx
 189: dp3_sat r3.y, r4.xyzx, r0.xyzx
 190: dp3_sat r0.x, r1.xyzx, r0.xyzx
 191: mul r0.y, r0.x, r0.x
 192: dp2 r0.y, r0.yyyy, r2.wwww
 193: add r0.y, r0.y, l(-0.500000)
 194: add r0.z, -r3.x, l(1.000000)
 195: mul r1.x, r0.z, r0.z
 196: mul r1.x, r1.x, r1.x
 197: mul r0.z, r0.z, r1.x
 198: mad r0.z, r0.y, r0.z, l(1.000000)
 199: add r1.x, -|r0.w|, l(1.000000)
 200: mul r1.y, r1.x, r1.x
 201: mul r1.y, r1.y, r1.y
 202: mul r1.x, r1.x, r1.y
 203: mad r0.y, r0.y, r1.x, l(1.000000)
 204: mul r0.y, r0.y, r0.z
 205: mul r0.z, r2.w, r2.w
 206: max r0.z, r0.z, l(0.002000)
 207: add r1.x, -r0.z, l(1.000000)
 208: mad r1.y, |r0.w|, r1.x, r0.z
 209: mad r1.x, r3.x, r1.x, r0.z
 210: mul r0.w, |r0.w|, r1.x
 211: mad r0.w, r3.x, r1.y, r0.w
 212: add r0.w, r0.w, l(0.000010)
 213: div r0.w, l(0.500000), r0.w
 214: mul r0.z, r0.z, r0.z
 215: mad r1.x, r3.y, r0.z, -r3.y
 216: mad r1.x, r1.x, r3.y, l(1.000000)
 217: mul r0.z, r0.z, l(0.318310)
 218: mad r1.x, r1.x, r1.x, l(0.000000)
 219: div r0.z, r0.z, r1.x
 220: mul r0.z, r0.z, r0.w
 221: mul r0.z, r0.z, l(3.141593)
 222: max r0.z, r0.z, l(0.000100)
 223: sqrt r0.z, r0.z
 224: mul r0.yz, r3.xxxx, r0.yyzy
 225: dp3 r0.w, r5.xyzx, r5.xyzx
 226: ne r0.w, r0.w, l(0.000000)
 227: and r0.w, r0.w, l(0x3f800000)
 228: mul r0.z, r0.w, r0.z
 229: mul r1.xyz, r0.yyyy, r2.xyzx
 230: mul r0.yzw, r2.xxyz, r0.zzzz
 231: add r0.x, -r0.x, l(1.000000)
 232: mul r2.x, r0.x, r0.x
 233: mul r2.x, r2.x, r2.x
 234: mul r0.x, r0.x, r2.x
 235: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 236: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 237: mul r0.xyz, r0.yzwy, r2.xyzx
 238: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 239: mul o0.xyz, r1.wwww, r0.xyzx
 240: mov o0.w, l(1.000000)
 241: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 152 math, 7 temp registers, 12 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 11
Set 2D Texture "_Control" to slot 1 sampler slot 2
Set 2D Texture "_Splat0" to slot 2 sampler slot 3
Set 2D Texture "_Splat1" to slot 3 sampler slot 4
Set 2D Texture "_Splat2" to slot 4 sampler slot 5
Set 2D Texture "_Splat3" to slot 5 sampler slot 6
Set 2D Texture "_Normal0" to slot 6 sampler slot 7
Set 2D Texture "_Normal1" to slot 7 sampler slot 8
Set 2D Texture "_Normal2" to slot 8 sampler slot 9
Set 2D Texture "_Normal3" to slot 9 sampler slot 10
Set 2D Texture "_ShadowMapTexture" to slot 10 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 11 sampler slot 0

Constant Buffer "$Globals" (208 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 160
  Float _NormalScale1 at 164
  Float _NormalScale2 at 168
  Float _NormalScale3 at 172
  Float _Metallic0 at 176
  Float _Metallic1 at 180
  Float _Metallic2 at 184
  Float _Metallic3 at 188
  Float _Smoothness0 at 192
  Float _Smoothness1 at 196
  Float _Smoothness2 at 200
  Float _Smoothness3 at 204
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 6   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[13], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture3d (float,float,float,float) t11
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v5.xyxx, t0.xyzw, s11
   5: eq r1.w, r2.x, l(0.000000)
   6: discard_nz r1.w
   7: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r2.xy, r2.xyxx, cb0[5].xyxx
  10: sample r2.xyzw, r2.xyxx, t1.xyzw, s2
  11: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r3.x, r1.w, l(0.001000)
  13: div r2.xyzw, r2.xyzw, r3.xxxx
  14: mad r3.xy, v5.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r3.zw, v5.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r4.xy, v5.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r4.zw, v5.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r5.xyzw, r3.xyxx, t2.xyzw, s3
  19: mul r5.xyzw, r2.xxxx, r5.xyzw
  20: mul r5.w, r5.w, cb0[12].x
  21: sample r6.xyzw, r3.zwzz, t3.xyzw, s4
  22: mul r6.xyzw, r2.yyyy, r6.xyzw
  23: mul r6.w, r6.w, cb0[12].y
  24: add r5.xyzw, r5.xyzw, r6.xyzw
  25: sample r6.xyzw, r4.xyxx, t4.xyzw, s5
  26: mul r6.xyzw, r2.zzzz, r6.xyzw
  27: mul r6.w, r6.w, cb0[12].z
  28: add r5.xyzw, r5.xyzw, r6.xyzw
  29: sample r6.xyzw, r4.zwzz, t5.xyzw, s6
  30: mul r6.xyzw, r2.wwww, r6.xyzw
  31: mul r6.w, r6.w, cb0[12].w
  32: add r5.xyzw, r5.xyzw, r6.xyzw
  33: sample r6.xyzw, r3.xyxx, t6.xyzw, s7
  34: mul r6.x, r6.w, r6.x
  35: mad r3.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  36: mul r6.xy, r3.xyxx, cb0[10].xxxx
  37: dp2 r3.x, r6.xyxx, r6.xyxx
  38: min r3.x, r3.x, l(1.000000)
  39: add r3.x, -r3.x, l(1.000000)
  40: sqrt r6.z, r3.x
  41: sample r3.xyzw, r3.zwzz, t7.xyzw, s8
  42: mul r3.x, r3.w, r3.x
  43: mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  44: mul r3.xy, r3.xyxx, cb0[10].yyyy
  45: dp2 r3.w, r3.xyxx, r3.xyxx
  46: min r3.w, r3.w, l(1.000000)
  47: add r3.w, -r3.w, l(1.000000)
  48: sqrt r3.z, r3.w
  49: mul r3.xyz, r2.yyyy, r3.xyzx
  50: mad r3.xyz, r6.xyzx, r2.xxxx, r3.xyzx
  51: sample r6.xyzw, r4.xyxx, t8.xyzw, s9
  52: mul r6.x, r6.w, r6.x
  53: mad r4.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  54: mul r6.xy, r4.xyxx, cb0[10].zzzz
  55: dp2 r3.w, r6.xyxx, r6.xyxx
  56: min r3.w, r3.w, l(1.000000)
  57: add r3.w, -r3.w, l(1.000000)
  58: sqrt r6.z, r3.w
  59: mad r3.xyz, r6.xyzx, r2.zzzz, r3.xyzx
  60: sample r4.xyzw, r4.zwzz, t9.xyzw, s10
  61: mul r4.x, r4.w, r4.x
  62: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  63: mul r4.xy, r4.xyxx, cb0[10].wwww
  64: dp2 r3.w, r4.xyxx, r4.xyxx
  65: min r3.w, r3.w, l(1.000000)
  66: add r3.w, -r3.w, l(1.000000)
  67: sqrt r4.z, r3.w
  68: mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx
  69: dp4 r2.x, r2.xyzw, cb0[11].xyzw
  70: mov r4.x, cb4[9].z
  71: mov r4.y, cb4[10].z
  72: mov r4.z, cb4[11].z
  73: dp3 r2.y, r0.xyzx, r4.xyzx
  74: add r4.xyz, v4.xyzx, -cb3[25].xyzx
  75: dp3 r2.z, r4.xyzx, r4.xyzx
  76: sqrt r2.z, r2.z
  77: add r2.z, -r2.y, r2.z
  78: mad r2.y, cb3[25].w, r2.z, r2.y
  79: mad_sat r2.y, r2.y, cb3[24].z, cb3[24].w
  80: eq r2.z, cb5[0].x, l(1.000000)
  81: if_nz r2.z
  82:   eq r2.z, cb5[0].y, l(1.000000)
  83:   mul r4.xyz, v4.yyyy, cb5[2].xyzx
  84:   mad r4.xyz, cb5[1].xyzx, v4.xxxx, r4.xyzx
  85:   mad r4.xyz, cb5[3].xyzx, v4.zzzz, r4.xyzx
  86:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  87:   movc r4.xyz, r2.zzzz, r4.xyzx, v4.xyzx
  88:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  89:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  90:   mad r2.z, r4.y, l(0.250000), l(0.750000)
  91:   mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
  92:   max r4.x, r2.w, r2.z
  93:   sample r4.xyzw, r4.xzwx, t11.xyzw, s0
  94: else 
  95:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  96: endif 
  97: dp4_sat r2.z, r4.xyzw, cb2[46].xyzw
  98: div r4.xy, v6.xyxx, v6.wwww
  99: sample r4.xyzw, r4.xyxx, t10.xyzw, s1
 100: add r2.z, r2.z, -r4.x
 101: mad r2.y, r2.y, r2.z, r4.x
 102: add r3.w, r3.z, l(0.000010)
 103: dp3 r4.x, v1.xyzx, r3.xywx
 104: dp3 r4.y, v2.xyzx, r3.xywx
 105: dp3 r4.z, v3.xyzx, r3.xywx
 106: dp3 r2.z, r4.xyzx, r4.xyzx
 107: rsq r2.z, r2.z
 108: mul r3.xyz, r2.zzzz, r4.xyzx
 109: mul r2.yzw, r2.yyyy, cb0[2].xxyz
 110: add r4.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 111: mad r4.xyz, r2.xxxx, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 112: mad r2.x, -r2.x, l(0.779084), l(0.779084)
 113: mul r5.xyz, r2.xxxx, r5.xyzx
 114: add r2.x, -r5.w, l(1.000000)
 115: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 116: dp3 r0.w, r0.xyzx, r0.xyzx
 117: max r0.w, r0.w, l(0.001000)
 118: rsq r0.w, r0.w
 119: mul r0.xyz, r0.wwww, r0.xyzx
 120: dp3 r0.w, r3.xyzx, r1.xyzx
 121: dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
 122: dp3_sat r1.y, r3.xyzx, r0.xyzx
 123: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 124: mul r0.y, r0.x, r0.x
 125: dp2 r0.y, r0.yyyy, r2.xxxx
 126: add r0.y, r0.y, l(-0.500000)
 127: add r0.z, -r1.x, l(1.000000)
 128: mul r1.z, r0.z, r0.z
 129: mul r1.z, r1.z, r1.z
 130: mul r0.z, r0.z, r1.z
 131: mad r0.z, r0.y, r0.z, l(1.000000)
 132: add r1.z, -|r0.w|, l(1.000000)
 133: mul r3.x, r1.z, r1.z
 134: mul r3.x, r3.x, r3.x
 135: mul r1.z, r1.z, r3.x
 136: mad r0.y, r0.y, r1.z, l(1.000000)
 137: mul r0.y, r0.y, r0.z
 138: mul r0.z, r2.x, r2.x
 139: max r0.z, r0.z, l(0.002000)
 140: add r1.z, -r0.z, l(1.000000)
 141: mad r2.x, |r0.w|, r1.z, r0.z
 142: mad r1.z, r1.x, r1.z, r0.z
 143: mul r0.w, |r0.w|, r1.z
 144: mad r0.w, r1.x, r2.x, r0.w
 145: add r0.w, r0.w, l(0.000010)
 146: div r0.w, l(0.500000), r0.w
 147: mul r0.z, r0.z, r0.z
 148: mad r1.z, r1.y, r0.z, -r1.y
 149: mad r1.y, r1.z, r1.y, l(1.000000)
 150: mul r0.z, r0.z, l(0.318310)
 151: mad r1.y, r1.y, r1.y, l(0.000000)
 152: div r0.z, r0.z, r1.y
 153: mul r0.z, r0.z, r0.w
 154: mul r0.z, r0.z, l(3.141593)
 155: max r0.z, r0.z, l(0.000100)
 156: sqrt r0.z, r0.z
 157: mul r0.yz, r1.xxxx, r0.yyzy
 158: dp3 r0.w, r4.xyzx, r4.xyzx
 159: ne r0.w, r0.w, l(0.000000)
 160: and r0.w, r0.w, l(0x3f800000)
 161: mul r0.z, r0.w, r0.z
 162: mul r1.xyz, r0.yyyy, r2.yzwy
 163: mul r0.yzw, r2.yyzw, r0.zzzz
 164: add r0.x, -r0.x, l(1.000000)
 165: mul r2.x, r0.x, r0.x
 166: mul r2.x, r2.x, r2.x
 167: mul r0.x, r0.x, r2.x
 168: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 169: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
 170: mul r0.xyz, r0.yzwy, r2.xyzx
 171: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 172: mul o0.xyz, r1.wwww, r0.xyzx
 173: mov o0.w, l(1.000000)
 174: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 157 math, 7 temp registers, 13 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 12
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_Normal0" to slot 6 sampler slot 8
Set 2D Texture "_Normal1" to slot 7 sampler slot 9
Set 2D Texture "_Normal2" to slot 8 sampler slot 10
Set 2D Texture "_Normal3" to slot 9 sampler slot 11
Set 2D Texture "_ShadowMapTexture" to slot 10 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 11 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 0

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 224
  Float _NormalScale1 at 228
  Float _NormalScale2 at 232
  Float _NormalScale3 at 236
  Float _Metallic0 at 240
  Float _Metallic1 at 244
  Float _Metallic2 at 248
  Float _Metallic3 at 252
  Float _Smoothness0 at 256
  Float _Smoothness1 at 260
  Float _Smoothness2 at 264
  Float _Smoothness3 at 268
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[17], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture2d (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v5.xyxx, t0.xyzw, s12
   5: eq r1.w, r2.x, l(0.000000)
   6: discard_nz r1.w
   7: add r2.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r2.xy, r2.xyxx, cb0[9].xyxx
  10: sample r2.xyzw, r2.xyxx, t1.xyzw, s3
  11: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r3.x, r1.w, l(0.001000)
  13: div r2.xyzw, r2.xyzw, r3.xxxx
  14: mad r3.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  15: mad r3.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  16: mad r4.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  17: mad r4.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  18: sample r5.xyzw, r3.xyxx, t2.xyzw, s4
  19: mul r5.xyzw, r2.xxxx, r5.xyzw
  20: mul r5.w, r5.w, cb0[16].x
  21: sample r6.xyzw, r3.zwzz, t3.xyzw, s5
  22: mul r6.xyzw, r2.yyyy, r6.xyzw
  23: mul r6.w, r6.w, cb0[16].y
  24: add r5.xyzw, r5.xyzw, r6.xyzw
  25: sample r6.xyzw, r4.xyxx, t4.xyzw, s6
  26: mul r6.xyzw, r2.zzzz, r6.xyzw
  27: mul r6.w, r6.w, cb0[16].z
  28: add r5.xyzw, r5.xyzw, r6.xyzw
  29: sample r6.xyzw, r4.zwzz, t5.xyzw, s7
  30: mul r6.xyzw, r2.wwww, r6.xyzw
  31: mul r6.w, r6.w, cb0[16].w
  32: add r5.xyzw, r5.xyzw, r6.xyzw
  33: sample r6.xyzw, r3.xyxx, t6.xyzw, s8
  34: mul r6.x, r6.w, r6.x
  35: mad r3.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  36: mul r6.xy, r3.xyxx, cb0[14].xxxx
  37: dp2 r3.x, r6.xyxx, r6.xyxx
  38: min r3.x, r3.x, l(1.000000)
  39: add r3.x, -r3.x, l(1.000000)
  40: sqrt r6.z, r3.x
  41: sample r3.xyzw, r3.zwzz, t7.xyzw, s9
  42: mul r3.x, r3.w, r3.x
  43: mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  44: mul r3.xy, r3.xyxx, cb0[14].yyyy
  45: dp2 r3.w, r3.xyxx, r3.xyxx
  46: min r3.w, r3.w, l(1.000000)
  47: add r3.w, -r3.w, l(1.000000)
  48: sqrt r3.z, r3.w
  49: mul r3.xyz, r2.yyyy, r3.xyzx
  50: mad r3.xyz, r6.xyzx, r2.xxxx, r3.xyzx
  51: sample r6.xyzw, r4.xyxx, t8.xyzw, s10
  52: mul r6.x, r6.w, r6.x
  53: mad r4.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  54: mul r6.xy, r4.xyxx, cb0[14].zzzz
  55: dp2 r3.w, r6.xyxx, r6.xyxx
  56: min r3.w, r3.w, l(1.000000)
  57: add r3.w, -r3.w, l(1.000000)
  58: sqrt r6.z, r3.w
  59: mad r3.xyz, r6.xyzx, r2.zzzz, r3.xyzx
  60: sample r4.xyzw, r4.zwzz, t9.xyzw, s11
  61: mul r4.x, r4.w, r4.x
  62: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  63: mul r4.xy, r4.xyxx, cb0[14].wwww
  64: dp2 r3.w, r4.xyxx, r4.xyxx
  65: min r3.w, r3.w, l(1.000000)
  66: add r3.w, -r3.w, l(1.000000)
  67: sqrt r4.z, r3.w
  68: mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx
  69: dp4 r2.x, r2.xyzw, cb0[15].xyzw
  70: mul r2.yz, v4.yyyy, cb0[5].xxyx
  71: mad r2.yz, cb0[4].xxyx, v4.xxxx, r2.yyzy
  72: mad r2.yz, cb0[6].xxyx, v4.zzzz, r2.yyzy
  73: add r2.yz, r2.yyzy, cb0[7].xxyx
  74: mov r4.x, cb4[9].z
  75: mov r4.y, cb4[10].z
  76: mov r4.z, cb4[11].z
  77: dp3 r2.w, r0.xyzx, r4.xyzx
  78: add r4.xyz, v4.xyzx, -cb3[25].xyzx
  79: dp3 r4.x, r4.xyzx, r4.xyzx
  80: sqrt r4.x, r4.x
  81: add r4.x, -r2.w, r4.x
  82: mad r2.w, cb3[25].w, r4.x, r2.w
  83: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  84: eq r4.x, cb5[0].x, l(1.000000)
  85: if_nz r4.x
  86:   eq r4.x, cb5[0].y, l(1.000000)
  87:   mul r4.yzw, v4.yyyy, cb5[2].xxyz
  88:   mad r4.yzw, cb5[1].xxyz, v4.xxxx, r4.yyzw
  89:   mad r4.yzw, cb5[3].xxyz, v4.zzzz, r4.yyzw
  90:   add r4.yzw, r4.yyzw, cb5[4].xxyz
  91:   movc r4.xyz, r4.xxxx, r4.yzwy, v4.xyzx
  92:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  93:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  94:   mad r4.y, r4.y, l(0.250000), l(0.750000)
  95:   mad r6.x, cb5[0].z, l(0.500000), l(0.750000)
  96:   max r4.x, r4.y, r6.x
  97:   sample r4.xyzw, r4.xzwx, t12.xyzw, s0
  98: else 
  99:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 100: endif 
 101: dp4_sat r4.x, r4.xyzw, cb2[46].xyzw
 102: div r4.yz, v7.xxyx, v7.wwww
 103: sample r6.xyzw, r4.yzyy, t10.xyzw, s1
 104: add r4.x, r4.x, -r6.x
 105: mad r2.w, r2.w, r4.x, r6.x
 106: sample r4.xyzw, r2.yzyy, t11.xyzw, s2
 107: mul r2.y, r2.w, r4.w
 108: add r3.w, r3.z, l(0.000010)
 109: dp3 r4.x, v1.xyzx, r3.xywx
 110: dp3 r4.y, v2.xyzx, r3.xywx
 111: dp3 r4.z, v3.xyzx, r3.xywx
 112: dp3 r2.z, r4.xyzx, r4.xyzx
 113: rsq r2.z, r2.z
 114: mul r3.xyz, r2.zzzz, r4.xyzx
 115: mul r2.yzw, r2.yyyy, cb0[2].xxyz
 116: add r4.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 117: mad r4.xyz, r2.xxxx, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 118: mad r2.x, -r2.x, l(0.779084), l(0.779084)
 119: mul r5.xyz, r2.xxxx, r5.xyzx
 120: add r2.x, -r5.w, l(1.000000)
 121: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 122: dp3 r0.w, r0.xyzx, r0.xyzx
 123: max r0.w, r0.w, l(0.001000)
 124: rsq r0.w, r0.w
 125: mul r0.xyz, r0.wwww, r0.xyzx
 126: dp3 r0.w, r3.xyzx, r1.xyzx
 127: dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
 128: dp3_sat r1.y, r3.xyzx, r0.xyzx
 129: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 130: mul r0.y, r0.x, r0.x
 131: dp2 r0.y, r0.yyyy, r2.xxxx
 132: add r0.y, r0.y, l(-0.500000)
 133: add r0.z, -r1.x, l(1.000000)
 134: mul r1.z, r0.z, r0.z
 135: mul r1.z, r1.z, r1.z
 136: mul r0.z, r0.z, r1.z
 137: mad r0.z, r0.y, r0.z, l(1.000000)
 138: add r1.z, -|r0.w|, l(1.000000)
 139: mul r3.x, r1.z, r1.z
 140: mul r3.x, r3.x, r3.x
 141: mul r1.z, r1.z, r3.x
 142: mad r0.y, r0.y, r1.z, l(1.000000)
 143: mul r0.y, r0.y, r0.z
 144: mul r0.z, r2.x, r2.x
 145: max r0.z, r0.z, l(0.002000)
 146: add r1.z, -r0.z, l(1.000000)
 147: mad r2.x, |r0.w|, r1.z, r0.z
 148: mad r1.z, r1.x, r1.z, r0.z
 149: mul r0.w, |r0.w|, r1.z
 150: mad r0.w, r1.x, r2.x, r0.w
 151: add r0.w, r0.w, l(0.000010)
 152: div r0.w, l(0.500000), r0.w
 153: mul r0.z, r0.z, r0.z
 154: mad r1.z, r1.y, r0.z, -r1.y
 155: mad r1.y, r1.z, r1.y, l(1.000000)
 156: mul r0.z, r0.z, l(0.318310)
 157: mad r1.y, r1.y, r1.y, l(0.000000)
 158: div r0.z, r0.z, r1.y
 159: mul r0.z, r0.z, r0.w
 160: mul r0.z, r0.z, l(3.141593)
 161: max r0.z, r0.z, l(0.000100)
 162: sqrt r0.z, r0.z
 163: mul r0.yz, r1.xxxx, r0.yyzy
 164: dp3 r0.w, r4.xyzx, r4.xyzx
 165: ne r0.w, r0.w, l(0.000000)
 166: and r0.w, r0.w, l(0x3f800000)
 167: mul r0.z, r0.w, r0.z
 168: mul r1.xyz, r0.yyyy, r2.yzwy
 169: mul r0.yzw, r2.yyzw, r0.zzzz
 170: add r0.x, -r0.x, l(1.000000)
 171: mul r2.x, r0.x, r0.x
 172: mul r2.x, r2.x, r2.x
 173: mul r0.x, r0.x, r2.x
 174: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 175: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
 176: mul r0.xyz, r0.yzwy, r2.xyzx
 177: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 178: mul o0.xyz, r1.wwww, r0.xyzx
 179: mov o0.w, l(1.000000)
 180: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 172 math, 9 temp registers, 12 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 12
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_Normal0" to slot 6 sampler slot 8
Set 2D Texture "_Normal1" to slot 7 sampler slot 9
Set 2D Texture "_Normal2" to slot 8 sampler slot 10
Set 2D Texture "_Normal3" to slot 9 sampler slot 11
Set 2D Texture "_LightTexture0" to slot 10 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 11 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 12 sampler slot 1

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 224
  Float _NormalScale1 at 228
  Float _NormalScale2 at 232
  Float _NormalScale3 at 236
  Float _Metallic0 at 240
  Float _Metallic1 at 244
  Float _Metallic2 at 248
  Float _Metallic3 at 252
  Float _Smoothness0 at 256
  Float _Smoothness1 at 260
  Float _Smoothness2 at 264
  Float _Smoothness3 at 268
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[17], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture3d (float,float,float,float) t11
      dcl_resource_texturecube (float,float,float,float) t12
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v5.xyxx, t0.xyzw, s12
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[9].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s3
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s4
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[16].x
  25: sample r8.xyzw, r5.zwzz, t3.xyzw, s5
  26: mul r8.xyzw, r4.yyyy, r8.xyzw
  27: mul r8.w, r8.w, cb0[16].y
  28: add r7.xyzw, r7.xyzw, r8.xyzw
  29: sample r8.xyzw, r6.xyxx, t4.xyzw, s6
  30: mul r8.xyzw, r4.zzzz, r8.xyzw
  31: mul r8.w, r8.w, cb0[16].z
  32: add r7.xyzw, r7.xyzw, r8.xyzw
  33: sample r8.xyzw, r6.zwzz, t5.xyzw, s7
  34: mul r8.xyzw, r4.wwww, r8.xyzw
  35: mul r8.w, r8.w, cb0[16].w
  36: add r7.xyzw, r7.xyzw, r8.xyzw
  37: sample r8.xyzw, r5.xyxx, t6.xyzw, s8
  38: mul r8.x, r8.w, r8.x
  39: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  40: mul r8.xy, r5.xyxx, cb0[14].xxxx
  41: dp2 r2.w, r8.xyxx, r8.xyxx
  42: min r2.w, r2.w, l(1.000000)
  43: add r2.w, -r2.w, l(1.000000)
  44: sqrt r8.z, r2.w
  45: sample r5.xyzw, r5.zwzz, t7.xyzw, s9
  46: mul r5.x, r5.w, r5.x
  47: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  48: mul r5.xy, r5.xyxx, cb0[14].yyyy
  49: dp2 r2.w, r5.xyxx, r5.xyxx
  50: min r2.w, r2.w, l(1.000000)
  51: add r2.w, -r2.w, l(1.000000)
  52: sqrt r5.z, r2.w
  53: mul r5.xyz, r4.yyyy, r5.xyzx
  54: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  55: sample r8.xyzw, r6.xyxx, t8.xyzw, s10
  56: mul r8.x, r8.w, r8.x
  57: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  58: mul r8.xy, r6.xyxx, cb0[14].zzzz
  59: dp2 r2.w, r8.xyxx, r8.xyxx
  60: min r2.w, r2.w, l(1.000000)
  61: add r2.w, -r2.w, l(1.000000)
  62: sqrt r8.z, r2.w
  63: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  64: sample r6.xyzw, r6.zwzz, t9.xyzw, s11
  65: mul r6.x, r6.w, r6.x
  66: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  67: mul r6.xy, r6.xyxx, cb0[14].wwww
  68: dp2 r2.w, r6.xyxx, r6.xyxx
  69: min r2.w, r2.w, l(1.000000)
  70: add r2.w, -r2.w, l(1.000000)
  71: sqrt r6.z, r2.w
  72: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  73: dp4 r2.w, r4.xyzw, cb0[15].xyzw
  74: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  75: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  76: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  77: add r4.xyz, r4.xyzx, cb0[7].xyzx
  78: mov r6.x, cb4[9].z
  79: mov r6.y, cb4[10].z
  80: mov r6.z, cb4[11].z
  81: dp3 r2.x, r2.xyzx, r6.xyzx
  82: add r6.xyz, v4.xyzx, -cb3[25].xyzx
  83: dp3 r2.y, r6.xyzx, r6.xyzx
  84: sqrt r2.y, r2.y
  85: add r2.y, -r2.x, r2.y
  86: mad r2.x, cb3[25].w, r2.y, r2.x
  87: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  88: eq r2.y, cb5[0].x, l(1.000000)
  89: if_nz r2.y
  90:   eq r2.y, cb5[0].y, l(1.000000)
  91:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
  92:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
  93:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
  94:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  95:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
  96:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  97:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  98:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  99:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
 100:   max r6.x, r2.z, r2.y
 101:   sample r6.xyzw, r6.xzwx, t11.xyzw, s0
 102: else 
 103:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 104: endif 
 105: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 106: add r6.xyz, v4.xyzx, -cb2[1].xyzx
 107: max r2.z, |r6.y|, |r6.x|
 108: max r2.z, |r6.z|, r2.z
 109: add r2.z, r2.z, -cb2[2].z
 110: max r2.z, r2.z, l(0.000010)
 111: mul r2.z, r2.z, cb2[2].w
 112: div r2.z, cb2[2].y, r2.z
 113: add r2.z, r2.z, -cb2[2].x
 114: add r2.z, -r2.z, l(1.000000)
 115: sample_c_lz r2.z, r6.xyzx, t12.xxxx, s1, r2.z
 116: add r3.w, -cb3[24].x, l(1.000000)
 117: mad r2.z, r2.z, r3.w, cb3[24].x
 118: add r2.y, -r2.z, r2.y
 119: mad r2.x, r2.x, r2.y, r2.z
 120: dp3 r2.y, r4.xyzx, r4.xyzx
 121: sample r4.xyzw, r2.yyyy, t10.xyzw, s2
 122: mul r2.x, r2.x, r4.x
 123: add r5.w, r5.z, l(0.000010)
 124: dp3 r4.x, v1.xyzx, r5.xywx
 125: dp3 r4.y, v2.xyzx, r5.xywx
 126: dp3 r4.z, v3.xyzx, r5.xywx
 127: dp3 r2.y, r4.xyzx, r4.xyzx
 128: rsq r2.y, r2.y
 129: mul r4.xyz, r2.yyyy, r4.xyzx
 130: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 131: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 132: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 133: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 134: mul r6.xyz, r2.wwww, r7.xyzx
 135: add r2.w, -r7.w, l(1.000000)
 136: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 137: dp3 r0.w, r0.xyzx, r0.xyzx
 138: max r0.w, r0.w, l(0.001000)
 139: rsq r0.w, r0.w
 140: mul r0.xyz, r0.wwww, r0.xyzx
 141: dp3 r0.w, r4.xyzx, r3.xyzx
 142: dp3_sat r3.x, r4.xyzx, r1.xyzx
 143: dp3_sat r3.y, r4.xyzx, r0.xyzx
 144: dp3_sat r0.x, r1.xyzx, r0.xyzx
 145: mul r0.y, r0.x, r0.x
 146: dp2 r0.y, r0.yyyy, r2.wwww
 147: add r0.y, r0.y, l(-0.500000)
 148: add r0.z, -r3.x, l(1.000000)
 149: mul r1.x, r0.z, r0.z
 150: mul r1.x, r1.x, r1.x
 151: mul r0.z, r0.z, r1.x
 152: mad r0.z, r0.y, r0.z, l(1.000000)
 153: add r1.x, -|r0.w|, l(1.000000)
 154: mul r1.y, r1.x, r1.x
 155: mul r1.y, r1.y, r1.y
 156: mul r1.x, r1.x, r1.y
 157: mad r0.y, r0.y, r1.x, l(1.000000)
 158: mul r0.y, r0.y, r0.z
 159: mul r0.z, r2.w, r2.w
 160: max r0.z, r0.z, l(0.002000)
 161: add r1.x, -r0.z, l(1.000000)
 162: mad r1.y, |r0.w|, r1.x, r0.z
 163: mad r1.x, r3.x, r1.x, r0.z
 164: mul r0.w, |r0.w|, r1.x
 165: mad r0.w, r3.x, r1.y, r0.w
 166: add r0.w, r0.w, l(0.000010)
 167: div r0.w, l(0.500000), r0.w
 168: mul r0.z, r0.z, r0.z
 169: mad r1.x, r3.y, r0.z, -r3.y
 170: mad r1.x, r1.x, r3.y, l(1.000000)
 171: mul r0.z, r0.z, l(0.318310)
 172: mad r1.x, r1.x, r1.x, l(0.000000)
 173: div r0.z, r0.z, r1.x
 174: mul r0.z, r0.z, r0.w
 175: mul r0.z, r0.z, l(3.141593)
 176: max r0.z, r0.z, l(0.000100)
 177: sqrt r0.z, r0.z
 178: mul r0.yz, r3.xxxx, r0.yyzy
 179: dp3 r0.w, r5.xyzx, r5.xyzx
 180: ne r0.w, r0.w, l(0.000000)
 181: and r0.w, r0.w, l(0x3f800000)
 182: mul r0.z, r0.w, r0.z
 183: mul r1.xyz, r0.yyyy, r2.xyzx
 184: mul r0.yzw, r2.xxyz, r0.zzzz
 185: add r0.x, -r0.x, l(1.000000)
 186: mul r2.x, r0.x, r0.x
 187: mul r2.x, r2.x, r2.x
 188: mul r0.x, r0.x, r2.x
 189: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 190: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 191: mul r0.xyz, r0.yzwy, r2.xyzx
 192: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 193: mul o0.xyz, r1.wwww, r0.xyzx
 194: mov o0.w, l(1.000000)
 195: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 178 math, 10 temp registers, 12 textures, 4 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 12
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_Normal0" to slot 6 sampler slot 8
Set 2D Texture "_Normal1" to slot 7 sampler slot 9
Set 2D Texture "_Normal2" to slot 8 sampler slot 10
Set 2D Texture "_Normal3" to slot 9 sampler slot 11
Set 2D Texture "_LightTexture0" to slot 10 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 11 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 12 sampler slot 1

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 224
  Float _NormalScale1 at 228
  Float _NormalScale2 at 232
  Float _NormalScale3 at 236
  Float _Metallic0 at 240
  Float _Metallic1 at 244
  Float _Metallic2 at 248
  Float _Metallic3 at 252
  Float _Smoothness0 at 256
  Float _Smoothness1 at 260
  Float _Smoothness2 at 264
  Float _Smoothness3 at 268
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[17], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture3d (float,float,float,float) t11
      dcl_resource_texturecube (float,float,float,float) t12
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_output o0.xyzw
      dcl_temps 10
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v5.xyxx, t0.xyzw, s12
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[9].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s3
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s4
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[16].x
  25: sample r8.xyzw, r5.zwzz, t3.xyzw, s5
  26: mul r8.xyzw, r4.yyyy, r8.xyzw
  27: mul r8.w, r8.w, cb0[16].y
  28: add r7.xyzw, r7.xyzw, r8.xyzw
  29: sample r8.xyzw, r6.xyxx, t4.xyzw, s6
  30: mul r8.xyzw, r4.zzzz, r8.xyzw
  31: mul r8.w, r8.w, cb0[16].z
  32: add r7.xyzw, r7.xyzw, r8.xyzw
  33: sample r8.xyzw, r6.zwzz, t5.xyzw, s7
  34: mul r8.xyzw, r4.wwww, r8.xyzw
  35: mul r8.w, r8.w, cb0[16].w
  36: add r7.xyzw, r7.xyzw, r8.xyzw
  37: sample r8.xyzw, r5.xyxx, t6.xyzw, s8
  38: mul r8.x, r8.w, r8.x
  39: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  40: mul r8.xy, r5.xyxx, cb0[14].xxxx
  41: dp2 r2.w, r8.xyxx, r8.xyxx
  42: min r2.w, r2.w, l(1.000000)
  43: add r2.w, -r2.w, l(1.000000)
  44: sqrt r8.z, r2.w
  45: sample r5.xyzw, r5.zwzz, t7.xyzw, s9
  46: mul r5.x, r5.w, r5.x
  47: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  48: mul r5.xy, r5.xyxx, cb0[14].yyyy
  49: dp2 r2.w, r5.xyxx, r5.xyxx
  50: min r2.w, r2.w, l(1.000000)
  51: add r2.w, -r2.w, l(1.000000)
  52: sqrt r5.z, r2.w
  53: mul r5.xyz, r4.yyyy, r5.xyzx
  54: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  55: sample r8.xyzw, r6.xyxx, t8.xyzw, s10
  56: mul r8.x, r8.w, r8.x
  57: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  58: mul r8.xy, r6.xyxx, cb0[14].zzzz
  59: dp2 r2.w, r8.xyxx, r8.xyxx
  60: min r2.w, r2.w, l(1.000000)
  61: add r2.w, -r2.w, l(1.000000)
  62: sqrt r8.z, r2.w
  63: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  64: sample r6.xyzw, r6.zwzz, t9.xyzw, s11
  65: mul r6.x, r6.w, r6.x
  66: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  67: mul r6.xy, r6.xyxx, cb0[14].wwww
  68: dp2 r2.w, r6.xyxx, r6.xyxx
  69: min r2.w, r2.w, l(1.000000)
  70: add r2.w, -r2.w, l(1.000000)
  71: sqrt r6.z, r2.w
  72: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  73: dp4 r2.w, r4.xyzw, cb0[15].xyzw
  74: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  75: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  76: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  77: add r4.xyz, r4.xyzx, cb0[7].xyzx
  78: mov r6.x, cb4[9].z
  79: mov r6.y, cb4[10].z
  80: mov r6.z, cb4[11].z
  81: dp3 r2.x, r2.xyzx, r6.xyzx
  82: add r6.xyz, v4.xyzx, -cb3[25].xyzx
  83: dp3 r2.y, r6.xyzx, r6.xyzx
  84: sqrt r2.y, r2.y
  85: add r2.y, -r2.x, r2.y
  86: mad r2.x, cb3[25].w, r2.y, r2.x
  87: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  88: eq r2.y, cb5[0].x, l(1.000000)
  89: if_nz r2.y
  90:   eq r2.y, cb5[0].y, l(1.000000)
  91:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
  92:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
  93:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
  94:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  95:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
  96:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  97:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  98:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  99:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
 100:   max r6.x, r2.z, r2.y
 101:   sample r6.xyzw, r6.xzwx, t11.xyzw, s0
 102: else 
 103:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 104: endif 
 105: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 106: lt r2.z, r2.x, l(0.990000)
 107: if_nz r2.z
 108:   add r6.xyz, v4.xyzx, -cb2[1].xyzx
 109:   max r2.z, |r6.y|, |r6.x|
 110:   max r2.z, |r6.z|, r2.z
 111:   add r2.z, r2.z, -cb2[2].z
 112:   max r2.z, r2.z, l(0.000010)
 113:   mul r2.z, r2.z, cb2[2].w
 114:   div r2.z, cb2[2].y, r2.z
 115:   add r2.z, r2.z, -cb2[2].x
 116:   add r2.z, -r2.z, l(1.000000)
 117:   add r8.xyz, r6.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
 118:   sample_c_lz r8.x, r8.xyzx, t12.xxxx, s1, r2.z
 119:   add r9.xyz, r6.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
 120:   sample_c_lz r8.y, r9.xyzx, t12.xxxx, s1, r2.z
 121:   add r9.xyz, r6.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
 122:   sample_c_lz r8.z, r9.xyzx, t12.xxxx, s1, r2.z
 123:   add r6.xyz, r6.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
 124:   sample_c_lz r8.w, r6.xyzx, t12.xxxx, s1, r2.z
 125:   dp4 r2.z, r8.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
 126:   add r3.w, -cb3[24].x, l(1.000000)
 127:   mad r2.z, r2.z, r3.w, cb3[24].x
 128: else 
 129:   mov r2.z, l(1.000000)
 130: endif 
 131: add r2.y, -r2.z, r2.y
 132: mad r2.x, r2.x, r2.y, r2.z
 133: dp3 r2.y, r4.xyzx, r4.xyzx
 134: sample r4.xyzw, r2.yyyy, t10.xyzw, s2
 135: mul r2.x, r2.x, r4.x
 136: add r5.w, r5.z, l(0.000010)
 137: dp3 r4.x, v1.xyzx, r5.xywx
 138: dp3 r4.y, v2.xyzx, r5.xywx
 139: dp3 r4.z, v3.xyzx, r5.xywx
 140: dp3 r2.y, r4.xyzx, r4.xyzx
 141: rsq r2.y, r2.y
 142: mul r4.xyz, r2.yyyy, r4.xyzx
 143: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 144: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 145: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 146: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 147: mul r6.xyz, r2.wwww, r7.xyzx
 148: add r2.w, -r7.w, l(1.000000)
 149: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 150: dp3 r0.w, r0.xyzx, r0.xyzx
 151: max r0.w, r0.w, l(0.001000)
 152: rsq r0.w, r0.w
 153: mul r0.xyz, r0.wwww, r0.xyzx
 154: dp3 r0.w, r4.xyzx, r3.xyzx
 155: dp3_sat r3.x, r4.xyzx, r1.xyzx
 156: dp3_sat r3.y, r4.xyzx, r0.xyzx
 157: dp3_sat r0.x, r1.xyzx, r0.xyzx
 158: mul r0.y, r0.x, r0.x
 159: dp2 r0.y, r0.yyyy, r2.wwww
 160: add r0.y, r0.y, l(-0.500000)
 161: add r0.z, -r3.x, l(1.000000)
 162: mul r1.x, r0.z, r0.z
 163: mul r1.x, r1.x, r1.x
 164: mul r0.z, r0.z, r1.x
 165: mad r0.z, r0.y, r0.z, l(1.000000)
 166: add r1.x, -|r0.w|, l(1.000000)
 167: mul r1.y, r1.x, r1.x
 168: mul r1.y, r1.y, r1.y
 169: mul r1.x, r1.x, r1.y
 170: mad r0.y, r0.y, r1.x, l(1.000000)
 171: mul r0.y, r0.y, r0.z
 172: mul r0.z, r2.w, r2.w
 173: max r0.z, r0.z, l(0.002000)
 174: add r1.x, -r0.z, l(1.000000)
 175: mad r1.y, |r0.w|, r1.x, r0.z
 176: mad r1.x, r3.x, r1.x, r0.z
 177: mul r0.w, |r0.w|, r1.x
 178: mad r0.w, r3.x, r1.y, r0.w
 179: add r0.w, r0.w, l(0.000010)
 180: div r0.w, l(0.500000), r0.w
 181: mul r0.z, r0.z, r0.z
 182: mad r1.x, r3.y, r0.z, -r3.y
 183: mad r1.x, r1.x, r3.y, l(1.000000)
 184: mul r0.z, r0.z, l(0.318310)
 185: mad r1.x, r1.x, r1.x, l(0.000000)
 186: div r0.z, r0.z, r1.x
 187: mul r0.z, r0.z, r0.w
 188: mul r0.z, r0.z, l(3.141593)
 189: max r0.z, r0.z, l(0.000100)
 190: sqrt r0.z, r0.z
 191: mul r0.yz, r3.xxxx, r0.yyzy
 192: dp3 r0.w, r5.xyzx, r5.xyzx
 193: ne r0.w, r0.w, l(0.000000)
 194: and r0.w, r0.w, l(0x3f800000)
 195: mul r0.z, r0.w, r0.z
 196: mul r1.xyz, r0.yyyy, r2.xyzx
 197: mul r0.yzw, r2.xxyz, r0.zzzz
 198: add r0.x, -r0.x, l(1.000000)
 199: mul r2.x, r0.x, r0.x
 200: mul r2.x, r2.x, r2.x
 201: mul r0.x, r0.x, r2.x
 202: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 203: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 204: mul r0.xyz, r0.yzwy, r2.xyzx
 205: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 206: mul o0.xyz, r1.wwww, r0.xyzx
 207: mov o0.w, l(1.000000)
 208: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 173 math, 9 temp registers, 13 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 13
Set 2D Texture "_Control" to slot 1 sampler slot 4
Set 2D Texture "_Splat0" to slot 2 sampler slot 5
Set 2D Texture "_Splat1" to slot 3 sampler slot 6
Set 2D Texture "_Splat2" to slot 4 sampler slot 7
Set 2D Texture "_Splat3" to slot 5 sampler slot 8
Set 2D Texture "_Normal0" to slot 6 sampler slot 9
Set 2D Texture "_Normal1" to slot 7 sampler slot 10
Set 2D Texture "_Normal2" to slot 8 sampler slot 11
Set 2D Texture "_Normal3" to slot 9 sampler slot 12
Set 2D Texture "_LightTextureB0" to slot 10 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 11 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 13 sampler slot 1

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 224
  Float _NormalScale1 at 228
  Float _NormalScale2 at 232
  Float _NormalScale3 at 236
  Float _Metallic0 at 240
  Float _Metallic1 at 244
  Float _Metallic2 at 248
  Float _Metallic3 at 252
  Float _Smoothness0 at 256
  Float _Smoothness1 at 260
  Float _Smoothness2 at 264
  Float _Smoothness3 at 268
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[17], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_sampler s13, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texturecube (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_resource_texturecube (float,float,float,float) t13
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_output o0.xyzw
      dcl_temps 9
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v5.xyxx, t0.xyzw, s13
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[9].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s4
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s5
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[16].x
  25: sample r8.xyzw, r5.zwzz, t3.xyzw, s6
  26: mul r8.xyzw, r4.yyyy, r8.xyzw
  27: mul r8.w, r8.w, cb0[16].y
  28: add r7.xyzw, r7.xyzw, r8.xyzw
  29: sample r8.xyzw, r6.xyxx, t4.xyzw, s7
  30: mul r8.xyzw, r4.zzzz, r8.xyzw
  31: mul r8.w, r8.w, cb0[16].z
  32: add r7.xyzw, r7.xyzw, r8.xyzw
  33: sample r8.xyzw, r6.zwzz, t5.xyzw, s8
  34: mul r8.xyzw, r4.wwww, r8.xyzw
  35: mul r8.w, r8.w, cb0[16].w
  36: add r7.xyzw, r7.xyzw, r8.xyzw
  37: sample r8.xyzw, r5.xyxx, t6.xyzw, s9
  38: mul r8.x, r8.w, r8.x
  39: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  40: mul r8.xy, r5.xyxx, cb0[14].xxxx
  41: dp2 r2.w, r8.xyxx, r8.xyxx
  42: min r2.w, r2.w, l(1.000000)
  43: add r2.w, -r2.w, l(1.000000)
  44: sqrt r8.z, r2.w
  45: sample r5.xyzw, r5.zwzz, t7.xyzw, s10
  46: mul r5.x, r5.w, r5.x
  47: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  48: mul r5.xy, r5.xyxx, cb0[14].yyyy
  49: dp2 r2.w, r5.xyxx, r5.xyxx
  50: min r2.w, r2.w, l(1.000000)
  51: add r2.w, -r2.w, l(1.000000)
  52: sqrt r5.z, r2.w
  53: mul r5.xyz, r4.yyyy, r5.xyzx
  54: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  55: sample r8.xyzw, r6.xyxx, t8.xyzw, s11
  56: mul r8.x, r8.w, r8.x
  57: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  58: mul r8.xy, r6.xyxx, cb0[14].zzzz
  59: dp2 r2.w, r8.xyxx, r8.xyxx
  60: min r2.w, r2.w, l(1.000000)
  61: add r2.w, -r2.w, l(1.000000)
  62: sqrt r8.z, r2.w
  63: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  64: sample r6.xyzw, r6.zwzz, t9.xyzw, s12
  65: mul r6.x, r6.w, r6.x
  66: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  67: mul r6.xy, r6.xyxx, cb0[14].wwww
  68: dp2 r2.w, r6.xyxx, r6.xyxx
  69: min r2.w, r2.w, l(1.000000)
  70: add r2.w, -r2.w, l(1.000000)
  71: sqrt r6.z, r2.w
  72: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  73: dp4 r2.w, r4.xyzw, cb0[15].xyzw
  74: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  75: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  76: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  77: add r4.xyz, r4.xyzx, cb0[7].xyzx
  78: mov r6.x, cb4[9].z
  79: mov r6.y, cb4[10].z
  80: mov r6.z, cb4[11].z
  81: dp3 r2.x, r2.xyzx, r6.xyzx
  82: add r6.xyz, v4.xyzx, -cb3[25].xyzx
  83: dp3 r2.y, r6.xyzx, r6.xyzx
  84: sqrt r2.y, r2.y
  85: add r2.y, -r2.x, r2.y
  86: mad r2.x, cb3[25].w, r2.y, r2.x
  87: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  88: eq r2.y, cb5[0].x, l(1.000000)
  89: if_nz r2.y
  90:   eq r2.y, cb5[0].y, l(1.000000)
  91:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
  92:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
  93:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
  94:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  95:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
  96:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  97:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  98:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  99:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
 100:   max r6.x, r2.z, r2.y
 101:   sample r6.xyzw, r6.xzwx, t12.xyzw, s0
 102: else 
 103:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 104: endif 
 105: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 106: add r6.xyz, v4.xyzx, -cb2[1].xyzx
 107: max r2.z, |r6.y|, |r6.x|
 108: max r2.z, |r6.z|, r2.z
 109: add r2.z, r2.z, -cb2[2].z
 110: max r2.z, r2.z, l(0.000010)
 111: mul r2.z, r2.z, cb2[2].w
 112: div r2.z, cb2[2].y, r2.z
 113: add r2.z, r2.z, -cb2[2].x
 114: add r2.z, -r2.z, l(1.000000)
 115: sample_c_lz r2.z, r6.xyzx, t13.xxxx, s1, r2.z
 116: add r3.w, -cb3[24].x, l(1.000000)
 117: mad r2.z, r2.z, r3.w, cb3[24].x
 118: add r2.y, -r2.z, r2.y
 119: mad r2.x, r2.x, r2.y, r2.z
 120: dp3 r2.y, r4.xyzx, r4.xyzx
 121: sample r6.xyzw, r2.yyyy, t10.xyzw, s3
 122: sample r4.xyzw, r4.xyzx, t11.xyzw, s2
 123: mul r2.y, r4.w, r6.x
 124: mul r2.x, r2.x, r2.y
 125: add r5.w, r5.z, l(0.000010)
 126: dp3 r4.x, v1.xyzx, r5.xywx
 127: dp3 r4.y, v2.xyzx, r5.xywx
 128: dp3 r4.z, v3.xyzx, r5.xywx
 129: dp3 r2.y, r4.xyzx, r4.xyzx
 130: rsq r2.y, r2.y
 131: mul r4.xyz, r2.yyyy, r4.xyzx
 132: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 133: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 134: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 135: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 136: mul r6.xyz, r2.wwww, r7.xyzx
 137: add r2.w, -r7.w, l(1.000000)
 138: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 139: dp3 r0.w, r0.xyzx, r0.xyzx
 140: max r0.w, r0.w, l(0.001000)
 141: rsq r0.w, r0.w
 142: mul r0.xyz, r0.wwww, r0.xyzx
 143: dp3 r0.w, r4.xyzx, r3.xyzx
 144: dp3_sat r3.x, r4.xyzx, r1.xyzx
 145: dp3_sat r3.y, r4.xyzx, r0.xyzx
 146: dp3_sat r0.x, r1.xyzx, r0.xyzx
 147: mul r0.y, r0.x, r0.x
 148: dp2 r0.y, r0.yyyy, r2.wwww
 149: add r0.y, r0.y, l(-0.500000)
 150: add r0.z, -r3.x, l(1.000000)
 151: mul r1.x, r0.z, r0.z
 152: mul r1.x, r1.x, r1.x
 153: mul r0.z, r0.z, r1.x
 154: mad r0.z, r0.y, r0.z, l(1.000000)
 155: add r1.x, -|r0.w|, l(1.000000)
 156: mul r1.y, r1.x, r1.x
 157: mul r1.y, r1.y, r1.y
 158: mul r1.x, r1.x, r1.y
 159: mad r0.y, r0.y, r1.x, l(1.000000)
 160: mul r0.y, r0.y, r0.z
 161: mul r0.z, r2.w, r2.w
 162: max r0.z, r0.z, l(0.002000)
 163: add r1.x, -r0.z, l(1.000000)
 164: mad r1.y, |r0.w|, r1.x, r0.z
 165: mad r1.x, r3.x, r1.x, r0.z
 166: mul r0.w, |r0.w|, r1.x
 167: mad r0.w, r3.x, r1.y, r0.w
 168: add r0.w, r0.w, l(0.000010)
 169: div r0.w, l(0.500000), r0.w
 170: mul r0.z, r0.z, r0.z
 171: mad r1.x, r3.y, r0.z, -r3.y
 172: mad r1.x, r1.x, r3.y, l(1.000000)
 173: mul r0.z, r0.z, l(0.318310)
 174: mad r1.x, r1.x, r1.x, l(0.000000)
 175: div r0.z, r0.z, r1.x
 176: mul r0.z, r0.z, r0.w
 177: mul r0.z, r0.z, l(3.141593)
 178: max r0.z, r0.z, l(0.000100)
 179: sqrt r0.z, r0.z
 180: mul r0.yz, r3.xxxx, r0.yyzy
 181: dp3 r0.w, r5.xyzx, r5.xyzx
 182: ne r0.w, r0.w, l(0.000000)
 183: and r0.w, r0.w, l(0x3f800000)
 184: mul r0.z, r0.w, r0.z
 185: mul r1.xyz, r0.yyyy, r2.xyzx
 186: mul r0.yzw, r2.xxyz, r0.zzzz
 187: add r0.x, -r0.x, l(1.000000)
 188: mul r2.x, r0.x, r0.x
 189: mul r2.x, r2.x, r2.x
 190: mul r0.x, r0.x, r2.x
 191: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 192: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 193: mul r0.xyz, r0.yzwy, r2.xyzx
 194: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 195: mul o0.xyz, r1.wwww, r0.xyzx
 196: mov o0.w, l(1.000000)
 197: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 179 math, 10 temp registers, 13 textures, 4 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 13
Set 2D Texture "_Control" to slot 1 sampler slot 4
Set 2D Texture "_Splat0" to slot 2 sampler slot 5
Set 2D Texture "_Splat1" to slot 3 sampler slot 6
Set 2D Texture "_Splat2" to slot 4 sampler slot 7
Set 2D Texture "_Splat3" to slot 5 sampler slot 8
Set 2D Texture "_Normal0" to slot 6 sampler slot 9
Set 2D Texture "_Normal1" to slot 7 sampler slot 10
Set 2D Texture "_Normal2" to slot 8 sampler slot 11
Set 2D Texture "_Normal3" to slot 9 sampler slot 12
Set 2D Texture "_LightTextureB0" to slot 10 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 11 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 13 sampler slot 1

Constant Buffer "$Globals" (272 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 224
  Float _NormalScale1 at 228
  Float _NormalScale2 at 232
  Float _NormalScale3 at 236
  Float _Metallic0 at 240
  Float _Metallic1 at 244
  Float _Metallic2 at 248
  Float _Metallic3 at 252
  Float _Smoothness0 at 256
  Float _Smoothness1 at 260
  Float _Smoothness2 at 264
  Float _Smoothness3 at 268
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xy  
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[17], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_sampler s13, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texturecube (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_resource_texturecube (float,float,float,float) t13
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xy
      dcl_output o0.xyzw
      dcl_temps 10
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v5.xyxx, t0.xyzw, s13
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[9].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s4
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s5
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[16].x
  25: sample r8.xyzw, r5.zwzz, t3.xyzw, s6
  26: mul r8.xyzw, r4.yyyy, r8.xyzw
  27: mul r8.w, r8.w, cb0[16].y
  28: add r7.xyzw, r7.xyzw, r8.xyzw
  29: sample r8.xyzw, r6.xyxx, t4.xyzw, s7
  30: mul r8.xyzw, r4.zzzz, r8.xyzw
  31: mul r8.w, r8.w, cb0[16].z
  32: add r7.xyzw, r7.xyzw, r8.xyzw
  33: sample r8.xyzw, r6.zwzz, t5.xyzw, s8
  34: mul r8.xyzw, r4.wwww, r8.xyzw
  35: mul r8.w, r8.w, cb0[16].w
  36: add r7.xyzw, r7.xyzw, r8.xyzw
  37: sample r8.xyzw, r5.xyxx, t6.xyzw, s9
  38: mul r8.x, r8.w, r8.x
  39: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  40: mul r8.xy, r5.xyxx, cb0[14].xxxx
  41: dp2 r2.w, r8.xyxx, r8.xyxx
  42: min r2.w, r2.w, l(1.000000)
  43: add r2.w, -r2.w, l(1.000000)
  44: sqrt r8.z, r2.w
  45: sample r5.xyzw, r5.zwzz, t7.xyzw, s10
  46: mul r5.x, r5.w, r5.x
  47: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  48: mul r5.xy, r5.xyxx, cb0[14].yyyy
  49: dp2 r2.w, r5.xyxx, r5.xyxx
  50: min r2.w, r2.w, l(1.000000)
  51: add r2.w, -r2.w, l(1.000000)
  52: sqrt r5.z, r2.w
  53: mul r5.xyz, r4.yyyy, r5.xyzx
  54: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  55: sample r8.xyzw, r6.xyxx, t8.xyzw, s11
  56: mul r8.x, r8.w, r8.x
  57: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  58: mul r8.xy, r6.xyxx, cb0[14].zzzz
  59: dp2 r2.w, r8.xyxx, r8.xyxx
  60: min r2.w, r2.w, l(1.000000)
  61: add r2.w, -r2.w, l(1.000000)
  62: sqrt r8.z, r2.w
  63: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  64: sample r6.xyzw, r6.zwzz, t9.xyzw, s12
  65: mul r6.x, r6.w, r6.x
  66: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  67: mul r6.xy, r6.xyxx, cb0[14].wwww
  68: dp2 r2.w, r6.xyxx, r6.xyxx
  69: min r2.w, r2.w, l(1.000000)
  70: add r2.w, -r2.w, l(1.000000)
  71: sqrt r6.z, r2.w
  72: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  73: dp4 r2.w, r4.xyzw, cb0[15].xyzw
  74: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  75: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  76: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  77: add r4.xyz, r4.xyzx, cb0[7].xyzx
  78: mov r6.x, cb4[9].z
  79: mov r6.y, cb4[10].z
  80: mov r6.z, cb4[11].z
  81: dp3 r2.x, r2.xyzx, r6.xyzx
  82: add r6.xyz, v4.xyzx, -cb3[25].xyzx
  83: dp3 r2.y, r6.xyzx, r6.xyzx
  84: sqrt r2.y, r2.y
  85: add r2.y, -r2.x, r2.y
  86: mad r2.x, cb3[25].w, r2.y, r2.x
  87: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  88: eq r2.y, cb5[0].x, l(1.000000)
  89: if_nz r2.y
  90:   eq r2.y, cb5[0].y, l(1.000000)
  91:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
  92:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
  93:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
  94:   add r6.xyz, r6.xyzx, cb5[4].xyzx
  95:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
  96:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
  97:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
  98:   mad r2.y, r6.y, l(0.250000), l(0.750000)
  99:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
 100:   max r6.x, r2.z, r2.y
 101:   sample r6.xyzw, r6.xzwx, t12.xyzw, s0
 102: else 
 103:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 104: endif 
 105: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 106: lt r2.z, r2.x, l(0.990000)
 107: if_nz r2.z
 108:   add r6.xyz, v4.xyzx, -cb2[1].xyzx
 109:   max r2.z, |r6.y|, |r6.x|
 110:   max r2.z, |r6.z|, r2.z
 111:   add r2.z, r2.z, -cb2[2].z
 112:   max r2.z, r2.z, l(0.000010)
 113:   mul r2.z, r2.z, cb2[2].w
 114:   div r2.z, cb2[2].y, r2.z
 115:   add r2.z, r2.z, -cb2[2].x
 116:   add r2.z, -r2.z, l(1.000000)
 117:   add r8.xyz, r6.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
 118:   sample_c_lz r8.x, r8.xyzx, t13.xxxx, s1, r2.z
 119:   add r9.xyz, r6.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
 120:   sample_c_lz r8.y, r9.xyzx, t13.xxxx, s1, r2.z
 121:   add r9.xyz, r6.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
 122:   sample_c_lz r8.z, r9.xyzx, t13.xxxx, s1, r2.z
 123:   add r6.xyz, r6.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
 124:   sample_c_lz r8.w, r6.xyzx, t13.xxxx, s1, r2.z
 125:   dp4 r2.z, r8.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
 126:   add r3.w, -cb3[24].x, l(1.000000)
 127:   mad r2.z, r2.z, r3.w, cb3[24].x
 128: else 
 129:   mov r2.z, l(1.000000)
 130: endif 
 131: add r2.y, -r2.z, r2.y
 132: mad r2.x, r2.x, r2.y, r2.z
 133: dp3 r2.y, r4.xyzx, r4.xyzx
 134: sample r6.xyzw, r2.yyyy, t10.xyzw, s3
 135: sample r4.xyzw, r4.xyzx, t11.xyzw, s2
 136: mul r2.y, r4.w, r6.x
 137: mul r2.x, r2.x, r2.y
 138: add r5.w, r5.z, l(0.000010)
 139: dp3 r4.x, v1.xyzx, r5.xywx
 140: dp3 r4.y, v2.xyzx, r5.xywx
 141: dp3 r4.z, v3.xyzx, r5.xywx
 142: dp3 r2.y, r4.xyzx, r4.xyzx
 143: rsq r2.y, r2.y
 144: mul r4.xyz, r2.yyyy, r4.xyzx
 145: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 146: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 147: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 148: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 149: mul r6.xyz, r2.wwww, r7.xyzx
 150: add r2.w, -r7.w, l(1.000000)
 151: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 152: dp3 r0.w, r0.xyzx, r0.xyzx
 153: max r0.w, r0.w, l(0.001000)
 154: rsq r0.w, r0.w
 155: mul r0.xyz, r0.wwww, r0.xyzx
 156: dp3 r0.w, r4.xyzx, r3.xyzx
 157: dp3_sat r3.x, r4.xyzx, r1.xyzx
 158: dp3_sat r3.y, r4.xyzx, r0.xyzx
 159: dp3_sat r0.x, r1.xyzx, r0.xyzx
 160: mul r0.y, r0.x, r0.x
 161: dp2 r0.y, r0.yyyy, r2.wwww
 162: add r0.y, r0.y, l(-0.500000)
 163: add r0.z, -r3.x, l(1.000000)
 164: mul r1.x, r0.z, r0.z
 165: mul r1.x, r1.x, r1.x
 166: mul r0.z, r0.z, r1.x
 167: mad r0.z, r0.y, r0.z, l(1.000000)
 168: add r1.x, -|r0.w|, l(1.000000)
 169: mul r1.y, r1.x, r1.x
 170: mul r1.y, r1.y, r1.y
 171: mul r1.x, r1.x, r1.y
 172: mad r0.y, r0.y, r1.x, l(1.000000)
 173: mul r0.y, r0.y, r0.z
 174: mul r0.z, r2.w, r2.w
 175: max r0.z, r0.z, l(0.002000)
 176: add r1.x, -r0.z, l(1.000000)
 177: mad r1.y, |r0.w|, r1.x, r0.z
 178: mad r1.x, r3.x, r1.x, r0.z
 179: mul r0.w, |r0.w|, r1.x
 180: mad r0.w, r3.x, r1.y, r0.w
 181: add r0.w, r0.w, l(0.000010)
 182: div r0.w, l(0.500000), r0.w
 183: mul r0.z, r0.z, r0.z
 184: mad r1.x, r3.y, r0.z, -r3.y
 185: mad r1.x, r1.x, r3.y, l(1.000000)
 186: mul r0.z, r0.z, l(0.318310)
 187: mad r1.x, r1.x, r1.x, l(0.000000)
 188: div r0.z, r0.z, r1.x
 189: mul r0.z, r0.z, r0.w
 190: mul r0.z, r0.z, l(3.141593)
 191: max r0.z, r0.z, l(0.000100)
 192: sqrt r0.z, r0.z
 193: mul r0.yz, r3.xxxx, r0.yyzy
 194: dp3 r0.w, r5.xyzx, r5.xyzx
 195: ne r0.w, r0.w, l(0.000000)
 196: and r0.w, r0.w, l(0x3f800000)
 197: mul r0.z, r0.w, r0.z
 198: mul r1.xyz, r0.yyyy, r2.xyzx
 199: mul r0.yzw, r2.xxyz, r0.zzzz
 200: add r0.x, -r0.x, l(1.000000)
 201: mul r2.x, r0.x, r0.x
 202: mul r2.x, r2.x, r2.x
 203: mul r0.x, r0.x, r2.x
 204: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 205: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 206: mul r0.xyz, r0.yzwy, r2.xyzx
 207: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 208: mul o0.xyz, r1.wwww, r0.xyzx
 209: mov o0.w, l(1.000000)
 210: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 122 math, 7 temp registers, 8 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 2
Set 2D Texture "_Splat0" to slot 1 sampler slot 3
Set 2D Texture "_Splat1" to slot 2 sampler slot 4
Set 2D Texture "_Splat2" to slot 3 sampler slot 5
Set 2D Texture "_Splat3" to slot 4 sampler slot 6
Set 2D Texture "_TerrainNormalmapTexture" to slot 5 sampler slot 7
Set 2D Texture "_LightTexture0" to slot 6 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 0

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 256
  Float _Metallic1 at 260
  Float _Metallic2 at 264
  Float _Metallic3 at 268
  Float _Smoothness0 at 272
  Float _Smoothness1 at 276
  Float _Smoothness2 at 280
  Float _Smoothness3 at 284
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[18], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r3.xy, v5.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r3.xy, r3.xyxx, cb0[9].xyxx
  11: sample r3.xyzw, r3.xyxx, t0.xyzw, s2
  12: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r3.xyzw, r3.xyzw, r2.wwww
  15: mad r4.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r4.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r5.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r5.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r6.xyzw, r4.xyxx, t1.xyzw, s3
  20: mul r6.xyzw, r3.xxxx, r6.xyzw
  21: mul r6.w, r6.w, cb0[17].x
  22: sample r4.xyzw, r4.zwzz, t2.xyzw, s4
  23: mul r4.xyzw, r3.yyyy, r4.xyzw
  24: mul r4.w, r4.w, cb0[17].y
  25: add r4.xyzw, r4.xyzw, r6.xyzw
  26: sample r6.xyzw, r5.xyxx, t3.xyzw, s5
  27: mul r6.xyzw, r3.zzzz, r6.xyzw
  28: mul r6.w, r6.w, cb0[17].z
  29: add r4.xyzw, r4.xyzw, r6.xyzw
  30: sample r5.xyzw, r5.zwzz, t4.xyzw, s6
  31: mul r5.xyzw, r3.wwww, r5.xyzw
  32: mul r5.w, r5.w, cb0[17].w
  33: add r4.xyzw, r4.xyzw, r5.xyzw
  34: sample r5.xyzw, v5.zwzz, t5.xyzw, s7
  35: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  36: dp3 r2.w, r5.xyzx, r5.xyzx
  37: rsq r2.w, r2.w
  38: mul r5.xyz, r2.wwww, r5.xyzx
  39: dp4 r2.w, r3.xyzw, cb0[16].xyzw
  40: mul r3.xyz, v4.yyyy, cb0[5].xyzx
  41: mad r3.xyz, cb0[4].xyzx, v4.xxxx, r3.xyzx
  42: mad r3.xyz, cb0[6].xyzx, v4.zzzz, r3.xyzx
  43: add r3.xyz, r3.xyzx, cb0[7].xyzx
  44: eq r3.w, cb3[0].x, l(1.000000)
  45: if_nz r3.w
  46:   eq r3.w, cb3[0].y, l(1.000000)
  47:   mul r6.xyz, v4.yyyy, cb3[2].xyzx
  48:   mad r6.xyz, cb3[1].xyzx, v4.xxxx, r6.xyzx
  49:   mad r6.xyz, cb3[3].xyzx, v4.zzzz, r6.xyzx
  50:   add r6.xyz, r6.xyzx, cb3[4].xyzx
  51:   movc r6.xyz, r3.wwww, r6.xyzx, v4.xyzx
  52:   add r6.xyz, r6.xyzx, -cb3[6].xyzx
  53:   mul r6.yzw, r6.xxyz, cb3[5].xxyz
  54:   mad r3.w, r6.y, l(0.250000), l(0.750000)
  55:   mad r5.w, cb3[0].z, l(0.500000), l(0.750000)
  56:   max r6.x, r3.w, r5.w
  57:   sample r6.xyzw, r6.xzwx, t7.xyzw, s0
  58: else 
  59:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  60: endif 
  61: dp4_sat r3.w, r6.xyzw, cb2[46].xyzw
  62: dp3 r3.x, r3.xyzx, r3.xyzx
  63: sample r6.xyzw, r3.xxxx, t6.xyzw, s1
  64: mul r3.x, r3.w, r6.x
  65: dp3 r6.x, v1.xyzx, r5.xyzx
  66: dp3 r6.y, v2.xyzx, r5.xyzx
  67: dp3 r6.z, v3.xyzx, r5.xyzx
  68: dp3 r3.y, r6.xyzx, r6.xyzx
  69: rsq r3.y, r3.y
  70: mul r3.yzw, r3.yyyy, r6.xxyz
  71: mul r5.xyz, r3.xxxx, cb0[2].xyzx
  72: add r6.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  73: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  74: mad r2.w, -r2.w, l(0.779084), l(0.779084)
  75: mul r4.xyz, r2.wwww, r4.xyzx
  76: add r2.w, -r4.w, l(1.000000)
  77: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
  78: dp3 r0.w, r0.xyzx, r0.xyzx
  79: max r0.w, r0.w, l(0.001000)
  80: rsq r0.w, r0.w
  81: mul r0.xyz, r0.wwww, r0.xyzx
  82: dp3 r0.w, r3.yzwy, r2.xyzx
  83: dp3_sat r2.x, r3.yzwy, r1.xyzx
  84: dp3_sat r2.y, r3.yzwy, r0.xyzx
  85: dp3_sat r0.x, r1.xyzx, r0.xyzx
  86: add r0.y, r0.x, r0.x
  87: mul r0.y, r0.x, r0.y
  88: mad r0.y, r0.y, r2.w, l(-0.500000)
  89: add r0.z, -r2.x, l(1.000000)
  90: mul r1.x, r0.z, r0.z
  91: mul r1.x, r1.x, r1.x
  92: mul r0.z, r0.z, r1.x
  93: mad r0.z, r0.y, r0.z, l(1.000000)
  94: add r1.x, -|r0.w|, l(1.000000)
  95: mul r1.y, r1.x, r1.x
  96: mul r1.y, r1.y, r1.y
  97: mul r1.x, r1.x, r1.y
  98: mad r0.y, r0.y, r1.x, l(1.000000)
  99: mul r0.y, r0.y, r0.z
 100: mul r0.z, r2.w, r2.w
 101: max r0.z, r0.z, l(0.002000)
 102: add r1.x, -r0.z, l(1.000000)
 103: mad r1.y, |r0.w|, r1.x, r0.z
 104: mad r1.x, r2.x, r1.x, r0.z
 105: mul r0.w, |r0.w|, r1.x
 106: mad r0.w, r2.x, r1.y, r0.w
 107: add r0.w, r0.w, l(0.000010)
 108: div r0.w, l(0.500000), r0.w
 109: mul r0.z, r0.z, r0.z
 110: mad r1.x, r2.y, r0.z, -r2.y
 111: mad r1.x, r1.x, r2.y, l(1.000000)
 112: mul r0.z, r0.z, l(0.318310)
 113: mad r1.x, r1.x, r1.x, l(0.000000)
 114: div r0.z, r0.z, r1.x
 115: mul r0.z, r0.z, r0.w
 116: mul r0.z, r0.z, l(3.141593)
 117: max r0.z, r0.z, l(0.000100)
 118: sqrt r0.z, r0.z
 119: mul r0.yz, r2.xxxx, r0.yyzy
 120: dp3 r0.w, r6.xyzx, r6.xyzx
 121: ne r0.w, r0.w, l(0.000000)
 122: and r0.w, r0.w, l(0x3f800000)
 123: mul r0.z, r0.w, r0.z
 124: mul r1.xyz, r0.yyyy, r5.xyzx
 125: mul r0.yzw, r5.xxyz, r0.zzzz
 126: add r0.x, -r0.x, l(1.000000)
 127: mul r2.x, r0.x, r0.x
 128: mul r2.x, r2.x, r2.x
 129: mul r0.x, r0.x, r2.x
 130: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 131: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 132: mul r0.xyz, r0.yzwy, r2.xyzx
 133: mad r0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
 134: mul o0.xyz, r1.wwww, r0.xyzx
 135: mov o0.w, l(1.000000)
 136: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 112 math, 6 temp registers, 7 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 1
Set 2D Texture "_Splat0" to slot 1 sampler slot 2
Set 2D Texture "_Splat1" to slot 2 sampler slot 3
Set 2D Texture "_Splat2" to slot 3 sampler slot 4
Set 2D Texture "_Splat3" to slot 4 sampler slot 5
Set 2D Texture "_TerrainNormalmapTexture" to slot 5 sampler slot 6
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 0

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 192
  Float _Metallic1 at 196
  Float _Metallic2 at 200
  Float _Metallic3 at 204
  Float _Smoothness0 at 208
  Float _Smoothness1 at 212
  Float _Smoothness2 at 216
  Float _Smoothness3 at 220
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float       
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: mul r2.xy, r2.xyxx, cb0[5].xyxx
   7: sample r2.xyzw, r2.xyxx, t0.xyzw, s1
   8: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   9: add r3.x, r1.w, l(0.001000)
  10: div r2.xyzw, r2.xyzw, r3.xxxx
  11: mad r3.xy, v5.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mad r3.zw, v5.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad r4.xy, v5.xyxx, cb0[8].xyxx, cb0[8].zwzz
  14: mad r4.zw, v5.xxxy, cb0[9].xxxy, cb0[9].zzzw
  15: sample r5.xyzw, r3.xyxx, t1.xyzw, s2
  16: mul r5.xyzw, r2.xxxx, r5.xyzw
  17: mul r5.w, r5.w, cb0[13].x
  18: sample r3.xyzw, r3.zwzz, t2.xyzw, s3
  19: mul r3.xyzw, r2.yyyy, r3.xyzw
  20: mul r3.w, r3.w, cb0[13].y
  21: add r3.xyzw, r3.xyzw, r5.xyzw
  22: sample r5.xyzw, r4.xyxx, t3.xyzw, s4
  23: mul r5.xyzw, r2.zzzz, r5.xyzw
  24: mul r5.w, r5.w, cb0[13].z
  25: add r3.xyzw, r3.xyzw, r5.xyzw
  26: sample r4.xyzw, r4.zwzz, t4.xyzw, s5
  27: mul r4.xyzw, r2.wwww, r4.xyzw
  28: mul r4.w, r4.w, cb0[13].w
  29: add r3.xyzw, r3.xyzw, r4.xyzw
  30: sample r4.xyzw, v5.zwzz, t5.xyzw, s6
  31: mad r4.xyz, r4.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  32: dp3 r4.w, r4.xyzx, r4.xyzx
  33: rsq r4.w, r4.w
  34: mul r4.xyz, r4.wwww, r4.xyzx
  35: dp4 r2.x, r2.xyzw, cb0[12].xyzw
  36: eq r2.y, cb3[0].x, l(1.000000)
  37: if_nz r2.y
  38:   eq r2.y, cb3[0].y, l(1.000000)
  39:   mul r5.xyz, v4.yyyy, cb3[2].xyzx
  40:   mad r5.xyz, cb3[1].xyzx, v4.xxxx, r5.xyzx
  41:   mad r5.xyz, cb3[3].xyzx, v4.zzzz, r5.xyzx
  42:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  43:   movc r2.yzw, r2.yyyy, r5.xxyz, v4.xxyz
  44:   add r2.yzw, r2.yyzw, -cb3[6].xxyz
  45:   mul r5.yzw, r2.yyzw, cb3[5].xxyz
  46:   mad r2.y, r5.y, l(0.250000), l(0.750000)
  47:   mad r2.z, cb3[0].z, l(0.500000), l(0.750000)
  48:   max r5.x, r2.z, r2.y
  49:   sample r5.xyzw, r5.xzwx, t6.xyzw, s0
  50: else 
  51:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  52: endif 
  53: dp4_sat r2.y, r5.xyzw, cb2[46].xyzw
  54: dp3 r5.x, v1.xyzx, r4.xyzx
  55: dp3 r5.y, v2.xyzx, r4.xyzx
  56: dp3 r5.z, v3.xyzx, r4.xyzx
  57: dp3 r2.z, r5.xyzx, r5.xyzx
  58: rsq r2.z, r2.z
  59: mul r4.xyz, r2.zzzz, r5.xyzx
  60: mul r2.yzw, r2.yyyy, cb0[2].xxyz
  61: add r5.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  62: mad r5.xyz, r2.xxxx, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  63: mad r2.x, -r2.x, l(0.779084), l(0.779084)
  64: mul r3.xyz, r2.xxxx, r3.xyzx
  65: add r2.x, -r3.w, l(1.000000)
  66: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  67: dp3 r0.w, r0.xyzx, r0.xyzx
  68: max r0.w, r0.w, l(0.001000)
  69: rsq r0.w, r0.w
  70: mul r0.xyz, r0.wwww, r0.xyzx
  71: dp3 r0.w, r4.xyzx, r1.xyzx
  72: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
  73: dp3_sat r1.y, r4.xyzx, r0.xyzx
  74: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  75: add r0.y, r0.x, r0.x
  76: mul r0.y, r0.x, r0.y
  77: mad r0.y, r0.y, r2.x, l(-0.500000)
  78: add r0.z, -r1.x, l(1.000000)
  79: mul r1.z, r0.z, r0.z
  80: mul r1.z, r1.z, r1.z
  81: mul r0.z, r0.z, r1.z
  82: mad r0.z, r0.y, r0.z, l(1.000000)
  83: add r1.z, -|r0.w|, l(1.000000)
  84: mul r3.w, r1.z, r1.z
  85: mul r3.w, r3.w, r3.w
  86: mul r1.z, r1.z, r3.w
  87: mad r0.y, r0.y, r1.z, l(1.000000)
  88: mul r0.y, r0.y, r0.z
  89: mul r0.z, r2.x, r2.x
  90: max r0.z, r0.z, l(0.002000)
  91: add r1.z, -r0.z, l(1.000000)
  92: mad r2.x, |r0.w|, r1.z, r0.z
  93: mad r1.z, r1.x, r1.z, r0.z
  94: mul r0.w, |r0.w|, r1.z
  95: mad r0.w, r1.x, r2.x, r0.w
  96: add r0.w, r0.w, l(0.000010)
  97: div r0.w, l(0.500000), r0.w
  98: mul r0.z, r0.z, r0.z
  99: mad r1.z, r1.y, r0.z, -r1.y
 100: mad r1.y, r1.z, r1.y, l(1.000000)
 101: mul r0.z, r0.z, l(0.318310)
 102: mad r1.y, r1.y, r1.y, l(0.000000)
 103: div r0.z, r0.z, r1.y
 104: mul r0.z, r0.z, r0.w
 105: mul r0.z, r0.z, l(3.141593)
 106: max r0.z, r0.z, l(0.000100)
 107: sqrt r0.z, r0.z
 108: mul r0.yz, r1.xxxx, r0.yyzy
 109: dp3 r0.w, r5.xyzx, r5.xyzx
 110: ne r0.w, r0.w, l(0.000000)
 111: and r0.w, r0.w, l(0x3f800000)
 112: mul r0.z, r0.w, r0.z
 113: mul r1.xyz, r0.yyyy, r2.yzwy
 114: mul r0.yzw, r2.yyzw, r0.zzzz
 115: add r0.x, -r0.x, l(1.000000)
 116: mul r2.x, r0.x, r0.x
 117: mul r2.x, r2.x, r2.x
 118: mul r0.x, r0.x, r2.x
 119: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 120: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 121: mul r0.xyz, r0.yzwy, r2.xyzx
 122: mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
 123: mul o0.xyz, r1.wwww, r0.xyzx
 124: mov o0.w, l(1.000000)
 125: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SPOT 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 128 math, 8 temp registers, 9 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_TerrainNormalmapTexture" to slot 5 sampler slot 8
Set 2D Texture "_LightTexture0" to slot 6 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 7 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 0

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 256
  Float _Metallic1 at 260
  Float _Metallic2 at 264
  Float _Metallic3 at 268
  Float _Smoothness0 at 272
  Float _Smoothness1 at 276
  Float _Smoothness2 at 280
  Float _Smoothness3 at 284
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[18], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r3.xy, v5.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r3.xy, r3.xyxx, cb0[9].xyxx
  11: sample r3.xyzw, r3.xyxx, t0.xyzw, s3
  12: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r3.xyzw, r3.xyzw, r2.wwww
  15: mad r4.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r4.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r5.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r5.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r6.xyzw, r4.xyxx, t1.xyzw, s4
  20: mul r6.xyzw, r3.xxxx, r6.xyzw
  21: mul r6.w, r6.w, cb0[17].x
  22: sample r4.xyzw, r4.zwzz, t2.xyzw, s5
  23: mul r4.xyzw, r3.yyyy, r4.xyzw
  24: mul r4.w, r4.w, cb0[17].y
  25: add r4.xyzw, r4.xyzw, r6.xyzw
  26: sample r6.xyzw, r5.xyxx, t3.xyzw, s6
  27: mul r6.xyzw, r3.zzzz, r6.xyzw
  28: mul r6.w, r6.w, cb0[17].z
  29: add r4.xyzw, r4.xyzw, r6.xyzw
  30: sample r5.xyzw, r5.zwzz, t4.xyzw, s7
  31: mul r5.xyzw, r3.wwww, r5.xyzw
  32: mul r5.w, r5.w, cb0[17].w
  33: add r4.xyzw, r4.xyzw, r5.xyzw
  34: sample r5.xyzw, v5.zwzz, t5.xyzw, s8
  35: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  36: dp3 r2.w, r5.xyzx, r5.xyzx
  37: rsq r2.w, r2.w
  38: mul r5.xyz, r2.wwww, r5.xyzx
  39: dp4 r2.w, r3.xyzw, cb0[16].xyzw
  40: mul r3.xyzw, v4.yyyy, cb0[5].xyzw
  41: mad r3.xyzw, cb0[4].xyzw, v4.xxxx, r3.xyzw
  42: mad r3.xyzw, cb0[6].xyzw, v4.zzzz, r3.xyzw
  43: add r3.xyzw, r3.xyzw, cb0[7].xyzw
  44: eq r5.w, cb3[0].x, l(1.000000)
  45: if_nz r5.w
  46:   eq r5.w, cb3[0].y, l(1.000000)
  47:   mul r6.xyz, v4.yyyy, cb3[2].xyzx
  48:   mad r6.xyz, cb3[1].xyzx, v4.xxxx, r6.xyzx
  49:   mad r6.xyz, cb3[3].xyzx, v4.zzzz, r6.xyzx
  50:   add r6.xyz, r6.xyzx, cb3[4].xyzx
  51:   movc r6.xyz, r5.wwww, r6.xyzx, v4.xyzx
  52:   add r6.xyz, r6.xyzx, -cb3[6].xyzx
  53:   mul r6.yzw, r6.xxyz, cb3[5].xxyz
  54:   mad r5.w, r6.y, l(0.250000), l(0.750000)
  55:   mad r6.y, cb3[0].z, l(0.500000), l(0.750000)
  56:   max r6.x, r5.w, r6.y
  57:   sample r6.xyzw, r6.xzwx, t8.xyzw, s0
  58: else 
  59:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  60: endif 
  61: dp4_sat r5.w, r6.xyzw, cb2[46].xyzw
  62: lt r6.x, l(0.000000), r3.z
  63: and r6.x, r6.x, l(0x3f800000)
  64: div r6.yz, r3.xxyx, r3.wwww
  65: add r6.yz, r6.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  66: sample r7.xyzw, r6.yzyy, t6.xyzw, s1
  67: mul r3.w, r6.x, r7.w
  68: dp3 r3.x, r3.xyzx, r3.xyzx
  69: sample r6.xyzw, r3.xxxx, t7.xyzw, s2
  70: mul r3.x, r3.w, r6.x
  71: mul r3.x, r5.w, r3.x
  72: dp3 r6.x, v1.xyzx, r5.xyzx
  73: dp3 r6.y, v2.xyzx, r5.xyzx
  74: dp3 r6.z, v3.xyzx, r5.xyzx
  75: dp3 r3.y, r6.xyzx, r6.xyzx
  76: rsq r3.y, r3.y
  77: mul r3.yzw, r3.yyyy, r6.xxyz
  78: mul r5.xyz, r3.xxxx, cb0[2].xyzx
  79: add r6.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  80: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  81: mad r2.w, -r2.w, l(0.779084), l(0.779084)
  82: mul r4.xyz, r2.wwww, r4.xyzx
  83: add r2.w, -r4.w, l(1.000000)
  84: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
  85: dp3 r0.w, r0.xyzx, r0.xyzx
  86: max r0.w, r0.w, l(0.001000)
  87: rsq r0.w, r0.w
  88: mul r0.xyz, r0.wwww, r0.xyzx
  89: dp3 r0.w, r3.yzwy, r2.xyzx
  90: dp3_sat r2.x, r3.yzwy, r1.xyzx
  91: dp3_sat r2.y, r3.yzwy, r0.xyzx
  92: dp3_sat r0.x, r1.xyzx, r0.xyzx
  93: add r0.y, r0.x, r0.x
  94: mul r0.y, r0.x, r0.y
  95: mad r0.y, r0.y, r2.w, l(-0.500000)
  96: add r0.z, -r2.x, l(1.000000)
  97: mul r1.x, r0.z, r0.z
  98: mul r1.x, r1.x, r1.x
  99: mul r0.z, r0.z, r1.x
 100: mad r0.z, r0.y, r0.z, l(1.000000)
 101: add r1.x, -|r0.w|, l(1.000000)
 102: mul r1.y, r1.x, r1.x
 103: mul r1.y, r1.y, r1.y
 104: mul r1.x, r1.x, r1.y
 105: mad r0.y, r0.y, r1.x, l(1.000000)
 106: mul r0.y, r0.y, r0.z
 107: mul r0.z, r2.w, r2.w
 108: max r0.z, r0.z, l(0.002000)
 109: add r1.x, -r0.z, l(1.000000)
 110: mad r1.y, |r0.w|, r1.x, r0.z
 111: mad r1.x, r2.x, r1.x, r0.z
 112: mul r0.w, |r0.w|, r1.x
 113: mad r0.w, r2.x, r1.y, r0.w
 114: add r0.w, r0.w, l(0.000010)
 115: div r0.w, l(0.500000), r0.w
 116: mul r0.z, r0.z, r0.z
 117: mad r1.x, r2.y, r0.z, -r2.y
 118: mad r1.x, r1.x, r2.y, l(1.000000)
 119: mul r0.z, r0.z, l(0.318310)
 120: mad r1.x, r1.x, r1.x, l(0.000000)
 121: div r0.z, r0.z, r1.x
 122: mul r0.z, r0.z, r0.w
 123: mul r0.z, r0.z, l(3.141593)
 124: max r0.z, r0.z, l(0.000100)
 125: sqrt r0.z, r0.z
 126: mul r0.yz, r2.xxxx, r0.yyzy
 127: dp3 r0.w, r6.xyzx, r6.xyzx
 128: ne r0.w, r0.w, l(0.000000)
 129: and r0.w, r0.w, l(0x3f800000)
 130: mul r0.z, r0.w, r0.z
 131: mul r1.xyz, r0.yyyy, r5.xyzx
 132: mul r0.yzw, r5.xxyz, r0.zzzz
 133: add r0.x, -r0.x, l(1.000000)
 134: mul r2.x, r0.x, r0.x
 135: mul r2.x, r2.x, r2.x
 136: mul r0.x, r0.x, r2.x
 137: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 138: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 139: mul r0.xyz, r0.yzwy, r2.xyzx
 140: mad r0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
 141: mul o0.xyz, r1.wwww, r0.xyzx
 142: mov o0.w, l(1.000000)
 143: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT_COOKIE 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 123 math, 8 temp registers, 9 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_TerrainNormalmapTexture" to slot 5 sampler slot 8
Set 2D Texture "_LightTextureB0" to slot 6 sampler slot 2
Set CUBE Texture "_LightTexture0" to slot 7 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 0

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 256
  Float _Metallic1 at 260
  Float _Metallic2 at 264
  Float _Metallic3 at 268
  Float _Smoothness0 at 272
  Float _Smoothness1 at 276
  Float _Smoothness2 at 280
  Float _Smoothness3 at 284
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[18], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r3.xy, v5.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r3.xy, r3.xyxx, cb0[9].xyxx
  11: sample r3.xyzw, r3.xyxx, t0.xyzw, s3
  12: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r3.xyzw, r3.xyzw, r2.wwww
  15: mad r4.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r4.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r5.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r5.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r6.xyzw, r4.xyxx, t1.xyzw, s4
  20: mul r6.xyzw, r3.xxxx, r6.xyzw
  21: mul r6.w, r6.w, cb0[17].x
  22: sample r4.xyzw, r4.zwzz, t2.xyzw, s5
  23: mul r4.xyzw, r3.yyyy, r4.xyzw
  24: mul r4.w, r4.w, cb0[17].y
  25: add r4.xyzw, r4.xyzw, r6.xyzw
  26: sample r6.xyzw, r5.xyxx, t3.xyzw, s6
  27: mul r6.xyzw, r3.zzzz, r6.xyzw
  28: mul r6.w, r6.w, cb0[17].z
  29: add r4.xyzw, r4.xyzw, r6.xyzw
  30: sample r5.xyzw, r5.zwzz, t4.xyzw, s7
  31: mul r5.xyzw, r3.wwww, r5.xyzw
  32: mul r5.w, r5.w, cb0[17].w
  33: add r4.xyzw, r4.xyzw, r5.xyzw
  34: sample r5.xyzw, v5.zwzz, t5.xyzw, s8
  35: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  36: dp3 r2.w, r5.xyzx, r5.xyzx
  37: rsq r2.w, r2.w
  38: mul r5.xyz, r2.wwww, r5.xyzx
  39: dp4 r2.w, r3.xyzw, cb0[16].xyzw
  40: mul r3.xyz, v4.yyyy, cb0[5].xyzx
  41: mad r3.xyz, cb0[4].xyzx, v4.xxxx, r3.xyzx
  42: mad r3.xyz, cb0[6].xyzx, v4.zzzz, r3.xyzx
  43: add r3.xyz, r3.xyzx, cb0[7].xyzx
  44: eq r3.w, cb3[0].x, l(1.000000)
  45: if_nz r3.w
  46:   eq r3.w, cb3[0].y, l(1.000000)
  47:   mul r6.xyz, v4.yyyy, cb3[2].xyzx
  48:   mad r6.xyz, cb3[1].xyzx, v4.xxxx, r6.xyzx
  49:   mad r6.xyz, cb3[3].xyzx, v4.zzzz, r6.xyzx
  50:   add r6.xyz, r6.xyzx, cb3[4].xyzx
  51:   movc r6.xyz, r3.wwww, r6.xyzx, v4.xyzx
  52:   add r6.xyz, r6.xyzx, -cb3[6].xyzx
  53:   mul r6.yzw, r6.xxyz, cb3[5].xxyz
  54:   mad r3.w, r6.y, l(0.250000), l(0.750000)
  55:   mad r5.w, cb3[0].z, l(0.500000), l(0.750000)
  56:   max r6.x, r3.w, r5.w
  57:   sample r6.xyzw, r6.xzwx, t8.xyzw, s0
  58: else 
  59:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  60: endif 
  61: dp4_sat r3.w, r6.xyzw, cb2[46].xyzw
  62: dp3 r5.w, r3.xyzx, r3.xyzx
  63: sample r6.xyzw, r5.wwww, t6.xyzw, s2
  64: sample r7.xyzw, r3.xyzx, t7.xyzw, s1
  65: mul r3.x, r6.x, r7.w
  66: mul r3.x, r3.w, r3.x
  67: dp3 r6.x, v1.xyzx, r5.xyzx
  68: dp3 r6.y, v2.xyzx, r5.xyzx
  69: dp3 r6.z, v3.xyzx, r5.xyzx
  70: dp3 r3.y, r6.xyzx, r6.xyzx
  71: rsq r3.y, r3.y
  72: mul r3.yzw, r3.yyyy, r6.xxyz
  73: mul r5.xyz, r3.xxxx, cb0[2].xyzx
  74: add r6.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  75: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  76: mad r2.w, -r2.w, l(0.779084), l(0.779084)
  77: mul r4.xyz, r2.wwww, r4.xyzx
  78: add r2.w, -r4.w, l(1.000000)
  79: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
  80: dp3 r0.w, r0.xyzx, r0.xyzx
  81: max r0.w, r0.w, l(0.001000)
  82: rsq r0.w, r0.w
  83: mul r0.xyz, r0.wwww, r0.xyzx
  84: dp3 r0.w, r3.yzwy, r2.xyzx
  85: dp3_sat r2.x, r3.yzwy, r1.xyzx
  86: dp3_sat r2.y, r3.yzwy, r0.xyzx
  87: dp3_sat r0.x, r1.xyzx, r0.xyzx
  88: add r0.y, r0.x, r0.x
  89: mul r0.y, r0.x, r0.y
  90: mad r0.y, r0.y, r2.w, l(-0.500000)
  91: add r0.z, -r2.x, l(1.000000)
  92: mul r1.x, r0.z, r0.z
  93: mul r1.x, r1.x, r1.x
  94: mul r0.z, r0.z, r1.x
  95: mad r0.z, r0.y, r0.z, l(1.000000)
  96: add r1.x, -|r0.w|, l(1.000000)
  97: mul r1.y, r1.x, r1.x
  98: mul r1.y, r1.y, r1.y
  99: mul r1.x, r1.x, r1.y
 100: mad r0.y, r0.y, r1.x, l(1.000000)
 101: mul r0.y, r0.y, r0.z
 102: mul r0.z, r2.w, r2.w
 103: max r0.z, r0.z, l(0.002000)
 104: add r1.x, -r0.z, l(1.000000)
 105: mad r1.y, |r0.w|, r1.x, r0.z
 106: mad r1.x, r2.x, r1.x, r0.z
 107: mul r0.w, |r0.w|, r1.x
 108: mad r0.w, r2.x, r1.y, r0.w
 109: add r0.w, r0.w, l(0.000010)
 110: div r0.w, l(0.500000), r0.w
 111: mul r0.z, r0.z, r0.z
 112: mad r1.x, r2.y, r0.z, -r2.y
 113: mad r1.x, r1.x, r2.y, l(1.000000)
 114: mul r0.z, r0.z, l(0.318310)
 115: mad r1.x, r1.x, r1.x, l(0.000000)
 116: div r0.z, r0.z, r1.x
 117: mul r0.z, r0.z, r0.w
 118: mul r0.z, r0.z, l(3.141593)
 119: max r0.z, r0.z, l(0.000100)
 120: sqrt r0.z, r0.z
 121: mul r0.yz, r2.xxxx, r0.yyzy
 122: dp3 r0.w, r6.xyzx, r6.xyzx
 123: ne r0.w, r0.w, l(0.000000)
 124: and r0.w, r0.w, l(0x3f800000)
 125: mul r0.z, r0.w, r0.z
 126: mul r1.xyz, r0.yyyy, r5.xyzx
 127: mul r0.yzw, r5.xxyz, r0.zzzz
 128: add r0.x, -r0.x, l(1.000000)
 129: mul r2.x, r0.x, r0.x
 130: mul r2.x, r2.x, r2.x
 131: mul r0.x, r0.x, r2.x
 132: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 133: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 134: mul r0.xyz, r0.yzwy, r2.xyzx
 135: mad r0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
 136: mul o0.xyz, r1.wwww, r0.xyzx
 137: mov o0.w, l(1.000000)
 138: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE INSTANCING_ON 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 117 math, 6 temp registers, 8 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 2
Set 2D Texture "_Splat0" to slot 1 sampler slot 3
Set 2D Texture "_Splat1" to slot 2 sampler slot 4
Set 2D Texture "_Splat2" to slot 3 sampler slot 5
Set 2D Texture "_Splat3" to slot 4 sampler slot 6
Set 2D Texture "_TerrainNormalmapTexture" to slot 5 sampler slot 7
Set 2D Texture "_LightTexture0" to slot 6 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 0

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 256
  Float _Metallic1 at 260
  Float _Metallic2 at 264
  Float _Metallic3 at 268
  Float _Smoothness0 at 272
  Float _Smoothness1 at 276
  Float _Smoothness2 at 280
  Float _Smoothness3 at 284
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[18], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: mul r2.xy, r2.xyxx, cb0[9].xyxx
   7: sample r2.xyzw, r2.xyxx, t0.xyzw, s2
   8: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   9: add r3.x, r1.w, l(0.001000)
  10: div r2.xyzw, r2.xyzw, r3.xxxx
  11: mad r3.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  12: mad r3.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  13: mad r4.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  14: mad r4.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  15: sample r5.xyzw, r3.xyxx, t1.xyzw, s3
  16: mul r5.xyzw, r2.xxxx, r5.xyzw
  17: mul r5.w, r5.w, cb0[17].x
  18: sample r3.xyzw, r3.zwzz, t2.xyzw, s4
  19: mul r3.xyzw, r2.yyyy, r3.xyzw
  20: mul r3.w, r3.w, cb0[17].y
  21: add r3.xyzw, r3.xyzw, r5.xyzw
  22: sample r5.xyzw, r4.xyxx, t3.xyzw, s5
  23: mul r5.xyzw, r2.zzzz, r5.xyzw
  24: mul r5.w, r5.w, cb0[17].z
  25: add r3.xyzw, r3.xyzw, r5.xyzw
  26: sample r4.xyzw, r4.zwzz, t4.xyzw, s6
  27: mul r4.xyzw, r2.wwww, r4.xyzw
  28: mul r4.w, r4.w, cb0[17].w
  29: add r3.xyzw, r3.xyzw, r4.xyzw
  30: sample r4.xyzw, v5.zwzz, t5.xyzw, s7
  31: mad r4.xyz, r4.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  32: dp3 r4.w, r4.xyzx, r4.xyzx
  33: rsq r4.w, r4.w
  34: mul r4.xyz, r4.wwww, r4.xyzx
  35: dp4 r2.x, r2.xyzw, cb0[16].xyzw
  36: mul r2.yz, v4.yyyy, cb0[5].xxyx
  37: mad r2.yz, cb0[4].xxyx, v4.xxxx, r2.yyzy
  38: mad r2.yz, cb0[6].xxyx, v4.zzzz, r2.yyzy
  39: add r2.yz, r2.yyzy, cb0[7].xxyx
  40: eq r2.w, cb3[0].x, l(1.000000)
  41: if_nz r2.w
  42:   eq r2.w, cb3[0].y, l(1.000000)
  43:   mul r5.xyz, v4.yyyy, cb3[2].xyzx
  44:   mad r5.xyz, cb3[1].xyzx, v4.xxxx, r5.xyzx
  45:   mad r5.xyz, cb3[3].xyzx, v4.zzzz, r5.xyzx
  46:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  47:   movc r5.xyz, r2.wwww, r5.xyzx, v4.xyzx
  48:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
  49:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
  50:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  51:   mad r4.w, cb3[0].z, l(0.500000), l(0.750000)
  52:   max r5.x, r2.w, r4.w
  53:   sample r5.xyzw, r5.xzwx, t7.xyzw, s0
  54: else 
  55:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  56: endif 
  57: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  58: sample r5.xyzw, r2.yzyy, t6.xyzw, s1
  59: mul r2.y, r2.w, r5.w
  60: dp3 r5.x, v1.xyzx, r4.xyzx
  61: dp3 r5.y, v2.xyzx, r4.xyzx
  62: dp3 r5.z, v3.xyzx, r4.xyzx
  63: dp3 r2.z, r5.xyzx, r5.xyzx
  64: rsq r2.z, r2.z
  65: mul r4.xyz, r2.zzzz, r5.xyzx
  66: mul r2.yzw, r2.yyyy, cb0[2].xxyz
  67: add r5.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  68: mad r5.xyz, r2.xxxx, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  69: mad r2.x, -r2.x, l(0.779084), l(0.779084)
  70: mul r3.xyz, r2.xxxx, r3.xyzx
  71: add r2.x, -r3.w, l(1.000000)
  72: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  73: dp3 r0.w, r0.xyzx, r0.xyzx
  74: max r0.w, r0.w, l(0.001000)
  75: rsq r0.w, r0.w
  76: mul r0.xyz, r0.wwww, r0.xyzx
  77: dp3 r0.w, r4.xyzx, r1.xyzx
  78: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
  79: dp3_sat r1.y, r4.xyzx, r0.xyzx
  80: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  81: add r0.y, r0.x, r0.x
  82: mul r0.y, r0.x, r0.y
  83: mad r0.y, r0.y, r2.x, l(-0.500000)
  84: add r0.z, -r1.x, l(1.000000)
  85: mul r1.z, r0.z, r0.z
  86: mul r1.z, r1.z, r1.z
  87: mul r0.z, r0.z, r1.z
  88: mad r0.z, r0.y, r0.z, l(1.000000)
  89: add r1.z, -|r0.w|, l(1.000000)
  90: mul r3.w, r1.z, r1.z
  91: mul r3.w, r3.w, r3.w
  92: mul r1.z, r1.z, r3.w
  93: mad r0.y, r0.y, r1.z, l(1.000000)
  94: mul r0.y, r0.y, r0.z
  95: mul r0.z, r2.x, r2.x
  96: max r0.z, r0.z, l(0.002000)
  97: add r1.z, -r0.z, l(1.000000)
  98: mad r2.x, |r0.w|, r1.z, r0.z
  99: mad r1.z, r1.x, r1.z, r0.z
 100: mul r0.w, |r0.w|, r1.z
 101: mad r0.w, r1.x, r2.x, r0.w
 102: add r0.w, r0.w, l(0.000010)
 103: div r0.w, l(0.500000), r0.w
 104: mul r0.z, r0.z, r0.z
 105: mad r1.z, r1.y, r0.z, -r1.y
 106: mad r1.y, r1.z, r1.y, l(1.000000)
 107: mul r0.z, r0.z, l(0.318310)
 108: mad r1.y, r1.y, r1.y, l(0.000000)
 109: div r0.z, r0.z, r1.y
 110: mul r0.z, r0.z, r0.w
 111: mul r0.z, r0.z, l(3.141593)
 112: max r0.z, r0.z, l(0.000100)
 113: sqrt r0.z, r0.z
 114: mul r0.yz, r1.xxxx, r0.yyzy
 115: dp3 r0.w, r5.xyzx, r5.xyzx
 116: ne r0.w, r0.w, l(0.000000)
 117: and r0.w, r0.w, l(0x3f800000)
 118: mul r0.z, r0.w, r0.z
 119: mul r1.xyz, r0.yyyy, r2.yzwy
 120: mul r0.yzw, r2.yyzw, r0.zzzz
 121: add r0.x, -r0.x, l(1.000000)
 122: mul r2.x, r0.x, r0.x
 123: mul r2.x, r2.x, r2.x
 124: mul r0.x, r0.x, r2.x
 125: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 126: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 127: mul r0.xyz, r0.yzwy, r2.xyzx
 128: mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
 129: mul o0.xyz, r1.wwww, r0.xyzx
 130: mov o0.w, l(1.000000)
 131: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_DEPTH SPOT 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 144 math, 8 temp registers, 9 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 4
Set 2D Texture "_Splat0" to slot 1 sampler slot 5
Set 2D Texture "_Splat1" to slot 2 sampler slot 6
Set 2D Texture "_Splat2" to slot 3 sampler slot 7
Set 2D Texture "_Splat3" to slot 4 sampler slot 8
Set 2D Texture "_TerrainNormalmapTexture" to slot 5 sampler slot 9
Set 2D Texture "_LightTexture0" to slot 6 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 7 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 9 sampler slot 1

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 256
  Float _Metallic1 at 260
  Float _Metallic2 at 264
  Float _Metallic3 at 268
  Float _Smoothness0 at 272
  Float _Smoothness1 at 276
  Float _Smoothness2 at 280
  Float _Smoothness3 at 284
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[18], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[9].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s4
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s5
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[17].x
  22: sample r5.xyzw, r5.zwzz, t2.xyzw, s6
  23: mul r5.xyzw, r4.yyyy, r5.xyzw
  24: mul r5.w, r5.w, cb0[17].y
  25: add r5.xyzw, r5.xyzw, r7.xyzw
  26: sample r7.xyzw, r6.xyxx, t3.xyzw, s7
  27: mul r7.xyzw, r4.zzzz, r7.xyzw
  28: mul r7.w, r7.w, cb0[17].z
  29: add r5.xyzw, r5.xyzw, r7.xyzw
  30: sample r6.xyzw, r6.zwzz, t4.xyzw, s8
  31: mul r6.xyzw, r4.wwww, r6.xyzw
  32: mul r6.w, r6.w, cb0[17].w
  33: add r5.xyzw, r5.xyzw, r6.xyzw
  34: sample r6.xyzw, v5.zwzz, t5.xyzw, s9
  35: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  36: dp3 r2.w, r6.xyzx, r6.xyzx
  37: rsq r2.w, r2.w
  38: mul r6.xyz, r2.wwww, r6.xyzx
  39: dp4 r2.w, r4.xyzw, cb0[16].xyzw
  40: mul r4.xyzw, v4.yyyy, cb0[5].xyzw
  41: mad r4.xyzw, cb0[4].xyzw, v4.xxxx, r4.xyzw
  42: mad r4.xyzw, cb0[6].xyzw, v4.zzzz, r4.xyzw
  43: add r4.xyzw, r4.xyzw, cb0[7].xyzw
  44: mov r7.x, cb4[9].z
  45: mov r7.y, cb4[10].z
  46: mov r7.z, cb4[11].z
  47: dp3 r2.x, r2.xyzx, r7.xyzx
  48: add r7.xyz, v4.xyzx, -cb3[25].xyzx
  49: dp3 r2.y, r7.xyzx, r7.xyzx
  50: sqrt r2.y, r2.y
  51: add r2.y, -r2.x, r2.y
  52: mad r2.x, cb3[25].w, r2.y, r2.x
  53: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  54: eq r2.y, cb5[0].x, l(1.000000)
  55: if_nz r2.y
  56:   eq r2.y, cb5[0].y, l(1.000000)
  57:   mul r7.xyz, v4.yyyy, cb5[2].xyzx
  58:   mad r7.xyz, cb5[1].xyzx, v4.xxxx, r7.xyzx
  59:   mad r7.xyz, cb5[3].xyzx, v4.zzzz, r7.xyzx
  60:   add r7.xyz, r7.xyzx, cb5[4].xyzx
  61:   movc r7.xyz, r2.yyyy, r7.xyzx, v4.xyzx
  62:   add r7.xyz, r7.xyzx, -cb5[6].xyzx
  63:   mul r7.yzw, r7.xxyz, cb5[5].xxyz
  64:   mad r2.y, r7.y, l(0.250000), l(0.750000)
  65:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  66:   max r7.x, r2.z, r2.y
  67:   sample r7.xyzw, r7.xzwx, t8.xyzw, s0
  68: else 
  69:   mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  70: endif 
  71: dp4_sat r2.y, r7.xyzw, cb2[46].xyzw
  72: mul r7.xyzw, v4.yyyy, cb3[9].xyzw
  73: mad r7.xyzw, cb3[8].xyzw, v4.xxxx, r7.xyzw
  74: mad r7.xyzw, cb3[10].xyzw, v4.zzzz, r7.xyzw
  75: add r7.xyzw, r7.xyzw, cb3[11].xyzw
  76: div r7.xyz, r7.xyzx, r7.wwww
  77: sample_c_lz r2.z, r7.xyxx, t9.xxxx, s1, r7.z
  78: add r3.w, -cb3[24].x, l(1.000000)
  79: mad r2.z, r2.z, r3.w, cb3[24].x
  80: add r2.y, -r2.z, r2.y
  81: mad r2.x, r2.x, r2.y, r2.z
  82: lt r2.y, l(0.000000), r4.z
  83: and r2.y, r2.y, l(0x3f800000)
  84: div r7.xy, r4.xyxx, r4.wwww
  85: add r7.xy, r7.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  86: sample r7.xyzw, r7.xyxx, t6.xyzw, s2
  87: mul r2.y, r2.y, r7.w
  88: dp3 r2.z, r4.xyzx, r4.xyzx
  89: sample r4.xyzw, r2.zzzz, t7.xyzw, s3
  90: mul r2.y, r2.y, r4.x
  91: mul r2.x, r2.x, r2.y
  92: dp3 r4.x, v1.xyzx, r6.xyzx
  93: dp3 r4.y, v2.xyzx, r6.xyzx
  94: dp3 r4.z, v3.xyzx, r6.xyzx
  95: dp3 r2.y, r4.xyzx, r4.xyzx
  96: rsq r2.y, r2.y
  97: mul r4.xyz, r2.yyyy, r4.xyzx
  98: mul r2.xyz, r2.xxxx, cb0[2].xyzx
  99: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 100: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 101: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 102: mul r5.xyz, r2.wwww, r5.xyzx
 103: add r2.w, -r5.w, l(1.000000)
 104: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 105: dp3 r0.w, r0.xyzx, r0.xyzx
 106: max r0.w, r0.w, l(0.001000)
 107: rsq r0.w, r0.w
 108: mul r0.xyz, r0.wwww, r0.xyzx
 109: dp3 r0.w, r4.xyzx, r3.xyzx
 110: dp3_sat r3.x, r4.xyzx, r1.xyzx
 111: dp3_sat r3.y, r4.xyzx, r0.xyzx
 112: dp3_sat r0.x, r1.xyzx, r0.xyzx
 113: add r0.y, r0.x, r0.x
 114: mul r0.y, r0.x, r0.y
 115: mad r0.y, r0.y, r2.w, l(-0.500000)
 116: add r0.z, -r3.x, l(1.000000)
 117: mul r1.x, r0.z, r0.z
 118: mul r1.x, r1.x, r1.x
 119: mul r0.z, r0.z, r1.x
 120: mad r0.z, r0.y, r0.z, l(1.000000)
 121: add r1.x, -|r0.w|, l(1.000000)
 122: mul r1.y, r1.x, r1.x
 123: mul r1.y, r1.y, r1.y
 124: mul r1.x, r1.x, r1.y
 125: mad r0.y, r0.y, r1.x, l(1.000000)
 126: mul r0.y, r0.y, r0.z
 127: mul r0.z, r2.w, r2.w
 128: max r0.z, r0.z, l(0.002000)
 129: add r1.x, -r0.z, l(1.000000)
 130: mad r1.y, |r0.w|, r1.x, r0.z
 131: mad r1.x, r3.x, r1.x, r0.z
 132: mul r0.w, |r0.w|, r1.x
 133: mad r0.w, r3.x, r1.y, r0.w
 134: add r0.w, r0.w, l(0.000010)
 135: div r0.w, l(0.500000), r0.w
 136: mul r0.z, r0.z, r0.z
 137: mad r1.x, r3.y, r0.z, -r3.y
 138: mad r1.x, r1.x, r3.y, l(1.000000)
 139: mul r0.z, r0.z, l(0.318310)
 140: mad r1.x, r1.x, r1.x, l(0.000000)
 141: div r0.z, r0.z, r1.x
 142: mul r0.z, r0.z, r0.w
 143: mul r0.z, r0.z, l(3.141593)
 144: max r0.z, r0.z, l(0.000100)
 145: sqrt r0.z, r0.z
 146: mul r0.yz, r3.xxxx, r0.yyzy
 147: dp3 r0.w, r6.xyzx, r6.xyzx
 148: ne r0.w, r0.w, l(0.000000)
 149: and r0.w, r0.w, l(0x3f800000)
 150: mul r0.z, r0.w, r0.z
 151: mul r1.xyz, r0.yyyy, r2.xyzx
 152: mul r0.yzw, r2.xxyz, r0.zzzz
 153: add r0.x, -r0.x, l(1.000000)
 154: mul r2.x, r0.x, r0.x
 155: mul r2.x, r2.x, r2.x
 156: mul r0.x, r0.x, r2.x
 157: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 158: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 159: mul r0.xyz, r0.yzwy, r2.xyzx
 160: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 161: mul o0.xyz, r1.wwww, r0.xyzx
 162: mov o0.w, l(1.000000)
 163: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_DEPTH SHADOWS_SOFT SPOT 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 173 math, 13 temp registers, 9 textures, 4 branches
Set 2D Texture "_Control" to slot 0 sampler slot 4
Set 2D Texture "_Splat0" to slot 1 sampler slot 5
Set 2D Texture "_Splat1" to slot 2 sampler slot 6
Set 2D Texture "_Splat2" to slot 3 sampler slot 7
Set 2D Texture "_Splat3" to slot 4 sampler slot 8
Set 2D Texture "_TerrainNormalmapTexture" to slot 5 sampler slot 9
Set 2D Texture "_LightTexture0" to slot 6 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 7 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 9 sampler slot 1

Constant Buffer "$Globals" (368 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 144
  Vector4 _LightColor0 at 32
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _Control_TexelSize at 224
  Vector4 _Splat0_ST at 240
  Vector4 _Splat1_ST at 256
  Vector4 _Splat2_ST at 272
  Vector4 _Splat3_ST at 288
  Float _Metallic0 at 336
  Float _Metallic1 at 340
  Float _Metallic2 at 344
  Float _Metallic3 at 348
  Float _Smoothness0 at 352
  Float _Smoothness1 at 356
  Float _Smoothness2 at 360
  Float _Smoothness3 at 364
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[23], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 13
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[14].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[14].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s4
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v5.xyxx, cb0[15].xyxx, cb0[15].zwzz
  16: mad r5.zw, v5.xxxy, cb0[16].xxxy, cb0[16].zzzw
  17: mad r6.xy, v5.xyxx, cb0[17].xyxx, cb0[17].zwzz
  18: mad r6.zw, v5.xxxy, cb0[18].xxxy, cb0[18].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s5
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[22].x
  22: sample r5.xyzw, r5.zwzz, t2.xyzw, s6
  23: mul r5.xyzw, r4.yyyy, r5.xyzw
  24: mul r5.w, r5.w, cb0[22].y
  25: add r5.xyzw, r5.xyzw, r7.xyzw
  26: sample r7.xyzw, r6.xyxx, t3.xyzw, s7
  27: mul r7.xyzw, r4.zzzz, r7.xyzw
  28: mul r7.w, r7.w, cb0[22].z
  29: add r5.xyzw, r5.xyzw, r7.xyzw
  30: sample r6.xyzw, r6.zwzz, t4.xyzw, s8
  31: mul r6.xyzw, r4.wwww, r6.xyzw
  32: mul r6.w, r6.w, cb0[22].w
  33: add r5.xyzw, r5.xyzw, r6.xyzw
  34: sample r6.xyzw, v5.zwzz, t5.xyzw, s9
  35: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  36: dp3 r2.w, r6.xyzx, r6.xyzx
  37: rsq r2.w, r2.w
  38: mul r6.xyz, r2.wwww, r6.xyzx
  39: dp4 r2.w, r4.xyzw, cb0[21].xyzw
  40: mul r4.xyzw, v4.yyyy, cb0[10].xyzw
  41: mad r4.xyzw, cb0[9].xyzw, v4.xxxx, r4.xyzw
  42: mad r4.xyzw, cb0[11].xyzw, v4.zzzz, r4.xyzw
  43: add r4.xyzw, r4.xyzw, cb0[12].xyzw
  44: mov r7.x, cb4[9].z
  45: mov r7.y, cb4[10].z
  46: mov r7.z, cb4[11].z
  47: dp3 r2.x, r2.xyzx, r7.xyzx
  48: add r7.xyz, v4.xyzx, -cb3[25].xyzx
  49: dp3 r2.y, r7.xyzx, r7.xyzx
  50: sqrt r2.y, r2.y
  51: add r2.y, -r2.x, r2.y
  52: mad r2.x, cb3[25].w, r2.y, r2.x
  53: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  54: eq r2.y, cb5[0].x, l(1.000000)
  55: if_nz r2.y
  56:   eq r2.y, cb5[0].y, l(1.000000)
  57:   mul r7.xyz, v4.yyyy, cb5[2].xyzx
  58:   mad r7.xyz, cb5[1].xyzx, v4.xxxx, r7.xyzx
  59:   mad r7.xyz, cb5[3].xyzx, v4.zzzz, r7.xyzx
  60:   add r7.xyz, r7.xyzx, cb5[4].xyzx
  61:   movc r7.xyz, r2.yyyy, r7.xyzx, v4.xyzx
  62:   add r7.xyz, r7.xyzx, -cb5[6].xyzx
  63:   mul r7.yzw, r7.xxyz, cb5[5].xxyz
  64:   mad r2.y, r7.y, l(0.250000), l(0.750000)
  65:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  66:   max r7.x, r2.z, r2.y
  67:   sample r7.xyzw, r7.xzwx, t8.xyzw, s0
  68: else 
  69:   mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  70: endif 
  71: dp4_sat r2.y, r7.xyzw, cb2[46].xyzw
  72: lt r2.z, r2.x, l(0.990000)
  73: if_nz r2.z
  74:   mul r7.xyzw, v4.yyyy, cb3[9].xyzw
  75:   mad r7.xyzw, cb3[8].xyzw, v4.xxxx, r7.xyzw
  76:   mad r7.xyzw, cb3[10].xyzw, v4.zzzz, r7.xyzw
  77:   add r7.xyzw, r7.xyzw, cb3[11].xyzw
  78:   div r7.xyz, r7.xyzx, r7.wwww
  79:   mad r8.xy, r7.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  80:   round_ni r8.xy, r8.xyxx
  81:   mad r7.xy, r7.xyxx, cb0[8].zwzz, -r8.xyxx
  82:   add r9.xyzw, r7.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  83:   mul r10.xw, r9.xxxz, r9.xxxz
  84:   mad r8.zw, r10.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r7.xxxy
  85:   add r9.xz, -r7.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
  86:   min r11.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  87:   mad r9.xz, -r11.xxyx, r11.xxyx, r9.xxzx
  88:   max r7.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  89:   mad r7.xy, -r7.xyxx, r7.xyxx, r9.ywyy
  90:   mov r11.x, r8.z
  91:   mov r11.y, r9.x
  92:   mov r11.z, r7.x
  93:   mov r11.w, r10.x
  94:   mul r11.xyzw, r11.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  95:   mov r10.x, r8.w
  96:   mov r10.y, r9.z
  97:   mov r10.z, r7.y
  98:   mul r9.xyzw, r10.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  99:   add r10.xyzw, r11.ywyw, r11.xzxz
 100:   add r12.xyzw, r9.yyww, r9.xxzz
 101:   div r7.xy, r11.ywyy, r10.zwzz
 102:   add r7.xy, r7.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
 103:   div r8.zw, r9.yyyw, r12.yyyw
 104:   add r8.zw, r8.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
 105:   mul r9.xy, r7.xyxx, cb0[8].xxxx
 106:   mul r9.zw, r8.zzzw, cb0[8].yyyy
 107:   mul r10.xyzw, r10.xyzw, r12.xyzw
 108:   mad r11.xyzw, r8.xyxy, cb0[8].xyxy, r9.xzyz
 109:   sample_c_lz r2.z, r11.xyxx, t9.xxxx, s1, r7.z
 110:   sample_c_lz r3.w, r11.zwzz, t9.xxxx, s1, r7.z
 111:   mul r3.w, r3.w, r10.y
 112:   mad r2.z, r10.x, r2.z, r3.w
 113:   mad r8.xyzw, r8.xyxy, cb0[8].xyxy, r9.xwyw
 114:   sample_c_lz r3.w, r8.xyxx, t9.xxxx, s1, r7.z
 115:   mad r2.z, r10.z, r3.w, r2.z
 116:   sample_c_lz r3.w, r8.zwzz, t9.xxxx, s1, r7.z
 117:   mad r2.z, r10.w, r3.w, r2.z
 118:   add r3.w, -cb3[24].x, l(1.000000)
 119:   mad r2.z, r2.z, r3.w, cb3[24].x
 120: else 
 121:   mov r2.z, l(1.000000)
 122: endif 
 123: add r2.y, -r2.z, r2.y
 124: mad r2.x, r2.x, r2.y, r2.z
 125: lt r2.y, l(0.000000), r4.z
 126: and r2.y, r2.y, l(0x3f800000)
 127: div r7.xy, r4.xyxx, r4.wwww
 128: add r7.xy, r7.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 129: sample r7.xyzw, r7.xyxx, t6.xyzw, s2
 130: mul r2.y, r2.y, r7.w
 131: dp3 r2.z, r4.xyzx, r4.xyzx
 132: sample r4.xyzw, r2.zzzz, t7.xyzw, s3
 133: mul r2.y, r2.y, r4.x
 134: mul r2.x, r2.x, r2.y
 135: dp3 r4.x, v1.xyzx, r6.xyzx
 136: dp3 r4.y, v2.xyzx, r6.xyzx
 137: dp3 r4.z, v3.xyzx, r6.xyzx
 138: dp3 r2.y, r4.xyzx, r4.xyzx
 139: rsq r2.y, r2.y
 140: mul r4.xyz, r2.yyyy, r4.xyzx
 141: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 142: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 143: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 144: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 145: mul r5.xyz, r2.wwww, r5.xyzx
 146: add r2.w, -r5.w, l(1.000000)
 147: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 148: dp3 r0.w, r0.xyzx, r0.xyzx
 149: max r0.w, r0.w, l(0.001000)
 150: rsq r0.w, r0.w
 151: mul r0.xyz, r0.wwww, r0.xyzx
 152: dp3 r0.w, r4.xyzx, r3.xyzx
 153: dp3_sat r3.x, r4.xyzx, r1.xyzx
 154: dp3_sat r3.y, r4.xyzx, r0.xyzx
 155: dp3_sat r0.x, r1.xyzx, r0.xyzx
 156: add r0.y, r0.x, r0.x
 157: mul r0.y, r0.x, r0.y
 158: mad r0.y, r0.y, r2.w, l(-0.500000)
 159: add r0.z, -r3.x, l(1.000000)
 160: mul r1.x, r0.z, r0.z
 161: mul r1.x, r1.x, r1.x
 162: mul r0.z, r0.z, r1.x
 163: mad r0.z, r0.y, r0.z, l(1.000000)
 164: add r1.x, -|r0.w|, l(1.000000)
 165: mul r1.y, r1.x, r1.x
 166: mul r1.y, r1.y, r1.y
 167: mul r1.x, r1.x, r1.y
 168: mad r0.y, r0.y, r1.x, l(1.000000)
 169: mul r0.y, r0.y, r0.z
 170: mul r0.z, r2.w, r2.w
 171: max r0.z, r0.z, l(0.002000)
 172: add r1.x, -r0.z, l(1.000000)
 173: mad r1.y, |r0.w|, r1.x, r0.z
 174: mad r1.x, r3.x, r1.x, r0.z
 175: mul r0.w, |r0.w|, r1.x
 176: mad r0.w, r3.x, r1.y, r0.w
 177: add r0.w, r0.w, l(0.000010)
 178: div r0.w, l(0.500000), r0.w
 179: mul r0.z, r0.z, r0.z
 180: mad r1.x, r3.y, r0.z, -r3.y
 181: mad r1.x, r1.x, r3.y, l(1.000000)
 182: mul r0.z, r0.z, l(0.318310)
 183: mad r1.x, r1.x, r1.x, l(0.000000)
 184: div r0.z, r0.z, r1.x
 185: mul r0.z, r0.z, r0.w
 186: mul r0.z, r0.z, l(3.141593)
 187: max r0.z, r0.z, l(0.000100)
 188: sqrt r0.z, r0.z
 189: mul r0.yz, r3.xxxx, r0.yyzy
 190: dp3 r0.w, r6.xyzx, r6.xyzx
 191: ne r0.w, r0.w, l(0.000000)
 192: and r0.w, r0.w, l(0x3f800000)
 193: mul r0.z, r0.w, r0.z
 194: mul r1.xyz, r0.yyyy, r2.xyzx
 195: mul r0.yzw, r2.xxyz, r0.zzzz
 196: add r0.x, -r0.x, l(1.000000)
 197: mul r2.x, r0.x, r0.x
 198: mul r2.x, r2.x, r2.x
 199: mul r0.x, r0.x, r2.x
 200: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 201: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 202: mul r0.xyz, r0.yzwy, r2.xyzx
 203: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 204: mul o0.xyz, r1.wwww, r0.xyzx
 205: mov o0.w, l(1.000000)
 206: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON SHADOWS_SCREEN 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 122 math, 6 temp registers, 8 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 2
Set 2D Texture "_Splat0" to slot 1 sampler slot 3
Set 2D Texture "_Splat1" to slot 2 sampler slot 4
Set 2D Texture "_Splat2" to slot 3 sampler slot 5
Set 2D Texture "_Splat3" to slot 4 sampler slot 6
Set 2D Texture "_TerrainNormalmapTexture" to slot 5 sampler slot 7
Set 2D Texture "_ShadowMapTexture" to slot 6 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 0

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 192
  Float _Metallic1 at 196
  Float _Metallic2 at 200
  Float _Metallic3 at 204
  Float _Smoothness0 at 208
  Float _Smoothness1 at 212
  Float _Smoothness2 at 216
  Float _Smoothness3 at 220
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xy w
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: mul r2.xy, r2.xyxx, cb0[5].xyxx
   7: sample r2.xyzw, r2.xyxx, t0.xyzw, s2
   8: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   9: add r3.x, r1.w, l(0.001000)
  10: div r2.xyzw, r2.xyzw, r3.xxxx
  11: mad r3.xy, v5.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mad r3.zw, v5.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad r4.xy, v5.xyxx, cb0[8].xyxx, cb0[8].zwzz
  14: mad r4.zw, v5.xxxy, cb0[9].xxxy, cb0[9].zzzw
  15: sample r5.xyzw, r3.xyxx, t1.xyzw, s3
  16: mul r5.xyzw, r2.xxxx, r5.xyzw
  17: mul r5.w, r5.w, cb0[13].x
  18: sample r3.xyzw, r3.zwzz, t2.xyzw, s4
  19: mul r3.xyzw, r2.yyyy, r3.xyzw
  20: mul r3.w, r3.w, cb0[13].y
  21: add r3.xyzw, r3.xyzw, r5.xyzw
  22: sample r5.xyzw, r4.xyxx, t3.xyzw, s5
  23: mul r5.xyzw, r2.zzzz, r5.xyzw
  24: mul r5.w, r5.w, cb0[13].z
  25: add r3.xyzw, r3.xyzw, r5.xyzw
  26: sample r4.xyzw, r4.zwzz, t4.xyzw, s6
  27: mul r4.xyzw, r2.wwww, r4.xyzw
  28: mul r4.w, r4.w, cb0[13].w
  29: add r3.xyzw, r3.xyzw, r4.xyzw
  30: sample r4.xyzw, v5.zwzz, t5.xyzw, s7
  31: mad r4.xyz, r4.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  32: dp3 r4.w, r4.xyzx, r4.xyzx
  33: rsq r4.w, r4.w
  34: mul r4.xyz, r4.wwww, r4.xyzx
  35: dp4 r2.x, r2.xyzw, cb0[12].xyzw
  36: mov r5.x, cb4[9].z
  37: mov r5.y, cb4[10].z
  38: mov r5.z, cb4[11].z
  39: dp3 r2.y, r0.xyzx, r5.xyzx
  40: add r5.xyz, v4.xyzx, -cb3[25].xyzx
  41: dp3 r2.z, r5.xyzx, r5.xyzx
  42: sqrt r2.z, r2.z
  43: add r2.z, -r2.y, r2.z
  44: mad r2.y, cb3[25].w, r2.z, r2.y
  45: mad_sat r2.y, r2.y, cb3[24].z, cb3[24].w
  46: eq r2.z, cb5[0].x, l(1.000000)
  47: if_nz r2.z
  48:   eq r2.z, cb5[0].y, l(1.000000)
  49:   mul r5.xyz, v4.yyyy, cb5[2].xyzx
  50:   mad r5.xyz, cb5[1].xyzx, v4.xxxx, r5.xyzx
  51:   mad r5.xyz, cb5[3].xyzx, v4.zzzz, r5.xyzx
  52:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  53:   movc r5.xyz, r2.zzzz, r5.xyzx, v4.xyzx
  54:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  55:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  56:   mad r2.z, r5.y, l(0.250000), l(0.750000)
  57:   mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
  58:   max r5.x, r2.w, r2.z
  59:   sample r5.xyzw, r5.xzwx, t7.xyzw, s0
  60: else 
  61:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  62: endif 
  63: dp4_sat r2.z, r5.xyzw, cb2[46].xyzw
  64: div r5.xy, v6.xyxx, v6.wwww
  65: sample r5.xyzw, r5.xyxx, t6.xyzw, s1
  66: add r2.z, r2.z, -r5.x
  67: mad r2.y, r2.y, r2.z, r5.x
  68: dp3 r5.x, v1.xyzx, r4.xyzx
  69: dp3 r5.y, v2.xyzx, r4.xyzx
  70: dp3 r5.z, v3.xyzx, r4.xyzx
  71: dp3 r2.z, r5.xyzx, r5.xyzx
  72: rsq r2.z, r2.z
  73: mul r4.xyz, r2.zzzz, r5.xyzx
  74: mul r2.yzw, r2.yyyy, cb0[2].xxyz
  75: add r5.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  76: mad r5.xyz, r2.xxxx, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  77: mad r2.x, -r2.x, l(0.779084), l(0.779084)
  78: mul r3.xyz, r2.xxxx, r3.xyzx
  79: add r2.x, -r3.w, l(1.000000)
  80: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  81: dp3 r0.w, r0.xyzx, r0.xyzx
  82: max r0.w, r0.w, l(0.001000)
  83: rsq r0.w, r0.w
  84: mul r0.xyz, r0.wwww, r0.xyzx
  85: dp3 r0.w, r4.xyzx, r1.xyzx
  86: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
  87: dp3_sat r1.y, r4.xyzx, r0.xyzx
  88: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  89: add r0.y, r0.x, r0.x
  90: mul r0.y, r0.x, r0.y
  91: mad r0.y, r0.y, r2.x, l(-0.500000)
  92: add r0.z, -r1.x, l(1.000000)
  93: mul r1.z, r0.z, r0.z
  94: mul r1.z, r1.z, r1.z
  95: mul r0.z, r0.z, r1.z
  96: mad r0.z, r0.y, r0.z, l(1.000000)
  97: add r1.z, -|r0.w|, l(1.000000)
  98: mul r3.w, r1.z, r1.z
  99: mul r3.w, r3.w, r3.w
 100: mul r1.z, r1.z, r3.w
 101: mad r0.y, r0.y, r1.z, l(1.000000)
 102: mul r0.y, r0.y, r0.z
 103: mul r0.z, r2.x, r2.x
 104: max r0.z, r0.z, l(0.002000)
 105: add r1.z, -r0.z, l(1.000000)
 106: mad r2.x, |r0.w|, r1.z, r0.z
 107: mad r1.z, r1.x, r1.z, r0.z
 108: mul r0.w, |r0.w|, r1.z
 109: mad r0.w, r1.x, r2.x, r0.w
 110: add r0.w, r0.w, l(0.000010)
 111: div r0.w, l(0.500000), r0.w
 112: mul r0.z, r0.z, r0.z
 113: mad r1.z, r1.y, r0.z, -r1.y
 114: mad r1.y, r1.z, r1.y, l(1.000000)
 115: mul r0.z, r0.z, l(0.318310)
 116: mad r1.y, r1.y, r1.y, l(0.000000)
 117: div r0.z, r0.z, r1.y
 118: mul r0.z, r0.z, r0.w
 119: mul r0.z, r0.z, l(3.141593)
 120: max r0.z, r0.z, l(0.000100)
 121: sqrt r0.z, r0.z
 122: mul r0.yz, r1.xxxx, r0.yyzy
 123: dp3 r0.w, r5.xyzx, r5.xyzx
 124: ne r0.w, r0.w, l(0.000000)
 125: and r0.w, r0.w, l(0x3f800000)
 126: mul r0.z, r0.w, r0.z
 127: mul r1.xyz, r0.yyyy, r2.yzwy
 128: mul r0.yzw, r2.yyzw, r0.zzzz
 129: add r0.x, -r0.x, l(1.000000)
 130: mul r2.x, r0.x, r0.x
 131: mul r2.x, r2.x, r2.x
 132: mul r0.x, r0.x, r2.x
 133: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 134: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 135: mul r0.xyz, r0.yzwy, r2.xyzx
 136: mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
 137: mul o0.xyz, r1.wwww, r0.xyzx
 138: mov o0.w, l(1.000000)
 139: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE INSTANCING_ON SHADOWS_SCREEN 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 127 math, 6 temp registers, 9 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_TerrainNormalmapTexture" to slot 5 sampler slot 8
Set 2D Texture "_ShadowMapTexture" to slot 6 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 7 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 0

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 256
  Float _Metallic1 at 260
  Float _Metallic2 at 264
  Float _Metallic3 at 268
  Float _Smoothness0 at 272
  Float _Smoothness1 at 276
  Float _Smoothness2 at 280
  Float _Smoothness3 at 284
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[18], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: mul r2.xy, r2.xyxx, cb0[9].xyxx
   7: sample r2.xyzw, r2.xyxx, t0.xyzw, s3
   8: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   9: add r3.x, r1.w, l(0.001000)
  10: div r2.xyzw, r2.xyzw, r3.xxxx
  11: mad r3.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  12: mad r3.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  13: mad r4.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  14: mad r4.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  15: sample r5.xyzw, r3.xyxx, t1.xyzw, s4
  16: mul r5.xyzw, r2.xxxx, r5.xyzw
  17: mul r5.w, r5.w, cb0[17].x
  18: sample r3.xyzw, r3.zwzz, t2.xyzw, s5
  19: mul r3.xyzw, r2.yyyy, r3.xyzw
  20: mul r3.w, r3.w, cb0[17].y
  21: add r3.xyzw, r3.xyzw, r5.xyzw
  22: sample r5.xyzw, r4.xyxx, t3.xyzw, s6
  23: mul r5.xyzw, r2.zzzz, r5.xyzw
  24: mul r5.w, r5.w, cb0[17].z
  25: add r3.xyzw, r3.xyzw, r5.xyzw
  26: sample r4.xyzw, r4.zwzz, t4.xyzw, s7
  27: mul r4.xyzw, r2.wwww, r4.xyzw
  28: mul r4.w, r4.w, cb0[17].w
  29: add r3.xyzw, r3.xyzw, r4.xyzw
  30: sample r4.xyzw, v5.zwzz, t5.xyzw, s8
  31: mad r4.xyz, r4.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  32: dp3 r4.w, r4.xyzx, r4.xyzx
  33: rsq r4.w, r4.w
  34: mul r4.xyz, r4.wwww, r4.xyzx
  35: dp4 r2.x, r2.xyzw, cb0[16].xyzw
  36: mul r2.yz, v4.yyyy, cb0[5].xxyx
  37: mad r2.yz, cb0[4].xxyx, v4.xxxx, r2.yyzy
  38: mad r2.yz, cb0[6].xxyx, v4.zzzz, r2.yyzy
  39: add r2.yz, r2.yyzy, cb0[7].xxyx
  40: mov r5.x, cb4[9].z
  41: mov r5.y, cb4[10].z
  42: mov r5.z, cb4[11].z
  43: dp3 r2.w, r0.xyzx, r5.xyzx
  44: add r5.xyz, v4.xyzx, -cb3[25].xyzx
  45: dp3 r4.w, r5.xyzx, r5.xyzx
  46: sqrt r4.w, r4.w
  47: add r4.w, -r2.w, r4.w
  48: mad r2.w, cb3[25].w, r4.w, r2.w
  49: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  50: eq r4.w, cb5[0].x, l(1.000000)
  51: if_nz r4.w
  52:   eq r4.w, cb5[0].y, l(1.000000)
  53:   mul r5.xyz, v4.yyyy, cb5[2].xyzx
  54:   mad r5.xyz, cb5[1].xyzx, v4.xxxx, r5.xyzx
  55:   mad r5.xyz, cb5[3].xyzx, v4.zzzz, r5.xyzx
  56:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  57:   movc r5.xyz, r4.wwww, r5.xyzx, v4.xyzx
  58:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  59:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  60:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  61:   mad r5.y, cb5[0].z, l(0.500000), l(0.750000)
  62:   max r5.x, r4.w, r5.y
  63:   sample r5.xyzw, r5.xzwx, t8.xyzw, s0
  64: else 
  65:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  66: endif 
  67: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
  68: div r5.xy, v7.xyxx, v7.wwww
  69: sample r5.xyzw, r5.xyxx, t6.xyzw, s1
  70: add r4.w, r4.w, -r5.x
  71: mad r2.w, r2.w, r4.w, r5.x
  72: sample r5.xyzw, r2.yzyy, t7.xyzw, s2
  73: mul r2.y, r2.w, r5.w
  74: dp3 r5.x, v1.xyzx, r4.xyzx
  75: dp3 r5.y, v2.xyzx, r4.xyzx
  76: dp3 r5.z, v3.xyzx, r4.xyzx
  77: dp3 r2.z, r5.xyzx, r5.xyzx
  78: rsq r2.z, r2.z
  79: mul r4.xyz, r2.zzzz, r5.xyzx
  80: mul r2.yzw, r2.yyyy, cb0[2].xxyz
  81: add r5.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  82: mad r5.xyz, r2.xxxx, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  83: mad r2.x, -r2.x, l(0.779084), l(0.779084)
  84: mul r3.xyz, r2.xxxx, r3.xyzx
  85: add r2.x, -r3.w, l(1.000000)
  86: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  87: dp3 r0.w, r0.xyzx, r0.xyzx
  88: max r0.w, r0.w, l(0.001000)
  89: rsq r0.w, r0.w
  90: mul r0.xyz, r0.wwww, r0.xyzx
  91: dp3 r0.w, r4.xyzx, r1.xyzx
  92: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
  93: dp3_sat r1.y, r4.xyzx, r0.xyzx
  94: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  95: add r0.y, r0.x, r0.x
  96: mul r0.y, r0.x, r0.y
  97: mad r0.y, r0.y, r2.x, l(-0.500000)
  98: add r0.z, -r1.x, l(1.000000)
  99: mul r1.z, r0.z, r0.z
 100: mul r1.z, r1.z, r1.z
 101: mul r0.z, r0.z, r1.z
 102: mad r0.z, r0.y, r0.z, l(1.000000)
 103: add r1.z, -|r0.w|, l(1.000000)
 104: mul r3.w, r1.z, r1.z
 105: mul r3.w, r3.w, r3.w
 106: mul r1.z, r1.z, r3.w
 107: mad r0.y, r0.y, r1.z, l(1.000000)
 108: mul r0.y, r0.y, r0.z
 109: mul r0.z, r2.x, r2.x
 110: max r0.z, r0.z, l(0.002000)
 111: add r1.z, -r0.z, l(1.000000)
 112: mad r2.x, |r0.w|, r1.z, r0.z
 113: mad r1.z, r1.x, r1.z, r0.z
 114: mul r0.w, |r0.w|, r1.z
 115: mad r0.w, r1.x, r2.x, r0.w
 116: add r0.w, r0.w, l(0.000010)
 117: div r0.w, l(0.500000), r0.w
 118: mul r0.z, r0.z, r0.z
 119: mad r1.z, r1.y, r0.z, -r1.y
 120: mad r1.y, r1.z, r1.y, l(1.000000)
 121: mul r0.z, r0.z, l(0.318310)
 122: mad r1.y, r1.y, r1.y, l(0.000000)
 123: div r0.z, r0.z, r1.y
 124: mul r0.z, r0.z, r0.w
 125: mul r0.z, r0.z, l(3.141593)
 126: max r0.z, r0.z, l(0.000100)
 127: sqrt r0.z, r0.z
 128: mul r0.yz, r1.xxxx, r0.yyzy
 129: dp3 r0.w, r5.xyzx, r5.xyzx
 130: ne r0.w, r0.w, l(0.000000)
 131: and r0.w, r0.w, l(0x3f800000)
 132: mul r0.z, r0.w, r0.z
 133: mul r1.xyz, r0.yyyy, r2.yzwy
 134: mul r0.yzw, r2.yyzw, r0.zzzz
 135: add r0.x, -r0.x, l(1.000000)
 136: mul r2.x, r0.x, r0.x
 137: mul r2.x, r2.x, r2.x
 138: mul r0.x, r0.x, r2.x
 139: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 140: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 141: mul r0.xyz, r0.yzwy, r2.xyzx
 142: mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
 143: mul o0.xyz, r1.wwww, r0.xyzx
 144: mov o0.w, l(1.000000)
 145: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT SHADOWS_CUBE 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 142 math, 8 temp registers, 8 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_TerrainNormalmapTexture" to slot 5 sampler slot 8
Set 2D Texture "_LightTexture0" to slot 6 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 8 sampler slot 1

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 256
  Float _Metallic1 at 260
  Float _Metallic2 at 264
  Float _Metallic3 at 268
  Float _Smoothness0 at 272
  Float _Smoothness1 at 276
  Float _Smoothness2 at 280
  Float _Smoothness3 at 284
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[18], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_resource_texturecube (float,float,float,float) t8
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[9].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s3
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s4
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[17].x
  22: sample r5.xyzw, r5.zwzz, t2.xyzw, s5
  23: mul r5.xyzw, r4.yyyy, r5.xyzw
  24: mul r5.w, r5.w, cb0[17].y
  25: add r5.xyzw, r5.xyzw, r7.xyzw
  26: sample r7.xyzw, r6.xyxx, t3.xyzw, s6
  27: mul r7.xyzw, r4.zzzz, r7.xyzw
  28: mul r7.w, r7.w, cb0[17].z
  29: add r5.xyzw, r5.xyzw, r7.xyzw
  30: sample r6.xyzw, r6.zwzz, t4.xyzw, s7
  31: mul r6.xyzw, r4.wwww, r6.xyzw
  32: mul r6.w, r6.w, cb0[17].w
  33: add r5.xyzw, r5.xyzw, r6.xyzw
  34: sample r6.xyzw, v5.zwzz, t5.xyzw, s8
  35: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  36: dp3 r2.w, r6.xyzx, r6.xyzx
  37: rsq r2.w, r2.w
  38: mul r6.xyz, r2.wwww, r6.xyzx
  39: dp4 r2.w, r4.xyzw, cb0[16].xyzw
  40: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  41: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  42: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  43: add r4.xyz, r4.xyzx, cb0[7].xyzx
  44: mov r7.x, cb4[9].z
  45: mov r7.y, cb4[10].z
  46: mov r7.z, cb4[11].z
  47: dp3 r2.x, r2.xyzx, r7.xyzx
  48: add r7.xyz, v4.xyzx, -cb3[25].xyzx
  49: dp3 r2.y, r7.xyzx, r7.xyzx
  50: sqrt r2.y, r2.y
  51: add r2.y, -r2.x, r2.y
  52: mad r2.x, cb3[25].w, r2.y, r2.x
  53: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  54: eq r2.y, cb5[0].x, l(1.000000)
  55: if_nz r2.y
  56:   eq r2.y, cb5[0].y, l(1.000000)
  57:   mul r7.xyz, v4.yyyy, cb5[2].xyzx
  58:   mad r7.xyz, cb5[1].xyzx, v4.xxxx, r7.xyzx
  59:   mad r7.xyz, cb5[3].xyzx, v4.zzzz, r7.xyzx
  60:   add r7.xyz, r7.xyzx, cb5[4].xyzx
  61:   movc r7.xyz, r2.yyyy, r7.xyzx, v4.xyzx
  62:   add r7.xyz, r7.xyzx, -cb5[6].xyzx
  63:   mul r7.yzw, r7.xxyz, cb5[5].xxyz
  64:   mad r2.y, r7.y, l(0.250000), l(0.750000)
  65:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  66:   max r7.x, r2.z, r2.y
  67:   sample r7.xyzw, r7.xzwx, t7.xyzw, s0
  68: else 
  69:   mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  70: endif 
  71: dp4_sat r2.y, r7.xyzw, cb2[46].xyzw
  72: add r7.xyz, v4.xyzx, -cb2[1].xyzx
  73: max r2.z, |r7.y|, |r7.x|
  74: max r2.z, |r7.z|, r2.z
  75: add r2.z, r2.z, -cb2[2].z
  76: max r2.z, r2.z, l(0.000010)
  77: mul r2.z, r2.z, cb2[2].w
  78: div r2.z, cb2[2].y, r2.z
  79: add r2.z, r2.z, -cb2[2].x
  80: add r2.z, -r2.z, l(1.000000)
  81: sample_c_lz r2.z, r7.xyzx, t8.xxxx, s1, r2.z
  82: add r3.w, -cb3[24].x, l(1.000000)
  83: mad r2.z, r2.z, r3.w, cb3[24].x
  84: add r2.y, -r2.z, r2.y
  85: mad r2.x, r2.x, r2.y, r2.z
  86: dp3 r2.y, r4.xyzx, r4.xyzx
  87: sample r4.xyzw, r2.yyyy, t6.xyzw, s2
  88: mul r2.x, r2.x, r4.x
  89: dp3 r4.x, v1.xyzx, r6.xyzx
  90: dp3 r4.y, v2.xyzx, r6.xyzx
  91: dp3 r4.z, v3.xyzx, r6.xyzx
  92: dp3 r2.y, r4.xyzx, r4.xyzx
  93: rsq r2.y, r2.y
  94: mul r4.xyz, r2.yyyy, r4.xyzx
  95: mul r2.xyz, r2.xxxx, cb0[2].xyzx
  96: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  97: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  98: mad r2.w, -r2.w, l(0.779084), l(0.779084)
  99: mul r5.xyz, r2.wwww, r5.xyzx
 100: add r2.w, -r5.w, l(1.000000)
 101: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 102: dp3 r0.w, r0.xyzx, r0.xyzx
 103: max r0.w, r0.w, l(0.001000)
 104: rsq r0.w, r0.w
 105: mul r0.xyz, r0.wwww, r0.xyzx
 106: dp3 r0.w, r4.xyzx, r3.xyzx
 107: dp3_sat r3.x, r4.xyzx, r1.xyzx
 108: dp3_sat r3.y, r4.xyzx, r0.xyzx
 109: dp3_sat r0.x, r1.xyzx, r0.xyzx
 110: add r0.y, r0.x, r0.x
 111: mul r0.y, r0.x, r0.y
 112: mad r0.y, r0.y, r2.w, l(-0.500000)
 113: add r0.z, -r3.x, l(1.000000)
 114: mul r1.x, r0.z, r0.z
 115: mul r1.x, r1.x, r1.x
 116: mul r0.z, r0.z, r1.x
 117: mad r0.z, r0.y, r0.z, l(1.000000)
 118: add r1.x, -|r0.w|, l(1.000000)
 119: mul r1.y, r1.x, r1.x
 120: mul r1.y, r1.y, r1.y
 121: mul r1.x, r1.x, r1.y
 122: mad r0.y, r0.y, r1.x, l(1.000000)
 123: mul r0.y, r0.y, r0.z
 124: mul r0.z, r2.w, r2.w
 125: max r0.z, r0.z, l(0.002000)
 126: add r1.x, -r0.z, l(1.000000)
 127: mad r1.y, |r0.w|, r1.x, r0.z
 128: mad r1.x, r3.x, r1.x, r0.z
 129: mul r0.w, |r0.w|, r1.x
 130: mad r0.w, r3.x, r1.y, r0.w
 131: add r0.w, r0.w, l(0.000010)
 132: div r0.w, l(0.500000), r0.w
 133: mul r0.z, r0.z, r0.z
 134: mad r1.x, r3.y, r0.z, -r3.y
 135: mad r1.x, r1.x, r3.y, l(1.000000)
 136: mul r0.z, r0.z, l(0.318310)
 137: mad r1.x, r1.x, r1.x, l(0.000000)
 138: div r0.z, r0.z, r1.x
 139: mul r0.z, r0.z, r0.w
 140: mul r0.z, r0.z, l(3.141593)
 141: max r0.z, r0.z, l(0.000100)
 142: sqrt r0.z, r0.z
 143: mul r0.yz, r3.xxxx, r0.yyzy
 144: dp3 r0.w, r6.xyzx, r6.xyzx
 145: ne r0.w, r0.w, l(0.000000)
 146: and r0.w, r0.w, l(0x3f800000)
 147: mul r0.z, r0.w, r0.z
 148: mul r1.xyz, r0.yyyy, r2.xyzx
 149: mul r0.yzw, r2.xxyz, r0.zzzz
 150: add r0.x, -r0.x, l(1.000000)
 151: mul r2.x, r0.x, r0.x
 152: mul r2.x, r2.x, r2.x
 153: mul r0.x, r0.x, r2.x
 154: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 155: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 156: mul r0.xyz, r0.yzwy, r2.xyzx
 157: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 158: mul o0.xyz, r1.wwww, r0.xyzx
 159: mov o0.w, l(1.000000)
 160: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 148 math, 10 temp registers, 8 textures, 4 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_TerrainNormalmapTexture" to slot 5 sampler slot 8
Set 2D Texture "_LightTexture0" to slot 6 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 8 sampler slot 1

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 256
  Float _Metallic1 at 260
  Float _Metallic2 at 264
  Float _Metallic3 at 268
  Float _Smoothness0 at 272
  Float _Smoothness1 at 276
  Float _Smoothness2 at 280
  Float _Smoothness3 at 284
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[18], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_resource_texturecube (float,float,float,float) t8
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 10
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[9].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s3
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s4
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[17].x
  22: sample r5.xyzw, r5.zwzz, t2.xyzw, s5
  23: mul r5.xyzw, r4.yyyy, r5.xyzw
  24: mul r5.w, r5.w, cb0[17].y
  25: add r5.xyzw, r5.xyzw, r7.xyzw
  26: sample r7.xyzw, r6.xyxx, t3.xyzw, s6
  27: mul r7.xyzw, r4.zzzz, r7.xyzw
  28: mul r7.w, r7.w, cb0[17].z
  29: add r5.xyzw, r5.xyzw, r7.xyzw
  30: sample r6.xyzw, r6.zwzz, t4.xyzw, s7
  31: mul r6.xyzw, r4.wwww, r6.xyzw
  32: mul r6.w, r6.w, cb0[17].w
  33: add r5.xyzw, r5.xyzw, r6.xyzw
  34: sample r6.xyzw, v5.zwzz, t5.xyzw, s8
  35: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  36: dp3 r2.w, r6.xyzx, r6.xyzx
  37: rsq r2.w, r2.w
  38: mul r6.xyz, r2.wwww, r6.xyzx
  39: dp4 r2.w, r4.xyzw, cb0[16].xyzw
  40: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  41: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  42: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  43: add r4.xyz, r4.xyzx, cb0[7].xyzx
  44: mov r7.x, cb4[9].z
  45: mov r7.y, cb4[10].z
  46: mov r7.z, cb4[11].z
  47: dp3 r2.x, r2.xyzx, r7.xyzx
  48: add r7.xyz, v4.xyzx, -cb3[25].xyzx
  49: dp3 r2.y, r7.xyzx, r7.xyzx
  50: sqrt r2.y, r2.y
  51: add r2.y, -r2.x, r2.y
  52: mad r2.x, cb3[25].w, r2.y, r2.x
  53: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  54: eq r2.y, cb5[0].x, l(1.000000)
  55: if_nz r2.y
  56:   eq r2.y, cb5[0].y, l(1.000000)
  57:   mul r7.xyz, v4.yyyy, cb5[2].xyzx
  58:   mad r7.xyz, cb5[1].xyzx, v4.xxxx, r7.xyzx
  59:   mad r7.xyz, cb5[3].xyzx, v4.zzzz, r7.xyzx
  60:   add r7.xyz, r7.xyzx, cb5[4].xyzx
  61:   movc r7.xyz, r2.yyyy, r7.xyzx, v4.xyzx
  62:   add r7.xyz, r7.xyzx, -cb5[6].xyzx
  63:   mul r7.yzw, r7.xxyz, cb5[5].xxyz
  64:   mad r2.y, r7.y, l(0.250000), l(0.750000)
  65:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  66:   max r7.x, r2.z, r2.y
  67:   sample r7.xyzw, r7.xzwx, t7.xyzw, s0
  68: else 
  69:   mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  70: endif 
  71: dp4_sat r2.y, r7.xyzw, cb2[46].xyzw
  72: lt r2.z, r2.x, l(0.990000)
  73: if_nz r2.z
  74:   add r7.xyz, v4.xyzx, -cb2[1].xyzx
  75:   max r2.z, |r7.y|, |r7.x|
  76:   max r2.z, |r7.z|, r2.z
  77:   add r2.z, r2.z, -cb2[2].z
  78:   max r2.z, r2.z, l(0.000010)
  79:   mul r2.z, r2.z, cb2[2].w
  80:   div r2.z, cb2[2].y, r2.z
  81:   add r2.z, r2.z, -cb2[2].x
  82:   add r2.z, -r2.z, l(1.000000)
  83:   add r8.xyz, r7.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  84:   sample_c_lz r8.x, r8.xyzx, t8.xxxx, s1, r2.z
  85:   add r9.xyz, r7.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  86:   sample_c_lz r8.y, r9.xyzx, t8.xxxx, s1, r2.z
  87:   add r9.xyz, r7.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  88:   sample_c_lz r8.z, r9.xyzx, t8.xxxx, s1, r2.z
  89:   add r7.xyz, r7.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  90:   sample_c_lz r8.w, r7.xyzx, t8.xxxx, s1, r2.z
  91:   dp4 r2.z, r8.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  92:   add r3.w, -cb3[24].x, l(1.000000)
  93:   mad r2.z, r2.z, r3.w, cb3[24].x
  94: else 
  95:   mov r2.z, l(1.000000)
  96: endif 
  97: add r2.y, -r2.z, r2.y
  98: mad r2.x, r2.x, r2.y, r2.z
  99: dp3 r2.y, r4.xyzx, r4.xyzx
 100: sample r4.xyzw, r2.yyyy, t6.xyzw, s2
 101: mul r2.x, r2.x, r4.x
 102: dp3 r4.x, v1.xyzx, r6.xyzx
 103: dp3 r4.y, v2.xyzx, r6.xyzx
 104: dp3 r4.z, v3.xyzx, r6.xyzx
 105: dp3 r2.y, r4.xyzx, r4.xyzx
 106: rsq r2.y, r2.y
 107: mul r4.xyz, r2.yyyy, r4.xyzx
 108: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 109: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 110: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 111: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 112: mul r5.xyz, r2.wwww, r5.xyzx
 113: add r2.w, -r5.w, l(1.000000)
 114: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 115: dp3 r0.w, r0.xyzx, r0.xyzx
 116: max r0.w, r0.w, l(0.001000)
 117: rsq r0.w, r0.w
 118: mul r0.xyz, r0.wwww, r0.xyzx
 119: dp3 r0.w, r4.xyzx, r3.xyzx
 120: dp3_sat r3.x, r4.xyzx, r1.xyzx
 121: dp3_sat r3.y, r4.xyzx, r0.xyzx
 122: dp3_sat r0.x, r1.xyzx, r0.xyzx
 123: mul r0.y, r0.x, r0.x
 124: dp2 r0.y, r0.yyyy, r2.wwww
 125: add r0.y, r0.y, l(-0.500000)
 126: add r0.z, -r3.x, l(1.000000)
 127: mul r1.x, r0.z, r0.z
 128: mul r1.x, r1.x, r1.x
 129: mul r0.z, r0.z, r1.x
 130: mad r0.z, r0.y, r0.z, l(1.000000)
 131: add r1.x, -|r0.w|, l(1.000000)
 132: mul r1.y, r1.x, r1.x
 133: mul r1.y, r1.y, r1.y
 134: mul r1.x, r1.x, r1.y
 135: mad r0.y, r0.y, r1.x, l(1.000000)
 136: mul r0.y, r0.y, r0.z
 137: mul r0.z, r2.w, r2.w
 138: max r0.z, r0.z, l(0.002000)
 139: add r1.x, -r0.z, l(1.000000)
 140: mad r1.y, |r0.w|, r1.x, r0.z
 141: mad r1.x, r3.x, r1.x, r0.z
 142: mul r0.w, |r0.w|, r1.x
 143: mad r0.w, r3.x, r1.y, r0.w
 144: add r0.w, r0.w, l(0.000010)
 145: div r0.w, l(0.500000), r0.w
 146: mul r0.z, r0.z, r0.z
 147: mad r1.x, r3.y, r0.z, -r3.y
 148: mad r1.x, r1.x, r3.y, l(1.000000)
 149: mul r0.z, r0.z, l(0.318310)
 150: mad r1.x, r1.x, r1.x, l(0.000000)
 151: div r0.z, r0.z, r1.x
 152: mul r0.z, r0.z, r0.w
 153: mul r0.z, r0.z, l(3.141593)
 154: max r0.z, r0.z, l(0.000100)
 155: sqrt r0.z, r0.z
 156: mul r0.yz, r3.xxxx, r0.yyzy
 157: dp3 r0.w, r6.xyzx, r6.xyzx
 158: ne r0.w, r0.w, l(0.000000)
 159: and r0.w, r0.w, l(0x3f800000)
 160: mul r0.z, r0.w, r0.z
 161: mul r1.xyz, r0.yyyy, r2.xyzx
 162: mul r0.yzw, r2.xxyz, r0.zzzz
 163: add r0.x, -r0.x, l(1.000000)
 164: mul r2.x, r0.x, r0.x
 165: mul r2.x, r2.x, r2.x
 166: mul r0.x, r0.x, r2.x
 167: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 168: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 169: mul r0.xyz, r0.yzwy, r2.xyzx
 170: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 171: mul o0.xyz, r1.wwww, r0.xyzx
 172: mov o0.w, l(1.000000)
 173: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT_COOKIE SHADOWS_CUBE 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 143 math, 8 temp registers, 9 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 4
Set 2D Texture "_Splat0" to slot 1 sampler slot 5
Set 2D Texture "_Splat1" to slot 2 sampler slot 6
Set 2D Texture "_Splat2" to slot 3 sampler slot 7
Set 2D Texture "_Splat3" to slot 4 sampler slot 8
Set 2D Texture "_TerrainNormalmapTexture" to slot 5 sampler slot 9
Set 2D Texture "_LightTextureB0" to slot 6 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 7 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 9 sampler slot 1

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 256
  Float _Metallic1 at 260
  Float _Metallic2 at 264
  Float _Metallic3 at 268
  Float _Smoothness0 at 272
  Float _Smoothness1 at 276
  Float _Smoothness2 at 280
  Float _Smoothness3 at 284
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[18], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_resource_texturecube (float,float,float,float) t9
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[9].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s4
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s5
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[17].x
  22: sample r5.xyzw, r5.zwzz, t2.xyzw, s6
  23: mul r5.xyzw, r4.yyyy, r5.xyzw
  24: mul r5.w, r5.w, cb0[17].y
  25: add r5.xyzw, r5.xyzw, r7.xyzw
  26: sample r7.xyzw, r6.xyxx, t3.xyzw, s7
  27: mul r7.xyzw, r4.zzzz, r7.xyzw
  28: mul r7.w, r7.w, cb0[17].z
  29: add r5.xyzw, r5.xyzw, r7.xyzw
  30: sample r6.xyzw, r6.zwzz, t4.xyzw, s8
  31: mul r6.xyzw, r4.wwww, r6.xyzw
  32: mul r6.w, r6.w, cb0[17].w
  33: add r5.xyzw, r5.xyzw, r6.xyzw
  34: sample r6.xyzw, v5.zwzz, t5.xyzw, s9
  35: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  36: dp3 r2.w, r6.xyzx, r6.xyzx
  37: rsq r2.w, r2.w
  38: mul r6.xyz, r2.wwww, r6.xyzx
  39: dp4 r2.w, r4.xyzw, cb0[16].xyzw
  40: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  41: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  42: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  43: add r4.xyz, r4.xyzx, cb0[7].xyzx
  44: mov r7.x, cb4[9].z
  45: mov r7.y, cb4[10].z
  46: mov r7.z, cb4[11].z
  47: dp3 r2.x, r2.xyzx, r7.xyzx
  48: add r7.xyz, v4.xyzx, -cb3[25].xyzx
  49: dp3 r2.y, r7.xyzx, r7.xyzx
  50: sqrt r2.y, r2.y
  51: add r2.y, -r2.x, r2.y
  52: mad r2.x, cb3[25].w, r2.y, r2.x
  53: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  54: eq r2.y, cb5[0].x, l(1.000000)
  55: if_nz r2.y
  56:   eq r2.y, cb5[0].y, l(1.000000)
  57:   mul r7.xyz, v4.yyyy, cb5[2].xyzx
  58:   mad r7.xyz, cb5[1].xyzx, v4.xxxx, r7.xyzx
  59:   mad r7.xyz, cb5[3].xyzx, v4.zzzz, r7.xyzx
  60:   add r7.xyz, r7.xyzx, cb5[4].xyzx
  61:   movc r7.xyz, r2.yyyy, r7.xyzx, v4.xyzx
  62:   add r7.xyz, r7.xyzx, -cb5[6].xyzx
  63:   mul r7.yzw, r7.xxyz, cb5[5].xxyz
  64:   mad r2.y, r7.y, l(0.250000), l(0.750000)
  65:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  66:   max r7.x, r2.z, r2.y
  67:   sample r7.xyzw, r7.xzwx, t8.xyzw, s0
  68: else 
  69:   mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  70: endif 
  71: dp4_sat r2.y, r7.xyzw, cb2[46].xyzw
  72: add r7.xyz, v4.xyzx, -cb2[1].xyzx
  73: max r2.z, |r7.y|, |r7.x|
  74: max r2.z, |r7.z|, r2.z
  75: add r2.z, r2.z, -cb2[2].z
  76: max r2.z, r2.z, l(0.000010)
  77: mul r2.z, r2.z, cb2[2].w
  78: div r2.z, cb2[2].y, r2.z
  79: add r2.z, r2.z, -cb2[2].x
  80: add r2.z, -r2.z, l(1.000000)
  81: sample_c_lz r2.z, r7.xyzx, t9.xxxx, s1, r2.z
  82: add r3.w, -cb3[24].x, l(1.000000)
  83: mad r2.z, r2.z, r3.w, cb3[24].x
  84: add r2.y, -r2.z, r2.y
  85: mad r2.x, r2.x, r2.y, r2.z
  86: dp3 r2.y, r4.xyzx, r4.xyzx
  87: sample r7.xyzw, r2.yyyy, t6.xyzw, s3
  88: sample r4.xyzw, r4.xyzx, t7.xyzw, s2
  89: mul r2.y, r4.w, r7.x
  90: mul r2.x, r2.x, r2.y
  91: dp3 r4.x, v1.xyzx, r6.xyzx
  92: dp3 r4.y, v2.xyzx, r6.xyzx
  93: dp3 r4.z, v3.xyzx, r6.xyzx
  94: dp3 r2.y, r4.xyzx, r4.xyzx
  95: rsq r2.y, r2.y
  96: mul r4.xyz, r2.yyyy, r4.xyzx
  97: mul r2.xyz, r2.xxxx, cb0[2].xyzx
  98: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  99: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 100: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 101: mul r5.xyz, r2.wwww, r5.xyzx
 102: add r2.w, -r5.w, l(1.000000)
 103: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 104: dp3 r0.w, r0.xyzx, r0.xyzx
 105: max r0.w, r0.w, l(0.001000)
 106: rsq r0.w, r0.w
 107: mul r0.xyz, r0.wwww, r0.xyzx
 108: dp3 r0.w, r4.xyzx, r3.xyzx
 109: dp3_sat r3.x, r4.xyzx, r1.xyzx
 110: dp3_sat r3.y, r4.xyzx, r0.xyzx
 111: dp3_sat r0.x, r1.xyzx, r0.xyzx
 112: add r0.y, r0.x, r0.x
 113: mul r0.y, r0.x, r0.y
 114: mad r0.y, r0.y, r2.w, l(-0.500000)
 115: add r0.z, -r3.x, l(1.000000)
 116: mul r1.x, r0.z, r0.z
 117: mul r1.x, r1.x, r1.x
 118: mul r0.z, r0.z, r1.x
 119: mad r0.z, r0.y, r0.z, l(1.000000)
 120: add r1.x, -|r0.w|, l(1.000000)
 121: mul r1.y, r1.x, r1.x
 122: mul r1.y, r1.y, r1.y
 123: mul r1.x, r1.x, r1.y
 124: mad r0.y, r0.y, r1.x, l(1.000000)
 125: mul r0.y, r0.y, r0.z
 126: mul r0.z, r2.w, r2.w
 127: max r0.z, r0.z, l(0.002000)
 128: add r1.x, -r0.z, l(1.000000)
 129: mad r1.y, |r0.w|, r1.x, r0.z
 130: mad r1.x, r3.x, r1.x, r0.z
 131: mul r0.w, |r0.w|, r1.x
 132: mad r0.w, r3.x, r1.y, r0.w
 133: add r0.w, r0.w, l(0.000010)
 134: div r0.w, l(0.500000), r0.w
 135: mul r0.z, r0.z, r0.z
 136: mad r1.x, r3.y, r0.z, -r3.y
 137: mad r1.x, r1.x, r3.y, l(1.000000)
 138: mul r0.z, r0.z, l(0.318310)
 139: mad r1.x, r1.x, r1.x, l(0.000000)
 140: div r0.z, r0.z, r1.x
 141: mul r0.z, r0.z, r0.w
 142: mul r0.z, r0.z, l(3.141593)
 143: max r0.z, r0.z, l(0.000100)
 144: sqrt r0.z, r0.z
 145: mul r0.yz, r3.xxxx, r0.yyzy
 146: dp3 r0.w, r6.xyzx, r6.xyzx
 147: ne r0.w, r0.w, l(0.000000)
 148: and r0.w, r0.w, l(0x3f800000)
 149: mul r0.z, r0.w, r0.z
 150: mul r1.xyz, r0.yyyy, r2.xyzx
 151: mul r0.yzw, r2.xxyz, r0.zzzz
 152: add r0.x, -r0.x, l(1.000000)
 153: mul r2.x, r0.x, r0.x
 154: mul r2.x, r2.x, r2.x
 155: mul r0.x, r0.x, r2.x
 156: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 157: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 158: mul r0.xyz, r0.yzwy, r2.xyzx
 159: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 160: mul o0.xyz, r1.wwww, r0.xyzx
 161: mov o0.w, l(1.000000)
 162: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 149 math, 10 temp registers, 9 textures, 4 branches
Set 2D Texture "_Control" to slot 0 sampler slot 4
Set 2D Texture "_Splat0" to slot 1 sampler slot 5
Set 2D Texture "_Splat1" to slot 2 sampler slot 6
Set 2D Texture "_Splat2" to slot 3 sampler slot 7
Set 2D Texture "_Splat3" to slot 4 sampler slot 8
Set 2D Texture "_TerrainNormalmapTexture" to slot 5 sampler slot 9
Set 2D Texture "_LightTextureB0" to slot 6 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 7 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 9 sampler slot 1

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 256
  Float _Metallic1 at 260
  Float _Metallic2 at 264
  Float _Metallic3 at 268
  Float _Smoothness0 at 272
  Float _Smoothness1 at 276
  Float _Smoothness2 at 280
  Float _Smoothness3 at 284
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[18], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_resource_texturecube (float,float,float,float) t9
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 10
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[9].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s4
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s5
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[17].x
  22: sample r5.xyzw, r5.zwzz, t2.xyzw, s6
  23: mul r5.xyzw, r4.yyyy, r5.xyzw
  24: mul r5.w, r5.w, cb0[17].y
  25: add r5.xyzw, r5.xyzw, r7.xyzw
  26: sample r7.xyzw, r6.xyxx, t3.xyzw, s7
  27: mul r7.xyzw, r4.zzzz, r7.xyzw
  28: mul r7.w, r7.w, cb0[17].z
  29: add r5.xyzw, r5.xyzw, r7.xyzw
  30: sample r6.xyzw, r6.zwzz, t4.xyzw, s8
  31: mul r6.xyzw, r4.wwww, r6.xyzw
  32: mul r6.w, r6.w, cb0[17].w
  33: add r5.xyzw, r5.xyzw, r6.xyzw
  34: sample r6.xyzw, v5.zwzz, t5.xyzw, s9
  35: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  36: dp3 r2.w, r6.xyzx, r6.xyzx
  37: rsq r2.w, r2.w
  38: mul r6.xyz, r2.wwww, r6.xyzx
  39: dp4 r2.w, r4.xyzw, cb0[16].xyzw
  40: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  41: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  42: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  43: add r4.xyz, r4.xyzx, cb0[7].xyzx
  44: mov r7.x, cb4[9].z
  45: mov r7.y, cb4[10].z
  46: mov r7.z, cb4[11].z
  47: dp3 r2.x, r2.xyzx, r7.xyzx
  48: add r7.xyz, v4.xyzx, -cb3[25].xyzx
  49: dp3 r2.y, r7.xyzx, r7.xyzx
  50: sqrt r2.y, r2.y
  51: add r2.y, -r2.x, r2.y
  52: mad r2.x, cb3[25].w, r2.y, r2.x
  53: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  54: eq r2.y, cb5[0].x, l(1.000000)
  55: if_nz r2.y
  56:   eq r2.y, cb5[0].y, l(1.000000)
  57:   mul r7.xyz, v4.yyyy, cb5[2].xyzx
  58:   mad r7.xyz, cb5[1].xyzx, v4.xxxx, r7.xyzx
  59:   mad r7.xyz, cb5[3].xyzx, v4.zzzz, r7.xyzx
  60:   add r7.xyz, r7.xyzx, cb5[4].xyzx
  61:   movc r7.xyz, r2.yyyy, r7.xyzx, v4.xyzx
  62:   add r7.xyz, r7.xyzx, -cb5[6].xyzx
  63:   mul r7.yzw, r7.xxyz, cb5[5].xxyz
  64:   mad r2.y, r7.y, l(0.250000), l(0.750000)
  65:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  66:   max r7.x, r2.z, r2.y
  67:   sample r7.xyzw, r7.xzwx, t8.xyzw, s0
  68: else 
  69:   mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  70: endif 
  71: dp4_sat r2.y, r7.xyzw, cb2[46].xyzw
  72: lt r2.z, r2.x, l(0.990000)
  73: if_nz r2.z
  74:   add r7.xyz, v4.xyzx, -cb2[1].xyzx
  75:   max r2.z, |r7.y|, |r7.x|
  76:   max r2.z, |r7.z|, r2.z
  77:   add r2.z, r2.z, -cb2[2].z
  78:   max r2.z, r2.z, l(0.000010)
  79:   mul r2.z, r2.z, cb2[2].w
  80:   div r2.z, cb2[2].y, r2.z
  81:   add r2.z, r2.z, -cb2[2].x
  82:   add r2.z, -r2.z, l(1.000000)
  83:   add r8.xyz, r7.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  84:   sample_c_lz r8.x, r8.xyzx, t9.xxxx, s1, r2.z
  85:   add r9.xyz, r7.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  86:   sample_c_lz r8.y, r9.xyzx, t9.xxxx, s1, r2.z
  87:   add r9.xyz, r7.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  88:   sample_c_lz r8.z, r9.xyzx, t9.xxxx, s1, r2.z
  89:   add r7.xyz, r7.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  90:   sample_c_lz r8.w, r7.xyzx, t9.xxxx, s1, r2.z
  91:   dp4 r2.z, r8.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  92:   add r3.w, -cb3[24].x, l(1.000000)
  93:   mad r2.z, r2.z, r3.w, cb3[24].x
  94: else 
  95:   mov r2.z, l(1.000000)
  96: endif 
  97: add r2.y, -r2.z, r2.y
  98: mad r2.x, r2.x, r2.y, r2.z
  99: dp3 r2.y, r4.xyzx, r4.xyzx
 100: sample r7.xyzw, r2.yyyy, t6.xyzw, s3
 101: sample r4.xyzw, r4.xyzx, t7.xyzw, s2
 102: mul r2.y, r4.w, r7.x
 103: mul r2.x, r2.x, r2.y
 104: dp3 r4.x, v1.xyzx, r6.xyzx
 105: dp3 r4.y, v2.xyzx, r6.xyzx
 106: dp3 r4.z, v3.xyzx, r6.xyzx
 107: dp3 r2.y, r4.xyzx, r4.xyzx
 108: rsq r2.y, r2.y
 109: mul r4.xyz, r2.yyyy, r4.xyzx
 110: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 111: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 112: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 113: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 114: mul r5.xyz, r2.wwww, r5.xyzx
 115: add r2.w, -r5.w, l(1.000000)
 116: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 117: dp3 r0.w, r0.xyzx, r0.xyzx
 118: max r0.w, r0.w, l(0.001000)
 119: rsq r0.w, r0.w
 120: mul r0.xyz, r0.wwww, r0.xyzx
 121: dp3 r0.w, r4.xyzx, r3.xyzx
 122: dp3_sat r3.x, r4.xyzx, r1.xyzx
 123: dp3_sat r3.y, r4.xyzx, r0.xyzx
 124: dp3_sat r0.x, r1.xyzx, r0.xyzx
 125: mul r0.y, r0.x, r0.x
 126: dp2 r0.y, r0.yyyy, r2.wwww
 127: add r0.y, r0.y, l(-0.500000)
 128: add r0.z, -r3.x, l(1.000000)
 129: mul r1.x, r0.z, r0.z
 130: mul r1.x, r1.x, r1.x
 131: mul r0.z, r0.z, r1.x
 132: mad r0.z, r0.y, r0.z, l(1.000000)
 133: add r1.x, -|r0.w|, l(1.000000)
 134: mul r1.y, r1.x, r1.x
 135: mul r1.y, r1.y, r1.y
 136: mul r1.x, r1.x, r1.y
 137: mad r0.y, r0.y, r1.x, l(1.000000)
 138: mul r0.y, r0.y, r0.z
 139: mul r0.z, r2.w, r2.w
 140: max r0.z, r0.z, l(0.002000)
 141: add r1.x, -r0.z, l(1.000000)
 142: mad r1.y, |r0.w|, r1.x, r0.z
 143: mad r1.x, r3.x, r1.x, r0.z
 144: mul r0.w, |r0.w|, r1.x
 145: mad r0.w, r3.x, r1.y, r0.w
 146: add r0.w, r0.w, l(0.000010)
 147: div r0.w, l(0.500000), r0.w
 148: mul r0.z, r0.z, r0.z
 149: mad r1.x, r3.y, r0.z, -r3.y
 150: mad r1.x, r1.x, r3.y, l(1.000000)
 151: mul r0.z, r0.z, l(0.318310)
 152: mad r1.x, r1.x, r1.x, l(0.000000)
 153: div r0.z, r0.z, r1.x
 154: mul r0.z, r0.z, r0.w
 155: mul r0.z, r0.z, l(3.141593)
 156: max r0.z, r0.z, l(0.000100)
 157: sqrt r0.z, r0.z
 158: mul r0.yz, r3.xxxx, r0.yyzy
 159: dp3 r0.w, r6.xyzx, r6.xyzx
 160: ne r0.w, r0.w, l(0.000000)
 161: and r0.w, r0.w, l(0x3f800000)
 162: mul r0.z, r0.w, r0.z
 163: mul r1.xyz, r0.yyyy, r2.xyzx
 164: mul r0.yzw, r2.xxyz, r0.zzzz
 165: add r0.x, -r0.x, l(1.000000)
 166: mul r2.x, r0.x, r0.x
 167: mul r2.x, r2.x, r2.x
 168: mul r0.x, r0.x, r2.x
 169: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 170: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 171: mul r0.xyz, r0.yzwy, r2.xyzx
 172: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 173: mul o0.xyz, r1.wwww, r0.xyzx
 174: mov o0.w, l(1.000000)
 175: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT 
Local Keywords: _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 168 math, 9 temp registers, 12 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 2
Set 2D Texture "_Splat0" to slot 1 sampler slot 3
Set 2D Texture "_Splat1" to slot 2 sampler slot 4
Set 2D Texture "_Splat2" to slot 3 sampler slot 5
Set 2D Texture "_Splat3" to slot 4 sampler slot 6
Set 2D Texture "_Normal0" to slot 5 sampler slot 8
Set 2D Texture "_Normal1" to slot 6 sampler slot 9
Set 2D Texture "_Normal2" to slot 7 sampler slot 10
Set 2D Texture "_Normal3" to slot 8 sampler slot 11
Set 2D Texture "_TerrainNormalmapTexture" to slot 9 sampler slot 7
Set 2D Texture "_LightTexture0" to slot 10 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 11 sampler slot 0

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 256
  Float _NormalScale1 at 260
  Float _NormalScale2 at 264
  Float _NormalScale3 at 268
  Float _Metallic0 at 272
  Float _Metallic1 at 276
  Float _Metallic2 at 280
  Float _Metallic3 at 284
  Float _Smoothness0 at 288
  Float _Smoothness1 at 292
  Float _Smoothness2 at 296
  Float _Smoothness3 at 300
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[19], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture3d (float,float,float,float) t11
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 9
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r3.xy, v5.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r3.xy, r3.xyxx, cb0[9].xyxx
  11: sample r3.xyzw, r3.xyxx, t0.xyzw, s2
  12: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r3.xyzw, r3.xyzw, r2.wwww
  15: mad r4.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r4.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r5.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r5.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r6.xyzw, r4.xyxx, t1.xyzw, s3
  20: mul r6.xyzw, r3.xxxx, r6.xyzw
  21: mul r6.w, r6.w, cb0[18].x
  22: sample r7.xyzw, r4.zwzz, t2.xyzw, s4
  23: mul r7.xyzw, r3.yyyy, r7.xyzw
  24: mul r7.w, r7.w, cb0[18].y
  25: add r6.xyzw, r6.xyzw, r7.xyzw
  26: sample r7.xyzw, r5.xyxx, t3.xyzw, s5
  27: mul r7.xyzw, r3.zzzz, r7.xyzw
  28: mul r7.w, r7.w, cb0[18].z
  29: add r6.xyzw, r6.xyzw, r7.xyzw
  30: sample r7.xyzw, r5.zwzz, t4.xyzw, s6
  31: mul r7.xyzw, r3.wwww, r7.xyzw
  32: mul r7.w, r7.w, cb0[18].w
  33: add r6.xyzw, r6.xyzw, r7.xyzw
  34: sample r7.xyzw, r4.xyxx, t5.xyzw, s8
  35: mul r7.x, r7.w, r7.x
  36: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  37: mul r7.xy, r4.xyxx, cb0[16].xxxx
  38: dp2 r2.w, r7.xyxx, r7.xyxx
  39: min r2.w, r2.w, l(1.000000)
  40: add r2.w, -r2.w, l(1.000000)
  41: sqrt r7.z, r2.w
  42: sample r4.xyzw, r4.zwzz, t6.xyzw, s9
  43: mul r4.x, r4.w, r4.x
  44: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  45: mul r4.xy, r4.xyxx, cb0[16].yyyy
  46: dp2 r2.w, r4.xyxx, r4.xyxx
  47: min r2.w, r2.w, l(1.000000)
  48: add r2.w, -r2.w, l(1.000000)
  49: sqrt r4.z, r2.w
  50: mul r4.xyz, r3.yyyy, r4.xyzx
  51: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  52: sample r7.xyzw, r5.xyxx, t7.xyzw, s10
  53: mul r7.x, r7.w, r7.x
  54: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  55: mul r7.xy, r5.xyxx, cb0[16].zzzz
  56: dp2 r2.w, r7.xyxx, r7.xyxx
  57: min r2.w, r2.w, l(1.000000)
  58: add r2.w, -r2.w, l(1.000000)
  59: sqrt r7.z, r2.w
  60: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  61: sample r5.xyzw, r5.zwzz, t8.xyzw, s11
  62: mul r5.x, r5.w, r5.x
  63: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  64: mul r5.xy, r5.xyxx, cb0[16].wwww
  65: dp2 r2.w, r5.xyxx, r5.xyxx
  66: min r2.w, r2.w, l(1.000000)
  67: add r2.w, -r2.w, l(1.000000)
  68: sqrt r5.z, r2.w
  69: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  70: add r2.w, r4.z, l(0.000010)
  71: sample r5.xyzw, v5.zwzz, t9.xyzw, s7
  72: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  73: dp3 r4.z, r5.xyzx, r5.xyzx
  74: rsq r4.z, r4.z
  75: mul r5.xyz, r4.zzzz, r5.xyzx
  76: mul r7.xyz, r5.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  77: mad r7.xyz, r5.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r7.xyzx
  78: dp2 r4.z, r7.xzxx, r7.xzxx
  79: rsq r4.z, r4.z
  80: mul r7.xyz, r4.zzzz, r7.xyzx
  81: mul r8.xyz, r5.zxyz, r7.yzxy
  82: mad r8.xyz, r7.zxyz, r5.yzxy, -r8.xyzx
  83: dp3 r4.z, r8.xyzx, r8.xyzx
  84: rsq r4.z, r4.z
  85: mul r8.xyz, r4.zzzz, r8.xyzx
  86: mul r4.yzw, r4.yyyy, r8.xxyz
  87: mad r4.xyz, r4.xxxx, r7.xyzx, r4.yzwy
  88: mad r4.xyz, r2.wwww, r5.xyzx, r4.xyzx
  89: dp4 r2.w, r3.xyzw, cb0[17].xyzw
  90: mul r3.xyz, v4.yyyy, cb0[5].xyzx
  91: mad r3.xyz, cb0[4].xyzx, v4.xxxx, r3.xyzx
  92: mad r3.xyz, cb0[6].xyzx, v4.zzzz, r3.xyzx
  93: add r3.xyz, r3.xyzx, cb0[7].xyzx
  94: eq r3.w, cb3[0].x, l(1.000000)
  95: if_nz r3.w
  96:   eq r3.w, cb3[0].y, l(1.000000)
  97:   mul r5.xyz, v4.yyyy, cb3[2].xyzx
  98:   mad r5.xyz, cb3[1].xyzx, v4.xxxx, r5.xyzx
  99:   mad r5.xyz, cb3[3].xyzx, v4.zzzz, r5.xyzx
 100:   add r5.xyz, r5.xyzx, cb3[4].xyzx
 101:   movc r5.xyz, r3.wwww, r5.xyzx, v4.xyzx
 102:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
 103:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
 104:   mad r3.w, r5.y, l(0.250000), l(0.750000)
 105:   mad r4.w, cb3[0].z, l(0.500000), l(0.750000)
 106:   max r5.x, r3.w, r4.w
 107:   sample r5.xyzw, r5.xzwx, t11.xyzw, s0
 108: else 
 109:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 110: endif 
 111: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
 112: dp3 r3.x, r3.xyzx, r3.xyzx
 113: sample r5.xyzw, r3.xxxx, t10.xyzw, s1
 114: mul r3.x, r3.w, r5.x
 115: dp3 r5.x, v1.xyzx, r4.xyzx
 116: dp3 r5.y, v2.xyzx, r4.xyzx
 117: dp3 r5.z, v3.xyzx, r4.xyzx
 118: dp3 r3.y, r5.xyzx, r5.xyzx
 119: rsq r3.y, r3.y
 120: mul r3.yzw, r3.yyyy, r5.xxyz
 121: mul r4.xyz, r3.xxxx, cb0[2].xyzx
 122: add r5.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 123: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 124: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 125: mul r6.xyz, r2.wwww, r6.xyzx
 126: add r2.w, -r6.w, l(1.000000)
 127: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
 128: dp3 r0.w, r0.xyzx, r0.xyzx
 129: max r0.w, r0.w, l(0.001000)
 130: rsq r0.w, r0.w
 131: mul r0.xyz, r0.wwww, r0.xyzx
 132: dp3 r0.w, r3.yzwy, r2.xyzx
 133: dp3_sat r2.x, r3.yzwy, r1.xyzx
 134: dp3_sat r2.y, r3.yzwy, r0.xyzx
 135: dp3_sat r0.x, r1.xyzx, r0.xyzx
 136: mul r0.y, r0.x, r0.x
 137: dp2 r0.y, r0.yyyy, r2.wwww
 138: add r0.y, r0.y, l(-0.500000)
 139: add r0.z, -r2.x, l(1.000000)
 140: mul r1.x, r0.z, r0.z
 141: mul r1.x, r1.x, r1.x
 142: mul r0.z, r0.z, r1.x
 143: mad r0.z, r0.y, r0.z, l(1.000000)
 144: add r1.x, -|r0.w|, l(1.000000)
 145: mul r1.y, r1.x, r1.x
 146: mul r1.y, r1.y, r1.y
 147: mul r1.x, r1.x, r1.y
 148: mad r0.y, r0.y, r1.x, l(1.000000)
 149: mul r0.y, r0.y, r0.z
 150: mul r0.z, r2.w, r2.w
 151: max r0.z, r0.z, l(0.002000)
 152: add r1.x, -r0.z, l(1.000000)
 153: mad r1.y, |r0.w|, r1.x, r0.z
 154: mad r1.x, r2.x, r1.x, r0.z
 155: mul r0.w, |r0.w|, r1.x
 156: mad r0.w, r2.x, r1.y, r0.w
 157: add r0.w, r0.w, l(0.000010)
 158: div r0.w, l(0.500000), r0.w
 159: mul r0.z, r0.z, r0.z
 160: mad r1.x, r2.y, r0.z, -r2.y
 161: mad r1.x, r1.x, r2.y, l(1.000000)
 162: mul r0.z, r0.z, l(0.318310)
 163: mad r1.x, r1.x, r1.x, l(0.000000)
 164: div r0.z, r0.z, r1.x
 165: mul r0.z, r0.z, r0.w
 166: mul r0.z, r0.z, l(3.141593)
 167: max r0.z, r0.z, l(0.000100)
 168: sqrt r0.z, r0.z
 169: mul r0.yz, r2.xxxx, r0.yyzy
 170: dp3 r0.w, r5.xyzx, r5.xyzx
 171: ne r0.w, r0.w, l(0.000000)
 172: and r0.w, r0.w, l(0x3f800000)
 173: mul r0.z, r0.w, r0.z
 174: mul r1.xyz, r0.yyyy, r4.xyzx
 175: mul r0.yzw, r4.xxyz, r0.zzzz
 176: add r0.x, -r0.x, l(1.000000)
 177: mul r2.x, r0.x, r0.x
 178: mul r2.x, r2.x, r2.x
 179: mul r0.x, r0.x, r2.x
 180: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 181: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 182: mul r0.xyz, r0.yzwy, r2.xyzx
 183: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 184: mul o0.xyz, r1.wwww, r0.xyzx
 185: mov o0.w, l(1.000000)
 186: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON 
Local Keywords: _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 158 math, 8 temp registers, 11 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 1
Set 2D Texture "_Splat0" to slot 1 sampler slot 2
Set 2D Texture "_Splat1" to slot 2 sampler slot 3
Set 2D Texture "_Splat2" to slot 3 sampler slot 4
Set 2D Texture "_Splat3" to slot 4 sampler slot 5
Set 2D Texture "_Normal0" to slot 5 sampler slot 7
Set 2D Texture "_Normal1" to slot 6 sampler slot 8
Set 2D Texture "_Normal2" to slot 7 sampler slot 9
Set 2D Texture "_Normal3" to slot 8 sampler slot 10
Set 2D Texture "_TerrainNormalmapTexture" to slot 9 sampler slot 6
Set 3D Texture "unity_ProbeVolumeSH" to slot 10 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 192
  Float _NormalScale1 at 196
  Float _NormalScale2 at 200
  Float _NormalScale3 at 204
  Float _Metallic0 at 208
  Float _Metallic1 at 212
  Float _Metallic2 at 216
  Float _Metallic3 at 220
  Float _Smoothness0 at 224
  Float _Smoothness1 at 228
  Float _Smoothness2 at 232
  Float _Smoothness3 at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float       
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture3d (float,float,float,float) t10
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: mul r2.xy, r2.xyxx, cb0[5].xyxx
   7: sample r2.xyzw, r2.xyxx, t0.xyzw, s1
   8: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   9: add r3.x, r1.w, l(0.001000)
  10: div r2.xyzw, r2.xyzw, r3.xxxx
  11: mad r3.xy, v5.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mad r3.zw, v5.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad r4.xy, v5.xyxx, cb0[8].xyxx, cb0[8].zwzz
  14: mad r4.zw, v5.xxxy, cb0[9].xxxy, cb0[9].zzzw
  15: sample r5.xyzw, r3.xyxx, t1.xyzw, s2
  16: mul r5.xyzw, r2.xxxx, r5.xyzw
  17: mul r5.w, r5.w, cb0[14].x
  18: sample r6.xyzw, r3.zwzz, t2.xyzw, s3
  19: mul r6.xyzw, r2.yyyy, r6.xyzw
  20: mul r6.w, r6.w, cb0[14].y
  21: add r5.xyzw, r5.xyzw, r6.xyzw
  22: sample r6.xyzw, r4.xyxx, t3.xyzw, s4
  23: mul r6.xyzw, r2.zzzz, r6.xyzw
  24: mul r6.w, r6.w, cb0[14].z
  25: add r5.xyzw, r5.xyzw, r6.xyzw
  26: sample r6.xyzw, r4.zwzz, t4.xyzw, s5
  27: mul r6.xyzw, r2.wwww, r6.xyzw
  28: mul r6.w, r6.w, cb0[14].w
  29: add r5.xyzw, r5.xyzw, r6.xyzw
  30: sample r6.xyzw, r3.xyxx, t5.xyzw, s7
  31: mul r6.x, r6.w, r6.x
  32: mad r3.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  33: mul r6.xy, r3.xyxx, cb0[12].xxxx
  34: dp2 r3.x, r6.xyxx, r6.xyxx
  35: min r3.x, r3.x, l(1.000000)
  36: add r3.x, -r3.x, l(1.000000)
  37: sqrt r6.z, r3.x
  38: sample r3.xyzw, r3.zwzz, t6.xyzw, s8
  39: mul r3.x, r3.w, r3.x
  40: mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  41: mul r3.xy, r3.xyxx, cb0[12].yyyy
  42: dp2 r3.w, r3.xyxx, r3.xyxx
  43: min r3.w, r3.w, l(1.000000)
  44: add r3.w, -r3.w, l(1.000000)
  45: sqrt r3.z, r3.w
  46: mul r3.xyz, r2.yyyy, r3.xyzx
  47: mad r3.xyz, r6.xyzx, r2.xxxx, r3.xyzx
  48: sample r6.xyzw, r4.xyxx, t7.xyzw, s9
  49: mul r6.x, r6.w, r6.x
  50: mad r4.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  51: mul r6.xy, r4.xyxx, cb0[12].zzzz
  52: dp2 r3.w, r6.xyxx, r6.xyxx
  53: min r3.w, r3.w, l(1.000000)
  54: add r3.w, -r3.w, l(1.000000)
  55: sqrt r6.z, r3.w
  56: mad r3.xyz, r6.xyzx, r2.zzzz, r3.xyzx
  57: sample r4.xyzw, r4.zwzz, t8.xyzw, s10
  58: mul r4.x, r4.w, r4.x
  59: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  60: mul r4.xy, r4.xyxx, cb0[12].wwww
  61: dp2 r3.w, r4.xyxx, r4.xyxx
  62: min r3.w, r3.w, l(1.000000)
  63: add r3.w, -r3.w, l(1.000000)
  64: sqrt r4.z, r3.w
  65: mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx
  66: add r3.z, r3.z, l(0.000010)
  67: sample r4.xyzw, v5.zwzz, t9.xyzw, s6
  68: mad r4.xyz, r4.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  69: dp3 r3.w, r4.xyzx, r4.xyzx
  70: rsq r3.w, r3.w
  71: mul r4.xyz, r3.wwww, r4.xyzx
  72: mul r6.xyz, r4.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  73: mad r6.xyz, r4.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r6.xyzx
  74: dp2 r3.w, r6.xzxx, r6.xzxx
  75: rsq r3.w, r3.w
  76: mul r6.xyz, r3.wwww, r6.xyzx
  77: mul r7.xyz, r4.zxyz, r6.yzxy
  78: mad r7.xyz, r6.zxyz, r4.yzxy, -r7.xyzx
  79: dp3 r3.w, r7.xyzx, r7.xyzx
  80: rsq r3.w, r3.w
  81: mul r7.xyz, r3.wwww, r7.xyzx
  82: mul r7.xyz, r3.yyyy, r7.xyzx
  83: mad r3.xyw, r3.xxxx, r6.xyxz, r7.xyxz
  84: mad r3.xyz, r3.zzzz, r4.xyzx, r3.xywx
  85: dp4 r2.x, r2.xyzw, cb0[13].xyzw
  86: eq r2.y, cb3[0].x, l(1.000000)
  87: if_nz r2.y
  88:   eq r2.y, cb3[0].y, l(1.000000)
  89:   mul r4.xyz, v4.yyyy, cb3[2].xyzx
  90:   mad r4.xyz, cb3[1].xyzx, v4.xxxx, r4.xyzx
  91:   mad r4.xyz, cb3[3].xyzx, v4.zzzz, r4.xyzx
  92:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  93:   movc r2.yzw, r2.yyyy, r4.xxyz, v4.xxyz
  94:   add r2.yzw, r2.yyzw, -cb3[6].xxyz
  95:   mul r4.yzw, r2.yyzw, cb3[5].xxyz
  96:   mad r2.y, r4.y, l(0.250000), l(0.750000)
  97:   mad r2.z, cb3[0].z, l(0.500000), l(0.750000)
  98:   max r4.x, r2.z, r2.y
  99:   sample r4.xyzw, r4.xzwx, t10.xyzw, s0
 100: else 
 101:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 102: endif 
 103: dp4_sat r2.y, r4.xyzw, cb2[46].xyzw
 104: dp3 r4.x, v1.xyzx, r3.xyzx
 105: dp3 r4.y, v2.xyzx, r3.xyzx
 106: dp3 r4.z, v3.xyzx, r3.xyzx
 107: dp3 r2.z, r4.xyzx, r4.xyzx
 108: rsq r2.z, r2.z
 109: mul r3.xyz, r2.zzzz, r4.xyzx
 110: mul r2.yzw, r2.yyyy, cb0[2].xxyz
 111: add r4.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 112: mad r4.xyz, r2.xxxx, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 113: mad r2.x, -r2.x, l(0.779084), l(0.779084)
 114: mul r5.xyz, r2.xxxx, r5.xyzx
 115: add r2.x, -r5.w, l(1.000000)
 116: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 117: dp3 r0.w, r0.xyzx, r0.xyzx
 118: max r0.w, r0.w, l(0.001000)
 119: rsq r0.w, r0.w
 120: mul r0.xyz, r0.wwww, r0.xyzx
 121: dp3 r0.w, r3.xyzx, r1.xyzx
 122: dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
 123: dp3_sat r1.y, r3.xyzx, r0.xyzx
 124: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 125: mul r0.y, r0.x, r0.x
 126: dp2 r0.y, r0.yyyy, r2.xxxx
 127: add r0.y, r0.y, l(-0.500000)
 128: add r0.z, -r1.x, l(1.000000)
 129: mul r1.z, r0.z, r0.z
 130: mul r1.z, r1.z, r1.z
 131: mul r0.z, r0.z, r1.z
 132: mad r0.z, r0.y, r0.z, l(1.000000)
 133: add r1.z, -|r0.w|, l(1.000000)
 134: mul r3.x, r1.z, r1.z
 135: mul r3.x, r3.x, r3.x
 136: mul r1.z, r1.z, r3.x
 137: mad r0.y, r0.y, r1.z, l(1.000000)
 138: mul r0.y, r0.y, r0.z
 139: mul r0.z, r2.x, r2.x
 140: max r0.z, r0.z, l(0.002000)
 141: add r1.z, -r0.z, l(1.000000)
 142: mad r2.x, |r0.w|, r1.z, r0.z
 143: mad r1.z, r1.x, r1.z, r0.z
 144: mul r0.w, |r0.w|, r1.z
 145: mad r0.w, r1.x, r2.x, r0.w
 146: add r0.w, r0.w, l(0.000010)
 147: div r0.w, l(0.500000), r0.w
 148: mul r0.z, r0.z, r0.z
 149: mad r1.z, r1.y, r0.z, -r1.y
 150: mad r1.y, r1.z, r1.y, l(1.000000)
 151: mul r0.z, r0.z, l(0.318310)
 152: mad r1.y, r1.y, r1.y, l(0.000000)
 153: div r0.z, r0.z, r1.y
 154: mul r0.z, r0.z, r0.w
 155: mul r0.z, r0.z, l(3.141593)
 156: max r0.z, r0.z, l(0.000100)
 157: sqrt r0.z, r0.z
 158: mul r0.yz, r1.xxxx, r0.yyzy
 159: dp3 r0.w, r4.xyzx, r4.xyzx
 160: ne r0.w, r0.w, l(0.000000)
 161: and r0.w, r0.w, l(0x3f800000)
 162: mul r0.z, r0.w, r0.z
 163: mul r1.xyz, r0.yyyy, r2.yzwy
 164: mul r0.yzw, r2.yyzw, r0.zzzz
 165: add r0.x, -r0.x, l(1.000000)
 166: mul r2.x, r0.x, r0.x
 167: mul r2.x, r2.x, r2.x
 168: mul r0.x, r0.x, r2.x
 169: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 170: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
 171: mul r0.xyz, r0.yzwy, r2.xyzx
 172: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 173: mul o0.xyz, r1.wwww, r0.xyzx
 174: mov o0.w, l(1.000000)
 175: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SPOT 
Local Keywords: _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 174 math, 9 temp registers, 13 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_Normal0" to slot 5 sampler slot 9
Set 2D Texture "_Normal1" to slot 6 sampler slot 10
Set 2D Texture "_Normal2" to slot 7 sampler slot 11
Set 2D Texture "_Normal3" to slot 8 sampler slot 12
Set 2D Texture "_TerrainNormalmapTexture" to slot 9 sampler slot 8
Set 2D Texture "_LightTexture0" to slot 10 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 11 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 0

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 256
  Float _NormalScale1 at 260
  Float _NormalScale2 at 264
  Float _NormalScale3 at 268
  Float _Metallic0 at 272
  Float _Metallic1 at 276
  Float _Metallic2 at 280
  Float _Metallic3 at 284
  Float _Smoothness0 at 288
  Float _Smoothness1 at 292
  Float _Smoothness2 at 296
  Float _Smoothness3 at 300
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[19], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture2d (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 9
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r3.xy, v5.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r3.xy, r3.xyxx, cb0[9].xyxx
  11: sample r3.xyzw, r3.xyxx, t0.xyzw, s3
  12: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r3.xyzw, r3.xyzw, r2.wwww
  15: mad r4.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r4.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r5.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r5.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r6.xyzw, r4.xyxx, t1.xyzw, s4
  20: mul r6.xyzw, r3.xxxx, r6.xyzw
  21: mul r6.w, r6.w, cb0[18].x
  22: sample r7.xyzw, r4.zwzz, t2.xyzw, s5
  23: mul r7.xyzw, r3.yyyy, r7.xyzw
  24: mul r7.w, r7.w, cb0[18].y
  25: add r6.xyzw, r6.xyzw, r7.xyzw
  26: sample r7.xyzw, r5.xyxx, t3.xyzw, s6
  27: mul r7.xyzw, r3.zzzz, r7.xyzw
  28: mul r7.w, r7.w, cb0[18].z
  29: add r6.xyzw, r6.xyzw, r7.xyzw
  30: sample r7.xyzw, r5.zwzz, t4.xyzw, s7
  31: mul r7.xyzw, r3.wwww, r7.xyzw
  32: mul r7.w, r7.w, cb0[18].w
  33: add r6.xyzw, r6.xyzw, r7.xyzw
  34: sample r7.xyzw, r4.xyxx, t5.xyzw, s9
  35: mul r7.x, r7.w, r7.x
  36: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  37: mul r7.xy, r4.xyxx, cb0[16].xxxx
  38: dp2 r2.w, r7.xyxx, r7.xyxx
  39: min r2.w, r2.w, l(1.000000)
  40: add r2.w, -r2.w, l(1.000000)
  41: sqrt r7.z, r2.w
  42: sample r4.xyzw, r4.zwzz, t6.xyzw, s10
  43: mul r4.x, r4.w, r4.x
  44: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  45: mul r4.xy, r4.xyxx, cb0[16].yyyy
  46: dp2 r2.w, r4.xyxx, r4.xyxx
  47: min r2.w, r2.w, l(1.000000)
  48: add r2.w, -r2.w, l(1.000000)
  49: sqrt r4.z, r2.w
  50: mul r4.xyz, r3.yyyy, r4.xyzx
  51: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  52: sample r7.xyzw, r5.xyxx, t7.xyzw, s11
  53: mul r7.x, r7.w, r7.x
  54: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  55: mul r7.xy, r5.xyxx, cb0[16].zzzz
  56: dp2 r2.w, r7.xyxx, r7.xyxx
  57: min r2.w, r2.w, l(1.000000)
  58: add r2.w, -r2.w, l(1.000000)
  59: sqrt r7.z, r2.w
  60: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  61: sample r5.xyzw, r5.zwzz, t8.xyzw, s12
  62: mul r5.x, r5.w, r5.x
  63: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  64: mul r5.xy, r5.xyxx, cb0[16].wwww
  65: dp2 r2.w, r5.xyxx, r5.xyxx
  66: min r2.w, r2.w, l(1.000000)
  67: add r2.w, -r2.w, l(1.000000)
  68: sqrt r5.z, r2.w
  69: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  70: add r2.w, r4.z, l(0.000010)
  71: sample r5.xyzw, v5.zwzz, t9.xyzw, s8
  72: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  73: dp3 r4.z, r5.xyzx, r5.xyzx
  74: rsq r4.z, r4.z
  75: mul r5.xyz, r4.zzzz, r5.xyzx
  76: mul r7.xyz, r5.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  77: mad r7.xyz, r5.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r7.xyzx
  78: dp2 r4.z, r7.xzxx, r7.xzxx
  79: rsq r4.z, r4.z
  80: mul r7.xyz, r4.zzzz, r7.xyzx
  81: mul r8.xyz, r5.zxyz, r7.yzxy
  82: mad r8.xyz, r7.zxyz, r5.yzxy, -r8.xyzx
  83: dp3 r4.z, r8.xyzx, r8.xyzx
  84: rsq r4.z, r4.z
  85: mul r8.xyz, r4.zzzz, r8.xyzx
  86: mul r4.yzw, r4.yyyy, r8.xxyz
  87: mad r4.xyz, r4.xxxx, r7.xyzx, r4.yzwy
  88: mad r4.xyz, r2.wwww, r5.xyzx, r4.xyzx
  89: dp4 r2.w, r3.xyzw, cb0[17].xyzw
  90: mul r3.xyzw, v4.yyyy, cb0[5].xyzw
  91: mad r3.xyzw, cb0[4].xyzw, v4.xxxx, r3.xyzw
  92: mad r3.xyzw, cb0[6].xyzw, v4.zzzz, r3.xyzw
  93: add r3.xyzw, r3.xyzw, cb0[7].xyzw
  94: eq r4.w, cb3[0].x, l(1.000000)
  95: if_nz r4.w
  96:   eq r4.w, cb3[0].y, l(1.000000)
  97:   mul r5.xyz, v4.yyyy, cb3[2].xyzx
  98:   mad r5.xyz, cb3[1].xyzx, v4.xxxx, r5.xyzx
  99:   mad r5.xyz, cb3[3].xyzx, v4.zzzz, r5.xyzx
 100:   add r5.xyz, r5.xyzx, cb3[4].xyzx
 101:   movc r5.xyz, r4.wwww, r5.xyzx, v4.xyzx
 102:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
 103:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
 104:   mad r4.w, r5.y, l(0.250000), l(0.750000)
 105:   mad r5.y, cb3[0].z, l(0.500000), l(0.750000)
 106:   max r5.x, r4.w, r5.y
 107:   sample r5.xyzw, r5.xzwx, t12.xyzw, s0
 108: else 
 109:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 110: endif 
 111: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
 112: lt r5.x, l(0.000000), r3.z
 113: and r5.x, r5.x, l(0x3f800000)
 114: div r5.yz, r3.xxyx, r3.wwww
 115: add r5.yz, r5.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
 116: sample r7.xyzw, r5.yzyy, t10.xyzw, s1
 117: mul r3.w, r5.x, r7.w
 118: dp3 r3.x, r3.xyzx, r3.xyzx
 119: sample r5.xyzw, r3.xxxx, t11.xyzw, s2
 120: mul r3.x, r3.w, r5.x
 121: mul r3.x, r4.w, r3.x
 122: dp3 r5.x, v1.xyzx, r4.xyzx
 123: dp3 r5.y, v2.xyzx, r4.xyzx
 124: dp3 r5.z, v3.xyzx, r4.xyzx
 125: dp3 r3.y, r5.xyzx, r5.xyzx
 126: rsq r3.y, r3.y
 127: mul r3.yzw, r3.yyyy, r5.xxyz
 128: mul r4.xyz, r3.xxxx, cb0[2].xyzx
 129: add r5.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 130: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 131: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 132: mul r6.xyz, r2.wwww, r6.xyzx
 133: add r2.w, -r6.w, l(1.000000)
 134: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
 135: dp3 r0.w, r0.xyzx, r0.xyzx
 136: max r0.w, r0.w, l(0.001000)
 137: rsq r0.w, r0.w
 138: mul r0.xyz, r0.wwww, r0.xyzx
 139: dp3 r0.w, r3.yzwy, r2.xyzx
 140: dp3_sat r2.x, r3.yzwy, r1.xyzx
 141: dp3_sat r2.y, r3.yzwy, r0.xyzx
 142: dp3_sat r0.x, r1.xyzx, r0.xyzx
 143: mul r0.y, r0.x, r0.x
 144: dp2 r0.y, r0.yyyy, r2.wwww
 145: add r0.y, r0.y, l(-0.500000)
 146: add r0.z, -r2.x, l(1.000000)
 147: mul r1.x, r0.z, r0.z
 148: mul r1.x, r1.x, r1.x
 149: mul r0.z, r0.z, r1.x
 150: mad r0.z, r0.y, r0.z, l(1.000000)
 151: add r1.x, -|r0.w|, l(1.000000)
 152: mul r1.y, r1.x, r1.x
 153: mul r1.y, r1.y, r1.y
 154: mul r1.x, r1.x, r1.y
 155: mad r0.y, r0.y, r1.x, l(1.000000)
 156: mul r0.y, r0.y, r0.z
 157: mul r0.z, r2.w, r2.w
 158: max r0.z, r0.z, l(0.002000)
 159: add r1.x, -r0.z, l(1.000000)
 160: mad r1.y, |r0.w|, r1.x, r0.z
 161: mad r1.x, r2.x, r1.x, r0.z
 162: mul r0.w, |r0.w|, r1.x
 163: mad r0.w, r2.x, r1.y, r0.w
 164: add r0.w, r0.w, l(0.000010)
 165: div r0.w, l(0.500000), r0.w
 166: mul r0.z, r0.z, r0.z
 167: mad r1.x, r2.y, r0.z, -r2.y
 168: mad r1.x, r1.x, r2.y, l(1.000000)
 169: mul r0.z, r0.z, l(0.318310)
 170: mad r1.x, r1.x, r1.x, l(0.000000)
 171: div r0.z, r0.z, r1.x
 172: mul r0.z, r0.z, r0.w
 173: mul r0.z, r0.z, l(3.141593)
 174: max r0.z, r0.z, l(0.000100)
 175: sqrt r0.z, r0.z
 176: mul r0.yz, r2.xxxx, r0.yyzy
 177: dp3 r0.w, r5.xyzx, r5.xyzx
 178: ne r0.w, r0.w, l(0.000000)
 179: and r0.w, r0.w, l(0x3f800000)
 180: mul r0.z, r0.w, r0.z
 181: mul r1.xyz, r0.yyyy, r4.xyzx
 182: mul r0.yzw, r4.xxyz, r0.zzzz
 183: add r0.x, -r0.x, l(1.000000)
 184: mul r2.x, r0.x, r0.x
 185: mul r2.x, r2.x, r2.x
 186: mul r0.x, r0.x, r2.x
 187: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 188: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 189: mul r0.xyz, r0.yzwy, r2.xyzx
 190: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 191: mul o0.xyz, r1.wwww, r0.xyzx
 192: mov o0.w, l(1.000000)
 193: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT_COOKIE 
Local Keywords: _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 169 math, 9 temp registers, 13 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_Normal0" to slot 5 sampler slot 9
Set 2D Texture "_Normal1" to slot 6 sampler slot 10
Set 2D Texture "_Normal2" to slot 7 sampler slot 11
Set 2D Texture "_Normal3" to slot 8 sampler slot 12
Set 2D Texture "_TerrainNormalmapTexture" to slot 9 sampler slot 8
Set 2D Texture "_LightTextureB0" to slot 10 sampler slot 2
Set CUBE Texture "_LightTexture0" to slot 11 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 0

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 256
  Float _NormalScale1 at 260
  Float _NormalScale2 at 264
  Float _NormalScale3 at 268
  Float _Metallic0 at 272
  Float _Metallic1 at 276
  Float _Metallic2 at 280
  Float _Metallic3 at 284
  Float _Smoothness0 at 288
  Float _Smoothness1 at 292
  Float _Smoothness2 at 296
  Float _Smoothness3 at 300
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[19], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texturecube (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 9
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r3.xy, v5.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r3.xy, r3.xyxx, cb0[9].xyxx
  11: sample r3.xyzw, r3.xyxx, t0.xyzw, s3
  12: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r3.xyzw, r3.xyzw, r2.wwww
  15: mad r4.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r4.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r5.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r5.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r6.xyzw, r4.xyxx, t1.xyzw, s4
  20: mul r6.xyzw, r3.xxxx, r6.xyzw
  21: mul r6.w, r6.w, cb0[18].x
  22: sample r7.xyzw, r4.zwzz, t2.xyzw, s5
  23: mul r7.xyzw, r3.yyyy, r7.xyzw
  24: mul r7.w, r7.w, cb0[18].y
  25: add r6.xyzw, r6.xyzw, r7.xyzw
  26: sample r7.xyzw, r5.xyxx, t3.xyzw, s6
  27: mul r7.xyzw, r3.zzzz, r7.xyzw
  28: mul r7.w, r7.w, cb0[18].z
  29: add r6.xyzw, r6.xyzw, r7.xyzw
  30: sample r7.xyzw, r5.zwzz, t4.xyzw, s7
  31: mul r7.xyzw, r3.wwww, r7.xyzw
  32: mul r7.w, r7.w, cb0[18].w
  33: add r6.xyzw, r6.xyzw, r7.xyzw
  34: sample r7.xyzw, r4.xyxx, t5.xyzw, s9
  35: mul r7.x, r7.w, r7.x
  36: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  37: mul r7.xy, r4.xyxx, cb0[16].xxxx
  38: dp2 r2.w, r7.xyxx, r7.xyxx
  39: min r2.w, r2.w, l(1.000000)
  40: add r2.w, -r2.w, l(1.000000)
  41: sqrt r7.z, r2.w
  42: sample r4.xyzw, r4.zwzz, t6.xyzw, s10
  43: mul r4.x, r4.w, r4.x
  44: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  45: mul r4.xy, r4.xyxx, cb0[16].yyyy
  46: dp2 r2.w, r4.xyxx, r4.xyxx
  47: min r2.w, r2.w, l(1.000000)
  48: add r2.w, -r2.w, l(1.000000)
  49: sqrt r4.z, r2.w
  50: mul r4.xyz, r3.yyyy, r4.xyzx
  51: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  52: sample r7.xyzw, r5.xyxx, t7.xyzw, s11
  53: mul r7.x, r7.w, r7.x
  54: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  55: mul r7.xy, r5.xyxx, cb0[16].zzzz
  56: dp2 r2.w, r7.xyxx, r7.xyxx
  57: min r2.w, r2.w, l(1.000000)
  58: add r2.w, -r2.w, l(1.000000)
  59: sqrt r7.z, r2.w
  60: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  61: sample r5.xyzw, r5.zwzz, t8.xyzw, s12
  62: mul r5.x, r5.w, r5.x
  63: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  64: mul r5.xy, r5.xyxx, cb0[16].wwww
  65: dp2 r2.w, r5.xyxx, r5.xyxx
  66: min r2.w, r2.w, l(1.000000)
  67: add r2.w, -r2.w, l(1.000000)
  68: sqrt r5.z, r2.w
  69: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  70: add r2.w, r4.z, l(0.000010)
  71: sample r5.xyzw, v5.zwzz, t9.xyzw, s8
  72: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  73: dp3 r4.z, r5.xyzx, r5.xyzx
  74: rsq r4.z, r4.z
  75: mul r5.xyz, r4.zzzz, r5.xyzx
  76: mul r7.xyz, r5.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  77: mad r7.xyz, r5.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r7.xyzx
  78: dp2 r4.z, r7.xzxx, r7.xzxx
  79: rsq r4.z, r4.z
  80: mul r7.xyz, r4.zzzz, r7.xyzx
  81: mul r8.xyz, r5.zxyz, r7.yzxy
  82: mad r8.xyz, r7.zxyz, r5.yzxy, -r8.xyzx
  83: dp3 r4.z, r8.xyzx, r8.xyzx
  84: rsq r4.z, r4.z
  85: mul r8.xyz, r4.zzzz, r8.xyzx
  86: mul r4.yzw, r4.yyyy, r8.xxyz
  87: mad r4.xyz, r4.xxxx, r7.xyzx, r4.yzwy
  88: mad r4.xyz, r2.wwww, r5.xyzx, r4.xyzx
  89: dp4 r2.w, r3.xyzw, cb0[17].xyzw
  90: mul r3.xyz, v4.yyyy, cb0[5].xyzx
  91: mad r3.xyz, cb0[4].xyzx, v4.xxxx, r3.xyzx
  92: mad r3.xyz, cb0[6].xyzx, v4.zzzz, r3.xyzx
  93: add r3.xyz, r3.xyzx, cb0[7].xyzx
  94: eq r3.w, cb3[0].x, l(1.000000)
  95: if_nz r3.w
  96:   eq r3.w, cb3[0].y, l(1.000000)
  97:   mul r5.xyz, v4.yyyy, cb3[2].xyzx
  98:   mad r5.xyz, cb3[1].xyzx, v4.xxxx, r5.xyzx
  99:   mad r5.xyz, cb3[3].xyzx, v4.zzzz, r5.xyzx
 100:   add r5.xyz, r5.xyzx, cb3[4].xyzx
 101:   movc r5.xyz, r3.wwww, r5.xyzx, v4.xyzx
 102:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
 103:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
 104:   mad r3.w, r5.y, l(0.250000), l(0.750000)
 105:   mad r4.w, cb3[0].z, l(0.500000), l(0.750000)
 106:   max r5.x, r3.w, r4.w
 107:   sample r5.xyzw, r5.xzwx, t12.xyzw, s0
 108: else 
 109:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 110: endif 
 111: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
 112: dp3 r4.w, r3.xyzx, r3.xyzx
 113: sample r5.xyzw, r4.wwww, t10.xyzw, s2
 114: sample r7.xyzw, r3.xyzx, t11.xyzw, s1
 115: mul r3.x, r5.x, r7.w
 116: mul r3.x, r3.w, r3.x
 117: dp3 r5.x, v1.xyzx, r4.xyzx
 118: dp3 r5.y, v2.xyzx, r4.xyzx
 119: dp3 r5.z, v3.xyzx, r4.xyzx
 120: dp3 r3.y, r5.xyzx, r5.xyzx
 121: rsq r3.y, r3.y
 122: mul r3.yzw, r3.yyyy, r5.xxyz
 123: mul r4.xyz, r3.xxxx, cb0[2].xyzx
 124: add r5.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 125: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 126: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 127: mul r6.xyz, r2.wwww, r6.xyzx
 128: add r2.w, -r6.w, l(1.000000)
 129: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
 130: dp3 r0.w, r0.xyzx, r0.xyzx
 131: max r0.w, r0.w, l(0.001000)
 132: rsq r0.w, r0.w
 133: mul r0.xyz, r0.wwww, r0.xyzx
 134: dp3 r0.w, r3.yzwy, r2.xyzx
 135: dp3_sat r2.x, r3.yzwy, r1.xyzx
 136: dp3_sat r2.y, r3.yzwy, r0.xyzx
 137: dp3_sat r0.x, r1.xyzx, r0.xyzx
 138: mul r0.y, r0.x, r0.x
 139: dp2 r0.y, r0.yyyy, r2.wwww
 140: add r0.y, r0.y, l(-0.500000)
 141: add r0.z, -r2.x, l(1.000000)
 142: mul r1.x, r0.z, r0.z
 143: mul r1.x, r1.x, r1.x
 144: mul r0.z, r0.z, r1.x
 145: mad r0.z, r0.y, r0.z, l(1.000000)
 146: add r1.x, -|r0.w|, l(1.000000)
 147: mul r1.y, r1.x, r1.x
 148: mul r1.y, r1.y, r1.y
 149: mul r1.x, r1.x, r1.y
 150: mad r0.y, r0.y, r1.x, l(1.000000)
 151: mul r0.y, r0.y, r0.z
 152: mul r0.z, r2.w, r2.w
 153: max r0.z, r0.z, l(0.002000)
 154: add r1.x, -r0.z, l(1.000000)
 155: mad r1.y, |r0.w|, r1.x, r0.z
 156: mad r1.x, r2.x, r1.x, r0.z
 157: mul r0.w, |r0.w|, r1.x
 158: mad r0.w, r2.x, r1.y, r0.w
 159: add r0.w, r0.w, l(0.000010)
 160: div r0.w, l(0.500000), r0.w
 161: mul r0.z, r0.z, r0.z
 162: mad r1.x, r2.y, r0.z, -r2.y
 163: mad r1.x, r1.x, r2.y, l(1.000000)
 164: mul r0.z, r0.z, l(0.318310)
 165: mad r1.x, r1.x, r1.x, l(0.000000)
 166: div r0.z, r0.z, r1.x
 167: mul r0.z, r0.z, r0.w
 168: mul r0.z, r0.z, l(3.141593)
 169: max r0.z, r0.z, l(0.000100)
 170: sqrt r0.z, r0.z
 171: mul r0.yz, r2.xxxx, r0.yyzy
 172: dp3 r0.w, r5.xyzx, r5.xyzx
 173: ne r0.w, r0.w, l(0.000000)
 174: and r0.w, r0.w, l(0x3f800000)
 175: mul r0.z, r0.w, r0.z
 176: mul r1.xyz, r0.yyyy, r4.xyzx
 177: mul r0.yzw, r4.xxyz, r0.zzzz
 178: add r0.x, -r0.x, l(1.000000)
 179: mul r2.x, r0.x, r0.x
 180: mul r2.x, r2.x, r2.x
 181: mul r0.x, r0.x, r2.x
 182: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 183: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 184: mul r0.xyz, r0.yzwy, r2.xyzx
 185: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 186: mul o0.xyz, r1.wwww, r0.xyzx
 187: mov o0.w, l(1.000000)
 188: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE INSTANCING_ON 
Local Keywords: _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 163 math, 8 temp registers, 12 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 2
Set 2D Texture "_Splat0" to slot 1 sampler slot 3
Set 2D Texture "_Splat1" to slot 2 sampler slot 4
Set 2D Texture "_Splat2" to slot 3 sampler slot 5
Set 2D Texture "_Splat3" to slot 4 sampler slot 6
Set 2D Texture "_Normal0" to slot 5 sampler slot 8
Set 2D Texture "_Normal1" to slot 6 sampler slot 9
Set 2D Texture "_Normal2" to slot 7 sampler slot 10
Set 2D Texture "_Normal3" to slot 8 sampler slot 11
Set 2D Texture "_TerrainNormalmapTexture" to slot 9 sampler slot 7
Set 2D Texture "_LightTexture0" to slot 10 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 11 sampler slot 0

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 256
  Float _NormalScale1 at 260
  Float _NormalScale2 at 264
  Float _NormalScale3 at 268
  Float _Metallic0 at 272
  Float _Metallic1 at 276
  Float _Metallic2 at 280
  Float _Metallic3 at 284
  Float _Smoothness0 at 288
  Float _Smoothness1 at 292
  Float _Smoothness2 at 296
  Float _Smoothness3 at 300
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[19], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture3d (float,float,float,float) t11
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: mul r2.xy, r2.xyxx, cb0[9].xyxx
   7: sample r2.xyzw, r2.xyxx, t0.xyzw, s2
   8: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   9: add r3.x, r1.w, l(0.001000)
  10: div r2.xyzw, r2.xyzw, r3.xxxx
  11: mad r3.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  12: mad r3.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  13: mad r4.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  14: mad r4.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  15: sample r5.xyzw, r3.xyxx, t1.xyzw, s3
  16: mul r5.xyzw, r2.xxxx, r5.xyzw
  17: mul r5.w, r5.w, cb0[18].x
  18: sample r6.xyzw, r3.zwzz, t2.xyzw, s4
  19: mul r6.xyzw, r2.yyyy, r6.xyzw
  20: mul r6.w, r6.w, cb0[18].y
  21: add r5.xyzw, r5.xyzw, r6.xyzw
  22: sample r6.xyzw, r4.xyxx, t3.xyzw, s5
  23: mul r6.xyzw, r2.zzzz, r6.xyzw
  24: mul r6.w, r6.w, cb0[18].z
  25: add r5.xyzw, r5.xyzw, r6.xyzw
  26: sample r6.xyzw, r4.zwzz, t4.xyzw, s6
  27: mul r6.xyzw, r2.wwww, r6.xyzw
  28: mul r6.w, r6.w, cb0[18].w
  29: add r5.xyzw, r5.xyzw, r6.xyzw
  30: sample r6.xyzw, r3.xyxx, t5.xyzw, s8
  31: mul r6.x, r6.w, r6.x
  32: mad r3.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  33: mul r6.xy, r3.xyxx, cb0[16].xxxx
  34: dp2 r3.x, r6.xyxx, r6.xyxx
  35: min r3.x, r3.x, l(1.000000)
  36: add r3.x, -r3.x, l(1.000000)
  37: sqrt r6.z, r3.x
  38: sample r3.xyzw, r3.zwzz, t6.xyzw, s9
  39: mul r3.x, r3.w, r3.x
  40: mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  41: mul r3.xy, r3.xyxx, cb0[16].yyyy
  42: dp2 r3.w, r3.xyxx, r3.xyxx
  43: min r3.w, r3.w, l(1.000000)
  44: add r3.w, -r3.w, l(1.000000)
  45: sqrt r3.z, r3.w
  46: mul r3.xyz, r2.yyyy, r3.xyzx
  47: mad r3.xyz, r6.xyzx, r2.xxxx, r3.xyzx
  48: sample r6.xyzw, r4.xyxx, t7.xyzw, s10
  49: mul r6.x, r6.w, r6.x
  50: mad r4.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  51: mul r6.xy, r4.xyxx, cb0[16].zzzz
  52: dp2 r3.w, r6.xyxx, r6.xyxx
  53: min r3.w, r3.w, l(1.000000)
  54: add r3.w, -r3.w, l(1.000000)
  55: sqrt r6.z, r3.w
  56: mad r3.xyz, r6.xyzx, r2.zzzz, r3.xyzx
  57: sample r4.xyzw, r4.zwzz, t8.xyzw, s11
  58: mul r4.x, r4.w, r4.x
  59: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  60: mul r4.xy, r4.xyxx, cb0[16].wwww
  61: dp2 r3.w, r4.xyxx, r4.xyxx
  62: min r3.w, r3.w, l(1.000000)
  63: add r3.w, -r3.w, l(1.000000)
  64: sqrt r4.z, r3.w
  65: mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx
  66: add r3.z, r3.z, l(0.000010)
  67: sample r4.xyzw, v5.zwzz, t9.xyzw, s7
  68: mad r4.xyz, r4.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  69: dp3 r3.w, r4.xyzx, r4.xyzx
  70: rsq r3.w, r3.w
  71: mul r4.xyz, r3.wwww, r4.xyzx
  72: mul r6.xyz, r4.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  73: mad r6.xyz, r4.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r6.xyzx
  74: dp2 r3.w, r6.xzxx, r6.xzxx
  75: rsq r3.w, r3.w
  76: mul r6.xyz, r3.wwww, r6.xyzx
  77: mul r7.xyz, r4.zxyz, r6.yzxy
  78: mad r7.xyz, r6.zxyz, r4.yzxy, -r7.xyzx
  79: dp3 r3.w, r7.xyzx, r7.xyzx
  80: rsq r3.w, r3.w
  81: mul r7.xyz, r3.wwww, r7.xyzx
  82: mul r7.xyz, r3.yyyy, r7.xyzx
  83: mad r3.xyw, r3.xxxx, r6.xyxz, r7.xyxz
  84: mad r3.xyz, r3.zzzz, r4.xyzx, r3.xywx
  85: dp4 r2.x, r2.xyzw, cb0[17].xyzw
  86: mul r2.yz, v4.yyyy, cb0[5].xxyx
  87: mad r2.yz, cb0[4].xxyx, v4.xxxx, r2.yyzy
  88: mad r2.yz, cb0[6].xxyx, v4.zzzz, r2.yyzy
  89: add r2.yz, r2.yyzy, cb0[7].xxyx
  90: eq r2.w, cb3[0].x, l(1.000000)
  91: if_nz r2.w
  92:   eq r2.w, cb3[0].y, l(1.000000)
  93:   mul r4.xyz, v4.yyyy, cb3[2].xyzx
  94:   mad r4.xyz, cb3[1].xyzx, v4.xxxx, r4.xyzx
  95:   mad r4.xyz, cb3[3].xyzx, v4.zzzz, r4.xyzx
  96:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  97:   movc r4.xyz, r2.wwww, r4.xyzx, v4.xyzx
  98:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  99:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
 100:   mad r2.w, r4.y, l(0.250000), l(0.750000)
 101:   mad r3.w, cb3[0].z, l(0.500000), l(0.750000)
 102:   max r4.x, r2.w, r3.w
 103:   sample r4.xyzw, r4.xzwx, t11.xyzw, s0
 104: else 
 105:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 106: endif 
 107: dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
 108: sample r4.xyzw, r2.yzyy, t10.xyzw, s1
 109: mul r2.y, r2.w, r4.w
 110: dp3 r4.x, v1.xyzx, r3.xyzx
 111: dp3 r4.y, v2.xyzx, r3.xyzx
 112: dp3 r4.z, v3.xyzx, r3.xyzx
 113: dp3 r2.z, r4.xyzx, r4.xyzx
 114: rsq r2.z, r2.z
 115: mul r3.xyz, r2.zzzz, r4.xyzx
 116: mul r2.yzw, r2.yyyy, cb0[2].xxyz
 117: add r4.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 118: mad r4.xyz, r2.xxxx, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 119: mad r2.x, -r2.x, l(0.779084), l(0.779084)
 120: mul r5.xyz, r2.xxxx, r5.xyzx
 121: add r2.x, -r5.w, l(1.000000)
 122: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 123: dp3 r0.w, r0.xyzx, r0.xyzx
 124: max r0.w, r0.w, l(0.001000)
 125: rsq r0.w, r0.w
 126: mul r0.xyz, r0.wwww, r0.xyzx
 127: dp3 r0.w, r3.xyzx, r1.xyzx
 128: dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
 129: dp3_sat r1.y, r3.xyzx, r0.xyzx
 130: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 131: mul r0.y, r0.x, r0.x
 132: dp2 r0.y, r0.yyyy, r2.xxxx
 133: add r0.y, r0.y, l(-0.500000)
 134: add r0.z, -r1.x, l(1.000000)
 135: mul r1.z, r0.z, r0.z
 136: mul r1.z, r1.z, r1.z
 137: mul r0.z, r0.z, r1.z
 138: mad r0.z, r0.y, r0.z, l(1.000000)
 139: add r1.z, -|r0.w|, l(1.000000)
 140: mul r3.x, r1.z, r1.z
 141: mul r3.x, r3.x, r3.x
 142: mul r1.z, r1.z, r3.x
 143: mad r0.y, r0.y, r1.z, l(1.000000)
 144: mul r0.y, r0.y, r0.z
 145: mul r0.z, r2.x, r2.x
 146: max r0.z, r0.z, l(0.002000)
 147: add r1.z, -r0.z, l(1.000000)
 148: mad r2.x, |r0.w|, r1.z, r0.z
 149: mad r1.z, r1.x, r1.z, r0.z
 150: mul r0.w, |r0.w|, r1.z
 151: mad r0.w, r1.x, r2.x, r0.w
 152: add r0.w, r0.w, l(0.000010)
 153: div r0.w, l(0.500000), r0.w
 154: mul r0.z, r0.z, r0.z
 155: mad r1.z, r1.y, r0.z, -r1.y
 156: mad r1.y, r1.z, r1.y, l(1.000000)
 157: mul r0.z, r0.z, l(0.318310)
 158: mad r1.y, r1.y, r1.y, l(0.000000)
 159: div r0.z, r0.z, r1.y
 160: mul r0.z, r0.z, r0.w
 161: mul r0.z, r0.z, l(3.141593)
 162: max r0.z, r0.z, l(0.000100)
 163: sqrt r0.z, r0.z
 164: mul r0.yz, r1.xxxx, r0.yyzy
 165: dp3 r0.w, r4.xyzx, r4.xyzx
 166: ne r0.w, r0.w, l(0.000000)
 167: and r0.w, r0.w, l(0x3f800000)
 168: mul r0.z, r0.w, r0.z
 169: mul r1.xyz, r0.yyyy, r2.yzwy
 170: mul r0.yzw, r2.yyzw, r0.zzzz
 171: add r0.x, -r0.x, l(1.000000)
 172: mul r2.x, r0.x, r0.x
 173: mul r2.x, r2.x, r2.x
 174: mul r0.x, r0.x, r2.x
 175: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 176: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
 177: mul r0.xyz, r0.yzwy, r2.xyzx
 178: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 179: mul o0.xyz, r1.wwww, r0.xyzx
 180: mov o0.w, l(1.000000)
 181: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_DEPTH SPOT 
Local Keywords: _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 190 math, 10 temp registers, 13 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 4
Set 2D Texture "_Splat0" to slot 1 sampler slot 5
Set 2D Texture "_Splat1" to slot 2 sampler slot 6
Set 2D Texture "_Splat2" to slot 3 sampler slot 7
Set 2D Texture "_Splat3" to slot 4 sampler slot 8
Set 2D Texture "_Normal0" to slot 5 sampler slot 10
Set 2D Texture "_Normal1" to slot 6 sampler slot 11
Set 2D Texture "_Normal2" to slot 7 sampler slot 12
Set 2D Texture "_Normal3" to slot 8 sampler slot 13
Set 2D Texture "_TerrainNormalmapTexture" to slot 9
Set 2D Texture "_LightTexture0" to slot 10 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 11 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 13 sampler slot 1

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 256
  Float _NormalScale1 at 260
  Float _NormalScale2 at 264
  Float _NormalScale3 at 268
  Float _Metallic0 at 272
  Float _Metallic1 at 276
  Float _Metallic2 at 280
  Float _Metallic3 at 284
  Float _Smoothness0 at 288
  Float _Smoothness1 at 292
  Float _Smoothness2 at 296
  Float _Smoothness3 at 300
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[19], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_sampler s13, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture2d (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_resource_texture2d (float,float,float,float) t13
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 10
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[9].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s4
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s5
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[18].x
  22: sample r8.xyzw, r5.zwzz, t2.xyzw, s6
  23: mul r8.xyzw, r4.yyyy, r8.xyzw
  24: mul r8.w, r8.w, cb0[18].y
  25: add r7.xyzw, r7.xyzw, r8.xyzw
  26: sample r8.xyzw, r6.xyxx, t3.xyzw, s7
  27: mul r8.xyzw, r4.zzzz, r8.xyzw
  28: mul r8.w, r8.w, cb0[18].z
  29: add r7.xyzw, r7.xyzw, r8.xyzw
  30: sample r8.xyzw, r6.zwzz, t4.xyzw, s8
  31: mul r8.xyzw, r4.wwww, r8.xyzw
  32: mul r8.w, r8.w, cb0[18].w
  33: add r7.xyzw, r7.xyzw, r8.xyzw
  34: sample r8.xyzw, r5.xyxx, t5.xyzw, s10
  35: mul r8.x, r8.w, r8.x
  36: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  37: mul r8.xy, r5.xyxx, cb0[16].xxxx
  38: dp2 r2.w, r8.xyxx, r8.xyxx
  39: min r2.w, r2.w, l(1.000000)
  40: add r2.w, -r2.w, l(1.000000)
  41: sqrt r8.z, r2.w
  42: sample r5.xyzw, r5.zwzz, t6.xyzw, s11
  43: mul r5.x, r5.w, r5.x
  44: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  45: mul r5.xy, r5.xyxx, cb0[16].yyyy
  46: dp2 r2.w, r5.xyxx, r5.xyxx
  47: min r2.w, r2.w, l(1.000000)
  48: add r2.w, -r2.w, l(1.000000)
  49: sqrt r5.z, r2.w
  50: mul r5.xyz, r4.yyyy, r5.xyzx
  51: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  52: sample r8.xyzw, r6.xyxx, t7.xyzw, s12
  53: mul r8.x, r8.w, r8.x
  54: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  55: mul r8.xy, r6.xyxx, cb0[16].zzzz
  56: dp2 r2.w, r8.xyxx, r8.xyxx
  57: min r2.w, r2.w, l(1.000000)
  58: add r2.w, -r2.w, l(1.000000)
  59: sqrt r8.z, r2.w
  60: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  61: sample r6.xyzw, r6.zwzz, t8.xyzw, s13
  62: mul r6.x, r6.w, r6.x
  63: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  64: mul r6.xy, r6.xyxx, cb0[16].wwww
  65: dp2 r2.w, r6.xyxx, r6.xyxx
  66: min r2.w, r2.w, l(1.000000)
  67: add r2.w, -r2.w, l(1.000000)
  68: sqrt r6.z, r2.w
  69: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  70: add r2.w, r5.z, l(0.000010)
  71: sample r6.xyzw, v5.zwzz, t9.xyzw, s9
  72: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  73: dp3 r3.w, r6.xyzx, r6.xyzx
  74: rsq r3.w, r3.w
  75: mul r6.xyz, r3.wwww, r6.xyzx
  76: mul r8.xyz, r6.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  77: mad r8.xyz, r6.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r8.xyzx
  78: dp2 r3.w, r8.xzxx, r8.xzxx
  79: rsq r3.w, r3.w
  80: mul r8.xyz, r3.wwww, r8.xyzx
  81: mul r9.xyz, r6.zxyz, r8.yzxy
  82: mad r9.xyz, r8.zxyz, r6.yzxy, -r9.xyzx
  83: dp3 r3.w, r9.xyzx, r9.xyzx
  84: rsq r3.w, r3.w
  85: mul r9.xyz, r3.wwww, r9.xyzx
  86: mul r5.yzw, r5.yyyy, r9.xxyz
  87: mad r5.xyz, r5.xxxx, r8.xyzx, r5.yzwy
  88: mad r5.xyz, r2.wwww, r6.xyzx, r5.xyzx
  89: dp4 r2.w, r4.xyzw, cb0[17].xyzw
  90: mul r4.xyzw, v4.yyyy, cb0[5].xyzw
  91: mad r4.xyzw, cb0[4].xyzw, v4.xxxx, r4.xyzw
  92: mad r4.xyzw, cb0[6].xyzw, v4.zzzz, r4.xyzw
  93: add r4.xyzw, r4.xyzw, cb0[7].xyzw
  94: mov r6.x, cb4[9].z
  95: mov r6.y, cb4[10].z
  96: mov r6.z, cb4[11].z
  97: dp3 r2.x, r2.xyzx, r6.xyzx
  98: add r6.xyz, v4.xyzx, -cb3[25].xyzx
  99: dp3 r2.y, r6.xyzx, r6.xyzx
 100: sqrt r2.y, r2.y
 101: add r2.y, -r2.x, r2.y
 102: mad r2.x, cb3[25].w, r2.y, r2.x
 103: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
 104: eq r2.y, cb5[0].x, l(1.000000)
 105: if_nz r2.y
 106:   eq r2.y, cb5[0].y, l(1.000000)
 107:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
 108:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
 109:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
 110:   add r6.xyz, r6.xyzx, cb5[4].xyzx
 111:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
 112:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
 113:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
 114:   mad r2.y, r6.y, l(0.250000), l(0.750000)
 115:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
 116:   max r6.x, r2.z, r2.y
 117:   sample r6.xyzw, r6.xzwx, t12.xyzw, s0
 118: else 
 119:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 120: endif 
 121: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 122: mul r6.xyzw, v4.yyyy, cb3[9].xyzw
 123: mad r6.xyzw, cb3[8].xyzw, v4.xxxx, r6.xyzw
 124: mad r6.xyzw, cb3[10].xyzw, v4.zzzz, r6.xyzw
 125: add r6.xyzw, r6.xyzw, cb3[11].xyzw
 126: div r6.xyz, r6.xyzx, r6.wwww
 127: sample_c_lz r2.z, r6.xyxx, t13.xxxx, s1, r6.z
 128: add r3.w, -cb3[24].x, l(1.000000)
 129: mad r2.z, r2.z, r3.w, cb3[24].x
 130: add r2.y, -r2.z, r2.y
 131: mad r2.x, r2.x, r2.y, r2.z
 132: lt r2.y, l(0.000000), r4.z
 133: and r2.y, r2.y, l(0x3f800000)
 134: div r6.xy, r4.xyxx, r4.wwww
 135: add r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 136: sample r6.xyzw, r6.xyxx, t10.xyzw, s2
 137: mul r2.y, r2.y, r6.w
 138: dp3 r2.z, r4.xyzx, r4.xyzx
 139: sample r4.xyzw, r2.zzzz, t11.xyzw, s3
 140: mul r2.y, r2.y, r4.x
 141: mul r2.x, r2.x, r2.y
 142: dp3 r4.x, v1.xyzx, r5.xyzx
 143: dp3 r4.y, v2.xyzx, r5.xyzx
 144: dp3 r4.z, v3.xyzx, r5.xyzx
 145: dp3 r2.y, r4.xyzx, r4.xyzx
 146: rsq r2.y, r2.y
 147: mul r4.xyz, r2.yyyy, r4.xyzx
 148: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 149: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 150: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 151: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 152: mul r6.xyz, r2.wwww, r7.xyzx
 153: add r2.w, -r7.w, l(1.000000)
 154: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 155: dp3 r0.w, r0.xyzx, r0.xyzx
 156: max r0.w, r0.w, l(0.001000)
 157: rsq r0.w, r0.w
 158: mul r0.xyz, r0.wwww, r0.xyzx
 159: dp3 r0.w, r4.xyzx, r3.xyzx
 160: dp3_sat r3.x, r4.xyzx, r1.xyzx
 161: dp3_sat r3.y, r4.xyzx, r0.xyzx
 162: dp3_sat r0.x, r1.xyzx, r0.xyzx
 163: mul r0.y, r0.x, r0.x
 164: dp2 r0.y, r0.yyyy, r2.wwww
 165: add r0.y, r0.y, l(-0.500000)
 166: add r0.z, -r3.x, l(1.000000)
 167: mul r1.x, r0.z, r0.z
 168: mul r1.x, r1.x, r1.x
 169: mul r0.z, r0.z, r1.x
 170: mad r0.z, r0.y, r0.z, l(1.000000)
 171: add r1.x, -|r0.w|, l(1.000000)
 172: mul r1.y, r1.x, r1.x
 173: mul r1.y, r1.y, r1.y
 174: mul r1.x, r1.x, r1.y
 175: mad r0.y, r0.y, r1.x, l(1.000000)
 176: mul r0.y, r0.y, r0.z
 177: mul r0.z, r2.w, r2.w
 178: max r0.z, r0.z, l(0.002000)
 179: add r1.x, -r0.z, l(1.000000)
 180: mad r1.y, |r0.w|, r1.x, r0.z
 181: mad r1.x, r3.x, r1.x, r0.z
 182: mul r0.w, |r0.w|, r1.x
 183: mad r0.w, r3.x, r1.y, r0.w
 184: add r0.w, r0.w, l(0.000010)
 185: div r0.w, l(0.500000), r0.w
 186: mul r0.z, r0.z, r0.z
 187: mad r1.x, r3.y, r0.z, -r3.y
 188: mad r1.x, r1.x, r3.y, l(1.000000)
 189: mul r0.z, r0.z, l(0.318310)
 190: mad r1.x, r1.x, r1.x, l(0.000000)
 191: div r0.z, r0.z, r1.x
 192: mul r0.z, r0.z, r0.w
 193: mul r0.z, r0.z, l(3.141593)
 194: max r0.z, r0.z, l(0.000100)
 195: sqrt r0.z, r0.z
 196: mul r0.yz, r3.xxxx, r0.yyzy
 197: dp3 r0.w, r5.xyzx, r5.xyzx
 198: ne r0.w, r0.w, l(0.000000)
 199: and r0.w, r0.w, l(0x3f800000)
 200: mul r0.z, r0.w, r0.z
 201: mul r1.xyz, r0.yyyy, r2.xyzx
 202: mul r0.yzw, r2.xxyz, r0.zzzz
 203: add r0.x, -r0.x, l(1.000000)
 204: mul r2.x, r0.x, r0.x
 205: mul r2.x, r2.x, r2.x
 206: mul r0.x, r0.x, r2.x
 207: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 208: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 209: mul r0.xyz, r0.yzwy, r2.xyzx
 210: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 211: mul o0.xyz, r1.wwww, r0.xyzx
 212: mov o0.w, l(1.000000)
 213: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_DEPTH SHADOWS_SOFT SPOT 
Local Keywords: _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 219 math, 13 temp registers, 13 textures, 4 branches
Set 2D Texture "_Control" to slot 0 sampler slot 4
Set 2D Texture "_Splat0" to slot 1 sampler slot 5
Set 2D Texture "_Splat1" to slot 2 sampler slot 6
Set 2D Texture "_Splat2" to slot 3 sampler slot 7
Set 2D Texture "_Splat3" to slot 4 sampler slot 8
Set 2D Texture "_Normal0" to slot 5 sampler slot 10
Set 2D Texture "_Normal1" to slot 6 sampler slot 11
Set 2D Texture "_Normal2" to slot 7 sampler slot 12
Set 2D Texture "_Normal3" to slot 8 sampler slot 13
Set 2D Texture "_TerrainNormalmapTexture" to slot 9
Set 2D Texture "_LightTexture0" to slot 10 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 11 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 13 sampler slot 1

Constant Buffer "$Globals" (384 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 144
  Vector4 _LightColor0 at 32
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _Control_TexelSize at 224
  Vector4 _Splat0_ST at 240
  Vector4 _Splat1_ST at 256
  Vector4 _Splat2_ST at 272
  Vector4 _Splat3_ST at 288
  Float _NormalScale0 at 336
  Float _NormalScale1 at 340
  Float _NormalScale2 at 344
  Float _NormalScale3 at 348
  Float _Metallic0 at 352
  Float _Metallic1 at 356
  Float _Metallic2 at 360
  Float _Metallic3 at 364
  Float _Smoothness0 at 368
  Float _Smoothness1 at 372
  Float _Smoothness2 at 376
  Float _Smoothness3 at 380
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[24], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_sampler s13, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture2d (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_resource_texture2d (float,float,float,float) t13
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 13
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[14].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[14].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s4
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v5.xyxx, cb0[15].xyxx, cb0[15].zwzz
  16: mad r5.zw, v5.xxxy, cb0[16].xxxy, cb0[16].zzzw
  17: mad r6.xy, v5.xyxx, cb0[17].xyxx, cb0[17].zwzz
  18: mad r6.zw, v5.xxxy, cb0[18].xxxy, cb0[18].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s5
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[23].x
  22: sample r8.xyzw, r5.zwzz, t2.xyzw, s6
  23: mul r8.xyzw, r4.yyyy, r8.xyzw
  24: mul r8.w, r8.w, cb0[23].y
  25: add r7.xyzw, r7.xyzw, r8.xyzw
  26: sample r8.xyzw, r6.xyxx, t3.xyzw, s7
  27: mul r8.xyzw, r4.zzzz, r8.xyzw
  28: mul r8.w, r8.w, cb0[23].z
  29: add r7.xyzw, r7.xyzw, r8.xyzw
  30: sample r8.xyzw, r6.zwzz, t4.xyzw, s8
  31: mul r8.xyzw, r4.wwww, r8.xyzw
  32: mul r8.w, r8.w, cb0[23].w
  33: add r7.xyzw, r7.xyzw, r8.xyzw
  34: sample r8.xyzw, r5.xyxx, t5.xyzw, s10
  35: mul r8.x, r8.w, r8.x
  36: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  37: mul r8.xy, r5.xyxx, cb0[21].xxxx
  38: dp2 r2.w, r8.xyxx, r8.xyxx
  39: min r2.w, r2.w, l(1.000000)
  40: add r2.w, -r2.w, l(1.000000)
  41: sqrt r8.z, r2.w
  42: sample r5.xyzw, r5.zwzz, t6.xyzw, s11
  43: mul r5.x, r5.w, r5.x
  44: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  45: mul r5.xy, r5.xyxx, cb0[21].yyyy
  46: dp2 r2.w, r5.xyxx, r5.xyxx
  47: min r2.w, r2.w, l(1.000000)
  48: add r2.w, -r2.w, l(1.000000)
  49: sqrt r5.z, r2.w
  50: mul r5.xyz, r4.yyyy, r5.xyzx
  51: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  52: sample r8.xyzw, r6.xyxx, t7.xyzw, s12
  53: mul r8.x, r8.w, r8.x
  54: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  55: mul r8.xy, r6.xyxx, cb0[21].zzzz
  56: dp2 r2.w, r8.xyxx, r8.xyxx
  57: min r2.w, r2.w, l(1.000000)
  58: add r2.w, -r2.w, l(1.000000)
  59: sqrt r8.z, r2.w
  60: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  61: sample r6.xyzw, r6.zwzz, t8.xyzw, s13
  62: mul r6.x, r6.w, r6.x
  63: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  64: mul r6.xy, r6.xyxx, cb0[21].wwww
  65: dp2 r2.w, r6.xyxx, r6.xyxx
  66: min r2.w, r2.w, l(1.000000)
  67: add r2.w, -r2.w, l(1.000000)
  68: sqrt r6.z, r2.w
  69: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  70: add r2.w, r5.z, l(0.000010)
  71: sample r6.xyzw, v5.zwzz, t9.xyzw, s9
  72: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  73: dp3 r3.w, r6.xyzx, r6.xyzx
  74: rsq r3.w, r3.w
  75: mul r6.xyz, r3.wwww, r6.xyzx
  76: mul r8.xyz, r6.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  77: mad r8.xyz, r6.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r8.xyzx
  78: dp2 r3.w, r8.xzxx, r8.xzxx
  79: rsq r3.w, r3.w
  80: mul r8.xyz, r3.wwww, r8.xyzx
  81: mul r9.xyz, r6.zxyz, r8.yzxy
  82: mad r9.xyz, r8.zxyz, r6.yzxy, -r9.xyzx
  83: dp3 r3.w, r9.xyzx, r9.xyzx
  84: rsq r3.w, r3.w
  85: mul r9.xyz, r3.wwww, r9.xyzx
  86: mul r5.yzw, r5.yyyy, r9.xxyz
  87: mad r5.xyz, r5.xxxx, r8.xyzx, r5.yzwy
  88: mad r5.xyz, r2.wwww, r6.xyzx, r5.xyzx
  89: dp4 r2.w, r4.xyzw, cb0[22].xyzw
  90: mul r4.xyzw, v4.yyyy, cb0[10].xyzw
  91: mad r4.xyzw, cb0[9].xyzw, v4.xxxx, r4.xyzw
  92: mad r4.xyzw, cb0[11].xyzw, v4.zzzz, r4.xyzw
  93: add r4.xyzw, r4.xyzw, cb0[12].xyzw
  94: mov r6.x, cb4[9].z
  95: mov r6.y, cb4[10].z
  96: mov r6.z, cb4[11].z
  97: dp3 r2.x, r2.xyzx, r6.xyzx
  98: add r6.xyz, v4.xyzx, -cb3[25].xyzx
  99: dp3 r2.y, r6.xyzx, r6.xyzx
 100: sqrt r2.y, r2.y
 101: add r2.y, -r2.x, r2.y
 102: mad r2.x, cb3[25].w, r2.y, r2.x
 103: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
 104: eq r2.y, cb5[0].x, l(1.000000)
 105: if_nz r2.y
 106:   eq r2.y, cb5[0].y, l(1.000000)
 107:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
 108:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
 109:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
 110:   add r6.xyz, r6.xyzx, cb5[4].xyzx
 111:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
 112:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
 113:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
 114:   mad r2.y, r6.y, l(0.250000), l(0.750000)
 115:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
 116:   max r6.x, r2.z, r2.y
 117:   sample r6.xyzw, r6.xzwx, t12.xyzw, s0
 118: else 
 119:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 120: endif 
 121: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 122: lt r2.z, r2.x, l(0.990000)
 123: if_nz r2.z
 124:   mul r6.xyzw, v4.yyyy, cb3[9].xyzw
 125:   mad r6.xyzw, cb3[8].xyzw, v4.xxxx, r6.xyzw
 126:   mad r6.xyzw, cb3[10].xyzw, v4.zzzz, r6.xyzw
 127:   add r6.xyzw, r6.xyzw, cb3[11].xyzw
 128:   div r6.xyz, r6.xyzx, r6.wwww
 129:   mad r8.xy, r6.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 130:   round_ni r8.xy, r8.xyxx
 131:   mad r6.xy, r6.xyxx, cb0[8].zwzz, -r8.xyxx
 132:   add r9.xyzw, r6.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 133:   mul r10.xw, r9.xxxz, r9.xxxz
 134:   mad r8.zw, r10.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r6.xxxy
 135:   add r9.xz, -r6.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
 136:   min r11.xy, r6.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 137:   mad r9.xz, -r11.xxyx, r11.xxyx, r9.xxzx
 138:   max r6.xy, r6.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 139:   mad r6.xy, -r6.xyxx, r6.xyxx, r9.ywyy
 140:   mov r11.x, r8.z
 141:   mov r11.y, r9.x
 142:   mov r11.z, r6.x
 143:   mov r11.w, r10.x
 144:   mul r11.xyzw, r11.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
 145:   mov r10.x, r8.w
 146:   mov r10.y, r9.z
 147:   mov r10.z, r6.y
 148:   mul r9.xyzw, r10.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
 149:   add r10.xyzw, r11.ywyw, r11.xzxz
 150:   add r12.xyzw, r9.yyww, r9.xxzz
 151:   div r6.xy, r11.ywyy, r10.zwzz
 152:   add r6.xy, r6.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
 153:   div r8.zw, r9.yyyw, r12.yyyw
 154:   add r8.zw, r8.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
 155:   mul r9.xy, r6.xyxx, cb0[8].xxxx
 156:   mul r9.zw, r8.zzzw, cb0[8].yyyy
 157:   mul r10.xyzw, r10.xyzw, r12.xyzw
 158:   mad r11.xyzw, r8.xyxy, cb0[8].xyxy, r9.xzyz
 159:   sample_c_lz r2.z, r11.xyxx, t13.xxxx, s1, r6.z
 160:   sample_c_lz r3.w, r11.zwzz, t13.xxxx, s1, r6.z
 161:   mul r3.w, r3.w, r10.y
 162:   mad r2.z, r10.x, r2.z, r3.w
 163:   mad r8.xyzw, r8.xyxy, cb0[8].xyxy, r9.xwyw
 164:   sample_c_lz r3.w, r8.xyxx, t13.xxxx, s1, r6.z
 165:   mad r2.z, r10.z, r3.w, r2.z
 166:   sample_c_lz r3.w, r8.zwzz, t13.xxxx, s1, r6.z
 167:   mad r2.z, r10.w, r3.w, r2.z
 168:   add r3.w, -cb3[24].x, l(1.000000)
 169:   mad r2.z, r2.z, r3.w, cb3[24].x
 170: else 
 171:   mov r2.z, l(1.000000)
 172: endif 
 173: add r2.y, -r2.z, r2.y
 174: mad r2.x, r2.x, r2.y, r2.z
 175: lt r2.y, l(0.000000), r4.z
 176: and r2.y, r2.y, l(0x3f800000)
 177: div r6.xy, r4.xyxx, r4.wwww
 178: add r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 179: sample r6.xyzw, r6.xyxx, t10.xyzw, s2
 180: mul r2.y, r2.y, r6.w
 181: dp3 r2.z, r4.xyzx, r4.xyzx
 182: sample r4.xyzw, r2.zzzz, t11.xyzw, s3
 183: mul r2.y, r2.y, r4.x
 184: mul r2.x, r2.x, r2.y
 185: dp3 r4.x, v1.xyzx, r5.xyzx
 186: dp3 r4.y, v2.xyzx, r5.xyzx
 187: dp3 r4.z, v3.xyzx, r5.xyzx
 188: dp3 r2.y, r4.xyzx, r4.xyzx
 189: rsq r2.y, r2.y
 190: mul r4.xyz, r2.yyyy, r4.xyzx
 191: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 192: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 193: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 194: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 195: mul r6.xyz, r2.wwww, r7.xyzx
 196: add r2.w, -r7.w, l(1.000000)
 197: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 198: dp3 r0.w, r0.xyzx, r0.xyzx
 199: max r0.w, r0.w, l(0.001000)
 200: rsq r0.w, r0.w
 201: mul r0.xyz, r0.wwww, r0.xyzx
 202: dp3 r0.w, r4.xyzx, r3.xyzx
 203: dp3_sat r3.x, r4.xyzx, r1.xyzx
 204: dp3_sat r3.y, r4.xyzx, r0.xyzx
 205: dp3_sat r0.x, r1.xyzx, r0.xyzx
 206: mul r0.y, r0.x, r0.x
 207: dp2 r0.y, r0.yyyy, r2.wwww
 208: add r0.y, r0.y, l(-0.500000)
 209: add r0.z, -r3.x, l(1.000000)
 210: mul r1.x, r0.z, r0.z
 211: mul r1.x, r1.x, r1.x
 212: mul r0.z, r0.z, r1.x
 213: mad r0.z, r0.y, r0.z, l(1.000000)
 214: add r1.x, -|r0.w|, l(1.000000)
 215: mul r1.y, r1.x, r1.x
 216: mul r1.y, r1.y, r1.y
 217: mul r1.x, r1.x, r1.y
 218: mad r0.y, r0.y, r1.x, l(1.000000)
 219: mul r0.y, r0.y, r0.z
 220: mul r0.z, r2.w, r2.w
 221: max r0.z, r0.z, l(0.002000)
 222: add r1.x, -r0.z, l(1.000000)
 223: mad r1.y, |r0.w|, r1.x, r0.z
 224: mad r1.x, r3.x, r1.x, r0.z
 225: mul r0.w, |r0.w|, r1.x
 226: mad r0.w, r3.x, r1.y, r0.w
 227: add r0.w, r0.w, l(0.000010)
 228: div r0.w, l(0.500000), r0.w
 229: mul r0.z, r0.z, r0.z
 230: mad r1.x, r3.y, r0.z, -r3.y
 231: mad r1.x, r1.x, r3.y, l(1.000000)
 232: mul r0.z, r0.z, l(0.318310)
 233: mad r1.x, r1.x, r1.x, l(0.000000)
 234: div r0.z, r0.z, r1.x
 235: mul r0.z, r0.z, r0.w
 236: mul r0.z, r0.z, l(3.141593)
 237: max r0.z, r0.z, l(0.000100)
 238: sqrt r0.z, r0.z
 239: mul r0.yz, r3.xxxx, r0.yyzy
 240: dp3 r0.w, r5.xyzx, r5.xyzx
 241: ne r0.w, r0.w, l(0.000000)
 242: and r0.w, r0.w, l(0x3f800000)
 243: mul r0.z, r0.w, r0.z
 244: mul r1.xyz, r0.yyyy, r2.xyzx
 245: mul r0.yzw, r2.xxyz, r0.zzzz
 246: add r0.x, -r0.x, l(1.000000)
 247: mul r2.x, r0.x, r0.x
 248: mul r2.x, r2.x, r2.x
 249: mul r0.x, r0.x, r2.x
 250: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 251: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 252: mul r0.xyz, r0.yzwy, r2.xyzx
 253: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 254: mul o0.xyz, r1.wwww, r0.xyzx
 255: mov o0.w, l(1.000000)
 256: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON SHADOWS_SCREEN 
Local Keywords: _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 168 math, 8 temp registers, 12 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 2
Set 2D Texture "_Splat0" to slot 1 sampler slot 3
Set 2D Texture "_Splat1" to slot 2 sampler slot 4
Set 2D Texture "_Splat2" to slot 3 sampler slot 5
Set 2D Texture "_Splat3" to slot 4 sampler slot 6
Set 2D Texture "_Normal0" to slot 5 sampler slot 8
Set 2D Texture "_Normal1" to slot 6 sampler slot 9
Set 2D Texture "_Normal2" to slot 7 sampler slot 10
Set 2D Texture "_Normal3" to slot 8 sampler slot 11
Set 2D Texture "_TerrainNormalmapTexture" to slot 9 sampler slot 7
Set 2D Texture "_ShadowMapTexture" to slot 10 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 11 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 192
  Float _NormalScale1 at 196
  Float _NormalScale2 at 200
  Float _NormalScale3 at 204
  Float _Metallic0 at 208
  Float _Metallic1 at 212
  Float _Metallic2 at 216
  Float _Metallic3 at 220
  Float _Smoothness0 at 224
  Float _Smoothness1 at 228
  Float _Smoothness2 at 232
  Float _Smoothness3 at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xy w
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture3d (float,float,float,float) t11
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: mul r2.xy, r2.xyxx, cb0[5].xyxx
   7: sample r2.xyzw, r2.xyxx, t0.xyzw, s2
   8: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   9: add r3.x, r1.w, l(0.001000)
  10: div r2.xyzw, r2.xyzw, r3.xxxx
  11: mad r3.xy, v5.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mad r3.zw, v5.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad r4.xy, v5.xyxx, cb0[8].xyxx, cb0[8].zwzz
  14: mad r4.zw, v5.xxxy, cb0[9].xxxy, cb0[9].zzzw
  15: sample r5.xyzw, r3.xyxx, t1.xyzw, s3
  16: mul r5.xyzw, r2.xxxx, r5.xyzw
  17: mul r5.w, r5.w, cb0[14].x
  18: sample r6.xyzw, r3.zwzz, t2.xyzw, s4
  19: mul r6.xyzw, r2.yyyy, r6.xyzw
  20: mul r6.w, r6.w, cb0[14].y
  21: add r5.xyzw, r5.xyzw, r6.xyzw
  22: sample r6.xyzw, r4.xyxx, t3.xyzw, s5
  23: mul r6.xyzw, r2.zzzz, r6.xyzw
  24: mul r6.w, r6.w, cb0[14].z
  25: add r5.xyzw, r5.xyzw, r6.xyzw
  26: sample r6.xyzw, r4.zwzz, t4.xyzw, s6
  27: mul r6.xyzw, r2.wwww, r6.xyzw
  28: mul r6.w, r6.w, cb0[14].w
  29: add r5.xyzw, r5.xyzw, r6.xyzw
  30: sample r6.xyzw, r3.xyxx, t5.xyzw, s8
  31: mul r6.x, r6.w, r6.x
  32: mad r3.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  33: mul r6.xy, r3.xyxx, cb0[12].xxxx
  34: dp2 r3.x, r6.xyxx, r6.xyxx
  35: min r3.x, r3.x, l(1.000000)
  36: add r3.x, -r3.x, l(1.000000)
  37: sqrt r6.z, r3.x
  38: sample r3.xyzw, r3.zwzz, t6.xyzw, s9
  39: mul r3.x, r3.w, r3.x
  40: mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  41: mul r3.xy, r3.xyxx, cb0[12].yyyy
  42: dp2 r3.w, r3.xyxx, r3.xyxx
  43: min r3.w, r3.w, l(1.000000)
  44: add r3.w, -r3.w, l(1.000000)
  45: sqrt r3.z, r3.w
  46: mul r3.xyz, r2.yyyy, r3.xyzx
  47: mad r3.xyz, r6.xyzx, r2.xxxx, r3.xyzx
  48: sample r6.xyzw, r4.xyxx, t7.xyzw, s10
  49: mul r6.x, r6.w, r6.x
  50: mad r4.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  51: mul r6.xy, r4.xyxx, cb0[12].zzzz
  52: dp2 r3.w, r6.xyxx, r6.xyxx
  53: min r3.w, r3.w, l(1.000000)
  54: add r3.w, -r3.w, l(1.000000)
  55: sqrt r6.z, r3.w
  56: mad r3.xyz, r6.xyzx, r2.zzzz, r3.xyzx
  57: sample r4.xyzw, r4.zwzz, t8.xyzw, s11
  58: mul r4.x, r4.w, r4.x
  59: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  60: mul r4.xy, r4.xyxx, cb0[12].wwww
  61: dp2 r3.w, r4.xyxx, r4.xyxx
  62: min r3.w, r3.w, l(1.000000)
  63: add r3.w, -r3.w, l(1.000000)
  64: sqrt r4.z, r3.w
  65: mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx
  66: add r3.z, r3.z, l(0.000010)
  67: sample r4.xyzw, v5.zwzz, t9.xyzw, s7
  68: mad r4.xyz, r4.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  69: dp3 r3.w, r4.xyzx, r4.xyzx
  70: rsq r3.w, r3.w
  71: mul r4.xyz, r3.wwww, r4.xyzx
  72: mul r6.xyz, r4.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  73: mad r6.xyz, r4.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r6.xyzx
  74: dp2 r3.w, r6.xzxx, r6.xzxx
  75: rsq r3.w, r3.w
  76: mul r6.xyz, r3.wwww, r6.xyzx
  77: mul r7.xyz, r4.zxyz, r6.yzxy
  78: mad r7.xyz, r6.zxyz, r4.yzxy, -r7.xyzx
  79: dp3 r3.w, r7.xyzx, r7.xyzx
  80: rsq r3.w, r3.w
  81: mul r7.xyz, r3.wwww, r7.xyzx
  82: mul r7.xyz, r3.yyyy, r7.xyzx
  83: mad r3.xyw, r3.xxxx, r6.xyxz, r7.xyxz
  84: mad r3.xyz, r3.zzzz, r4.xyzx, r3.xywx
  85: dp4 r2.x, r2.xyzw, cb0[13].xyzw
  86: mov r4.x, cb4[9].z
  87: mov r4.y, cb4[10].z
  88: mov r4.z, cb4[11].z
  89: dp3 r2.y, r0.xyzx, r4.xyzx
  90: add r4.xyz, v4.xyzx, -cb3[25].xyzx
  91: dp3 r2.z, r4.xyzx, r4.xyzx
  92: sqrt r2.z, r2.z
  93: add r2.z, -r2.y, r2.z
  94: mad r2.y, cb3[25].w, r2.z, r2.y
  95: mad_sat r2.y, r2.y, cb3[24].z, cb3[24].w
  96: eq r2.z, cb5[0].x, l(1.000000)
  97: if_nz r2.z
  98:   eq r2.z, cb5[0].y, l(1.000000)
  99:   mul r4.xyz, v4.yyyy, cb5[2].xyzx
 100:   mad r4.xyz, cb5[1].xyzx, v4.xxxx, r4.xyzx
 101:   mad r4.xyz, cb5[3].xyzx, v4.zzzz, r4.xyzx
 102:   add r4.xyz, r4.xyzx, cb5[4].xyzx
 103:   movc r4.xyz, r2.zzzz, r4.xyzx, v4.xyzx
 104:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
 105:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
 106:   mad r2.z, r4.y, l(0.250000), l(0.750000)
 107:   mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
 108:   max r4.x, r2.w, r2.z
 109:   sample r4.xyzw, r4.xzwx, t11.xyzw, s0
 110: else 
 111:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 112: endif 
 113: dp4_sat r2.z, r4.xyzw, cb2[46].xyzw
 114: div r4.xy, v6.xyxx, v6.wwww
 115: sample r4.xyzw, r4.xyxx, t10.xyzw, s1
 116: add r2.z, r2.z, -r4.x
 117: mad r2.y, r2.y, r2.z, r4.x
 118: dp3 r4.x, v1.xyzx, r3.xyzx
 119: dp3 r4.y, v2.xyzx, r3.xyzx
 120: dp3 r4.z, v3.xyzx, r3.xyzx
 121: dp3 r2.z, r4.xyzx, r4.xyzx
 122: rsq r2.z, r2.z
 123: mul r3.xyz, r2.zzzz, r4.xyzx
 124: mul r2.yzw, r2.yyyy, cb0[2].xxyz
 125: add r4.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 126: mad r4.xyz, r2.xxxx, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 127: mad r2.x, -r2.x, l(0.779084), l(0.779084)
 128: mul r5.xyz, r2.xxxx, r5.xyzx
 129: add r2.x, -r5.w, l(1.000000)
 130: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 131: dp3 r0.w, r0.xyzx, r0.xyzx
 132: max r0.w, r0.w, l(0.001000)
 133: rsq r0.w, r0.w
 134: mul r0.xyz, r0.wwww, r0.xyzx
 135: dp3 r0.w, r3.xyzx, r1.xyzx
 136: dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
 137: dp3_sat r1.y, r3.xyzx, r0.xyzx
 138: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 139: mul r0.y, r0.x, r0.x
 140: dp2 r0.y, r0.yyyy, r2.xxxx
 141: add r0.y, r0.y, l(-0.500000)
 142: add r0.z, -r1.x, l(1.000000)
 143: mul r1.z, r0.z, r0.z
 144: mul r1.z, r1.z, r1.z
 145: mul r0.z, r0.z, r1.z
 146: mad r0.z, r0.y, r0.z, l(1.000000)
 147: add r1.z, -|r0.w|, l(1.000000)
 148: mul r3.x, r1.z, r1.z
 149: mul r3.x, r3.x, r3.x
 150: mul r1.z, r1.z, r3.x
 151: mad r0.y, r0.y, r1.z, l(1.000000)
 152: mul r0.y, r0.y, r0.z
 153: mul r0.z, r2.x, r2.x
 154: max r0.z, r0.z, l(0.002000)
 155: add r1.z, -r0.z, l(1.000000)
 156: mad r2.x, |r0.w|, r1.z, r0.z
 157: mad r1.z, r1.x, r1.z, r0.z
 158: mul r0.w, |r0.w|, r1.z
 159: mad r0.w, r1.x, r2.x, r0.w
 160: add r0.w, r0.w, l(0.000010)
 161: div r0.w, l(0.500000), r0.w
 162: mul r0.z, r0.z, r0.z
 163: mad r1.z, r1.y, r0.z, -r1.y
 164: mad r1.y, r1.z, r1.y, l(1.000000)
 165: mul r0.z, r0.z, l(0.318310)
 166: mad r1.y, r1.y, r1.y, l(0.000000)
 167: div r0.z, r0.z, r1.y
 168: mul r0.z, r0.z, r0.w
 169: mul r0.z, r0.z, l(3.141593)
 170: max r0.z, r0.z, l(0.000100)
 171: sqrt r0.z, r0.z
 172: mul r0.yz, r1.xxxx, r0.yyzy
 173: dp3 r0.w, r4.xyzx, r4.xyzx
 174: ne r0.w, r0.w, l(0.000000)
 175: and r0.w, r0.w, l(0x3f800000)
 176: mul r0.z, r0.w, r0.z
 177: mul r1.xyz, r0.yyyy, r2.yzwy
 178: mul r0.yzw, r2.yyzw, r0.zzzz
 179: add r0.x, -r0.x, l(1.000000)
 180: mul r2.x, r0.x, r0.x
 181: mul r2.x, r2.x, r2.x
 182: mul r0.x, r0.x, r2.x
 183: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 184: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
 185: mul r0.xyz, r0.yzwy, r2.xyzx
 186: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 187: mul o0.xyz, r1.wwww, r0.xyzx
 188: mov o0.w, l(1.000000)
 189: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE INSTANCING_ON SHADOWS_SCREEN 
Local Keywords: _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 173 math, 8 temp registers, 13 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_Normal0" to slot 5 sampler slot 9
Set 2D Texture "_Normal1" to slot 6 sampler slot 10
Set 2D Texture "_Normal2" to slot 7 sampler slot 11
Set 2D Texture "_Normal3" to slot 8 sampler slot 12
Set 2D Texture "_TerrainNormalmapTexture" to slot 9 sampler slot 8
Set 2D Texture "_ShadowMapTexture" to slot 10 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 11 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 0

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 256
  Float _NormalScale1 at 260
  Float _NormalScale2 at 264
  Float _NormalScale3 at 268
  Float _Metallic0 at 272
  Float _Metallic1 at 276
  Float _Metallic2 at 280
  Float _Metallic3 at 284
  Float _Smoothness0 at 288
  Float _Smoothness1 at 292
  Float _Smoothness2 at 296
  Float _Smoothness3 at 300
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[19], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture2d (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   5: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: mul r2.xy, r2.xyxx, cb0[9].xyxx
   7: sample r2.xyzw, r2.xyxx, t0.xyzw, s3
   8: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   9: add r3.x, r1.w, l(0.001000)
  10: div r2.xyzw, r2.xyzw, r3.xxxx
  11: mad r3.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  12: mad r3.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  13: mad r4.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  14: mad r4.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  15: sample r5.xyzw, r3.xyxx, t1.xyzw, s4
  16: mul r5.xyzw, r2.xxxx, r5.xyzw
  17: mul r5.w, r5.w, cb0[18].x
  18: sample r6.xyzw, r3.zwzz, t2.xyzw, s5
  19: mul r6.xyzw, r2.yyyy, r6.xyzw
  20: mul r6.w, r6.w, cb0[18].y
  21: add r5.xyzw, r5.xyzw, r6.xyzw
  22: sample r6.xyzw, r4.xyxx, t3.xyzw, s6
  23: mul r6.xyzw, r2.zzzz, r6.xyzw
  24: mul r6.w, r6.w, cb0[18].z
  25: add r5.xyzw, r5.xyzw, r6.xyzw
  26: sample r6.xyzw, r4.zwzz, t4.xyzw, s7
  27: mul r6.xyzw, r2.wwww, r6.xyzw
  28: mul r6.w, r6.w, cb0[18].w
  29: add r5.xyzw, r5.xyzw, r6.xyzw
  30: sample r6.xyzw, r3.xyxx, t5.xyzw, s9
  31: mul r6.x, r6.w, r6.x
  32: mad r3.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  33: mul r6.xy, r3.xyxx, cb0[16].xxxx
  34: dp2 r3.x, r6.xyxx, r6.xyxx
  35: min r3.x, r3.x, l(1.000000)
  36: add r3.x, -r3.x, l(1.000000)
  37: sqrt r6.z, r3.x
  38: sample r3.xyzw, r3.zwzz, t6.xyzw, s10
  39: mul r3.x, r3.w, r3.x
  40: mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  41: mul r3.xy, r3.xyxx, cb0[16].yyyy
  42: dp2 r3.w, r3.xyxx, r3.xyxx
  43: min r3.w, r3.w, l(1.000000)
  44: add r3.w, -r3.w, l(1.000000)
  45: sqrt r3.z, r3.w
  46: mul r3.xyz, r2.yyyy, r3.xyzx
  47: mad r3.xyz, r6.xyzx, r2.xxxx, r3.xyzx
  48: sample r6.xyzw, r4.xyxx, t7.xyzw, s11
  49: mul r6.x, r6.w, r6.x
  50: mad r4.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  51: mul r6.xy, r4.xyxx, cb0[16].zzzz
  52: dp2 r3.w, r6.xyxx, r6.xyxx
  53: min r3.w, r3.w, l(1.000000)
  54: add r3.w, -r3.w, l(1.000000)
  55: sqrt r6.z, r3.w
  56: mad r3.xyz, r6.xyzx, r2.zzzz, r3.xyzx
  57: sample r4.xyzw, r4.zwzz, t8.xyzw, s12
  58: mul r4.x, r4.w, r4.x
  59: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  60: mul r4.xy, r4.xyxx, cb0[16].wwww
  61: dp2 r3.w, r4.xyxx, r4.xyxx
  62: min r3.w, r3.w, l(1.000000)
  63: add r3.w, -r3.w, l(1.000000)
  64: sqrt r4.z, r3.w
  65: mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx
  66: add r3.z, r3.z, l(0.000010)
  67: sample r4.xyzw, v5.zwzz, t9.xyzw, s8
  68: mad r4.xyz, r4.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  69: dp3 r3.w, r4.xyzx, r4.xyzx
  70: rsq r3.w, r3.w
  71: mul r4.xyz, r3.wwww, r4.xyzx
  72: mul r6.xyz, r4.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  73: mad r6.xyz, r4.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r6.xyzx
  74: dp2 r3.w, r6.xzxx, r6.xzxx
  75: rsq r3.w, r3.w
  76: mul r6.xyz, r3.wwww, r6.xyzx
  77: mul r7.xyz, r4.zxyz, r6.yzxy
  78: mad r7.xyz, r6.zxyz, r4.yzxy, -r7.xyzx
  79: dp3 r3.w, r7.xyzx, r7.xyzx
  80: rsq r3.w, r3.w
  81: mul r7.xyz, r3.wwww, r7.xyzx
  82: mul r7.xyz, r3.yyyy, r7.xyzx
  83: mad r3.xyw, r3.xxxx, r6.xyxz, r7.xyxz
  84: mad r3.xyz, r3.zzzz, r4.xyzx, r3.xywx
  85: dp4 r2.x, r2.xyzw, cb0[17].xyzw
  86: mul r2.yz, v4.yyyy, cb0[5].xxyx
  87: mad r2.yz, cb0[4].xxyx, v4.xxxx, r2.yyzy
  88: mad r2.yz, cb0[6].xxyx, v4.zzzz, r2.yyzy
  89: add r2.yz, r2.yyzy, cb0[7].xxyx
  90: mov r4.x, cb4[9].z
  91: mov r4.y, cb4[10].z
  92: mov r4.z, cb4[11].z
  93: dp3 r2.w, r0.xyzx, r4.xyzx
  94: add r4.xyz, v4.xyzx, -cb3[25].xyzx
  95: dp3 r3.w, r4.xyzx, r4.xyzx
  96: sqrt r3.w, r3.w
  97: add r3.w, -r2.w, r3.w
  98: mad r2.w, cb3[25].w, r3.w, r2.w
  99: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
 100: eq r3.w, cb5[0].x, l(1.000000)
 101: if_nz r3.w
 102:   eq r3.w, cb5[0].y, l(1.000000)
 103:   mul r4.xyz, v4.yyyy, cb5[2].xyzx
 104:   mad r4.xyz, cb5[1].xyzx, v4.xxxx, r4.xyzx
 105:   mad r4.xyz, cb5[3].xyzx, v4.zzzz, r4.xyzx
 106:   add r4.xyz, r4.xyzx, cb5[4].xyzx
 107:   movc r4.xyz, r3.wwww, r4.xyzx, v4.xyzx
 108:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
 109:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
 110:   mad r3.w, r4.y, l(0.250000), l(0.750000)
 111:   mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
 112:   max r4.x, r3.w, r4.y
 113:   sample r4.xyzw, r4.xzwx, t12.xyzw, s0
 114: else 
 115:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 116: endif 
 117: dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
 118: div r4.xy, v7.xyxx, v7.wwww
 119: sample r4.xyzw, r4.xyxx, t10.xyzw, s1
 120: add r3.w, r3.w, -r4.x
 121: mad r2.w, r2.w, r3.w, r4.x
 122: sample r4.xyzw, r2.yzyy, t11.xyzw, s2
 123: mul r2.y, r2.w, r4.w
 124: dp3 r4.x, v1.xyzx, r3.xyzx
 125: dp3 r4.y, v2.xyzx, r3.xyzx
 126: dp3 r4.z, v3.xyzx, r3.xyzx
 127: dp3 r2.z, r4.xyzx, r4.xyzx
 128: rsq r2.z, r2.z
 129: mul r3.xyz, r2.zzzz, r4.xyzx
 130: mul r2.yzw, r2.yyyy, cb0[2].xxyz
 131: add r4.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 132: mad r4.xyz, r2.xxxx, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 133: mad r2.x, -r2.x, l(0.779084), l(0.779084)
 134: mul r5.xyz, r2.xxxx, r5.xyzx
 135: add r2.x, -r5.w, l(1.000000)
 136: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 137: dp3 r0.w, r0.xyzx, r0.xyzx
 138: max r0.w, r0.w, l(0.001000)
 139: rsq r0.w, r0.w
 140: mul r0.xyz, r0.wwww, r0.xyzx
 141: dp3 r0.w, r3.xyzx, r1.xyzx
 142: dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
 143: dp3_sat r1.y, r3.xyzx, r0.xyzx
 144: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 145: mul r0.y, r0.x, r0.x
 146: dp2 r0.y, r0.yyyy, r2.xxxx
 147: add r0.y, r0.y, l(-0.500000)
 148: add r0.z, -r1.x, l(1.000000)
 149: mul r1.z, r0.z, r0.z
 150: mul r1.z, r1.z, r1.z
 151: mul r0.z, r0.z, r1.z
 152: mad r0.z, r0.y, r0.z, l(1.000000)
 153: add r1.z, -|r0.w|, l(1.000000)
 154: mul r3.x, r1.z, r1.z
 155: mul r3.x, r3.x, r3.x
 156: mul r1.z, r1.z, r3.x
 157: mad r0.y, r0.y, r1.z, l(1.000000)
 158: mul r0.y, r0.y, r0.z
 159: mul r0.z, r2.x, r2.x
 160: max r0.z, r0.z, l(0.002000)
 161: add r1.z, -r0.z, l(1.000000)
 162: mad r2.x, |r0.w|, r1.z, r0.z
 163: mad r1.z, r1.x, r1.z, r0.z
 164: mul r0.w, |r0.w|, r1.z
 165: mad r0.w, r1.x, r2.x, r0.w
 166: add r0.w, r0.w, l(0.000010)
 167: div r0.w, l(0.500000), r0.w
 168: mul r0.z, r0.z, r0.z
 169: mad r1.z, r1.y, r0.z, -r1.y
 170: mad r1.y, r1.z, r1.y, l(1.000000)
 171: mul r0.z, r0.z, l(0.318310)
 172: mad r1.y, r1.y, r1.y, l(0.000000)
 173: div r0.z, r0.z, r1.y
 174: mul r0.z, r0.z, r0.w
 175: mul r0.z, r0.z, l(3.141593)
 176: max r0.z, r0.z, l(0.000100)
 177: sqrt r0.z, r0.z
 178: mul r0.yz, r1.xxxx, r0.yyzy
 179: dp3 r0.w, r4.xyzx, r4.xyzx
 180: ne r0.w, r0.w, l(0.000000)
 181: and r0.w, r0.w, l(0x3f800000)
 182: mul r0.z, r0.w, r0.z
 183: mul r1.xyz, r0.yyyy, r2.yzwy
 184: mul r0.yzw, r2.yyzw, r0.zzzz
 185: add r0.x, -r0.x, l(1.000000)
 186: mul r2.x, r0.x, r0.x
 187: mul r2.x, r2.x, r2.x
 188: mul r0.x, r0.x, r2.x
 189: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 190: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
 191: mul r0.xyz, r0.yzwy, r2.xyzx
 192: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 193: mul o0.xyz, r1.wwww, r0.xyzx
 194: mov o0.w, l(1.000000)
 195: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT SHADOWS_CUBE 
Local Keywords: _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 188 math, 10 temp registers, 12 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_Normal0" to slot 5 sampler slot 9
Set 2D Texture "_Normal1" to slot 6 sampler slot 10
Set 2D Texture "_Normal2" to slot 7 sampler slot 11
Set 2D Texture "_Normal3" to slot 8 sampler slot 12
Set 2D Texture "_TerrainNormalmapTexture" to slot 9 sampler slot 8
Set 2D Texture "_LightTexture0" to slot 10 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 11 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 12 sampler slot 1

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 256
  Float _NormalScale1 at 260
  Float _NormalScale2 at 264
  Float _NormalScale3 at 268
  Float _Metallic0 at 272
  Float _Metallic1 at 276
  Float _Metallic2 at 280
  Float _Metallic3 at 284
  Float _Smoothness0 at 288
  Float _Smoothness1 at 292
  Float _Smoothness2 at 296
  Float _Smoothness3 at 300
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[19], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture3d (float,float,float,float) t11
      dcl_resource_texturecube (float,float,float,float) t12
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 10
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[9].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s3
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s4
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[18].x
  22: sample r8.xyzw, r5.zwzz, t2.xyzw, s5
  23: mul r8.xyzw, r4.yyyy, r8.xyzw
  24: mul r8.w, r8.w, cb0[18].y
  25: add r7.xyzw, r7.xyzw, r8.xyzw
  26: sample r8.xyzw, r6.xyxx, t3.xyzw, s6
  27: mul r8.xyzw, r4.zzzz, r8.xyzw
  28: mul r8.w, r8.w, cb0[18].z
  29: add r7.xyzw, r7.xyzw, r8.xyzw
  30: sample r8.xyzw, r6.zwzz, t4.xyzw, s7
  31: mul r8.xyzw, r4.wwww, r8.xyzw
  32: mul r8.w, r8.w, cb0[18].w
  33: add r7.xyzw, r7.xyzw, r8.xyzw
  34: sample r8.xyzw, r5.xyxx, t5.xyzw, s9
  35: mul r8.x, r8.w, r8.x
  36: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  37: mul r8.xy, r5.xyxx, cb0[16].xxxx
  38: dp2 r2.w, r8.xyxx, r8.xyxx
  39: min r2.w, r2.w, l(1.000000)
  40: add r2.w, -r2.w, l(1.000000)
  41: sqrt r8.z, r2.w
  42: sample r5.xyzw, r5.zwzz, t6.xyzw, s10
  43: mul r5.x, r5.w, r5.x
  44: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  45: mul r5.xy, r5.xyxx, cb0[16].yyyy
  46: dp2 r2.w, r5.xyxx, r5.xyxx
  47: min r2.w, r2.w, l(1.000000)
  48: add r2.w, -r2.w, l(1.000000)
  49: sqrt r5.z, r2.w
  50: mul r5.xyz, r4.yyyy, r5.xyzx
  51: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  52: sample r8.xyzw, r6.xyxx, t7.xyzw, s11
  53: mul r8.x, r8.w, r8.x
  54: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  55: mul r8.xy, r6.xyxx, cb0[16].zzzz
  56: dp2 r2.w, r8.xyxx, r8.xyxx
  57: min r2.w, r2.w, l(1.000000)
  58: add r2.w, -r2.w, l(1.000000)
  59: sqrt r8.z, r2.w
  60: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  61: sample r6.xyzw, r6.zwzz, t8.xyzw, s12
  62: mul r6.x, r6.w, r6.x
  63: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  64: mul r6.xy, r6.xyxx, cb0[16].wwww
  65: dp2 r2.w, r6.xyxx, r6.xyxx
  66: min r2.w, r2.w, l(1.000000)
  67: add r2.w, -r2.w, l(1.000000)
  68: sqrt r6.z, r2.w
  69: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  70: add r2.w, r5.z, l(0.000010)
  71: sample r6.xyzw, v5.zwzz, t9.xyzw, s8
  72: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  73: dp3 r3.w, r6.xyzx, r6.xyzx
  74: rsq r3.w, r3.w
  75: mul r6.xyz, r3.wwww, r6.xyzx
  76: mul r8.xyz, r6.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  77: mad r8.xyz, r6.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r8.xyzx
  78: dp2 r3.w, r8.xzxx, r8.xzxx
  79: rsq r3.w, r3.w
  80: mul r8.xyz, r3.wwww, r8.xyzx
  81: mul r9.xyz, r6.zxyz, r8.yzxy
  82: mad r9.xyz, r8.zxyz, r6.yzxy, -r9.xyzx
  83: dp3 r3.w, r9.xyzx, r9.xyzx
  84: rsq r3.w, r3.w
  85: mul r9.xyz, r3.wwww, r9.xyzx
  86: mul r5.yzw, r5.yyyy, r9.xxyz
  87: mad r5.xyz, r5.xxxx, r8.xyzx, r5.yzwy
  88: mad r5.xyz, r2.wwww, r6.xyzx, r5.xyzx
  89: dp4 r2.w, r4.xyzw, cb0[17].xyzw
  90: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  91: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  92: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  93: add r4.xyz, r4.xyzx, cb0[7].xyzx
  94: mov r6.x, cb4[9].z
  95: mov r6.y, cb4[10].z
  96: mov r6.z, cb4[11].z
  97: dp3 r2.x, r2.xyzx, r6.xyzx
  98: add r6.xyz, v4.xyzx, -cb3[25].xyzx
  99: dp3 r2.y, r6.xyzx, r6.xyzx
 100: sqrt r2.y, r2.y
 101: add r2.y, -r2.x, r2.y
 102: mad r2.x, cb3[25].w, r2.y, r2.x
 103: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
 104: eq r2.y, cb5[0].x, l(1.000000)
 105: if_nz r2.y
 106:   eq r2.y, cb5[0].y, l(1.000000)
 107:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
 108:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
 109:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
 110:   add r6.xyz, r6.xyzx, cb5[4].xyzx
 111:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
 112:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
 113:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
 114:   mad r2.y, r6.y, l(0.250000), l(0.750000)
 115:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
 116:   max r6.x, r2.z, r2.y
 117:   sample r6.xyzw, r6.xzwx, t11.xyzw, s0
 118: else 
 119:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 120: endif 
 121: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 122: add r6.xyz, v4.xyzx, -cb2[1].xyzx
 123: max r2.z, |r6.y|, |r6.x|
 124: max r2.z, |r6.z|, r2.z
 125: add r2.z, r2.z, -cb2[2].z
 126: max r2.z, r2.z, l(0.000010)
 127: mul r2.z, r2.z, cb2[2].w
 128: div r2.z, cb2[2].y, r2.z
 129: add r2.z, r2.z, -cb2[2].x
 130: add r2.z, -r2.z, l(1.000000)
 131: sample_c_lz r2.z, r6.xyzx, t12.xxxx, s1, r2.z
 132: add r3.w, -cb3[24].x, l(1.000000)
 133: mad r2.z, r2.z, r3.w, cb3[24].x
 134: add r2.y, -r2.z, r2.y
 135: mad r2.x, r2.x, r2.y, r2.z
 136: dp3 r2.y, r4.xyzx, r4.xyzx
 137: sample r4.xyzw, r2.yyyy, t10.xyzw, s2
 138: mul r2.x, r2.x, r4.x
 139: dp3 r4.x, v1.xyzx, r5.xyzx
 140: dp3 r4.y, v2.xyzx, r5.xyzx
 141: dp3 r4.z, v3.xyzx, r5.xyzx
 142: dp3 r2.y, r4.xyzx, r4.xyzx
 143: rsq r2.y, r2.y
 144: mul r4.xyz, r2.yyyy, r4.xyzx
 145: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 146: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 147: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 148: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 149: mul r6.xyz, r2.wwww, r7.xyzx
 150: add r2.w, -r7.w, l(1.000000)
 151: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 152: dp3 r0.w, r0.xyzx, r0.xyzx
 153: max r0.w, r0.w, l(0.001000)
 154: rsq r0.w, r0.w
 155: mul r0.xyz, r0.wwww, r0.xyzx
 156: dp3 r0.w, r4.xyzx, r3.xyzx
 157: dp3_sat r3.x, r4.xyzx, r1.xyzx
 158: dp3_sat r3.y, r4.xyzx, r0.xyzx
 159: dp3_sat r0.x, r1.xyzx, r0.xyzx
 160: mul r0.y, r0.x, r0.x
 161: dp2 r0.y, r0.yyyy, r2.wwww
 162: add r0.y, r0.y, l(-0.500000)
 163: add r0.z, -r3.x, l(1.000000)
 164: mul r1.x, r0.z, r0.z
 165: mul r1.x, r1.x, r1.x
 166: mul r0.z, r0.z, r1.x
 167: mad r0.z, r0.y, r0.z, l(1.000000)
 168: add r1.x, -|r0.w|, l(1.000000)
 169: mul r1.y, r1.x, r1.x
 170: mul r1.y, r1.y, r1.y
 171: mul r1.x, r1.x, r1.y
 172: mad r0.y, r0.y, r1.x, l(1.000000)
 173: mul r0.y, r0.y, r0.z
 174: mul r0.z, r2.w, r2.w
 175: max r0.z, r0.z, l(0.002000)
 176: add r1.x, -r0.z, l(1.000000)
 177: mad r1.y, |r0.w|, r1.x, r0.z
 178: mad r1.x, r3.x, r1.x, r0.z
 179: mul r0.w, |r0.w|, r1.x
 180: mad r0.w, r3.x, r1.y, r0.w
 181: add r0.w, r0.w, l(0.000010)
 182: div r0.w, l(0.500000), r0.w
 183: mul r0.z, r0.z, r0.z
 184: mad r1.x, r3.y, r0.z, -r3.y
 185: mad r1.x, r1.x, r3.y, l(1.000000)
 186: mul r0.z, r0.z, l(0.318310)
 187: mad r1.x, r1.x, r1.x, l(0.000000)
 188: div r0.z, r0.z, r1.x
 189: mul r0.z, r0.z, r0.w
 190: mul r0.z, r0.z, l(3.141593)
 191: max r0.z, r0.z, l(0.000100)
 192: sqrt r0.z, r0.z
 193: mul r0.yz, r3.xxxx, r0.yyzy
 194: dp3 r0.w, r5.xyzx, r5.xyzx
 195: ne r0.w, r0.w, l(0.000000)
 196: and r0.w, r0.w, l(0x3f800000)
 197: mul r0.z, r0.w, r0.z
 198: mul r1.xyz, r0.yyyy, r2.xyzx
 199: mul r0.yzw, r2.xxyz, r0.zzzz
 200: add r0.x, -r0.x, l(1.000000)
 201: mul r2.x, r0.x, r0.x
 202: mul r2.x, r2.x, r2.x
 203: mul r0.x, r0.x, r2.x
 204: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 205: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 206: mul r0.xyz, r0.yzwy, r2.xyzx
 207: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 208: mul o0.xyz, r1.wwww, r0.xyzx
 209: mov o0.w, l(1.000000)
 210: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 194 math, 10 temp registers, 12 textures, 4 branches
Set 2D Texture "_Control" to slot 0 sampler slot 3
Set 2D Texture "_Splat0" to slot 1 sampler slot 4
Set 2D Texture "_Splat1" to slot 2 sampler slot 5
Set 2D Texture "_Splat2" to slot 3 sampler slot 6
Set 2D Texture "_Splat3" to slot 4 sampler slot 7
Set 2D Texture "_Normal0" to slot 5 sampler slot 9
Set 2D Texture "_Normal1" to slot 6 sampler slot 10
Set 2D Texture "_Normal2" to slot 7 sampler slot 11
Set 2D Texture "_Normal3" to slot 8 sampler slot 12
Set 2D Texture "_TerrainNormalmapTexture" to slot 9 sampler slot 8
Set 2D Texture "_LightTexture0" to slot 10 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 11 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 12 sampler slot 1

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 256
  Float _NormalScale1 at 260
  Float _NormalScale2 at 264
  Float _NormalScale3 at 268
  Float _Metallic0 at 272
  Float _Metallic1 at 276
  Float _Metallic2 at 280
  Float _Metallic3 at 284
  Float _Smoothness0 at 288
  Float _Smoothness1 at 292
  Float _Smoothness2 at 296
  Float _Smoothness3 at 300
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[19], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture3d (float,float,float,float) t11
      dcl_resource_texturecube (float,float,float,float) t12
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 10
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[9].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s3
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s4
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[18].x
  22: sample r8.xyzw, r5.zwzz, t2.xyzw, s5
  23: mul r8.xyzw, r4.yyyy, r8.xyzw
  24: mul r8.w, r8.w, cb0[18].y
  25: add r7.xyzw, r7.xyzw, r8.xyzw
  26: sample r8.xyzw, r6.xyxx, t3.xyzw, s6
  27: mul r8.xyzw, r4.zzzz, r8.xyzw
  28: mul r8.w, r8.w, cb0[18].z
  29: add r7.xyzw, r7.xyzw, r8.xyzw
  30: sample r8.xyzw, r6.zwzz, t4.xyzw, s7
  31: mul r8.xyzw, r4.wwww, r8.xyzw
  32: mul r8.w, r8.w, cb0[18].w
  33: add r7.xyzw, r7.xyzw, r8.xyzw
  34: sample r8.xyzw, r5.xyxx, t5.xyzw, s9
  35: mul r8.x, r8.w, r8.x
  36: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  37: mul r8.xy, r5.xyxx, cb0[16].xxxx
  38: dp2 r2.w, r8.xyxx, r8.xyxx
  39: min r2.w, r2.w, l(1.000000)
  40: add r2.w, -r2.w, l(1.000000)
  41: sqrt r8.z, r2.w
  42: sample r5.xyzw, r5.zwzz, t6.xyzw, s10
  43: mul r5.x, r5.w, r5.x
  44: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  45: mul r5.xy, r5.xyxx, cb0[16].yyyy
  46: dp2 r2.w, r5.xyxx, r5.xyxx
  47: min r2.w, r2.w, l(1.000000)
  48: add r2.w, -r2.w, l(1.000000)
  49: sqrt r5.z, r2.w
  50: mul r5.xyz, r4.yyyy, r5.xyzx
  51: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  52: sample r8.xyzw, r6.xyxx, t7.xyzw, s11
  53: mul r8.x, r8.w, r8.x
  54: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  55: mul r8.xy, r6.xyxx, cb0[16].zzzz
  56: dp2 r2.w, r8.xyxx, r8.xyxx
  57: min r2.w, r2.w, l(1.000000)
  58: add r2.w, -r2.w, l(1.000000)
  59: sqrt r8.z, r2.w
  60: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  61: sample r6.xyzw, r6.zwzz, t8.xyzw, s12
  62: mul r6.x, r6.w, r6.x
  63: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  64: mul r6.xy, r6.xyxx, cb0[16].wwww
  65: dp2 r2.w, r6.xyxx, r6.xyxx
  66: min r2.w, r2.w, l(1.000000)
  67: add r2.w, -r2.w, l(1.000000)
  68: sqrt r6.z, r2.w
  69: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  70: add r2.w, r5.z, l(0.000010)
  71: sample r6.xyzw, v5.zwzz, t9.xyzw, s8
  72: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  73: dp3 r3.w, r6.xyzx, r6.xyzx
  74: rsq r3.w, r3.w
  75: mul r6.xyz, r3.wwww, r6.xyzx
  76: mul r8.xyz, r6.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  77: mad r8.xyz, r6.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r8.xyzx
  78: dp2 r3.w, r8.xzxx, r8.xzxx
  79: rsq r3.w, r3.w
  80: mul r8.xyz, r3.wwww, r8.xyzx
  81: mul r9.xyz, r6.zxyz, r8.yzxy
  82: mad r9.xyz, r8.zxyz, r6.yzxy, -r9.xyzx
  83: dp3 r3.w, r9.xyzx, r9.xyzx
  84: rsq r3.w, r3.w
  85: mul r9.xyz, r3.wwww, r9.xyzx
  86: mul r5.yzw, r5.yyyy, r9.xxyz
  87: mad r5.xyz, r5.xxxx, r8.xyzx, r5.yzwy
  88: mad r5.xyz, r2.wwww, r6.xyzx, r5.xyzx
  89: dp4 r2.w, r4.xyzw, cb0[17].xyzw
  90: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  91: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  92: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  93: add r4.xyz, r4.xyzx, cb0[7].xyzx
  94: mov r6.x, cb4[9].z
  95: mov r6.y, cb4[10].z
  96: mov r6.z, cb4[11].z
  97: dp3 r2.x, r2.xyzx, r6.xyzx
  98: add r6.xyz, v4.xyzx, -cb3[25].xyzx
  99: dp3 r2.y, r6.xyzx, r6.xyzx
 100: sqrt r2.y, r2.y
 101: add r2.y, -r2.x, r2.y
 102: mad r2.x, cb3[25].w, r2.y, r2.x
 103: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
 104: eq r2.y, cb5[0].x, l(1.000000)
 105: if_nz r2.y
 106:   eq r2.y, cb5[0].y, l(1.000000)
 107:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
 108:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
 109:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
 110:   add r6.xyz, r6.xyzx, cb5[4].xyzx
 111:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
 112:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
 113:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
 114:   mad r2.y, r6.y, l(0.250000), l(0.750000)
 115:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
 116:   max r6.x, r2.z, r2.y
 117:   sample r6.xyzw, r6.xzwx, t11.xyzw, s0
 118: else 
 119:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 120: endif 
 121: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 122: lt r2.z, r2.x, l(0.990000)
 123: if_nz r2.z
 124:   add r6.xyz, v4.xyzx, -cb2[1].xyzx
 125:   max r2.z, |r6.y|, |r6.x|
 126:   max r2.z, |r6.z|, r2.z
 127:   add r2.z, r2.z, -cb2[2].z
 128:   max r2.z, r2.z, l(0.000010)
 129:   mul r2.z, r2.z, cb2[2].w
 130:   div r2.z, cb2[2].y, r2.z
 131:   add r2.z, r2.z, -cb2[2].x
 132:   add r2.z, -r2.z, l(1.000000)
 133:   add r8.xyz, r6.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
 134:   sample_c_lz r8.x, r8.xyzx, t12.xxxx, s1, r2.z
 135:   add r9.xyz, r6.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
 136:   sample_c_lz r8.y, r9.xyzx, t12.xxxx, s1, r2.z
 137:   add r9.xyz, r6.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
 138:   sample_c_lz r8.z, r9.xyzx, t12.xxxx, s1, r2.z
 139:   add r6.xyz, r6.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
 140:   sample_c_lz r8.w, r6.xyzx, t12.xxxx, s1, r2.z
 141:   dp4 r2.z, r8.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
 142:   add r3.w, -cb3[24].x, l(1.000000)
 143:   mad r2.z, r2.z, r3.w, cb3[24].x
 144: else 
 145:   mov r2.z, l(1.000000)
 146: endif 
 147: add r2.y, -r2.z, r2.y
 148: mad r2.x, r2.x, r2.y, r2.z
 149: dp3 r2.y, r4.xyzx, r4.xyzx
 150: sample r4.xyzw, r2.yyyy, t10.xyzw, s2
 151: mul r2.x, r2.x, r4.x
 152: dp3 r4.x, v1.xyzx, r5.xyzx
 153: dp3 r4.y, v2.xyzx, r5.xyzx
 154: dp3 r4.z, v3.xyzx, r5.xyzx
 155: dp3 r2.y, r4.xyzx, r4.xyzx
 156: rsq r2.y, r2.y
 157: mul r4.xyz, r2.yyyy, r4.xyzx
 158: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 159: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 160: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 161: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 162: mul r6.xyz, r2.wwww, r7.xyzx
 163: add r2.w, -r7.w, l(1.000000)
 164: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 165: dp3 r0.w, r0.xyzx, r0.xyzx
 166: max r0.w, r0.w, l(0.001000)
 167: rsq r0.w, r0.w
 168: mul r0.xyz, r0.wwww, r0.xyzx
 169: dp3 r0.w, r4.xyzx, r3.xyzx
 170: dp3_sat r3.x, r4.xyzx, r1.xyzx
 171: dp3_sat r3.y, r4.xyzx, r0.xyzx
 172: dp3_sat r0.x, r1.xyzx, r0.xyzx
 173: mul r0.y, r0.x, r0.x
 174: dp2 r0.y, r0.yyyy, r2.wwww
 175: add r0.y, r0.y, l(-0.500000)
 176: add r0.z, -r3.x, l(1.000000)
 177: mul r1.x, r0.z, r0.z
 178: mul r1.x, r1.x, r1.x
 179: mul r0.z, r0.z, r1.x
 180: mad r0.z, r0.y, r0.z, l(1.000000)
 181: add r1.x, -|r0.w|, l(1.000000)
 182: mul r1.y, r1.x, r1.x
 183: mul r1.y, r1.y, r1.y
 184: mul r1.x, r1.x, r1.y
 185: mad r0.y, r0.y, r1.x, l(1.000000)
 186: mul r0.y, r0.y, r0.z
 187: mul r0.z, r2.w, r2.w
 188: max r0.z, r0.z, l(0.002000)
 189: add r1.x, -r0.z, l(1.000000)
 190: mad r1.y, |r0.w|, r1.x, r0.z
 191: mad r1.x, r3.x, r1.x, r0.z
 192: mul r0.w, |r0.w|, r1.x
 193: mad r0.w, r3.x, r1.y, r0.w
 194: add r0.w, r0.w, l(0.000010)
 195: div r0.w, l(0.500000), r0.w
 196: mul r0.z, r0.z, r0.z
 197: mad r1.x, r3.y, r0.z, -r3.y
 198: mad r1.x, r1.x, r3.y, l(1.000000)
 199: mul r0.z, r0.z, l(0.318310)
 200: mad r1.x, r1.x, r1.x, l(0.000000)
 201: div r0.z, r0.z, r1.x
 202: mul r0.z, r0.z, r0.w
 203: mul r0.z, r0.z, l(3.141593)
 204: max r0.z, r0.z, l(0.000100)
 205: sqrt r0.z, r0.z
 206: mul r0.yz, r3.xxxx, r0.yyzy
 207: dp3 r0.w, r5.xyzx, r5.xyzx
 208: ne r0.w, r0.w, l(0.000000)
 209: and r0.w, r0.w, l(0x3f800000)
 210: mul r0.z, r0.w, r0.z
 211: mul r1.xyz, r0.yyyy, r2.xyzx
 212: mul r0.yzw, r2.xxyz, r0.zzzz
 213: add r0.x, -r0.x, l(1.000000)
 214: mul r2.x, r0.x, r0.x
 215: mul r2.x, r2.x, r2.x
 216: mul r0.x, r0.x, r2.x
 217: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 218: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 219: mul r0.xyz, r0.yzwy, r2.xyzx
 220: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 221: mul o0.xyz, r1.wwww, r0.xyzx
 222: mov o0.w, l(1.000000)
 223: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT_COOKIE SHADOWS_CUBE 
Local Keywords: _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 189 math, 10 temp registers, 13 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 4
Set 2D Texture "_Splat0" to slot 1 sampler slot 5
Set 2D Texture "_Splat1" to slot 2 sampler slot 6
Set 2D Texture "_Splat2" to slot 3 sampler slot 7
Set 2D Texture "_Splat3" to slot 4 sampler slot 8
Set 2D Texture "_Normal0" to slot 5 sampler slot 10
Set 2D Texture "_Normal1" to slot 6 sampler slot 11
Set 2D Texture "_Normal2" to slot 7 sampler slot 12
Set 2D Texture "_Normal3" to slot 8 sampler slot 13
Set 2D Texture "_TerrainNormalmapTexture" to slot 9
Set 2D Texture "_LightTextureB0" to slot 10 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 11 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 13 sampler slot 1

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 256
  Float _NormalScale1 at 260
  Float _NormalScale2 at 264
  Float _NormalScale3 at 268
  Float _Metallic0 at 272
  Float _Metallic1 at 276
  Float _Metallic2 at 280
  Float _Metallic3 at 284
  Float _Smoothness0 at 288
  Float _Smoothness1 at 292
  Float _Smoothness2 at 296
  Float _Smoothness3 at 300
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[19], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_sampler s13, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texturecube (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_resource_texturecube (float,float,float,float) t13
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 10
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[9].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s4
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s5
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[18].x
  22: sample r8.xyzw, r5.zwzz, t2.xyzw, s6
  23: mul r8.xyzw, r4.yyyy, r8.xyzw
  24: mul r8.w, r8.w, cb0[18].y
  25: add r7.xyzw, r7.xyzw, r8.xyzw
  26: sample r8.xyzw, r6.xyxx, t3.xyzw, s7
  27: mul r8.xyzw, r4.zzzz, r8.xyzw
  28: mul r8.w, r8.w, cb0[18].z
  29: add r7.xyzw, r7.xyzw, r8.xyzw
  30: sample r8.xyzw, r6.zwzz, t4.xyzw, s8
  31: mul r8.xyzw, r4.wwww, r8.xyzw
  32: mul r8.w, r8.w, cb0[18].w
  33: add r7.xyzw, r7.xyzw, r8.xyzw
  34: sample r8.xyzw, r5.xyxx, t5.xyzw, s10
  35: mul r8.x, r8.w, r8.x
  36: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  37: mul r8.xy, r5.xyxx, cb0[16].xxxx
  38: dp2 r2.w, r8.xyxx, r8.xyxx
  39: min r2.w, r2.w, l(1.000000)
  40: add r2.w, -r2.w, l(1.000000)
  41: sqrt r8.z, r2.w
  42: sample r5.xyzw, r5.zwzz, t6.xyzw, s11
  43: mul r5.x, r5.w, r5.x
  44: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  45: mul r5.xy, r5.xyxx, cb0[16].yyyy
  46: dp2 r2.w, r5.xyxx, r5.xyxx
  47: min r2.w, r2.w, l(1.000000)
  48: add r2.w, -r2.w, l(1.000000)
  49: sqrt r5.z, r2.w
  50: mul r5.xyz, r4.yyyy, r5.xyzx
  51: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  52: sample r8.xyzw, r6.xyxx, t7.xyzw, s12
  53: mul r8.x, r8.w, r8.x
  54: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  55: mul r8.xy, r6.xyxx, cb0[16].zzzz
  56: dp2 r2.w, r8.xyxx, r8.xyxx
  57: min r2.w, r2.w, l(1.000000)
  58: add r2.w, -r2.w, l(1.000000)
  59: sqrt r8.z, r2.w
  60: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  61: sample r6.xyzw, r6.zwzz, t8.xyzw, s13
  62: mul r6.x, r6.w, r6.x
  63: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  64: mul r6.xy, r6.xyxx, cb0[16].wwww
  65: dp2 r2.w, r6.xyxx, r6.xyxx
  66: min r2.w, r2.w, l(1.000000)
  67: add r2.w, -r2.w, l(1.000000)
  68: sqrt r6.z, r2.w
  69: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  70: add r2.w, r5.z, l(0.000010)
  71: sample r6.xyzw, v5.zwzz, t9.xyzw, s9
  72: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  73: dp3 r3.w, r6.xyzx, r6.xyzx
  74: rsq r3.w, r3.w
  75: mul r6.xyz, r3.wwww, r6.xyzx
  76: mul r8.xyz, r6.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  77: mad r8.xyz, r6.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r8.xyzx
  78: dp2 r3.w, r8.xzxx, r8.xzxx
  79: rsq r3.w, r3.w
  80: mul r8.xyz, r3.wwww, r8.xyzx
  81: mul r9.xyz, r6.zxyz, r8.yzxy
  82: mad r9.xyz, r8.zxyz, r6.yzxy, -r9.xyzx
  83: dp3 r3.w, r9.xyzx, r9.xyzx
  84: rsq r3.w, r3.w
  85: mul r9.xyz, r3.wwww, r9.xyzx
  86: mul r5.yzw, r5.yyyy, r9.xxyz
  87: mad r5.xyz, r5.xxxx, r8.xyzx, r5.yzwy
  88: mad r5.xyz, r2.wwww, r6.xyzx, r5.xyzx
  89: dp4 r2.w, r4.xyzw, cb0[17].xyzw
  90: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  91: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  92: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  93: add r4.xyz, r4.xyzx, cb0[7].xyzx
  94: mov r6.x, cb4[9].z
  95: mov r6.y, cb4[10].z
  96: mov r6.z, cb4[11].z
  97: dp3 r2.x, r2.xyzx, r6.xyzx
  98: add r6.xyz, v4.xyzx, -cb3[25].xyzx
  99: dp3 r2.y, r6.xyzx, r6.xyzx
 100: sqrt r2.y, r2.y
 101: add r2.y, -r2.x, r2.y
 102: mad r2.x, cb3[25].w, r2.y, r2.x
 103: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
 104: eq r2.y, cb5[0].x, l(1.000000)
 105: if_nz r2.y
 106:   eq r2.y, cb5[0].y, l(1.000000)
 107:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
 108:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
 109:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
 110:   add r6.xyz, r6.xyzx, cb5[4].xyzx
 111:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
 112:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
 113:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
 114:   mad r2.y, r6.y, l(0.250000), l(0.750000)
 115:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
 116:   max r6.x, r2.z, r2.y
 117:   sample r6.xyzw, r6.xzwx, t12.xyzw, s0
 118: else 
 119:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 120: endif 
 121: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 122: add r6.xyz, v4.xyzx, -cb2[1].xyzx
 123: max r2.z, |r6.y|, |r6.x|
 124: max r2.z, |r6.z|, r2.z
 125: add r2.z, r2.z, -cb2[2].z
 126: max r2.z, r2.z, l(0.000010)
 127: mul r2.z, r2.z, cb2[2].w
 128: div r2.z, cb2[2].y, r2.z
 129: add r2.z, r2.z, -cb2[2].x
 130: add r2.z, -r2.z, l(1.000000)
 131: sample_c_lz r2.z, r6.xyzx, t13.xxxx, s1, r2.z
 132: add r3.w, -cb3[24].x, l(1.000000)
 133: mad r2.z, r2.z, r3.w, cb3[24].x
 134: add r2.y, -r2.z, r2.y
 135: mad r2.x, r2.x, r2.y, r2.z
 136: dp3 r2.y, r4.xyzx, r4.xyzx
 137: sample r6.xyzw, r2.yyyy, t10.xyzw, s3
 138: sample r4.xyzw, r4.xyzx, t11.xyzw, s2
 139: mul r2.y, r4.w, r6.x
 140: mul r2.x, r2.x, r2.y
 141: dp3 r4.x, v1.xyzx, r5.xyzx
 142: dp3 r4.y, v2.xyzx, r5.xyzx
 143: dp3 r4.z, v3.xyzx, r5.xyzx
 144: dp3 r2.y, r4.xyzx, r4.xyzx
 145: rsq r2.y, r2.y
 146: mul r4.xyz, r2.yyyy, r4.xyzx
 147: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 148: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 149: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 150: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 151: mul r6.xyz, r2.wwww, r7.xyzx
 152: add r2.w, -r7.w, l(1.000000)
 153: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 154: dp3 r0.w, r0.xyzx, r0.xyzx
 155: max r0.w, r0.w, l(0.001000)
 156: rsq r0.w, r0.w
 157: mul r0.xyz, r0.wwww, r0.xyzx
 158: dp3 r0.w, r4.xyzx, r3.xyzx
 159: dp3_sat r3.x, r4.xyzx, r1.xyzx
 160: dp3_sat r3.y, r4.xyzx, r0.xyzx
 161: dp3_sat r0.x, r1.xyzx, r0.xyzx
 162: mul r0.y, r0.x, r0.x
 163: dp2 r0.y, r0.yyyy, r2.wwww
 164: add r0.y, r0.y, l(-0.500000)
 165: add r0.z, -r3.x, l(1.000000)
 166: mul r1.x, r0.z, r0.z
 167: mul r1.x, r1.x, r1.x
 168: mul r0.z, r0.z, r1.x
 169: mad r0.z, r0.y, r0.z, l(1.000000)
 170: add r1.x, -|r0.w|, l(1.000000)
 171: mul r1.y, r1.x, r1.x
 172: mul r1.y, r1.y, r1.y
 173: mul r1.x, r1.x, r1.y
 174: mad r0.y, r0.y, r1.x, l(1.000000)
 175: mul r0.y, r0.y, r0.z
 176: mul r0.z, r2.w, r2.w
 177: max r0.z, r0.z, l(0.002000)
 178: add r1.x, -r0.z, l(1.000000)
 179: mad r1.y, |r0.w|, r1.x, r0.z
 180: mad r1.x, r3.x, r1.x, r0.z
 181: mul r0.w, |r0.w|, r1.x
 182: mad r0.w, r3.x, r1.y, r0.w
 183: add r0.w, r0.w, l(0.000010)
 184: div r0.w, l(0.500000), r0.w
 185: mul r0.z, r0.z, r0.z
 186: mad r1.x, r3.y, r0.z, -r3.y
 187: mad r1.x, r1.x, r3.y, l(1.000000)
 188: mul r0.z, r0.z, l(0.318310)
 189: mad r1.x, r1.x, r1.x, l(0.000000)
 190: div r0.z, r0.z, r1.x
 191: mul r0.z, r0.z, r0.w
 192: mul r0.z, r0.z, l(3.141593)
 193: max r0.z, r0.z, l(0.000100)
 194: sqrt r0.z, r0.z
 195: mul r0.yz, r3.xxxx, r0.yyzy
 196: dp3 r0.w, r5.xyzx, r5.xyzx
 197: ne r0.w, r0.w, l(0.000000)
 198: and r0.w, r0.w, l(0x3f800000)
 199: mul r0.z, r0.w, r0.z
 200: mul r1.xyz, r0.yyyy, r2.xyzx
 201: mul r0.yzw, r2.xxyz, r0.zzzz
 202: add r0.x, -r0.x, l(1.000000)
 203: mul r2.x, r0.x, r0.x
 204: mul r2.x, r2.x, r2.x
 205: mul r0.x, r0.x, r2.x
 206: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 207: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 208: mul r0.xyz, r0.yzwy, r2.xyzx
 209: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 210: mul o0.xyz, r1.wwww, r0.xyzx
 211: mov o0.w, l(1.000000)
 212: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 195 math, 10 temp registers, 13 textures, 4 branches
Set 2D Texture "_Control" to slot 0 sampler slot 4
Set 2D Texture "_Splat0" to slot 1 sampler slot 5
Set 2D Texture "_Splat1" to slot 2 sampler slot 6
Set 2D Texture "_Splat2" to slot 3 sampler slot 7
Set 2D Texture "_Splat3" to slot 4 sampler slot 8
Set 2D Texture "_Normal0" to slot 5 sampler slot 10
Set 2D Texture "_Normal1" to slot 6 sampler slot 11
Set 2D Texture "_Normal2" to slot 7 sampler slot 12
Set 2D Texture "_Normal3" to slot 8 sampler slot 13
Set 2D Texture "_TerrainNormalmapTexture" to slot 9
Set 2D Texture "_LightTextureB0" to slot 10 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 11 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 13 sampler slot 1

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 256
  Float _NormalScale1 at 260
  Float _NormalScale2 at 264
  Float _NormalScale3 at 268
  Float _Metallic0 at 272
  Float _Metallic1 at 276
  Float _Metallic2 at 280
  Float _Metallic3 at 284
  Float _Smoothness0 at 288
  Float _Smoothness1 at 292
  Float _Smoothness2 at 296
  Float _Smoothness3 at 300
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[19], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_sampler s13, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texturecube (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_resource_texturecube (float,float,float,float) t13
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 10
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  10: mul r4.xy, r4.xyxx, cb0[9].xyxx
  11: sample r4.xyzw, r4.xyxx, t0.xyzw, s4
  12: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  13: add r2.w, r1.w, l(0.001000)
  14: div r4.xyzw, r4.xyzw, r2.wwww
  15: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  16: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  17: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  18: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  19: sample r7.xyzw, r5.xyxx, t1.xyzw, s5
  20: mul r7.xyzw, r4.xxxx, r7.xyzw
  21: mul r7.w, r7.w, cb0[18].x
  22: sample r8.xyzw, r5.zwzz, t2.xyzw, s6
  23: mul r8.xyzw, r4.yyyy, r8.xyzw
  24: mul r8.w, r8.w, cb0[18].y
  25: add r7.xyzw, r7.xyzw, r8.xyzw
  26: sample r8.xyzw, r6.xyxx, t3.xyzw, s7
  27: mul r8.xyzw, r4.zzzz, r8.xyzw
  28: mul r8.w, r8.w, cb0[18].z
  29: add r7.xyzw, r7.xyzw, r8.xyzw
  30: sample r8.xyzw, r6.zwzz, t4.xyzw, s8
  31: mul r8.xyzw, r4.wwww, r8.xyzw
  32: mul r8.w, r8.w, cb0[18].w
  33: add r7.xyzw, r7.xyzw, r8.xyzw
  34: sample r8.xyzw, r5.xyxx, t5.xyzw, s10
  35: mul r8.x, r8.w, r8.x
  36: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  37: mul r8.xy, r5.xyxx, cb0[16].xxxx
  38: dp2 r2.w, r8.xyxx, r8.xyxx
  39: min r2.w, r2.w, l(1.000000)
  40: add r2.w, -r2.w, l(1.000000)
  41: sqrt r8.z, r2.w
  42: sample r5.xyzw, r5.zwzz, t6.xyzw, s11
  43: mul r5.x, r5.w, r5.x
  44: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  45: mul r5.xy, r5.xyxx, cb0[16].yyyy
  46: dp2 r2.w, r5.xyxx, r5.xyxx
  47: min r2.w, r2.w, l(1.000000)
  48: add r2.w, -r2.w, l(1.000000)
  49: sqrt r5.z, r2.w
  50: mul r5.xyz, r4.yyyy, r5.xyzx
  51: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  52: sample r8.xyzw, r6.xyxx, t7.xyzw, s12
  53: mul r8.x, r8.w, r8.x
  54: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  55: mul r8.xy, r6.xyxx, cb0[16].zzzz
  56: dp2 r2.w, r8.xyxx, r8.xyxx
  57: min r2.w, r2.w, l(1.000000)
  58: add r2.w, -r2.w, l(1.000000)
  59: sqrt r8.z, r2.w
  60: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  61: sample r6.xyzw, r6.zwzz, t8.xyzw, s13
  62: mul r6.x, r6.w, r6.x
  63: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  64: mul r6.xy, r6.xyxx, cb0[16].wwww
  65: dp2 r2.w, r6.xyxx, r6.xyxx
  66: min r2.w, r2.w, l(1.000000)
  67: add r2.w, -r2.w, l(1.000000)
  68: sqrt r6.z, r2.w
  69: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  70: add r2.w, r5.z, l(0.000010)
  71: sample r6.xyzw, v5.zwzz, t9.xyzw, s9
  72: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  73: dp3 r3.w, r6.xyzx, r6.xyzx
  74: rsq r3.w, r3.w
  75: mul r6.xyz, r3.wwww, r6.xyzx
  76: mul r8.xyz, r6.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  77: mad r8.xyz, r6.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r8.xyzx
  78: dp2 r3.w, r8.xzxx, r8.xzxx
  79: rsq r3.w, r3.w
  80: mul r8.xyz, r3.wwww, r8.xyzx
  81: mul r9.xyz, r6.zxyz, r8.yzxy
  82: mad r9.xyz, r8.zxyz, r6.yzxy, -r9.xyzx
  83: dp3 r3.w, r9.xyzx, r9.xyzx
  84: rsq r3.w, r3.w
  85: mul r9.xyz, r3.wwww, r9.xyzx
  86: mul r5.yzw, r5.yyyy, r9.xxyz
  87: mad r5.xyz, r5.xxxx, r8.xyzx, r5.yzwy
  88: mad r5.xyz, r2.wwww, r6.xyzx, r5.xyzx
  89: dp4 r2.w, r4.xyzw, cb0[17].xyzw
  90: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  91: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  92: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  93: add r4.xyz, r4.xyzx, cb0[7].xyzx
  94: mov r6.x, cb4[9].z
  95: mov r6.y, cb4[10].z
  96: mov r6.z, cb4[11].z
  97: dp3 r2.x, r2.xyzx, r6.xyzx
  98: add r6.xyz, v4.xyzx, -cb3[25].xyzx
  99: dp3 r2.y, r6.xyzx, r6.xyzx
 100: sqrt r2.y, r2.y
 101: add r2.y, -r2.x, r2.y
 102: mad r2.x, cb3[25].w, r2.y, r2.x
 103: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
 104: eq r2.y, cb5[0].x, l(1.000000)
 105: if_nz r2.y
 106:   eq r2.y, cb5[0].y, l(1.000000)
 107:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
 108:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
 109:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
 110:   add r6.xyz, r6.xyzx, cb5[4].xyzx
 111:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
 112:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
 113:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
 114:   mad r2.y, r6.y, l(0.250000), l(0.750000)
 115:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
 116:   max r6.x, r2.z, r2.y
 117:   sample r6.xyzw, r6.xzwx, t12.xyzw, s0
 118: else 
 119:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 120: endif 
 121: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 122: lt r2.z, r2.x, l(0.990000)
 123: if_nz r2.z
 124:   add r6.xyz, v4.xyzx, -cb2[1].xyzx
 125:   max r2.z, |r6.y|, |r6.x|
 126:   max r2.z, |r6.z|, r2.z
 127:   add r2.z, r2.z, -cb2[2].z
 128:   max r2.z, r2.z, l(0.000010)
 129:   mul r2.z, r2.z, cb2[2].w
 130:   div r2.z, cb2[2].y, r2.z
 131:   add r2.z, r2.z, -cb2[2].x
 132:   add r2.z, -r2.z, l(1.000000)
 133:   add r8.xyz, r6.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
 134:   sample_c_lz r8.x, r8.xyzx, t13.xxxx, s1, r2.z
 135:   add r9.xyz, r6.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
 136:   sample_c_lz r8.y, r9.xyzx, t13.xxxx, s1, r2.z
 137:   add r9.xyz, r6.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
 138:   sample_c_lz r8.z, r9.xyzx, t13.xxxx, s1, r2.z
 139:   add r6.xyz, r6.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
 140:   sample_c_lz r8.w, r6.xyzx, t13.xxxx, s1, r2.z
 141:   dp4 r2.z, r8.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
 142:   add r3.w, -cb3[24].x, l(1.000000)
 143:   mad r2.z, r2.z, r3.w, cb3[24].x
 144: else 
 145:   mov r2.z, l(1.000000)
 146: endif 
 147: add r2.y, -r2.z, r2.y
 148: mad r2.x, r2.x, r2.y, r2.z
 149: dp3 r2.y, r4.xyzx, r4.xyzx
 150: sample r6.xyzw, r2.yyyy, t10.xyzw, s3
 151: sample r4.xyzw, r4.xyzx, t11.xyzw, s2
 152: mul r2.y, r4.w, r6.x
 153: mul r2.x, r2.x, r2.y
 154: dp3 r4.x, v1.xyzx, r5.xyzx
 155: dp3 r4.y, v2.xyzx, r5.xyzx
 156: dp3 r4.z, v3.xyzx, r5.xyzx
 157: dp3 r2.y, r4.xyzx, r4.xyzx
 158: rsq r2.y, r2.y
 159: mul r4.xyz, r2.yyyy, r4.xyzx
 160: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 161: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 162: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 163: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 164: mul r6.xyz, r2.wwww, r7.xyzx
 165: add r2.w, -r7.w, l(1.000000)
 166: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 167: dp3 r0.w, r0.xyzx, r0.xyzx
 168: max r0.w, r0.w, l(0.001000)
 169: rsq r0.w, r0.w
 170: mul r0.xyz, r0.wwww, r0.xyzx
 171: dp3 r0.w, r4.xyzx, r3.xyzx
 172: dp3_sat r3.x, r4.xyzx, r1.xyzx
 173: dp3_sat r3.y, r4.xyzx, r0.xyzx
 174: dp3_sat r0.x, r1.xyzx, r0.xyzx
 175: mul r0.y, r0.x, r0.x
 176: dp2 r0.y, r0.yyyy, r2.wwww
 177: add r0.y, r0.y, l(-0.500000)
 178: add r0.z, -r3.x, l(1.000000)
 179: mul r1.x, r0.z, r0.z
 180: mul r1.x, r1.x, r1.x
 181: mul r0.z, r0.z, r1.x
 182: mad r0.z, r0.y, r0.z, l(1.000000)
 183: add r1.x, -|r0.w|, l(1.000000)
 184: mul r1.y, r1.x, r1.x
 185: mul r1.y, r1.y, r1.y
 186: mul r1.x, r1.x, r1.y
 187: mad r0.y, r0.y, r1.x, l(1.000000)
 188: mul r0.y, r0.y, r0.z
 189: mul r0.z, r2.w, r2.w
 190: max r0.z, r0.z, l(0.002000)
 191: add r1.x, -r0.z, l(1.000000)
 192: mad r1.y, |r0.w|, r1.x, r0.z
 193: mad r1.x, r3.x, r1.x, r0.z
 194: mul r0.w, |r0.w|, r1.x
 195: mad r0.w, r3.x, r1.y, r0.w
 196: add r0.w, r0.w, l(0.000010)
 197: div r0.w, l(0.500000), r0.w
 198: mul r0.z, r0.z, r0.z
 199: mad r1.x, r3.y, r0.z, -r3.y
 200: mad r1.x, r1.x, r3.y, l(1.000000)
 201: mul r0.z, r0.z, l(0.318310)
 202: mad r1.x, r1.x, r1.x, l(0.000000)
 203: div r0.z, r0.z, r1.x
 204: mul r0.z, r0.z, r0.w
 205: mul r0.z, r0.z, l(3.141593)
 206: max r0.z, r0.z, l(0.000100)
 207: sqrt r0.z, r0.z
 208: mul r0.yz, r3.xxxx, r0.yyzy
 209: dp3 r0.w, r5.xyzx, r5.xyzx
 210: ne r0.w, r0.w, l(0.000000)
 211: and r0.w, r0.w, l(0x3f800000)
 212: mul r0.z, r0.w, r0.z
 213: mul r1.xyz, r0.yyyy, r2.xyzx
 214: mul r0.yzw, r2.xxyz, r0.zzzz
 215: add r0.x, -r0.x, l(1.000000)
 216: mul r2.x, r0.x, r0.x
 217: mul r2.x, r2.x, r2.x
 218: mul r0.x, r0.x, r2.x
 219: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 220: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 221: mul r0.xyz, r0.yzwy, r2.xyzx
 222: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 223: mul o0.xyz, r1.wwww, r0.xyzx
 224: mov o0.w, l(1.000000)
 225: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 123 math, 7 temp registers, 9 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 8
Set 2D Texture "_Control" to slot 1 sampler slot 2
Set 2D Texture "_Splat0" to slot 2 sampler slot 3
Set 2D Texture "_Splat1" to slot 3 sampler slot 4
Set 2D Texture "_Splat2" to slot 4 sampler slot 5
Set 2D Texture "_Splat3" to slot 5 sampler slot 6
Set 2D Texture "_TerrainNormalmapTexture" to slot 6 sampler slot 7
Set 2D Texture "_LightTexture0" to slot 7 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 0

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 256
  Float _Metallic1 at 260
  Float _Metallic2 at 264
  Float _Metallic3 at 268
  Float _Smoothness0 at 272
  Float _Smoothness1 at 276
  Float _Smoothness2 at 280
  Float _Smoothness3 at 284
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[18], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: sample r3.xyzw, v5.xyxx, t0.xyzw, s8
   9: eq r1.w, r3.x, l(0.000000)
  10: discard_nz r1.w
  11: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r3.xy, v5.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, cb0[9].xyxx
  14: sample r3.xyzw, r3.xyxx, t1.xyzw, s2
  15: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r3.xyzw, r3.xyzw, r2.wwww
  18: mad r4.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r4.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r5.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r5.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r6.xyzw, r4.xyxx, t2.xyzw, s3
  23: mul r6.xyzw, r3.xxxx, r6.xyzw
  24: mul r6.w, r6.w, cb0[17].x
  25: sample r4.xyzw, r4.zwzz, t3.xyzw, s4
  26: mul r4.xyzw, r3.yyyy, r4.xyzw
  27: mul r4.w, r4.w, cb0[17].y
  28: add r4.xyzw, r4.xyzw, r6.xyzw
  29: sample r6.xyzw, r5.xyxx, t4.xyzw, s5
  30: mul r6.xyzw, r3.zzzz, r6.xyzw
  31: mul r6.w, r6.w, cb0[17].z
  32: add r4.xyzw, r4.xyzw, r6.xyzw
  33: sample r5.xyzw, r5.zwzz, t5.xyzw, s6
  34: mul r5.xyzw, r3.wwww, r5.xyzw
  35: mul r5.w, r5.w, cb0[17].w
  36: add r4.xyzw, r4.xyzw, r5.xyzw
  37: sample r5.xyzw, v5.zwzz, t6.xyzw, s7
  38: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  39: dp3 r2.w, r5.xyzx, r5.xyzx
  40: rsq r2.w, r2.w
  41: mul r5.xyz, r2.wwww, r5.xyzx
  42: dp4 r2.w, r3.xyzw, cb0[16].xyzw
  43: mul r3.xyz, v4.yyyy, cb0[5].xyzx
  44: mad r3.xyz, cb0[4].xyzx, v4.xxxx, r3.xyzx
  45: mad r3.xyz, cb0[6].xyzx, v4.zzzz, r3.xyzx
  46: add r3.xyz, r3.xyzx, cb0[7].xyzx
  47: eq r3.w, cb3[0].x, l(1.000000)
  48: if_nz r3.w
  49:   eq r3.w, cb3[0].y, l(1.000000)
  50:   mul r6.xyz, v4.yyyy, cb3[2].xyzx
  51:   mad r6.xyz, cb3[1].xyzx, v4.xxxx, r6.xyzx
  52:   mad r6.xyz, cb3[3].xyzx, v4.zzzz, r6.xyzx
  53:   add r6.xyz, r6.xyzx, cb3[4].xyzx
  54:   movc r6.xyz, r3.wwww, r6.xyzx, v4.xyzx
  55:   add r6.xyz, r6.xyzx, -cb3[6].xyzx
  56:   mul r6.yzw, r6.xxyz, cb3[5].xxyz
  57:   mad r3.w, r6.y, l(0.250000), l(0.750000)
  58:   mad r5.w, cb3[0].z, l(0.500000), l(0.750000)
  59:   max r6.x, r3.w, r5.w
  60:   sample r6.xyzw, r6.xzwx, t8.xyzw, s0
  61: else 
  62:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  63: endif 
  64: dp4_sat r3.w, r6.xyzw, cb2[46].xyzw
  65: dp3 r3.x, r3.xyzx, r3.xyzx
  66: sample r6.xyzw, r3.xxxx, t7.xyzw, s1
  67: mul r3.x, r3.w, r6.x
  68: dp3 r6.x, v1.xyzx, r5.xyzx
  69: dp3 r6.y, v2.xyzx, r5.xyzx
  70: dp3 r6.z, v3.xyzx, r5.xyzx
  71: dp3 r3.y, r6.xyzx, r6.xyzx
  72: rsq r3.y, r3.y
  73: mul r3.yzw, r3.yyyy, r6.xxyz
  74: mul r5.xyz, r3.xxxx, cb0[2].xyzx
  75: add r6.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  76: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  77: mad r2.w, -r2.w, l(0.779084), l(0.779084)
  78: mul r4.xyz, r2.wwww, r4.xyzx
  79: add r2.w, -r4.w, l(1.000000)
  80: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
  81: dp3 r0.w, r0.xyzx, r0.xyzx
  82: max r0.w, r0.w, l(0.001000)
  83: rsq r0.w, r0.w
  84: mul r0.xyz, r0.wwww, r0.xyzx
  85: dp3 r0.w, r3.yzwy, r2.xyzx
  86: dp3_sat r2.x, r3.yzwy, r1.xyzx
  87: dp3_sat r2.y, r3.yzwy, r0.xyzx
  88: dp3_sat r0.x, r1.xyzx, r0.xyzx
  89: add r0.y, r0.x, r0.x
  90: mul r0.y, r0.x, r0.y
  91: mad r0.y, r0.y, r2.w, l(-0.500000)
  92: add r0.z, -r2.x, l(1.000000)
  93: mul r1.x, r0.z, r0.z
  94: mul r1.x, r1.x, r1.x
  95: mul r0.z, r0.z, r1.x
  96: mad r0.z, r0.y, r0.z, l(1.000000)
  97: add r1.x, -|r0.w|, l(1.000000)
  98: mul r1.y, r1.x, r1.x
  99: mul r1.y, r1.y, r1.y
 100: mul r1.x, r1.x, r1.y
 101: mad r0.y, r0.y, r1.x, l(1.000000)
 102: mul r0.y, r0.y, r0.z
 103: mul r0.z, r2.w, r2.w
 104: max r0.z, r0.z, l(0.002000)
 105: add r1.x, -r0.z, l(1.000000)
 106: mad r1.y, |r0.w|, r1.x, r0.z
 107: mad r1.x, r2.x, r1.x, r0.z
 108: mul r0.w, |r0.w|, r1.x
 109: mad r0.w, r2.x, r1.y, r0.w
 110: add r0.w, r0.w, l(0.000010)
 111: div r0.w, l(0.500000), r0.w
 112: mul r0.z, r0.z, r0.z
 113: mad r1.x, r2.y, r0.z, -r2.y
 114: mad r1.x, r1.x, r2.y, l(1.000000)
 115: mul r0.z, r0.z, l(0.318310)
 116: mad r1.x, r1.x, r1.x, l(0.000000)
 117: div r0.z, r0.z, r1.x
 118: mul r0.z, r0.z, r0.w
 119: mul r0.z, r0.z, l(3.141593)
 120: max r0.z, r0.z, l(0.000100)
 121: sqrt r0.z, r0.z
 122: mul r0.yz, r2.xxxx, r0.yyzy
 123: dp3 r0.w, r6.xyzx, r6.xyzx
 124: ne r0.w, r0.w, l(0.000000)
 125: and r0.w, r0.w, l(0x3f800000)
 126: mul r0.z, r0.w, r0.z
 127: mul r1.xyz, r0.yyyy, r5.xyzx
 128: mul r0.yzw, r5.xxyz, r0.zzzz
 129: add r0.x, -r0.x, l(1.000000)
 130: mul r2.x, r0.x, r0.x
 131: mul r2.x, r2.x, r2.x
 132: mul r0.x, r0.x, r2.x
 133: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 134: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 135: mul r0.xyz, r0.yzwy, r2.xyzx
 136: mad r0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
 137: mul o0.xyz, r1.wwww, r0.xyzx
 138: mov o0.w, l(1.000000)
 139: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 113 math, 6 temp registers, 8 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 7
Set 2D Texture "_Control" to slot 1
Set 2D Texture "_Splat0" to slot 2
Set 2D Texture "_Splat1" to slot 3
Set 2D Texture "_Splat2" to slot 4
Set 2D Texture "_Splat3" to slot 5
Set 2D Texture "_TerrainNormalmapTexture" to slot 6
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 0

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 192
  Float _Metallic1 at 196
  Float _Metallic2 at 200
  Float _Metallic3 at 204
  Float _Smoothness0 at 208
  Float _Smoothness1 at 212
  Float _Smoothness2 at 216
  Float _Smoothness3 at 220
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float       
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v5.xyxx, t0.xyzw, s7
   5: eq r1.w, r2.x, l(0.000000)
   6: discard_nz r1.w
   7: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r2.xy, r2.xyxx, cb0[5].xyxx
  10: sample r2.xyzw, r2.xyxx, t1.xyzw, s1
  11: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r3.x, r1.w, l(0.001000)
  13: div r2.xyzw, r2.xyzw, r3.xxxx
  14: mad r3.xy, v5.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r3.zw, v5.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r4.xy, v5.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r4.zw, v5.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r5.xyzw, r3.xyxx, t2.xyzw, s2
  19: mul r5.xyzw, r2.xxxx, r5.xyzw
  20: mul r5.w, r5.w, cb0[13].x
  21: sample r3.xyzw, r3.zwzz, t3.xyzw, s3
  22: mul r3.xyzw, r2.yyyy, r3.xyzw
  23: mul r3.w, r3.w, cb0[13].y
  24: add r3.xyzw, r3.xyzw, r5.xyzw
  25: sample r5.xyzw, r4.xyxx, t4.xyzw, s4
  26: mul r5.xyzw, r2.zzzz, r5.xyzw
  27: mul r5.w, r5.w, cb0[13].z
  28: add r3.xyzw, r3.xyzw, r5.xyzw
  29: sample r4.xyzw, r4.zwzz, t5.xyzw, s5
  30: mul r4.xyzw, r2.wwww, r4.xyzw
  31: mul r4.w, r4.w, cb0[13].w
  32: add r3.xyzw, r3.xyzw, r4.xyzw
  33: sample r4.xyzw, v5.zwzz, t6.xyzw, s6
  34: mad r4.xyz, r4.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  35: dp3 r4.w, r4.xyzx, r4.xyzx
  36: rsq r4.w, r4.w
  37: mul r4.xyz, r4.wwww, r4.xyzx
  38: dp4 r2.x, r2.xyzw, cb0[12].xyzw
  39: eq r2.y, cb3[0].x, l(1.000000)
  40: if_nz r2.y
  41:   eq r2.y, cb3[0].y, l(1.000000)
  42:   mul r5.xyz, v4.yyyy, cb3[2].xyzx
  43:   mad r5.xyz, cb3[1].xyzx, v4.xxxx, r5.xyzx
  44:   mad r5.xyz, cb3[3].xyzx, v4.zzzz, r5.xyzx
  45:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  46:   movc r2.yzw, r2.yyyy, r5.xxyz, v4.xxyz
  47:   add r2.yzw, r2.yyzw, -cb3[6].xxyz
  48:   mul r5.yzw, r2.yyzw, cb3[5].xxyz
  49:   mad r2.y, r5.y, l(0.250000), l(0.750000)
  50:   mad r2.z, cb3[0].z, l(0.500000), l(0.750000)
  51:   max r5.x, r2.z, r2.y
  52:   sample r5.xyzw, r5.xzwx, t7.xyzw, s0
  53: else 
  54:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  55: endif 
  56: dp4_sat r2.y, r5.xyzw, cb2[46].xyzw
  57: dp3 r5.x, v1.xyzx, r4.xyzx
  58: dp3 r5.y, v2.xyzx, r4.xyzx
  59: dp3 r5.z, v3.xyzx, r4.xyzx
  60: dp3 r2.z, r5.xyzx, r5.xyzx
  61: rsq r2.z, r2.z
  62: mul r4.xyz, r2.zzzz, r5.xyzx
  63: mul r2.yzw, r2.yyyy, cb0[2].xxyz
  64: add r5.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  65: mad r5.xyz, r2.xxxx, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  66: mad r2.x, -r2.x, l(0.779084), l(0.779084)
  67: mul r3.xyz, r2.xxxx, r3.xyzx
  68: add r2.x, -r3.w, l(1.000000)
  69: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  70: dp3 r0.w, r0.xyzx, r0.xyzx
  71: max r0.w, r0.w, l(0.001000)
  72: rsq r0.w, r0.w
  73: mul r0.xyz, r0.wwww, r0.xyzx
  74: dp3 r0.w, r4.xyzx, r1.xyzx
  75: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
  76: dp3_sat r1.y, r4.xyzx, r0.xyzx
  77: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  78: add r0.y, r0.x, r0.x
  79: mul r0.y, r0.x, r0.y
  80: mad r0.y, r0.y, r2.x, l(-0.500000)
  81: add r0.z, -r1.x, l(1.000000)
  82: mul r1.z, r0.z, r0.z
  83: mul r1.z, r1.z, r1.z
  84: mul r0.z, r0.z, r1.z
  85: mad r0.z, r0.y, r0.z, l(1.000000)
  86: add r1.z, -|r0.w|, l(1.000000)
  87: mul r3.w, r1.z, r1.z
  88: mul r3.w, r3.w, r3.w
  89: mul r1.z, r1.z, r3.w
  90: mad r0.y, r0.y, r1.z, l(1.000000)
  91: mul r0.y, r0.y, r0.z
  92: mul r0.z, r2.x, r2.x
  93: max r0.z, r0.z, l(0.002000)
  94: add r1.z, -r0.z, l(1.000000)
  95: mad r2.x, |r0.w|, r1.z, r0.z
  96: mad r1.z, r1.x, r1.z, r0.z
  97: mul r0.w, |r0.w|, r1.z
  98: mad r0.w, r1.x, r2.x, r0.w
  99: add r0.w, r0.w, l(0.000010)
 100: div r0.w, l(0.500000), r0.w
 101: mul r0.z, r0.z, r0.z
 102: mad r1.z, r1.y, r0.z, -r1.y
 103: mad r1.y, r1.z, r1.y, l(1.000000)
 104: mul r0.z, r0.z, l(0.318310)
 105: mad r1.y, r1.y, r1.y, l(0.000000)
 106: div r0.z, r0.z, r1.y
 107: mul r0.z, r0.z, r0.w
 108: mul r0.z, r0.z, l(3.141593)
 109: max r0.z, r0.z, l(0.000100)
 110: sqrt r0.z, r0.z
 111: mul r0.yz, r1.xxxx, r0.yyzy
 112: dp3 r0.w, r5.xyzx, r5.xyzx
 113: ne r0.w, r0.w, l(0.000000)
 114: and r0.w, r0.w, l(0x3f800000)
 115: mul r0.z, r0.w, r0.z
 116: mul r1.xyz, r0.yyyy, r2.yzwy
 117: mul r0.yzw, r2.yyzw, r0.zzzz
 118: add r0.x, -r0.x, l(1.000000)
 119: mul r2.x, r0.x, r0.x
 120: mul r2.x, r2.x, r2.x
 121: mul r0.x, r0.x, r2.x
 122: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 123: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 124: mul r0.xyz, r0.yzwy, r2.xyzx
 125: mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
 126: mul o0.xyz, r1.wwww, r0.xyzx
 127: mov o0.w, l(1.000000)
 128: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SPOT 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 129 math, 8 temp registers, 10 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 9
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_TerrainNormalmapTexture" to slot 6 sampler slot 8
Set 2D Texture "_LightTexture0" to slot 7 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 8 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 9 sampler slot 0

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 256
  Float _Metallic1 at 260
  Float _Metallic2 at 264
  Float _Metallic3 at 268
  Float _Smoothness0 at 272
  Float _Smoothness1 at 276
  Float _Smoothness2 at 280
  Float _Smoothness3 at 284
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[18], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture3d (float,float,float,float) t9
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: sample r3.xyzw, v5.xyxx, t0.xyzw, s9
   9: eq r1.w, r3.x, l(0.000000)
  10: discard_nz r1.w
  11: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r3.xy, v5.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, cb0[9].xyxx
  14: sample r3.xyzw, r3.xyxx, t1.xyzw, s3
  15: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r3.xyzw, r3.xyzw, r2.wwww
  18: mad r4.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r4.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r5.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r5.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r6.xyzw, r4.xyxx, t2.xyzw, s4
  23: mul r6.xyzw, r3.xxxx, r6.xyzw
  24: mul r6.w, r6.w, cb0[17].x
  25: sample r4.xyzw, r4.zwzz, t3.xyzw, s5
  26: mul r4.xyzw, r3.yyyy, r4.xyzw
  27: mul r4.w, r4.w, cb0[17].y
  28: add r4.xyzw, r4.xyzw, r6.xyzw
  29: sample r6.xyzw, r5.xyxx, t4.xyzw, s6
  30: mul r6.xyzw, r3.zzzz, r6.xyzw
  31: mul r6.w, r6.w, cb0[17].z
  32: add r4.xyzw, r4.xyzw, r6.xyzw
  33: sample r5.xyzw, r5.zwzz, t5.xyzw, s7
  34: mul r5.xyzw, r3.wwww, r5.xyzw
  35: mul r5.w, r5.w, cb0[17].w
  36: add r4.xyzw, r4.xyzw, r5.xyzw
  37: sample r5.xyzw, v5.zwzz, t6.xyzw, s8
  38: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  39: dp3 r2.w, r5.xyzx, r5.xyzx
  40: rsq r2.w, r2.w
  41: mul r5.xyz, r2.wwww, r5.xyzx
  42: dp4 r2.w, r3.xyzw, cb0[16].xyzw
  43: mul r3.xyzw, v4.yyyy, cb0[5].xyzw
  44: mad r3.xyzw, cb0[4].xyzw, v4.xxxx, r3.xyzw
  45: mad r3.xyzw, cb0[6].xyzw, v4.zzzz, r3.xyzw
  46: add r3.xyzw, r3.xyzw, cb0[7].xyzw
  47: eq r5.w, cb3[0].x, l(1.000000)
  48: if_nz r5.w
  49:   eq r5.w, cb3[0].y, l(1.000000)
  50:   mul r6.xyz, v4.yyyy, cb3[2].xyzx
  51:   mad r6.xyz, cb3[1].xyzx, v4.xxxx, r6.xyzx
  52:   mad r6.xyz, cb3[3].xyzx, v4.zzzz, r6.xyzx
  53:   add r6.xyz, r6.xyzx, cb3[4].xyzx
  54:   movc r6.xyz, r5.wwww, r6.xyzx, v4.xyzx
  55:   add r6.xyz, r6.xyzx, -cb3[6].xyzx
  56:   mul r6.yzw, r6.xxyz, cb3[5].xxyz
  57:   mad r5.w, r6.y, l(0.250000), l(0.750000)
  58:   mad r6.y, cb3[0].z, l(0.500000), l(0.750000)
  59:   max r6.x, r5.w, r6.y
  60:   sample r6.xyzw, r6.xzwx, t9.xyzw, s0
  61: else 
  62:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  63: endif 
  64: dp4_sat r5.w, r6.xyzw, cb2[46].xyzw
  65: lt r6.x, l(0.000000), r3.z
  66: and r6.x, r6.x, l(0x3f800000)
  67: div r6.yz, r3.xxyx, r3.wwww
  68: add r6.yz, r6.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  69: sample r7.xyzw, r6.yzyy, t7.xyzw, s1
  70: mul r3.w, r6.x, r7.w
  71: dp3 r3.x, r3.xyzx, r3.xyzx
  72: sample r6.xyzw, r3.xxxx, t8.xyzw, s2
  73: mul r3.x, r3.w, r6.x
  74: mul r3.x, r5.w, r3.x
  75: dp3 r6.x, v1.xyzx, r5.xyzx
  76: dp3 r6.y, v2.xyzx, r5.xyzx
  77: dp3 r6.z, v3.xyzx, r5.xyzx
  78: dp3 r3.y, r6.xyzx, r6.xyzx
  79: rsq r3.y, r3.y
  80: mul r3.yzw, r3.yyyy, r6.xxyz
  81: mul r5.xyz, r3.xxxx, cb0[2].xyzx
  82: add r6.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  83: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  84: mad r2.w, -r2.w, l(0.779084), l(0.779084)
  85: mul r4.xyz, r2.wwww, r4.xyzx
  86: add r2.w, -r4.w, l(1.000000)
  87: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
  88: dp3 r0.w, r0.xyzx, r0.xyzx
  89: max r0.w, r0.w, l(0.001000)
  90: rsq r0.w, r0.w
  91: mul r0.xyz, r0.wwww, r0.xyzx
  92: dp3 r0.w, r3.yzwy, r2.xyzx
  93: dp3_sat r2.x, r3.yzwy, r1.xyzx
  94: dp3_sat r2.y, r3.yzwy, r0.xyzx
  95: dp3_sat r0.x, r1.xyzx, r0.xyzx
  96: add r0.y, r0.x, r0.x
  97: mul r0.y, r0.x, r0.y
  98: mad r0.y, r0.y, r2.w, l(-0.500000)
  99: add r0.z, -r2.x, l(1.000000)
 100: mul r1.x, r0.z, r0.z
 101: mul r1.x, r1.x, r1.x
 102: mul r0.z, r0.z, r1.x
 103: mad r0.z, r0.y, r0.z, l(1.000000)
 104: add r1.x, -|r0.w|, l(1.000000)
 105: mul r1.y, r1.x, r1.x
 106: mul r1.y, r1.y, r1.y
 107: mul r1.x, r1.x, r1.y
 108: mad r0.y, r0.y, r1.x, l(1.000000)
 109: mul r0.y, r0.y, r0.z
 110: mul r0.z, r2.w, r2.w
 111: max r0.z, r0.z, l(0.002000)
 112: add r1.x, -r0.z, l(1.000000)
 113: mad r1.y, |r0.w|, r1.x, r0.z
 114: mad r1.x, r2.x, r1.x, r0.z
 115: mul r0.w, |r0.w|, r1.x
 116: mad r0.w, r2.x, r1.y, r0.w
 117: add r0.w, r0.w, l(0.000010)
 118: div r0.w, l(0.500000), r0.w
 119: mul r0.z, r0.z, r0.z
 120: mad r1.x, r2.y, r0.z, -r2.y
 121: mad r1.x, r1.x, r2.y, l(1.000000)
 122: mul r0.z, r0.z, l(0.318310)
 123: mad r1.x, r1.x, r1.x, l(0.000000)
 124: div r0.z, r0.z, r1.x
 125: mul r0.z, r0.z, r0.w
 126: mul r0.z, r0.z, l(3.141593)
 127: max r0.z, r0.z, l(0.000100)
 128: sqrt r0.z, r0.z
 129: mul r0.yz, r2.xxxx, r0.yyzy
 130: dp3 r0.w, r6.xyzx, r6.xyzx
 131: ne r0.w, r0.w, l(0.000000)
 132: and r0.w, r0.w, l(0x3f800000)
 133: mul r0.z, r0.w, r0.z
 134: mul r1.xyz, r0.yyyy, r5.xyzx
 135: mul r0.yzw, r5.xxyz, r0.zzzz
 136: add r0.x, -r0.x, l(1.000000)
 137: mul r2.x, r0.x, r0.x
 138: mul r2.x, r2.x, r2.x
 139: mul r0.x, r0.x, r2.x
 140: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 141: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 142: mul r0.xyz, r0.yzwy, r2.xyzx
 143: mad r0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
 144: mul o0.xyz, r1.wwww, r0.xyzx
 145: mov o0.w, l(1.000000)
 146: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT_COOKIE 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 124 math, 8 temp registers, 10 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 9
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_TerrainNormalmapTexture" to slot 6 sampler slot 8
Set 2D Texture "_LightTextureB0" to slot 7 sampler slot 2
Set CUBE Texture "_LightTexture0" to slot 8 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 9 sampler slot 0

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 256
  Float _Metallic1 at 260
  Float _Metallic2 at 264
  Float _Metallic3 at 268
  Float _Smoothness0 at 272
  Float _Smoothness1 at 276
  Float _Smoothness2 at 280
  Float _Smoothness3 at 284
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[18], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texturecube (float,float,float,float) t8
      dcl_resource_texture3d (float,float,float,float) t9
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: sample r3.xyzw, v5.xyxx, t0.xyzw, s9
   9: eq r1.w, r3.x, l(0.000000)
  10: discard_nz r1.w
  11: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r3.xy, v5.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, cb0[9].xyxx
  14: sample r3.xyzw, r3.xyxx, t1.xyzw, s3
  15: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r3.xyzw, r3.xyzw, r2.wwww
  18: mad r4.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r4.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r5.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r5.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r6.xyzw, r4.xyxx, t2.xyzw, s4
  23: mul r6.xyzw, r3.xxxx, r6.xyzw
  24: mul r6.w, r6.w, cb0[17].x
  25: sample r4.xyzw, r4.zwzz, t3.xyzw, s5
  26: mul r4.xyzw, r3.yyyy, r4.xyzw
  27: mul r4.w, r4.w, cb0[17].y
  28: add r4.xyzw, r4.xyzw, r6.xyzw
  29: sample r6.xyzw, r5.xyxx, t4.xyzw, s6
  30: mul r6.xyzw, r3.zzzz, r6.xyzw
  31: mul r6.w, r6.w, cb0[17].z
  32: add r4.xyzw, r4.xyzw, r6.xyzw
  33: sample r5.xyzw, r5.zwzz, t5.xyzw, s7
  34: mul r5.xyzw, r3.wwww, r5.xyzw
  35: mul r5.w, r5.w, cb0[17].w
  36: add r4.xyzw, r4.xyzw, r5.xyzw
  37: sample r5.xyzw, v5.zwzz, t6.xyzw, s8
  38: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  39: dp3 r2.w, r5.xyzx, r5.xyzx
  40: rsq r2.w, r2.w
  41: mul r5.xyz, r2.wwww, r5.xyzx
  42: dp4 r2.w, r3.xyzw, cb0[16].xyzw
  43: mul r3.xyz, v4.yyyy, cb0[5].xyzx
  44: mad r3.xyz, cb0[4].xyzx, v4.xxxx, r3.xyzx
  45: mad r3.xyz, cb0[6].xyzx, v4.zzzz, r3.xyzx
  46: add r3.xyz, r3.xyzx, cb0[7].xyzx
  47: eq r3.w, cb3[0].x, l(1.000000)
  48: if_nz r3.w
  49:   eq r3.w, cb3[0].y, l(1.000000)
  50:   mul r6.xyz, v4.yyyy, cb3[2].xyzx
  51:   mad r6.xyz, cb3[1].xyzx, v4.xxxx, r6.xyzx
  52:   mad r6.xyz, cb3[3].xyzx, v4.zzzz, r6.xyzx
  53:   add r6.xyz, r6.xyzx, cb3[4].xyzx
  54:   movc r6.xyz, r3.wwww, r6.xyzx, v4.xyzx
  55:   add r6.xyz, r6.xyzx, -cb3[6].xyzx
  56:   mul r6.yzw, r6.xxyz, cb3[5].xxyz
  57:   mad r3.w, r6.y, l(0.250000), l(0.750000)
  58:   mad r5.w, cb3[0].z, l(0.500000), l(0.750000)
  59:   max r6.x, r3.w, r5.w
  60:   sample r6.xyzw, r6.xzwx, t9.xyzw, s0
  61: else 
  62:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  63: endif 
  64: dp4_sat r3.w, r6.xyzw, cb2[46].xyzw
  65: dp3 r5.w, r3.xyzx, r3.xyzx
  66: sample r6.xyzw, r5.wwww, t7.xyzw, s2
  67: sample r7.xyzw, r3.xyzx, t8.xyzw, s1
  68: mul r3.x, r6.x, r7.w
  69: mul r3.x, r3.w, r3.x
  70: dp3 r6.x, v1.xyzx, r5.xyzx
  71: dp3 r6.y, v2.xyzx, r5.xyzx
  72: dp3 r6.z, v3.xyzx, r5.xyzx
  73: dp3 r3.y, r6.xyzx, r6.xyzx
  74: rsq r3.y, r3.y
  75: mul r3.yzw, r3.yyyy, r6.xxyz
  76: mul r5.xyz, r3.xxxx, cb0[2].xyzx
  77: add r6.xyz, r4.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  78: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  79: mad r2.w, -r2.w, l(0.779084), l(0.779084)
  80: mul r4.xyz, r2.wwww, r4.xyzx
  81: add r2.w, -r4.w, l(1.000000)
  82: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
  83: dp3 r0.w, r0.xyzx, r0.xyzx
  84: max r0.w, r0.w, l(0.001000)
  85: rsq r0.w, r0.w
  86: mul r0.xyz, r0.wwww, r0.xyzx
  87: dp3 r0.w, r3.yzwy, r2.xyzx
  88: dp3_sat r2.x, r3.yzwy, r1.xyzx
  89: dp3_sat r2.y, r3.yzwy, r0.xyzx
  90: dp3_sat r0.x, r1.xyzx, r0.xyzx
  91: add r0.y, r0.x, r0.x
  92: mul r0.y, r0.x, r0.y
  93: mad r0.y, r0.y, r2.w, l(-0.500000)
  94: add r0.z, -r2.x, l(1.000000)
  95: mul r1.x, r0.z, r0.z
  96: mul r1.x, r1.x, r1.x
  97: mul r0.z, r0.z, r1.x
  98: mad r0.z, r0.y, r0.z, l(1.000000)
  99: add r1.x, -|r0.w|, l(1.000000)
 100: mul r1.y, r1.x, r1.x
 101: mul r1.y, r1.y, r1.y
 102: mul r1.x, r1.x, r1.y
 103: mad r0.y, r0.y, r1.x, l(1.000000)
 104: mul r0.y, r0.y, r0.z
 105: mul r0.z, r2.w, r2.w
 106: max r0.z, r0.z, l(0.002000)
 107: add r1.x, -r0.z, l(1.000000)
 108: mad r1.y, |r0.w|, r1.x, r0.z
 109: mad r1.x, r2.x, r1.x, r0.z
 110: mul r0.w, |r0.w|, r1.x
 111: mad r0.w, r2.x, r1.y, r0.w
 112: add r0.w, r0.w, l(0.000010)
 113: div r0.w, l(0.500000), r0.w
 114: mul r0.z, r0.z, r0.z
 115: mad r1.x, r2.y, r0.z, -r2.y
 116: mad r1.x, r1.x, r2.y, l(1.000000)
 117: mul r0.z, r0.z, l(0.318310)
 118: mad r1.x, r1.x, r1.x, l(0.000000)
 119: div r0.z, r0.z, r1.x
 120: mul r0.z, r0.z, r0.w
 121: mul r0.z, r0.z, l(3.141593)
 122: max r0.z, r0.z, l(0.000100)
 123: sqrt r0.z, r0.z
 124: mul r0.yz, r2.xxxx, r0.yyzy
 125: dp3 r0.w, r6.xyzx, r6.xyzx
 126: ne r0.w, r0.w, l(0.000000)
 127: and r0.w, r0.w, l(0x3f800000)
 128: mul r0.z, r0.w, r0.z
 129: mul r1.xyz, r0.yyyy, r5.xyzx
 130: mul r0.yzw, r5.xxyz, r0.zzzz
 131: add r0.x, -r0.x, l(1.000000)
 132: mul r2.x, r0.x, r0.x
 133: mul r2.x, r2.x, r2.x
 134: mul r0.x, r0.x, r2.x
 135: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 136: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 137: mul r0.xyz, r0.yzwy, r2.xyzx
 138: mad r0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
 139: mul o0.xyz, r1.wwww, r0.xyzx
 140: mov o0.w, l(1.000000)
 141: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE INSTANCING_ON 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 118 math, 6 temp registers, 9 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 8
Set 2D Texture "_Control" to slot 1 sampler slot 2
Set 2D Texture "_Splat0" to slot 2 sampler slot 3
Set 2D Texture "_Splat1" to slot 3 sampler slot 4
Set 2D Texture "_Splat2" to slot 4 sampler slot 5
Set 2D Texture "_Splat3" to slot 5 sampler slot 6
Set 2D Texture "_TerrainNormalmapTexture" to slot 6 sampler slot 7
Set 2D Texture "_LightTexture0" to slot 7 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 0

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 256
  Float _Metallic1 at 260
  Float _Metallic2 at 264
  Float _Metallic3 at 268
  Float _Smoothness0 at 272
  Float _Smoothness1 at 276
  Float _Smoothness2 at 280
  Float _Smoothness3 at 284
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[18], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v5.xyxx, t0.xyzw, s8
   5: eq r1.w, r2.x, l(0.000000)
   6: discard_nz r1.w
   7: add r2.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r2.xy, r2.xyxx, cb0[9].xyxx
  10: sample r2.xyzw, r2.xyxx, t1.xyzw, s2
  11: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r3.x, r1.w, l(0.001000)
  13: div r2.xyzw, r2.xyzw, r3.xxxx
  14: mad r3.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  15: mad r3.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  16: mad r4.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  17: mad r4.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  18: sample r5.xyzw, r3.xyxx, t2.xyzw, s3
  19: mul r5.xyzw, r2.xxxx, r5.xyzw
  20: mul r5.w, r5.w, cb0[17].x
  21: sample r3.xyzw, r3.zwzz, t3.xyzw, s4
  22: mul r3.xyzw, r2.yyyy, r3.xyzw
  23: mul r3.w, r3.w, cb0[17].y
  24: add r3.xyzw, r3.xyzw, r5.xyzw
  25: sample r5.xyzw, r4.xyxx, t4.xyzw, s5
  26: mul r5.xyzw, r2.zzzz, r5.xyzw
  27: mul r5.w, r5.w, cb0[17].z
  28: add r3.xyzw, r3.xyzw, r5.xyzw
  29: sample r4.xyzw, r4.zwzz, t5.xyzw, s6
  30: mul r4.xyzw, r2.wwww, r4.xyzw
  31: mul r4.w, r4.w, cb0[17].w
  32: add r3.xyzw, r3.xyzw, r4.xyzw
  33: sample r4.xyzw, v5.zwzz, t6.xyzw, s7
  34: mad r4.xyz, r4.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  35: dp3 r4.w, r4.xyzx, r4.xyzx
  36: rsq r4.w, r4.w
  37: mul r4.xyz, r4.wwww, r4.xyzx
  38: dp4 r2.x, r2.xyzw, cb0[16].xyzw
  39: mul r2.yz, v4.yyyy, cb0[5].xxyx
  40: mad r2.yz, cb0[4].xxyx, v4.xxxx, r2.yyzy
  41: mad r2.yz, cb0[6].xxyx, v4.zzzz, r2.yyzy
  42: add r2.yz, r2.yyzy, cb0[7].xxyx
  43: eq r2.w, cb3[0].x, l(1.000000)
  44: if_nz r2.w
  45:   eq r2.w, cb3[0].y, l(1.000000)
  46:   mul r5.xyz, v4.yyyy, cb3[2].xyzx
  47:   mad r5.xyz, cb3[1].xyzx, v4.xxxx, r5.xyzx
  48:   mad r5.xyz, cb3[3].xyzx, v4.zzzz, r5.xyzx
  49:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  50:   movc r5.xyz, r2.wwww, r5.xyzx, v4.xyzx
  51:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
  52:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
  53:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  54:   mad r4.w, cb3[0].z, l(0.500000), l(0.750000)
  55:   max r5.x, r2.w, r4.w
  56:   sample r5.xyzw, r5.xzwx, t8.xyzw, s0
  57: else 
  58:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  59: endif 
  60: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  61: sample r5.xyzw, r2.yzyy, t7.xyzw, s1
  62: mul r2.y, r2.w, r5.w
  63: dp3 r5.x, v1.xyzx, r4.xyzx
  64: dp3 r5.y, v2.xyzx, r4.xyzx
  65: dp3 r5.z, v3.xyzx, r4.xyzx
  66: dp3 r2.z, r5.xyzx, r5.xyzx
  67: rsq r2.z, r2.z
  68: mul r4.xyz, r2.zzzz, r5.xyzx
  69: mul r2.yzw, r2.yyyy, cb0[2].xxyz
  70: add r5.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  71: mad r5.xyz, r2.xxxx, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  72: mad r2.x, -r2.x, l(0.779084), l(0.779084)
  73: mul r3.xyz, r2.xxxx, r3.xyzx
  74: add r2.x, -r3.w, l(1.000000)
  75: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  76: dp3 r0.w, r0.xyzx, r0.xyzx
  77: max r0.w, r0.w, l(0.001000)
  78: rsq r0.w, r0.w
  79: mul r0.xyz, r0.wwww, r0.xyzx
  80: dp3 r0.w, r4.xyzx, r1.xyzx
  81: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
  82: dp3_sat r1.y, r4.xyzx, r0.xyzx
  83: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  84: add r0.y, r0.x, r0.x
  85: mul r0.y, r0.x, r0.y
  86: mad r0.y, r0.y, r2.x, l(-0.500000)
  87: add r0.z, -r1.x, l(1.000000)
  88: mul r1.z, r0.z, r0.z
  89: mul r1.z, r1.z, r1.z
  90: mul r0.z, r0.z, r1.z
  91: mad r0.z, r0.y, r0.z, l(1.000000)
  92: add r1.z, -|r0.w|, l(1.000000)
  93: mul r3.w, r1.z, r1.z
  94: mul r3.w, r3.w, r3.w
  95: mul r1.z, r1.z, r3.w
  96: mad r0.y, r0.y, r1.z, l(1.000000)
  97: mul r0.y, r0.y, r0.z
  98: mul r0.z, r2.x, r2.x
  99: max r0.z, r0.z, l(0.002000)
 100: add r1.z, -r0.z, l(1.000000)
 101: mad r2.x, |r0.w|, r1.z, r0.z
 102: mad r1.z, r1.x, r1.z, r0.z
 103: mul r0.w, |r0.w|, r1.z
 104: mad r0.w, r1.x, r2.x, r0.w
 105: add r0.w, r0.w, l(0.000010)
 106: div r0.w, l(0.500000), r0.w
 107: mul r0.z, r0.z, r0.z
 108: mad r1.z, r1.y, r0.z, -r1.y
 109: mad r1.y, r1.z, r1.y, l(1.000000)
 110: mul r0.z, r0.z, l(0.318310)
 111: mad r1.y, r1.y, r1.y, l(0.000000)
 112: div r0.z, r0.z, r1.y
 113: mul r0.z, r0.z, r0.w
 114: mul r0.z, r0.z, l(3.141593)
 115: max r0.z, r0.z, l(0.000100)
 116: sqrt r0.z, r0.z
 117: mul r0.yz, r1.xxxx, r0.yyzy
 118: dp3 r0.w, r5.xyzx, r5.xyzx
 119: ne r0.w, r0.w, l(0.000000)
 120: and r0.w, r0.w, l(0x3f800000)
 121: mul r0.z, r0.w, r0.z
 122: mul r1.xyz, r0.yyyy, r2.yzwy
 123: mul r0.yzw, r2.yyzw, r0.zzzz
 124: add r0.x, -r0.x, l(1.000000)
 125: mul r2.x, r0.x, r0.x
 126: mul r2.x, r2.x, r2.x
 127: mul r0.x, r0.x, r2.x
 128: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 129: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 130: mul r0.xyz, r0.yzwy, r2.xyzx
 131: mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
 132: mul o0.xyz, r1.wwww, r0.xyzx
 133: mov o0.w, l(1.000000)
 134: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_DEPTH SPOT 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 145 math, 8 temp registers, 10 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 10
Set 2D Texture "_Control" to slot 1 sampler slot 4
Set 2D Texture "_Splat0" to slot 2 sampler slot 5
Set 2D Texture "_Splat1" to slot 3 sampler slot 6
Set 2D Texture "_Splat2" to slot 4 sampler slot 7
Set 2D Texture "_Splat3" to slot 5 sampler slot 8
Set 2D Texture "_TerrainNormalmapTexture" to slot 6 sampler slot 9
Set 2D Texture "_LightTexture0" to slot 7 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 8 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 9 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 10 sampler slot 1

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 256
  Float _Metallic1 at 260
  Float _Metallic2 at 264
  Float _Metallic3 at 268
  Float _Smoothness0 at 272
  Float _Smoothness1 at 276
  Float _Smoothness2 at 280
  Float _Smoothness3 at 284
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[18], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture3d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v5.xyxx, t0.xyzw, s10
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[9].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s4
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s5
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[17].x
  25: sample r5.xyzw, r5.zwzz, t3.xyzw, s6
  26: mul r5.xyzw, r4.yyyy, r5.xyzw
  27: mul r5.w, r5.w, cb0[17].y
  28: add r5.xyzw, r5.xyzw, r7.xyzw
  29: sample r7.xyzw, r6.xyxx, t4.xyzw, s7
  30: mul r7.xyzw, r4.zzzz, r7.xyzw
  31: mul r7.w, r7.w, cb0[17].z
  32: add r5.xyzw, r5.xyzw, r7.xyzw
  33: sample r6.xyzw, r6.zwzz, t5.xyzw, s8
  34: mul r6.xyzw, r4.wwww, r6.xyzw
  35: mul r6.w, r6.w, cb0[17].w
  36: add r5.xyzw, r5.xyzw, r6.xyzw
  37: sample r6.xyzw, v5.zwzz, t6.xyzw, s9
  38: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  39: dp3 r2.w, r6.xyzx, r6.xyzx
  40: rsq r2.w, r2.w
  41: mul r6.xyz, r2.wwww, r6.xyzx
  42: dp4 r2.w, r4.xyzw, cb0[16].xyzw
  43: mul r4.xyzw, v4.yyyy, cb0[5].xyzw
  44: mad r4.xyzw, cb0[4].xyzw, v4.xxxx, r4.xyzw
  45: mad r4.xyzw, cb0[6].xyzw, v4.zzzz, r4.xyzw
  46: add r4.xyzw, r4.xyzw, cb0[7].xyzw
  47: mov r7.x, cb4[9].z
  48: mov r7.y, cb4[10].z
  49: mov r7.z, cb4[11].z
  50: dp3 r2.x, r2.xyzx, r7.xyzx
  51: add r7.xyz, v4.xyzx, -cb3[25].xyzx
  52: dp3 r2.y, r7.xyzx, r7.xyzx
  53: sqrt r2.y, r2.y
  54: add r2.y, -r2.x, r2.y
  55: mad r2.x, cb3[25].w, r2.y, r2.x
  56: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  57: eq r2.y, cb5[0].x, l(1.000000)
  58: if_nz r2.y
  59:   eq r2.y, cb5[0].y, l(1.000000)
  60:   mul r7.xyz, v4.yyyy, cb5[2].xyzx
  61:   mad r7.xyz, cb5[1].xyzx, v4.xxxx, r7.xyzx
  62:   mad r7.xyz, cb5[3].xyzx, v4.zzzz, r7.xyzx
  63:   add r7.xyz, r7.xyzx, cb5[4].xyzx
  64:   movc r7.xyz, r2.yyyy, r7.xyzx, v4.xyzx
  65:   add r7.xyz, r7.xyzx, -cb5[6].xyzx
  66:   mul r7.yzw, r7.xxyz, cb5[5].xxyz
  67:   mad r2.y, r7.y, l(0.250000), l(0.750000)
  68:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  69:   max r7.x, r2.z, r2.y
  70:   sample r7.xyzw, r7.xzwx, t9.xyzw, s0
  71: else 
  72:   mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  73: endif 
  74: dp4_sat r2.y, r7.xyzw, cb2[46].xyzw
  75: mul r7.xyzw, v4.yyyy, cb3[9].xyzw
  76: mad r7.xyzw, cb3[8].xyzw, v4.xxxx, r7.xyzw
  77: mad r7.xyzw, cb3[10].xyzw, v4.zzzz, r7.xyzw
  78: add r7.xyzw, r7.xyzw, cb3[11].xyzw
  79: div r7.xyz, r7.xyzx, r7.wwww
  80: sample_c_lz r2.z, r7.xyxx, t10.xxxx, s1, r7.z
  81: add r3.w, -cb3[24].x, l(1.000000)
  82: mad r2.z, r2.z, r3.w, cb3[24].x
  83: add r2.y, -r2.z, r2.y
  84: mad r2.x, r2.x, r2.y, r2.z
  85: lt r2.y, l(0.000000), r4.z
  86: and r2.y, r2.y, l(0x3f800000)
  87: div r7.xy, r4.xyxx, r4.wwww
  88: add r7.xy, r7.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  89: sample r7.xyzw, r7.xyxx, t7.xyzw, s2
  90: mul r2.y, r2.y, r7.w
  91: dp3 r2.z, r4.xyzx, r4.xyzx
  92: sample r4.xyzw, r2.zzzz, t8.xyzw, s3
  93: mul r2.y, r2.y, r4.x
  94: mul r2.x, r2.x, r2.y
  95: dp3 r4.x, v1.xyzx, r6.xyzx
  96: dp3 r4.y, v2.xyzx, r6.xyzx
  97: dp3 r4.z, v3.xyzx, r6.xyzx
  98: dp3 r2.y, r4.xyzx, r4.xyzx
  99: rsq r2.y, r2.y
 100: mul r4.xyz, r2.yyyy, r4.xyzx
 101: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 102: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 103: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 104: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 105: mul r5.xyz, r2.wwww, r5.xyzx
 106: add r2.w, -r5.w, l(1.000000)
 107: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 108: dp3 r0.w, r0.xyzx, r0.xyzx
 109: max r0.w, r0.w, l(0.001000)
 110: rsq r0.w, r0.w
 111: mul r0.xyz, r0.wwww, r0.xyzx
 112: dp3 r0.w, r4.xyzx, r3.xyzx
 113: dp3_sat r3.x, r4.xyzx, r1.xyzx
 114: dp3_sat r3.y, r4.xyzx, r0.xyzx
 115: dp3_sat r0.x, r1.xyzx, r0.xyzx
 116: add r0.y, r0.x, r0.x
 117: mul r0.y, r0.x, r0.y
 118: mad r0.y, r0.y, r2.w, l(-0.500000)
 119: add r0.z, -r3.x, l(1.000000)
 120: mul r1.x, r0.z, r0.z
 121: mul r1.x, r1.x, r1.x
 122: mul r0.z, r0.z, r1.x
 123: mad r0.z, r0.y, r0.z, l(1.000000)
 124: add r1.x, -|r0.w|, l(1.000000)
 125: mul r1.y, r1.x, r1.x
 126: mul r1.y, r1.y, r1.y
 127: mul r1.x, r1.x, r1.y
 128: mad r0.y, r0.y, r1.x, l(1.000000)
 129: mul r0.y, r0.y, r0.z
 130: mul r0.z, r2.w, r2.w
 131: max r0.z, r0.z, l(0.002000)
 132: add r1.x, -r0.z, l(1.000000)
 133: mad r1.y, |r0.w|, r1.x, r0.z
 134: mad r1.x, r3.x, r1.x, r0.z
 135: mul r0.w, |r0.w|, r1.x
 136: mad r0.w, r3.x, r1.y, r0.w
 137: add r0.w, r0.w, l(0.000010)
 138: div r0.w, l(0.500000), r0.w
 139: mul r0.z, r0.z, r0.z
 140: mad r1.x, r3.y, r0.z, -r3.y
 141: mad r1.x, r1.x, r3.y, l(1.000000)
 142: mul r0.z, r0.z, l(0.318310)
 143: mad r1.x, r1.x, r1.x, l(0.000000)
 144: div r0.z, r0.z, r1.x
 145: mul r0.z, r0.z, r0.w
 146: mul r0.z, r0.z, l(3.141593)
 147: max r0.z, r0.z, l(0.000100)
 148: sqrt r0.z, r0.z
 149: mul r0.yz, r3.xxxx, r0.yyzy
 150: dp3 r0.w, r6.xyzx, r6.xyzx
 151: ne r0.w, r0.w, l(0.000000)
 152: and r0.w, r0.w, l(0x3f800000)
 153: mul r0.z, r0.w, r0.z
 154: mul r1.xyz, r0.yyyy, r2.xyzx
 155: mul r0.yzw, r2.xxyz, r0.zzzz
 156: add r0.x, -r0.x, l(1.000000)
 157: mul r2.x, r0.x, r0.x
 158: mul r2.x, r2.x, r2.x
 159: mul r0.x, r0.x, r2.x
 160: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 161: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 162: mul r0.xyz, r0.yzwy, r2.xyzx
 163: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 164: mul o0.xyz, r1.wwww, r0.xyzx
 165: mov o0.w, l(1.000000)
 166: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_DEPTH SHADOWS_SOFT SPOT 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 174 math, 13 temp registers, 10 textures, 4 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 10
Set 2D Texture "_Control" to slot 1 sampler slot 4
Set 2D Texture "_Splat0" to slot 2 sampler slot 5
Set 2D Texture "_Splat1" to slot 3 sampler slot 6
Set 2D Texture "_Splat2" to slot 4 sampler slot 7
Set 2D Texture "_Splat3" to slot 5 sampler slot 8
Set 2D Texture "_TerrainNormalmapTexture" to slot 6 sampler slot 9
Set 2D Texture "_LightTexture0" to slot 7 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 8 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 9 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 10 sampler slot 1

Constant Buffer "$Globals" (368 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 144
  Vector4 _LightColor0 at 32
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _Control_TexelSize at 224
  Vector4 _Splat0_ST at 240
  Vector4 _Splat1_ST at 256
  Vector4 _Splat2_ST at 272
  Vector4 _Splat3_ST at 288
  Float _Metallic0 at 336
  Float _Metallic1 at 340
  Float _Metallic2 at 344
  Float _Metallic3 at 348
  Float _Smoothness0 at 352
  Float _Smoothness1 at 356
  Float _Smoothness2 at 360
  Float _Smoothness3 at 364
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[23], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture3d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 13
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v5.xyxx, t0.xyzw, s10
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[14].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[14].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s4
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v5.xyxx, cb0[15].xyxx, cb0[15].zwzz
  19: mad r5.zw, v5.xxxy, cb0[16].xxxy, cb0[16].zzzw
  20: mad r6.xy, v5.xyxx, cb0[17].xyxx, cb0[17].zwzz
  21: mad r6.zw, v5.xxxy, cb0[18].xxxy, cb0[18].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s5
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[22].x
  25: sample r5.xyzw, r5.zwzz, t3.xyzw, s6
  26: mul r5.xyzw, r4.yyyy, r5.xyzw
  27: mul r5.w, r5.w, cb0[22].y
  28: add r5.xyzw, r5.xyzw, r7.xyzw
  29: sample r7.xyzw, r6.xyxx, t4.xyzw, s7
  30: mul r7.xyzw, r4.zzzz, r7.xyzw
  31: mul r7.w, r7.w, cb0[22].z
  32: add r5.xyzw, r5.xyzw, r7.xyzw
  33: sample r6.xyzw, r6.zwzz, t5.xyzw, s8
  34: mul r6.xyzw, r4.wwww, r6.xyzw
  35: mul r6.w, r6.w, cb0[22].w
  36: add r5.xyzw, r5.xyzw, r6.xyzw
  37: sample r6.xyzw, v5.zwzz, t6.xyzw, s9
  38: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  39: dp3 r2.w, r6.xyzx, r6.xyzx
  40: rsq r2.w, r2.w
  41: mul r6.xyz, r2.wwww, r6.xyzx
  42: dp4 r2.w, r4.xyzw, cb0[21].xyzw
  43: mul r4.xyzw, v4.yyyy, cb0[10].xyzw
  44: mad r4.xyzw, cb0[9].xyzw, v4.xxxx, r4.xyzw
  45: mad r4.xyzw, cb0[11].xyzw, v4.zzzz, r4.xyzw
  46: add r4.xyzw, r4.xyzw, cb0[12].xyzw
  47: mov r7.x, cb4[9].z
  48: mov r7.y, cb4[10].z
  49: mov r7.z, cb4[11].z
  50: dp3 r2.x, r2.xyzx, r7.xyzx
  51: add r7.xyz, v4.xyzx, -cb3[25].xyzx
  52: dp3 r2.y, r7.xyzx, r7.xyzx
  53: sqrt r2.y, r2.y
  54: add r2.y, -r2.x, r2.y
  55: mad r2.x, cb3[25].w, r2.y, r2.x
  56: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  57: eq r2.y, cb5[0].x, l(1.000000)
  58: if_nz r2.y
  59:   eq r2.y, cb5[0].y, l(1.000000)
  60:   mul r7.xyz, v4.yyyy, cb5[2].xyzx
  61:   mad r7.xyz, cb5[1].xyzx, v4.xxxx, r7.xyzx
  62:   mad r7.xyz, cb5[3].xyzx, v4.zzzz, r7.xyzx
  63:   add r7.xyz, r7.xyzx, cb5[4].xyzx
  64:   movc r7.xyz, r2.yyyy, r7.xyzx, v4.xyzx
  65:   add r7.xyz, r7.xyzx, -cb5[6].xyzx
  66:   mul r7.yzw, r7.xxyz, cb5[5].xxyz
  67:   mad r2.y, r7.y, l(0.250000), l(0.750000)
  68:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  69:   max r7.x, r2.z, r2.y
  70:   sample r7.xyzw, r7.xzwx, t9.xyzw, s0
  71: else 
  72:   mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  73: endif 
  74: dp4_sat r2.y, r7.xyzw, cb2[46].xyzw
  75: lt r2.z, r2.x, l(0.990000)
  76: if_nz r2.z
  77:   mul r7.xyzw, v4.yyyy, cb3[9].xyzw
  78:   mad r7.xyzw, cb3[8].xyzw, v4.xxxx, r7.xyzw
  79:   mad r7.xyzw, cb3[10].xyzw, v4.zzzz, r7.xyzw
  80:   add r7.xyzw, r7.xyzw, cb3[11].xyzw
  81:   div r7.xyz, r7.xyzx, r7.wwww
  82:   mad r8.xy, r7.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  83:   round_ni r8.xy, r8.xyxx
  84:   mad r7.xy, r7.xyxx, cb0[8].zwzz, -r8.xyxx
  85:   add r9.xyzw, r7.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  86:   mul r10.xw, r9.xxxz, r9.xxxz
  87:   mad r8.zw, r10.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r7.xxxy
  88:   add r9.xz, -r7.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
  89:   min r11.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  90:   mad r9.xz, -r11.xxyx, r11.xxyx, r9.xxzx
  91:   max r7.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  92:   mad r7.xy, -r7.xyxx, r7.xyxx, r9.ywyy
  93:   mov r11.x, r8.z
  94:   mov r11.y, r9.x
  95:   mov r11.z, r7.x
  96:   mov r11.w, r10.x
  97:   mul r11.xyzw, r11.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  98:   mov r10.x, r8.w
  99:   mov r10.y, r9.z
 100:   mov r10.z, r7.y
 101:   mul r9.xyzw, r10.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
 102:   add r10.xyzw, r11.ywyw, r11.xzxz
 103:   add r12.xyzw, r9.yyww, r9.xxzz
 104:   div r7.xy, r11.ywyy, r10.zwzz
 105:   add r7.xy, r7.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
 106:   div r8.zw, r9.yyyw, r12.yyyw
 107:   add r8.zw, r8.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
 108:   mul r9.xy, r7.xyxx, cb0[8].xxxx
 109:   mul r9.zw, r8.zzzw, cb0[8].yyyy
 110:   mul r10.xyzw, r10.xyzw, r12.xyzw
 111:   mad r11.xyzw, r8.xyxy, cb0[8].xyxy, r9.xzyz
 112:   sample_c_lz r2.z, r11.xyxx, t10.xxxx, s1, r7.z
 113:   sample_c_lz r3.w, r11.zwzz, t10.xxxx, s1, r7.z
 114:   mul r3.w, r3.w, r10.y
 115:   mad r2.z, r10.x, r2.z, r3.w
 116:   mad r8.xyzw, r8.xyxy, cb0[8].xyxy, r9.xwyw
 117:   sample_c_lz r3.w, r8.xyxx, t10.xxxx, s1, r7.z
 118:   mad r2.z, r10.z, r3.w, r2.z
 119:   sample_c_lz r3.w, r8.zwzz, t10.xxxx, s1, r7.z
 120:   mad r2.z, r10.w, r3.w, r2.z
 121:   add r3.w, -cb3[24].x, l(1.000000)
 122:   mad r2.z, r2.z, r3.w, cb3[24].x
 123: else 
 124:   mov r2.z, l(1.000000)
 125: endif 
 126: add r2.y, -r2.z, r2.y
 127: mad r2.x, r2.x, r2.y, r2.z
 128: lt r2.y, l(0.000000), r4.z
 129: and r2.y, r2.y, l(0x3f800000)
 130: div r7.xy, r4.xyxx, r4.wwww
 131: add r7.xy, r7.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 132: sample r7.xyzw, r7.xyxx, t7.xyzw, s2
 133: mul r2.y, r2.y, r7.w
 134: dp3 r2.z, r4.xyzx, r4.xyzx
 135: sample r4.xyzw, r2.zzzz, t8.xyzw, s3
 136: mul r2.y, r2.y, r4.x
 137: mul r2.x, r2.x, r2.y
 138: dp3 r4.x, v1.xyzx, r6.xyzx
 139: dp3 r4.y, v2.xyzx, r6.xyzx
 140: dp3 r4.z, v3.xyzx, r6.xyzx
 141: dp3 r2.y, r4.xyzx, r4.xyzx
 142: rsq r2.y, r2.y
 143: mul r4.xyz, r2.yyyy, r4.xyzx
 144: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 145: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 146: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 147: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 148: mul r5.xyz, r2.wwww, r5.xyzx
 149: add r2.w, -r5.w, l(1.000000)
 150: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 151: dp3 r0.w, r0.xyzx, r0.xyzx
 152: max r0.w, r0.w, l(0.001000)
 153: rsq r0.w, r0.w
 154: mul r0.xyz, r0.wwww, r0.xyzx
 155: dp3 r0.w, r4.xyzx, r3.xyzx
 156: dp3_sat r3.x, r4.xyzx, r1.xyzx
 157: dp3_sat r3.y, r4.xyzx, r0.xyzx
 158: dp3_sat r0.x, r1.xyzx, r0.xyzx
 159: add r0.y, r0.x, r0.x
 160: mul r0.y, r0.x, r0.y
 161: mad r0.y, r0.y, r2.w, l(-0.500000)
 162: add r0.z, -r3.x, l(1.000000)
 163: mul r1.x, r0.z, r0.z
 164: mul r1.x, r1.x, r1.x
 165: mul r0.z, r0.z, r1.x
 166: mad r0.z, r0.y, r0.z, l(1.000000)
 167: add r1.x, -|r0.w|, l(1.000000)
 168: mul r1.y, r1.x, r1.x
 169: mul r1.y, r1.y, r1.y
 170: mul r1.x, r1.x, r1.y
 171: mad r0.y, r0.y, r1.x, l(1.000000)
 172: mul r0.y, r0.y, r0.z
 173: mul r0.z, r2.w, r2.w
 174: max r0.z, r0.z, l(0.002000)
 175: add r1.x, -r0.z, l(1.000000)
 176: mad r1.y, |r0.w|, r1.x, r0.z
 177: mad r1.x, r3.x, r1.x, r0.z
 178: mul r0.w, |r0.w|, r1.x
 179: mad r0.w, r3.x, r1.y, r0.w
 180: add r0.w, r0.w, l(0.000010)
 181: div r0.w, l(0.500000), r0.w
 182: mul r0.z, r0.z, r0.z
 183: mad r1.x, r3.y, r0.z, -r3.y
 184: mad r1.x, r1.x, r3.y, l(1.000000)
 185: mul r0.z, r0.z, l(0.318310)
 186: mad r1.x, r1.x, r1.x, l(0.000000)
 187: div r0.z, r0.z, r1.x
 188: mul r0.z, r0.z, r0.w
 189: mul r0.z, r0.z, l(3.141593)
 190: max r0.z, r0.z, l(0.000100)
 191: sqrt r0.z, r0.z
 192: mul r0.yz, r3.xxxx, r0.yyzy
 193: dp3 r0.w, r6.xyzx, r6.xyzx
 194: ne r0.w, r0.w, l(0.000000)
 195: and r0.w, r0.w, l(0x3f800000)
 196: mul r0.z, r0.w, r0.z
 197: mul r1.xyz, r0.yyyy, r2.xyzx
 198: mul r0.yzw, r2.xxyz, r0.zzzz
 199: add r0.x, -r0.x, l(1.000000)
 200: mul r2.x, r0.x, r0.x
 201: mul r2.x, r2.x, r2.x
 202: mul r0.x, r0.x, r2.x
 203: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 204: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 205: mul r0.xyz, r0.yzwy, r2.xyzx
 206: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 207: mul o0.xyz, r1.wwww, r0.xyzx
 208: mov o0.w, l(1.000000)
 209: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 123 math, 6 temp registers, 9 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 8
Set 2D Texture "_Control" to slot 1 sampler slot 2
Set 2D Texture "_Splat0" to slot 2 sampler slot 3
Set 2D Texture "_Splat1" to slot 3 sampler slot 4
Set 2D Texture "_Splat2" to slot 4 sampler slot 5
Set 2D Texture "_Splat3" to slot 5 sampler slot 6
Set 2D Texture "_TerrainNormalmapTexture" to slot 6 sampler slot 7
Set 2D Texture "_ShadowMapTexture" to slot 7 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 0

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 192
  Float _Metallic1 at 196
  Float _Metallic2 at 200
  Float _Metallic3 at 204
  Float _Smoothness0 at 208
  Float _Smoothness1 at 212
  Float _Smoothness2 at 216
  Float _Smoothness3 at 220
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xy w
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v5.xyxx, t0.xyzw, s8
   5: eq r1.w, r2.x, l(0.000000)
   6: discard_nz r1.w
   7: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r2.xy, r2.xyxx, cb0[5].xyxx
  10: sample r2.xyzw, r2.xyxx, t1.xyzw, s2
  11: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r3.x, r1.w, l(0.001000)
  13: div r2.xyzw, r2.xyzw, r3.xxxx
  14: mad r3.xy, v5.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r3.zw, v5.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r4.xy, v5.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r4.zw, v5.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r5.xyzw, r3.xyxx, t2.xyzw, s3
  19: mul r5.xyzw, r2.xxxx, r5.xyzw
  20: mul r5.w, r5.w, cb0[13].x
  21: sample r3.xyzw, r3.zwzz, t3.xyzw, s4
  22: mul r3.xyzw, r2.yyyy, r3.xyzw
  23: mul r3.w, r3.w, cb0[13].y
  24: add r3.xyzw, r3.xyzw, r5.xyzw
  25: sample r5.xyzw, r4.xyxx, t4.xyzw, s5
  26: mul r5.xyzw, r2.zzzz, r5.xyzw
  27: mul r5.w, r5.w, cb0[13].z
  28: add r3.xyzw, r3.xyzw, r5.xyzw
  29: sample r4.xyzw, r4.zwzz, t5.xyzw, s6
  30: mul r4.xyzw, r2.wwww, r4.xyzw
  31: mul r4.w, r4.w, cb0[13].w
  32: add r3.xyzw, r3.xyzw, r4.xyzw
  33: sample r4.xyzw, v5.zwzz, t6.xyzw, s7
  34: mad r4.xyz, r4.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  35: dp3 r4.w, r4.xyzx, r4.xyzx
  36: rsq r4.w, r4.w
  37: mul r4.xyz, r4.wwww, r4.xyzx
  38: dp4 r2.x, r2.xyzw, cb0[12].xyzw
  39: mov r5.x, cb4[9].z
  40: mov r5.y, cb4[10].z
  41: mov r5.z, cb4[11].z
  42: dp3 r2.y, r0.xyzx, r5.xyzx
  43: add r5.xyz, v4.xyzx, -cb3[25].xyzx
  44: dp3 r2.z, r5.xyzx, r5.xyzx
  45: sqrt r2.z, r2.z
  46: add r2.z, -r2.y, r2.z
  47: mad r2.y, cb3[25].w, r2.z, r2.y
  48: mad_sat r2.y, r2.y, cb3[24].z, cb3[24].w
  49: eq r2.z, cb5[0].x, l(1.000000)
  50: if_nz r2.z
  51:   eq r2.z, cb5[0].y, l(1.000000)
  52:   mul r5.xyz, v4.yyyy, cb5[2].xyzx
  53:   mad r5.xyz, cb5[1].xyzx, v4.xxxx, r5.xyzx
  54:   mad r5.xyz, cb5[3].xyzx, v4.zzzz, r5.xyzx
  55:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  56:   movc r5.xyz, r2.zzzz, r5.xyzx, v4.xyzx
  57:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  58:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  59:   mad r2.z, r5.y, l(0.250000), l(0.750000)
  60:   mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
  61:   max r5.x, r2.w, r2.z
  62:   sample r5.xyzw, r5.xzwx, t8.xyzw, s0
  63: else 
  64:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  65: endif 
  66: dp4_sat r2.z, r5.xyzw, cb2[46].xyzw
  67: div r5.xy, v6.xyxx, v6.wwww
  68: sample r5.xyzw, r5.xyxx, t7.xyzw, s1
  69: add r2.z, r2.z, -r5.x
  70: mad r2.y, r2.y, r2.z, r5.x
  71: dp3 r5.x, v1.xyzx, r4.xyzx
  72: dp3 r5.y, v2.xyzx, r4.xyzx
  73: dp3 r5.z, v3.xyzx, r4.xyzx
  74: dp3 r2.z, r5.xyzx, r5.xyzx
  75: rsq r2.z, r2.z
  76: mul r4.xyz, r2.zzzz, r5.xyzx
  77: mul r2.yzw, r2.yyyy, cb0[2].xxyz
  78: add r5.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  79: mad r5.xyz, r2.xxxx, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  80: mad r2.x, -r2.x, l(0.779084), l(0.779084)
  81: mul r3.xyz, r2.xxxx, r3.xyzx
  82: add r2.x, -r3.w, l(1.000000)
  83: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  84: dp3 r0.w, r0.xyzx, r0.xyzx
  85: max r0.w, r0.w, l(0.001000)
  86: rsq r0.w, r0.w
  87: mul r0.xyz, r0.wwww, r0.xyzx
  88: dp3 r0.w, r4.xyzx, r1.xyzx
  89: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
  90: dp3_sat r1.y, r4.xyzx, r0.xyzx
  91: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  92: add r0.y, r0.x, r0.x
  93: mul r0.y, r0.x, r0.y
  94: mad r0.y, r0.y, r2.x, l(-0.500000)
  95: add r0.z, -r1.x, l(1.000000)
  96: mul r1.z, r0.z, r0.z
  97: mul r1.z, r1.z, r1.z
  98: mul r0.z, r0.z, r1.z
  99: mad r0.z, r0.y, r0.z, l(1.000000)
 100: add r1.z, -|r0.w|, l(1.000000)
 101: mul r3.w, r1.z, r1.z
 102: mul r3.w, r3.w, r3.w
 103: mul r1.z, r1.z, r3.w
 104: mad r0.y, r0.y, r1.z, l(1.000000)
 105: mul r0.y, r0.y, r0.z
 106: mul r0.z, r2.x, r2.x
 107: max r0.z, r0.z, l(0.002000)
 108: add r1.z, -r0.z, l(1.000000)
 109: mad r2.x, |r0.w|, r1.z, r0.z
 110: mad r1.z, r1.x, r1.z, r0.z
 111: mul r0.w, |r0.w|, r1.z
 112: mad r0.w, r1.x, r2.x, r0.w
 113: add r0.w, r0.w, l(0.000010)
 114: div r0.w, l(0.500000), r0.w
 115: mul r0.z, r0.z, r0.z
 116: mad r1.z, r1.y, r0.z, -r1.y
 117: mad r1.y, r1.z, r1.y, l(1.000000)
 118: mul r0.z, r0.z, l(0.318310)
 119: mad r1.y, r1.y, r1.y, l(0.000000)
 120: div r0.z, r0.z, r1.y
 121: mul r0.z, r0.z, r0.w
 122: mul r0.z, r0.z, l(3.141593)
 123: max r0.z, r0.z, l(0.000100)
 124: sqrt r0.z, r0.z
 125: mul r0.yz, r1.xxxx, r0.yyzy
 126: dp3 r0.w, r5.xyzx, r5.xyzx
 127: ne r0.w, r0.w, l(0.000000)
 128: and r0.w, r0.w, l(0x3f800000)
 129: mul r0.z, r0.w, r0.z
 130: mul r1.xyz, r0.yyyy, r2.yzwy
 131: mul r0.yzw, r2.yyzw, r0.zzzz
 132: add r0.x, -r0.x, l(1.000000)
 133: mul r2.x, r0.x, r0.x
 134: mul r2.x, r2.x, r2.x
 135: mul r0.x, r0.x, r2.x
 136: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 137: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 138: mul r0.xyz, r0.yzwy, r2.xyzx
 139: mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
 140: mul o0.xyz, r1.wwww, r0.xyzx
 141: mov o0.w, l(1.000000)
 142: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE INSTANCING_ON SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 128 math, 6 temp registers, 10 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 9
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_TerrainNormalmapTexture" to slot 6 sampler slot 8
Set 2D Texture "_ShadowMapTexture" to slot 7 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 8 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 9 sampler slot 0

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 256
  Float _Metallic1 at 260
  Float _Metallic2 at 264
  Float _Metallic3 at 268
  Float _Smoothness0 at 272
  Float _Smoothness1 at 276
  Float _Smoothness2 at 280
  Float _Smoothness3 at 284
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[18], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture3d (float,float,float,float) t9
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v5.xyxx, t0.xyzw, s9
   5: eq r1.w, r2.x, l(0.000000)
   6: discard_nz r1.w
   7: add r2.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r2.xy, r2.xyxx, cb0[9].xyxx
  10: sample r2.xyzw, r2.xyxx, t1.xyzw, s3
  11: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r3.x, r1.w, l(0.001000)
  13: div r2.xyzw, r2.xyzw, r3.xxxx
  14: mad r3.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  15: mad r3.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  16: mad r4.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  17: mad r4.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  18: sample r5.xyzw, r3.xyxx, t2.xyzw, s4
  19: mul r5.xyzw, r2.xxxx, r5.xyzw
  20: mul r5.w, r5.w, cb0[17].x
  21: sample r3.xyzw, r3.zwzz, t3.xyzw, s5
  22: mul r3.xyzw, r2.yyyy, r3.xyzw
  23: mul r3.w, r3.w, cb0[17].y
  24: add r3.xyzw, r3.xyzw, r5.xyzw
  25: sample r5.xyzw, r4.xyxx, t4.xyzw, s6
  26: mul r5.xyzw, r2.zzzz, r5.xyzw
  27: mul r5.w, r5.w, cb0[17].z
  28: add r3.xyzw, r3.xyzw, r5.xyzw
  29: sample r4.xyzw, r4.zwzz, t5.xyzw, s7
  30: mul r4.xyzw, r2.wwww, r4.xyzw
  31: mul r4.w, r4.w, cb0[17].w
  32: add r3.xyzw, r3.xyzw, r4.xyzw
  33: sample r4.xyzw, v5.zwzz, t6.xyzw, s8
  34: mad r4.xyz, r4.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  35: dp3 r4.w, r4.xyzx, r4.xyzx
  36: rsq r4.w, r4.w
  37: mul r4.xyz, r4.wwww, r4.xyzx
  38: dp4 r2.x, r2.xyzw, cb0[16].xyzw
  39: mul r2.yz, v4.yyyy, cb0[5].xxyx
  40: mad r2.yz, cb0[4].xxyx, v4.xxxx, r2.yyzy
  41: mad r2.yz, cb0[6].xxyx, v4.zzzz, r2.yyzy
  42: add r2.yz, r2.yyzy, cb0[7].xxyx
  43: mov r5.x, cb4[9].z
  44: mov r5.y, cb4[10].z
  45: mov r5.z, cb4[11].z
  46: dp3 r2.w, r0.xyzx, r5.xyzx
  47: add r5.xyz, v4.xyzx, -cb3[25].xyzx
  48: dp3 r4.w, r5.xyzx, r5.xyzx
  49: sqrt r4.w, r4.w
  50: add r4.w, -r2.w, r4.w
  51: mad r2.w, cb3[25].w, r4.w, r2.w
  52: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  53: eq r4.w, cb5[0].x, l(1.000000)
  54: if_nz r4.w
  55:   eq r4.w, cb5[0].y, l(1.000000)
  56:   mul r5.xyz, v4.yyyy, cb5[2].xyzx
  57:   mad r5.xyz, cb5[1].xyzx, v4.xxxx, r5.xyzx
  58:   mad r5.xyz, cb5[3].xyzx, v4.zzzz, r5.xyzx
  59:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  60:   movc r5.xyz, r4.wwww, r5.xyzx, v4.xyzx
  61:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  62:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  63:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  64:   mad r5.y, cb5[0].z, l(0.500000), l(0.750000)
  65:   max r5.x, r4.w, r5.y
  66:   sample r5.xyzw, r5.xzwx, t9.xyzw, s0
  67: else 
  68:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  69: endif 
  70: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
  71: div r5.xy, v7.xyxx, v7.wwww
  72: sample r5.xyzw, r5.xyxx, t7.xyzw, s1
  73: add r4.w, r4.w, -r5.x
  74: mad r2.w, r2.w, r4.w, r5.x
  75: sample r5.xyzw, r2.yzyy, t8.xyzw, s2
  76: mul r2.y, r2.w, r5.w
  77: dp3 r5.x, v1.xyzx, r4.xyzx
  78: dp3 r5.y, v2.xyzx, r4.xyzx
  79: dp3 r5.z, v3.xyzx, r4.xyzx
  80: dp3 r2.z, r5.xyzx, r5.xyzx
  81: rsq r2.z, r2.z
  82: mul r4.xyz, r2.zzzz, r5.xyzx
  83: mul r2.yzw, r2.yyyy, cb0[2].xxyz
  84: add r5.xyz, r3.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  85: mad r5.xyz, r2.xxxx, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  86: mad r2.x, -r2.x, l(0.779084), l(0.779084)
  87: mul r3.xyz, r2.xxxx, r3.xyzx
  88: add r2.x, -r3.w, l(1.000000)
  89: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
  90: dp3 r0.w, r0.xyzx, r0.xyzx
  91: max r0.w, r0.w, l(0.001000)
  92: rsq r0.w, r0.w
  93: mul r0.xyz, r0.wwww, r0.xyzx
  94: dp3 r0.w, r4.xyzx, r1.xyzx
  95: dp3_sat r1.x, r4.xyzx, cb2[0].xyzx
  96: dp3_sat r1.y, r4.xyzx, r0.xyzx
  97: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
  98: add r0.y, r0.x, r0.x
  99: mul r0.y, r0.x, r0.y
 100: mad r0.y, r0.y, r2.x, l(-0.500000)
 101: add r0.z, -r1.x, l(1.000000)
 102: mul r1.z, r0.z, r0.z
 103: mul r1.z, r1.z, r1.z
 104: mul r0.z, r0.z, r1.z
 105: mad r0.z, r0.y, r0.z, l(1.000000)
 106: add r1.z, -|r0.w|, l(1.000000)
 107: mul r3.w, r1.z, r1.z
 108: mul r3.w, r3.w, r3.w
 109: mul r1.z, r1.z, r3.w
 110: mad r0.y, r0.y, r1.z, l(1.000000)
 111: mul r0.y, r0.y, r0.z
 112: mul r0.z, r2.x, r2.x
 113: max r0.z, r0.z, l(0.002000)
 114: add r1.z, -r0.z, l(1.000000)
 115: mad r2.x, |r0.w|, r1.z, r0.z
 116: mad r1.z, r1.x, r1.z, r0.z
 117: mul r0.w, |r0.w|, r1.z
 118: mad r0.w, r1.x, r2.x, r0.w
 119: add r0.w, r0.w, l(0.000010)
 120: div r0.w, l(0.500000), r0.w
 121: mul r0.z, r0.z, r0.z
 122: mad r1.z, r1.y, r0.z, -r1.y
 123: mad r1.y, r1.z, r1.y, l(1.000000)
 124: mul r0.z, r0.z, l(0.318310)
 125: mad r1.y, r1.y, r1.y, l(0.000000)
 126: div r0.z, r0.z, r1.y
 127: mul r0.z, r0.z, r0.w
 128: mul r0.z, r0.z, l(3.141593)
 129: max r0.z, r0.z, l(0.000100)
 130: sqrt r0.z, r0.z
 131: mul r0.yz, r1.xxxx, r0.yyzy
 132: dp3 r0.w, r5.xyzx, r5.xyzx
 133: ne r0.w, r0.w, l(0.000000)
 134: and r0.w, r0.w, l(0x3f800000)
 135: mul r0.z, r0.w, r0.z
 136: mul r1.xyz, r0.yyyy, r2.yzwy
 137: mul r0.yzw, r2.yyzw, r0.zzzz
 138: add r0.x, -r0.x, l(1.000000)
 139: mul r2.x, r0.x, r0.x
 140: mul r2.x, r2.x, r2.x
 141: mul r0.x, r0.x, r2.x
 142: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 143: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 144: mul r0.xyz, r0.yzwy, r2.xyzx
 145: mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
 146: mul o0.xyz, r1.wwww, r0.xyzx
 147: mov o0.w, l(1.000000)
 148: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT SHADOWS_CUBE 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 143 math, 8 temp registers, 9 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 9
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_TerrainNormalmapTexture" to slot 6 sampler slot 8
Set 2D Texture "_LightTexture0" to slot 7 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 9 sampler slot 1

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 256
  Float _Metallic1 at 260
  Float _Metallic2 at 264
  Float _Metallic3 at 268
  Float _Smoothness0 at 272
  Float _Smoothness1 at 276
  Float _Smoothness2 at 280
  Float _Smoothness3 at 284
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[18], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_resource_texturecube (float,float,float,float) t9
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v5.xyxx, t0.xyzw, s9
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[9].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s3
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s4
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[17].x
  25: sample r5.xyzw, r5.zwzz, t3.xyzw, s5
  26: mul r5.xyzw, r4.yyyy, r5.xyzw
  27: mul r5.w, r5.w, cb0[17].y
  28: add r5.xyzw, r5.xyzw, r7.xyzw
  29: sample r7.xyzw, r6.xyxx, t4.xyzw, s6
  30: mul r7.xyzw, r4.zzzz, r7.xyzw
  31: mul r7.w, r7.w, cb0[17].z
  32: add r5.xyzw, r5.xyzw, r7.xyzw
  33: sample r6.xyzw, r6.zwzz, t5.xyzw, s7
  34: mul r6.xyzw, r4.wwww, r6.xyzw
  35: mul r6.w, r6.w, cb0[17].w
  36: add r5.xyzw, r5.xyzw, r6.xyzw
  37: sample r6.xyzw, v5.zwzz, t6.xyzw, s8
  38: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  39: dp3 r2.w, r6.xyzx, r6.xyzx
  40: rsq r2.w, r2.w
  41: mul r6.xyz, r2.wwww, r6.xyzx
  42: dp4 r2.w, r4.xyzw, cb0[16].xyzw
  43: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  44: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  45: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  46: add r4.xyz, r4.xyzx, cb0[7].xyzx
  47: mov r7.x, cb4[9].z
  48: mov r7.y, cb4[10].z
  49: mov r7.z, cb4[11].z
  50: dp3 r2.x, r2.xyzx, r7.xyzx
  51: add r7.xyz, v4.xyzx, -cb3[25].xyzx
  52: dp3 r2.y, r7.xyzx, r7.xyzx
  53: sqrt r2.y, r2.y
  54: add r2.y, -r2.x, r2.y
  55: mad r2.x, cb3[25].w, r2.y, r2.x
  56: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  57: eq r2.y, cb5[0].x, l(1.000000)
  58: if_nz r2.y
  59:   eq r2.y, cb5[0].y, l(1.000000)
  60:   mul r7.xyz, v4.yyyy, cb5[2].xyzx
  61:   mad r7.xyz, cb5[1].xyzx, v4.xxxx, r7.xyzx
  62:   mad r7.xyz, cb5[3].xyzx, v4.zzzz, r7.xyzx
  63:   add r7.xyz, r7.xyzx, cb5[4].xyzx
  64:   movc r7.xyz, r2.yyyy, r7.xyzx, v4.xyzx
  65:   add r7.xyz, r7.xyzx, -cb5[6].xyzx
  66:   mul r7.yzw, r7.xxyz, cb5[5].xxyz
  67:   mad r2.y, r7.y, l(0.250000), l(0.750000)
  68:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  69:   max r7.x, r2.z, r2.y
  70:   sample r7.xyzw, r7.xzwx, t8.xyzw, s0
  71: else 
  72:   mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  73: endif 
  74: dp4_sat r2.y, r7.xyzw, cb2[46].xyzw
  75: add r7.xyz, v4.xyzx, -cb2[1].xyzx
  76: max r2.z, |r7.y|, |r7.x|
  77: max r2.z, |r7.z|, r2.z
  78: add r2.z, r2.z, -cb2[2].z
  79: max r2.z, r2.z, l(0.000010)
  80: mul r2.z, r2.z, cb2[2].w
  81: div r2.z, cb2[2].y, r2.z
  82: add r2.z, r2.z, -cb2[2].x
  83: add r2.z, -r2.z, l(1.000000)
  84: sample_c_lz r2.z, r7.xyzx, t9.xxxx, s1, r2.z
  85: add r3.w, -cb3[24].x, l(1.000000)
  86: mad r2.z, r2.z, r3.w, cb3[24].x
  87: add r2.y, -r2.z, r2.y
  88: mad r2.x, r2.x, r2.y, r2.z
  89: dp3 r2.y, r4.xyzx, r4.xyzx
  90: sample r4.xyzw, r2.yyyy, t7.xyzw, s2
  91: mul r2.x, r2.x, r4.x
  92: dp3 r4.x, v1.xyzx, r6.xyzx
  93: dp3 r4.y, v2.xyzx, r6.xyzx
  94: dp3 r4.z, v3.xyzx, r6.xyzx
  95: dp3 r2.y, r4.xyzx, r4.xyzx
  96: rsq r2.y, r2.y
  97: mul r4.xyz, r2.yyyy, r4.xyzx
  98: mul r2.xyz, r2.xxxx, cb0[2].xyzx
  99: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 100: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 101: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 102: mul r5.xyz, r2.wwww, r5.xyzx
 103: add r2.w, -r5.w, l(1.000000)
 104: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 105: dp3 r0.w, r0.xyzx, r0.xyzx
 106: max r0.w, r0.w, l(0.001000)
 107: rsq r0.w, r0.w
 108: mul r0.xyz, r0.wwww, r0.xyzx
 109: dp3 r0.w, r4.xyzx, r3.xyzx
 110: dp3_sat r3.x, r4.xyzx, r1.xyzx
 111: dp3_sat r3.y, r4.xyzx, r0.xyzx
 112: dp3_sat r0.x, r1.xyzx, r0.xyzx
 113: add r0.y, r0.x, r0.x
 114: mul r0.y, r0.x, r0.y
 115: mad r0.y, r0.y, r2.w, l(-0.500000)
 116: add r0.z, -r3.x, l(1.000000)
 117: mul r1.x, r0.z, r0.z
 118: mul r1.x, r1.x, r1.x
 119: mul r0.z, r0.z, r1.x
 120: mad r0.z, r0.y, r0.z, l(1.000000)
 121: add r1.x, -|r0.w|, l(1.000000)
 122: mul r1.y, r1.x, r1.x
 123: mul r1.y, r1.y, r1.y
 124: mul r1.x, r1.x, r1.y
 125: mad r0.y, r0.y, r1.x, l(1.000000)
 126: mul r0.y, r0.y, r0.z
 127: mul r0.z, r2.w, r2.w
 128: max r0.z, r0.z, l(0.002000)
 129: add r1.x, -r0.z, l(1.000000)
 130: mad r1.y, |r0.w|, r1.x, r0.z
 131: mad r1.x, r3.x, r1.x, r0.z
 132: mul r0.w, |r0.w|, r1.x
 133: mad r0.w, r3.x, r1.y, r0.w
 134: add r0.w, r0.w, l(0.000010)
 135: div r0.w, l(0.500000), r0.w
 136: mul r0.z, r0.z, r0.z
 137: mad r1.x, r3.y, r0.z, -r3.y
 138: mad r1.x, r1.x, r3.y, l(1.000000)
 139: mul r0.z, r0.z, l(0.318310)
 140: mad r1.x, r1.x, r1.x, l(0.000000)
 141: div r0.z, r0.z, r1.x
 142: mul r0.z, r0.z, r0.w
 143: mul r0.z, r0.z, l(3.141593)
 144: max r0.z, r0.z, l(0.000100)
 145: sqrt r0.z, r0.z
 146: mul r0.yz, r3.xxxx, r0.yyzy
 147: dp3 r0.w, r6.xyzx, r6.xyzx
 148: ne r0.w, r0.w, l(0.000000)
 149: and r0.w, r0.w, l(0x3f800000)
 150: mul r0.z, r0.w, r0.z
 151: mul r1.xyz, r0.yyyy, r2.xyzx
 152: mul r0.yzw, r2.xxyz, r0.zzzz
 153: add r0.x, -r0.x, l(1.000000)
 154: mul r2.x, r0.x, r0.x
 155: mul r2.x, r2.x, r2.x
 156: mul r0.x, r0.x, r2.x
 157: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 158: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 159: mul r0.xyz, r0.yzwy, r2.xyzx
 160: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 161: mul o0.xyz, r1.wwww, r0.xyzx
 162: mov o0.w, l(1.000000)
 163: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 149 math, 10 temp registers, 9 textures, 4 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 9
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_TerrainNormalmapTexture" to slot 6 sampler slot 8
Set 2D Texture "_LightTexture0" to slot 7 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 9 sampler slot 1

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 256
  Float _Metallic1 at 260
  Float _Metallic2 at 264
  Float _Metallic3 at 268
  Float _Smoothness0 at 272
  Float _Smoothness1 at 276
  Float _Smoothness2 at 280
  Float _Smoothness3 at 284
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[18], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_resource_texturecube (float,float,float,float) t9
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 10
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v5.xyxx, t0.xyzw, s9
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[9].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s3
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s4
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[17].x
  25: sample r5.xyzw, r5.zwzz, t3.xyzw, s5
  26: mul r5.xyzw, r4.yyyy, r5.xyzw
  27: mul r5.w, r5.w, cb0[17].y
  28: add r5.xyzw, r5.xyzw, r7.xyzw
  29: sample r7.xyzw, r6.xyxx, t4.xyzw, s6
  30: mul r7.xyzw, r4.zzzz, r7.xyzw
  31: mul r7.w, r7.w, cb0[17].z
  32: add r5.xyzw, r5.xyzw, r7.xyzw
  33: sample r6.xyzw, r6.zwzz, t5.xyzw, s7
  34: mul r6.xyzw, r4.wwww, r6.xyzw
  35: mul r6.w, r6.w, cb0[17].w
  36: add r5.xyzw, r5.xyzw, r6.xyzw
  37: sample r6.xyzw, v5.zwzz, t6.xyzw, s8
  38: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  39: dp3 r2.w, r6.xyzx, r6.xyzx
  40: rsq r2.w, r2.w
  41: mul r6.xyz, r2.wwww, r6.xyzx
  42: dp4 r2.w, r4.xyzw, cb0[16].xyzw
  43: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  44: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  45: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  46: add r4.xyz, r4.xyzx, cb0[7].xyzx
  47: mov r7.x, cb4[9].z
  48: mov r7.y, cb4[10].z
  49: mov r7.z, cb4[11].z
  50: dp3 r2.x, r2.xyzx, r7.xyzx
  51: add r7.xyz, v4.xyzx, -cb3[25].xyzx
  52: dp3 r2.y, r7.xyzx, r7.xyzx
  53: sqrt r2.y, r2.y
  54: add r2.y, -r2.x, r2.y
  55: mad r2.x, cb3[25].w, r2.y, r2.x
  56: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  57: eq r2.y, cb5[0].x, l(1.000000)
  58: if_nz r2.y
  59:   eq r2.y, cb5[0].y, l(1.000000)
  60:   mul r7.xyz, v4.yyyy, cb5[2].xyzx
  61:   mad r7.xyz, cb5[1].xyzx, v4.xxxx, r7.xyzx
  62:   mad r7.xyz, cb5[3].xyzx, v4.zzzz, r7.xyzx
  63:   add r7.xyz, r7.xyzx, cb5[4].xyzx
  64:   movc r7.xyz, r2.yyyy, r7.xyzx, v4.xyzx
  65:   add r7.xyz, r7.xyzx, -cb5[6].xyzx
  66:   mul r7.yzw, r7.xxyz, cb5[5].xxyz
  67:   mad r2.y, r7.y, l(0.250000), l(0.750000)
  68:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  69:   max r7.x, r2.z, r2.y
  70:   sample r7.xyzw, r7.xzwx, t8.xyzw, s0
  71: else 
  72:   mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  73: endif 
  74: dp4_sat r2.y, r7.xyzw, cb2[46].xyzw
  75: lt r2.z, r2.x, l(0.990000)
  76: if_nz r2.z
  77:   add r7.xyz, v4.xyzx, -cb2[1].xyzx
  78:   max r2.z, |r7.y|, |r7.x|
  79:   max r2.z, |r7.z|, r2.z
  80:   add r2.z, r2.z, -cb2[2].z
  81:   max r2.z, r2.z, l(0.000010)
  82:   mul r2.z, r2.z, cb2[2].w
  83:   div r2.z, cb2[2].y, r2.z
  84:   add r2.z, r2.z, -cb2[2].x
  85:   add r2.z, -r2.z, l(1.000000)
  86:   add r8.xyz, r7.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  87:   sample_c_lz r8.x, r8.xyzx, t9.xxxx, s1, r2.z
  88:   add r9.xyz, r7.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  89:   sample_c_lz r8.y, r9.xyzx, t9.xxxx, s1, r2.z
  90:   add r9.xyz, r7.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  91:   sample_c_lz r8.z, r9.xyzx, t9.xxxx, s1, r2.z
  92:   add r7.xyz, r7.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  93:   sample_c_lz r8.w, r7.xyzx, t9.xxxx, s1, r2.z
  94:   dp4 r2.z, r8.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  95:   add r3.w, -cb3[24].x, l(1.000000)
  96:   mad r2.z, r2.z, r3.w, cb3[24].x
  97: else 
  98:   mov r2.z, l(1.000000)
  99: endif 
 100: add r2.y, -r2.z, r2.y
 101: mad r2.x, r2.x, r2.y, r2.z
 102: dp3 r2.y, r4.xyzx, r4.xyzx
 103: sample r4.xyzw, r2.yyyy, t7.xyzw, s2
 104: mul r2.x, r2.x, r4.x
 105: dp3 r4.x, v1.xyzx, r6.xyzx
 106: dp3 r4.y, v2.xyzx, r6.xyzx
 107: dp3 r4.z, v3.xyzx, r6.xyzx
 108: dp3 r2.y, r4.xyzx, r4.xyzx
 109: rsq r2.y, r2.y
 110: mul r4.xyz, r2.yyyy, r4.xyzx
 111: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 112: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 113: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 114: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 115: mul r5.xyz, r2.wwww, r5.xyzx
 116: add r2.w, -r5.w, l(1.000000)
 117: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 118: dp3 r0.w, r0.xyzx, r0.xyzx
 119: max r0.w, r0.w, l(0.001000)
 120: rsq r0.w, r0.w
 121: mul r0.xyz, r0.wwww, r0.xyzx
 122: dp3 r0.w, r4.xyzx, r3.xyzx
 123: dp3_sat r3.x, r4.xyzx, r1.xyzx
 124: dp3_sat r3.y, r4.xyzx, r0.xyzx
 125: dp3_sat r0.x, r1.xyzx, r0.xyzx
 126: mul r0.y, r0.x, r0.x
 127: dp2 r0.y, r0.yyyy, r2.wwww
 128: add r0.y, r0.y, l(-0.500000)
 129: add r0.z, -r3.x, l(1.000000)
 130: mul r1.x, r0.z, r0.z
 131: mul r1.x, r1.x, r1.x
 132: mul r0.z, r0.z, r1.x
 133: mad r0.z, r0.y, r0.z, l(1.000000)
 134: add r1.x, -|r0.w|, l(1.000000)
 135: mul r1.y, r1.x, r1.x
 136: mul r1.y, r1.y, r1.y
 137: mul r1.x, r1.x, r1.y
 138: mad r0.y, r0.y, r1.x, l(1.000000)
 139: mul r0.y, r0.y, r0.z
 140: mul r0.z, r2.w, r2.w
 141: max r0.z, r0.z, l(0.002000)
 142: add r1.x, -r0.z, l(1.000000)
 143: mad r1.y, |r0.w|, r1.x, r0.z
 144: mad r1.x, r3.x, r1.x, r0.z
 145: mul r0.w, |r0.w|, r1.x
 146: mad r0.w, r3.x, r1.y, r0.w
 147: add r0.w, r0.w, l(0.000010)
 148: div r0.w, l(0.500000), r0.w
 149: mul r0.z, r0.z, r0.z
 150: mad r1.x, r3.y, r0.z, -r3.y
 151: mad r1.x, r1.x, r3.y, l(1.000000)
 152: mul r0.z, r0.z, l(0.318310)
 153: mad r1.x, r1.x, r1.x, l(0.000000)
 154: div r0.z, r0.z, r1.x
 155: mul r0.z, r0.z, r0.w
 156: mul r0.z, r0.z, l(3.141593)
 157: max r0.z, r0.z, l(0.000100)
 158: sqrt r0.z, r0.z
 159: mul r0.yz, r3.xxxx, r0.yyzy
 160: dp3 r0.w, r6.xyzx, r6.xyzx
 161: ne r0.w, r0.w, l(0.000000)
 162: and r0.w, r0.w, l(0x3f800000)
 163: mul r0.z, r0.w, r0.z
 164: mul r1.xyz, r0.yyyy, r2.xyzx
 165: mul r0.yzw, r2.xxyz, r0.zzzz
 166: add r0.x, -r0.x, l(1.000000)
 167: mul r2.x, r0.x, r0.x
 168: mul r2.x, r2.x, r2.x
 169: mul r0.x, r0.x, r2.x
 170: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 171: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 172: mul r0.xyz, r0.yzwy, r2.xyzx
 173: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 174: mul o0.xyz, r1.wwww, r0.xyzx
 175: mov o0.w, l(1.000000)
 176: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT_COOKIE SHADOWS_CUBE 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 144 math, 8 temp registers, 10 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 10
Set 2D Texture "_Control" to slot 1 sampler slot 4
Set 2D Texture "_Splat0" to slot 2 sampler slot 5
Set 2D Texture "_Splat1" to slot 3 sampler slot 6
Set 2D Texture "_Splat2" to slot 4 sampler slot 7
Set 2D Texture "_Splat3" to slot 5 sampler slot 8
Set 2D Texture "_TerrainNormalmapTexture" to slot 6 sampler slot 9
Set 2D Texture "_LightTextureB0" to slot 7 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 8 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 9 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 10 sampler slot 1

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 256
  Float _Metallic1 at 260
  Float _Metallic2 at 264
  Float _Metallic3 at 268
  Float _Smoothness0 at 272
  Float _Smoothness1 at 276
  Float _Smoothness2 at 280
  Float _Smoothness3 at 284
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[18], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texturecube (float,float,float,float) t8
      dcl_resource_texture3d (float,float,float,float) t9
      dcl_resource_texturecube (float,float,float,float) t10
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v5.xyxx, t0.xyzw, s10
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[9].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s4
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s5
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[17].x
  25: sample r5.xyzw, r5.zwzz, t3.xyzw, s6
  26: mul r5.xyzw, r4.yyyy, r5.xyzw
  27: mul r5.w, r5.w, cb0[17].y
  28: add r5.xyzw, r5.xyzw, r7.xyzw
  29: sample r7.xyzw, r6.xyxx, t4.xyzw, s7
  30: mul r7.xyzw, r4.zzzz, r7.xyzw
  31: mul r7.w, r7.w, cb0[17].z
  32: add r5.xyzw, r5.xyzw, r7.xyzw
  33: sample r6.xyzw, r6.zwzz, t5.xyzw, s8
  34: mul r6.xyzw, r4.wwww, r6.xyzw
  35: mul r6.w, r6.w, cb0[17].w
  36: add r5.xyzw, r5.xyzw, r6.xyzw
  37: sample r6.xyzw, v5.zwzz, t6.xyzw, s9
  38: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  39: dp3 r2.w, r6.xyzx, r6.xyzx
  40: rsq r2.w, r2.w
  41: mul r6.xyz, r2.wwww, r6.xyzx
  42: dp4 r2.w, r4.xyzw, cb0[16].xyzw
  43: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  44: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  45: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  46: add r4.xyz, r4.xyzx, cb0[7].xyzx
  47: mov r7.x, cb4[9].z
  48: mov r7.y, cb4[10].z
  49: mov r7.z, cb4[11].z
  50: dp3 r2.x, r2.xyzx, r7.xyzx
  51: add r7.xyz, v4.xyzx, -cb3[25].xyzx
  52: dp3 r2.y, r7.xyzx, r7.xyzx
  53: sqrt r2.y, r2.y
  54: add r2.y, -r2.x, r2.y
  55: mad r2.x, cb3[25].w, r2.y, r2.x
  56: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  57: eq r2.y, cb5[0].x, l(1.000000)
  58: if_nz r2.y
  59:   eq r2.y, cb5[0].y, l(1.000000)
  60:   mul r7.xyz, v4.yyyy, cb5[2].xyzx
  61:   mad r7.xyz, cb5[1].xyzx, v4.xxxx, r7.xyzx
  62:   mad r7.xyz, cb5[3].xyzx, v4.zzzz, r7.xyzx
  63:   add r7.xyz, r7.xyzx, cb5[4].xyzx
  64:   movc r7.xyz, r2.yyyy, r7.xyzx, v4.xyzx
  65:   add r7.xyz, r7.xyzx, -cb5[6].xyzx
  66:   mul r7.yzw, r7.xxyz, cb5[5].xxyz
  67:   mad r2.y, r7.y, l(0.250000), l(0.750000)
  68:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  69:   max r7.x, r2.z, r2.y
  70:   sample r7.xyzw, r7.xzwx, t9.xyzw, s0
  71: else 
  72:   mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  73: endif 
  74: dp4_sat r2.y, r7.xyzw, cb2[46].xyzw
  75: add r7.xyz, v4.xyzx, -cb2[1].xyzx
  76: max r2.z, |r7.y|, |r7.x|
  77: max r2.z, |r7.z|, r2.z
  78: add r2.z, r2.z, -cb2[2].z
  79: max r2.z, r2.z, l(0.000010)
  80: mul r2.z, r2.z, cb2[2].w
  81: div r2.z, cb2[2].y, r2.z
  82: add r2.z, r2.z, -cb2[2].x
  83: add r2.z, -r2.z, l(1.000000)
  84: sample_c_lz r2.z, r7.xyzx, t10.xxxx, s1, r2.z
  85: add r3.w, -cb3[24].x, l(1.000000)
  86: mad r2.z, r2.z, r3.w, cb3[24].x
  87: add r2.y, -r2.z, r2.y
  88: mad r2.x, r2.x, r2.y, r2.z
  89: dp3 r2.y, r4.xyzx, r4.xyzx
  90: sample r7.xyzw, r2.yyyy, t7.xyzw, s3
  91: sample r4.xyzw, r4.xyzx, t8.xyzw, s2
  92: mul r2.y, r4.w, r7.x
  93: mul r2.x, r2.x, r2.y
  94: dp3 r4.x, v1.xyzx, r6.xyzx
  95: dp3 r4.y, v2.xyzx, r6.xyzx
  96: dp3 r4.z, v3.xyzx, r6.xyzx
  97: dp3 r2.y, r4.xyzx, r4.xyzx
  98: rsq r2.y, r2.y
  99: mul r4.xyz, r2.yyyy, r4.xyzx
 100: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 101: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 102: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 103: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 104: mul r5.xyz, r2.wwww, r5.xyzx
 105: add r2.w, -r5.w, l(1.000000)
 106: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 107: dp3 r0.w, r0.xyzx, r0.xyzx
 108: max r0.w, r0.w, l(0.001000)
 109: rsq r0.w, r0.w
 110: mul r0.xyz, r0.wwww, r0.xyzx
 111: dp3 r0.w, r4.xyzx, r3.xyzx
 112: dp3_sat r3.x, r4.xyzx, r1.xyzx
 113: dp3_sat r3.y, r4.xyzx, r0.xyzx
 114: dp3_sat r0.x, r1.xyzx, r0.xyzx
 115: add r0.y, r0.x, r0.x
 116: mul r0.y, r0.x, r0.y
 117: mad r0.y, r0.y, r2.w, l(-0.500000)
 118: add r0.z, -r3.x, l(1.000000)
 119: mul r1.x, r0.z, r0.z
 120: mul r1.x, r1.x, r1.x
 121: mul r0.z, r0.z, r1.x
 122: mad r0.z, r0.y, r0.z, l(1.000000)
 123: add r1.x, -|r0.w|, l(1.000000)
 124: mul r1.y, r1.x, r1.x
 125: mul r1.y, r1.y, r1.y
 126: mul r1.x, r1.x, r1.y
 127: mad r0.y, r0.y, r1.x, l(1.000000)
 128: mul r0.y, r0.y, r0.z
 129: mul r0.z, r2.w, r2.w
 130: max r0.z, r0.z, l(0.002000)
 131: add r1.x, -r0.z, l(1.000000)
 132: mad r1.y, |r0.w|, r1.x, r0.z
 133: mad r1.x, r3.x, r1.x, r0.z
 134: mul r0.w, |r0.w|, r1.x
 135: mad r0.w, r3.x, r1.y, r0.w
 136: add r0.w, r0.w, l(0.000010)
 137: div r0.w, l(0.500000), r0.w
 138: mul r0.z, r0.z, r0.z
 139: mad r1.x, r3.y, r0.z, -r3.y
 140: mad r1.x, r1.x, r3.y, l(1.000000)
 141: mul r0.z, r0.z, l(0.318310)
 142: mad r1.x, r1.x, r1.x, l(0.000000)
 143: div r0.z, r0.z, r1.x
 144: mul r0.z, r0.z, r0.w
 145: mul r0.z, r0.z, l(3.141593)
 146: max r0.z, r0.z, l(0.000100)
 147: sqrt r0.z, r0.z
 148: mul r0.yz, r3.xxxx, r0.yyzy
 149: dp3 r0.w, r6.xyzx, r6.xyzx
 150: ne r0.w, r0.w, l(0.000000)
 151: and r0.w, r0.w, l(0x3f800000)
 152: mul r0.z, r0.w, r0.z
 153: mul r1.xyz, r0.yyyy, r2.xyzx
 154: mul r0.yzw, r2.xxyz, r0.zzzz
 155: add r0.x, -r0.x, l(1.000000)
 156: mul r2.x, r0.x, r0.x
 157: mul r2.x, r2.x, r2.x
 158: mul r0.x, r0.x, r2.x
 159: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 160: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 161: mul r0.xyz, r0.yzwy, r2.xyzx
 162: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 163: mul o0.xyz, r1.wwww, r0.xyzx
 164: mov o0.w, l(1.000000)
 165: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 150 math, 10 temp registers, 10 textures, 4 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 10
Set 2D Texture "_Control" to slot 1 sampler slot 4
Set 2D Texture "_Splat0" to slot 2 sampler slot 5
Set 2D Texture "_Splat1" to slot 3 sampler slot 6
Set 2D Texture "_Splat2" to slot 4 sampler slot 7
Set 2D Texture "_Splat3" to slot 5 sampler slot 8
Set 2D Texture "_TerrainNormalmapTexture" to slot 6 sampler slot 9
Set 2D Texture "_LightTextureB0" to slot 7 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 8 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 9 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 10 sampler slot 1

Constant Buffer "$Globals" (288 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _Metallic0 at 256
  Float _Metallic1 at 260
  Float _Metallic2 at 264
  Float _Metallic3 at 268
  Float _Smoothness0 at 272
  Float _Smoothness1 at 276
  Float _Smoothness2 at 280
  Float _Smoothness3 at 284
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[18], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texturecube (float,float,float,float) t8
      dcl_resource_texture3d (float,float,float,float) t9
      dcl_resource_texturecube (float,float,float,float) t10
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 10
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v5.xyxx, t0.xyzw, s10
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[9].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s4
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s5
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[17].x
  25: sample r5.xyzw, r5.zwzz, t3.xyzw, s6
  26: mul r5.xyzw, r4.yyyy, r5.xyzw
  27: mul r5.w, r5.w, cb0[17].y
  28: add r5.xyzw, r5.xyzw, r7.xyzw
  29: sample r7.xyzw, r6.xyxx, t4.xyzw, s7
  30: mul r7.xyzw, r4.zzzz, r7.xyzw
  31: mul r7.w, r7.w, cb0[17].z
  32: add r5.xyzw, r5.xyzw, r7.xyzw
  33: sample r6.xyzw, r6.zwzz, t5.xyzw, s8
  34: mul r6.xyzw, r4.wwww, r6.xyzw
  35: mul r6.w, r6.w, cb0[17].w
  36: add r5.xyzw, r5.xyzw, r6.xyzw
  37: sample r6.xyzw, v5.zwzz, t6.xyzw, s9
  38: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  39: dp3 r2.w, r6.xyzx, r6.xyzx
  40: rsq r2.w, r2.w
  41: mul r6.xyz, r2.wwww, r6.xyzx
  42: dp4 r2.w, r4.xyzw, cb0[16].xyzw
  43: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  44: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  45: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  46: add r4.xyz, r4.xyzx, cb0[7].xyzx
  47: mov r7.x, cb4[9].z
  48: mov r7.y, cb4[10].z
  49: mov r7.z, cb4[11].z
  50: dp3 r2.x, r2.xyzx, r7.xyzx
  51: add r7.xyz, v4.xyzx, -cb3[25].xyzx
  52: dp3 r2.y, r7.xyzx, r7.xyzx
  53: sqrt r2.y, r2.y
  54: add r2.y, -r2.x, r2.y
  55: mad r2.x, cb3[25].w, r2.y, r2.x
  56: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
  57: eq r2.y, cb5[0].x, l(1.000000)
  58: if_nz r2.y
  59:   eq r2.y, cb5[0].y, l(1.000000)
  60:   mul r7.xyz, v4.yyyy, cb5[2].xyzx
  61:   mad r7.xyz, cb5[1].xyzx, v4.xxxx, r7.xyzx
  62:   mad r7.xyz, cb5[3].xyzx, v4.zzzz, r7.xyzx
  63:   add r7.xyz, r7.xyzx, cb5[4].xyzx
  64:   movc r7.xyz, r2.yyyy, r7.xyzx, v4.xyzx
  65:   add r7.xyz, r7.xyzx, -cb5[6].xyzx
  66:   mul r7.yzw, r7.xxyz, cb5[5].xxyz
  67:   mad r2.y, r7.y, l(0.250000), l(0.750000)
  68:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  69:   max r7.x, r2.z, r2.y
  70:   sample r7.xyzw, r7.xzwx, t9.xyzw, s0
  71: else 
  72:   mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  73: endif 
  74: dp4_sat r2.y, r7.xyzw, cb2[46].xyzw
  75: lt r2.z, r2.x, l(0.990000)
  76: if_nz r2.z
  77:   add r7.xyz, v4.xyzx, -cb2[1].xyzx
  78:   max r2.z, |r7.y|, |r7.x|
  79:   max r2.z, |r7.z|, r2.z
  80:   add r2.z, r2.z, -cb2[2].z
  81:   max r2.z, r2.z, l(0.000010)
  82:   mul r2.z, r2.z, cb2[2].w
  83:   div r2.z, cb2[2].y, r2.z
  84:   add r2.z, r2.z, -cb2[2].x
  85:   add r2.z, -r2.z, l(1.000000)
  86:   add r8.xyz, r7.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  87:   sample_c_lz r8.x, r8.xyzx, t10.xxxx, s1, r2.z
  88:   add r9.xyz, r7.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  89:   sample_c_lz r8.y, r9.xyzx, t10.xxxx, s1, r2.z
  90:   add r9.xyz, r7.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  91:   sample_c_lz r8.z, r9.xyzx, t10.xxxx, s1, r2.z
  92:   add r7.xyz, r7.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  93:   sample_c_lz r8.w, r7.xyzx, t10.xxxx, s1, r2.z
  94:   dp4 r2.z, r8.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  95:   add r3.w, -cb3[24].x, l(1.000000)
  96:   mad r2.z, r2.z, r3.w, cb3[24].x
  97: else 
  98:   mov r2.z, l(1.000000)
  99: endif 
 100: add r2.y, -r2.z, r2.y
 101: mad r2.x, r2.x, r2.y, r2.z
 102: dp3 r2.y, r4.xyzx, r4.xyzx
 103: sample r7.xyzw, r2.yyyy, t7.xyzw, s3
 104: sample r4.xyzw, r4.xyzx, t8.xyzw, s2
 105: mul r2.y, r4.w, r7.x
 106: mul r2.x, r2.x, r2.y
 107: dp3 r4.x, v1.xyzx, r6.xyzx
 108: dp3 r4.y, v2.xyzx, r6.xyzx
 109: dp3 r4.z, v3.xyzx, r6.xyzx
 110: dp3 r2.y, r4.xyzx, r4.xyzx
 111: rsq r2.y, r2.y
 112: mul r4.xyz, r2.yyyy, r4.xyzx
 113: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 114: add r6.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 115: mad r6.xyz, r2.wwww, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 116: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 117: mul r5.xyz, r2.wwww, r5.xyzx
 118: add r2.w, -r5.w, l(1.000000)
 119: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 120: dp3 r0.w, r0.xyzx, r0.xyzx
 121: max r0.w, r0.w, l(0.001000)
 122: rsq r0.w, r0.w
 123: mul r0.xyz, r0.wwww, r0.xyzx
 124: dp3 r0.w, r4.xyzx, r3.xyzx
 125: dp3_sat r3.x, r4.xyzx, r1.xyzx
 126: dp3_sat r3.y, r4.xyzx, r0.xyzx
 127: dp3_sat r0.x, r1.xyzx, r0.xyzx
 128: mul r0.y, r0.x, r0.x
 129: dp2 r0.y, r0.yyyy, r2.wwww
 130: add r0.y, r0.y, l(-0.500000)
 131: add r0.z, -r3.x, l(1.000000)
 132: mul r1.x, r0.z, r0.z
 133: mul r1.x, r1.x, r1.x
 134: mul r0.z, r0.z, r1.x
 135: mad r0.z, r0.y, r0.z, l(1.000000)
 136: add r1.x, -|r0.w|, l(1.000000)
 137: mul r1.y, r1.x, r1.x
 138: mul r1.y, r1.y, r1.y
 139: mul r1.x, r1.x, r1.y
 140: mad r0.y, r0.y, r1.x, l(1.000000)
 141: mul r0.y, r0.y, r0.z
 142: mul r0.z, r2.w, r2.w
 143: max r0.z, r0.z, l(0.002000)
 144: add r1.x, -r0.z, l(1.000000)
 145: mad r1.y, |r0.w|, r1.x, r0.z
 146: mad r1.x, r3.x, r1.x, r0.z
 147: mul r0.w, |r0.w|, r1.x
 148: mad r0.w, r3.x, r1.y, r0.w
 149: add r0.w, r0.w, l(0.000010)
 150: div r0.w, l(0.500000), r0.w
 151: mul r0.z, r0.z, r0.z
 152: mad r1.x, r3.y, r0.z, -r3.y
 153: mad r1.x, r1.x, r3.y, l(1.000000)
 154: mul r0.z, r0.z, l(0.318310)
 155: mad r1.x, r1.x, r1.x, l(0.000000)
 156: div r0.z, r0.z, r1.x
 157: mul r0.z, r0.z, r0.w
 158: mul r0.z, r0.z, l(3.141593)
 159: max r0.z, r0.z, l(0.000100)
 160: sqrt r0.z, r0.z
 161: mul r0.yz, r3.xxxx, r0.yyzy
 162: dp3 r0.w, r6.xyzx, r6.xyzx
 163: ne r0.w, r0.w, l(0.000000)
 164: and r0.w, r0.w, l(0x3f800000)
 165: mul r0.z, r0.w, r0.z
 166: mul r1.xyz, r0.yyyy, r2.xyzx
 167: mul r0.yzw, r2.xxyz, r0.zzzz
 168: add r0.x, -r0.x, l(1.000000)
 169: mul r2.x, r0.x, r0.x
 170: mul r2.x, r2.x, r2.x
 171: mul r0.x, r0.x, r2.x
 172: add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 173: mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
 174: mul r0.xyz, r0.yzwy, r2.xyzx
 175: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 176: mul o0.xyz, r1.wwww, r0.xyzx
 177: mov o0.w, l(1.000000)
 178: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 169 math, 9 temp registers, 13 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 12
Set 2D Texture "_Control" to slot 1 sampler slot 2
Set 2D Texture "_Splat0" to slot 2 sampler slot 3
Set 2D Texture "_Splat1" to slot 3 sampler slot 4
Set 2D Texture "_Splat2" to slot 4 sampler slot 5
Set 2D Texture "_Splat3" to slot 5 sampler slot 6
Set 2D Texture "_Normal0" to slot 6 sampler slot 8
Set 2D Texture "_Normal1" to slot 7 sampler slot 9
Set 2D Texture "_Normal2" to slot 8 sampler slot 10
Set 2D Texture "_Normal3" to slot 9 sampler slot 11
Set 2D Texture "_TerrainNormalmapTexture" to slot 10 sampler slot 7
Set 2D Texture "_LightTexture0" to slot 11 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 0

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 256
  Float _NormalScale1 at 260
  Float _NormalScale2 at 264
  Float _NormalScale3 at 268
  Float _Metallic0 at 272
  Float _Metallic1 at 276
  Float _Metallic2 at 280
  Float _Metallic3 at 284
  Float _Smoothness0 at 288
  Float _Smoothness1 at 292
  Float _Smoothness2 at 296
  Float _Smoothness3 at 300
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[19], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture2d (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 9
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: sample r3.xyzw, v5.xyxx, t0.xyzw, s12
   9: eq r1.w, r3.x, l(0.000000)
  10: discard_nz r1.w
  11: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r3.xy, v5.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, cb0[9].xyxx
  14: sample r3.xyzw, r3.xyxx, t1.xyzw, s2
  15: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r3.xyzw, r3.xyzw, r2.wwww
  18: mad r4.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r4.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r5.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r5.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r6.xyzw, r4.xyxx, t2.xyzw, s3
  23: mul r6.xyzw, r3.xxxx, r6.xyzw
  24: mul r6.w, r6.w, cb0[18].x
  25: sample r7.xyzw, r4.zwzz, t3.xyzw, s4
  26: mul r7.xyzw, r3.yyyy, r7.xyzw
  27: mul r7.w, r7.w, cb0[18].y
  28: add r6.xyzw, r6.xyzw, r7.xyzw
  29: sample r7.xyzw, r5.xyxx, t4.xyzw, s5
  30: mul r7.xyzw, r3.zzzz, r7.xyzw
  31: mul r7.w, r7.w, cb0[18].z
  32: add r6.xyzw, r6.xyzw, r7.xyzw
  33: sample r7.xyzw, r5.zwzz, t5.xyzw, s6
  34: mul r7.xyzw, r3.wwww, r7.xyzw
  35: mul r7.w, r7.w, cb0[18].w
  36: add r6.xyzw, r6.xyzw, r7.xyzw
  37: sample r7.xyzw, r4.xyxx, t6.xyzw, s8
  38: mul r7.x, r7.w, r7.x
  39: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  40: mul r7.xy, r4.xyxx, cb0[16].xxxx
  41: dp2 r2.w, r7.xyxx, r7.xyxx
  42: min r2.w, r2.w, l(1.000000)
  43: add r2.w, -r2.w, l(1.000000)
  44: sqrt r7.z, r2.w
  45: sample r4.xyzw, r4.zwzz, t7.xyzw, s9
  46: mul r4.x, r4.w, r4.x
  47: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  48: mul r4.xy, r4.xyxx, cb0[16].yyyy
  49: dp2 r2.w, r4.xyxx, r4.xyxx
  50: min r2.w, r2.w, l(1.000000)
  51: add r2.w, -r2.w, l(1.000000)
  52: sqrt r4.z, r2.w
  53: mul r4.xyz, r3.yyyy, r4.xyzx
  54: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  55: sample r7.xyzw, r5.xyxx, t8.xyzw, s10
  56: mul r7.x, r7.w, r7.x
  57: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  58: mul r7.xy, r5.xyxx, cb0[16].zzzz
  59: dp2 r2.w, r7.xyxx, r7.xyxx
  60: min r2.w, r2.w, l(1.000000)
  61: add r2.w, -r2.w, l(1.000000)
  62: sqrt r7.z, r2.w
  63: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  64: sample r5.xyzw, r5.zwzz, t9.xyzw, s11
  65: mul r5.x, r5.w, r5.x
  66: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  67: mul r5.xy, r5.xyxx, cb0[16].wwww
  68: dp2 r2.w, r5.xyxx, r5.xyxx
  69: min r2.w, r2.w, l(1.000000)
  70: add r2.w, -r2.w, l(1.000000)
  71: sqrt r5.z, r2.w
  72: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  73: add r2.w, r4.z, l(0.000010)
  74: sample r5.xyzw, v5.zwzz, t10.xyzw, s7
  75: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  76: dp3 r4.z, r5.xyzx, r5.xyzx
  77: rsq r4.z, r4.z
  78: mul r5.xyz, r4.zzzz, r5.xyzx
  79: mul r7.xyz, r5.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  80: mad r7.xyz, r5.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r7.xyzx
  81: dp2 r4.z, r7.xzxx, r7.xzxx
  82: rsq r4.z, r4.z
  83: mul r7.xyz, r4.zzzz, r7.xyzx
  84: mul r8.xyz, r5.zxyz, r7.yzxy
  85: mad r8.xyz, r7.zxyz, r5.yzxy, -r8.xyzx
  86: dp3 r4.z, r8.xyzx, r8.xyzx
  87: rsq r4.z, r4.z
  88: mul r8.xyz, r4.zzzz, r8.xyzx
  89: mul r4.yzw, r4.yyyy, r8.xxyz
  90: mad r4.xyz, r4.xxxx, r7.xyzx, r4.yzwy
  91: mad r4.xyz, r2.wwww, r5.xyzx, r4.xyzx
  92: dp4 r2.w, r3.xyzw, cb0[17].xyzw
  93: mul r3.xyz, v4.yyyy, cb0[5].xyzx
  94: mad r3.xyz, cb0[4].xyzx, v4.xxxx, r3.xyzx
  95: mad r3.xyz, cb0[6].xyzx, v4.zzzz, r3.xyzx
  96: add r3.xyz, r3.xyzx, cb0[7].xyzx
  97: eq r3.w, cb3[0].x, l(1.000000)
  98: if_nz r3.w
  99:   eq r3.w, cb3[0].y, l(1.000000)
 100:   mul r5.xyz, v4.yyyy, cb3[2].xyzx
 101:   mad r5.xyz, cb3[1].xyzx, v4.xxxx, r5.xyzx
 102:   mad r5.xyz, cb3[3].xyzx, v4.zzzz, r5.xyzx
 103:   add r5.xyz, r5.xyzx, cb3[4].xyzx
 104:   movc r5.xyz, r3.wwww, r5.xyzx, v4.xyzx
 105:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
 106:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
 107:   mad r3.w, r5.y, l(0.250000), l(0.750000)
 108:   mad r4.w, cb3[0].z, l(0.500000), l(0.750000)
 109:   max r5.x, r3.w, r4.w
 110:   sample r5.xyzw, r5.xzwx, t12.xyzw, s0
 111: else 
 112:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 113: endif 
 114: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
 115: dp3 r3.x, r3.xyzx, r3.xyzx
 116: sample r5.xyzw, r3.xxxx, t11.xyzw, s1
 117: mul r3.x, r3.w, r5.x
 118: dp3 r5.x, v1.xyzx, r4.xyzx
 119: dp3 r5.y, v2.xyzx, r4.xyzx
 120: dp3 r5.z, v3.xyzx, r4.xyzx
 121: dp3 r3.y, r5.xyzx, r5.xyzx
 122: rsq r3.y, r3.y
 123: mul r3.yzw, r3.yyyy, r5.xxyz
 124: mul r4.xyz, r3.xxxx, cb0[2].xyzx
 125: add r5.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 126: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 127: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 128: mul r6.xyz, r2.wwww, r6.xyzx
 129: add r2.w, -r6.w, l(1.000000)
 130: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
 131: dp3 r0.w, r0.xyzx, r0.xyzx
 132: max r0.w, r0.w, l(0.001000)
 133: rsq r0.w, r0.w
 134: mul r0.xyz, r0.wwww, r0.xyzx
 135: dp3 r0.w, r3.yzwy, r2.xyzx
 136: dp3_sat r2.x, r3.yzwy, r1.xyzx
 137: dp3_sat r2.y, r3.yzwy, r0.xyzx
 138: dp3_sat r0.x, r1.xyzx, r0.xyzx
 139: mul r0.y, r0.x, r0.x
 140: dp2 r0.y, r0.yyyy, r2.wwww
 141: add r0.y, r0.y, l(-0.500000)
 142: add r0.z, -r2.x, l(1.000000)
 143: mul r1.x, r0.z, r0.z
 144: mul r1.x, r1.x, r1.x
 145: mul r0.z, r0.z, r1.x
 146: mad r0.z, r0.y, r0.z, l(1.000000)
 147: add r1.x, -|r0.w|, l(1.000000)
 148: mul r1.y, r1.x, r1.x
 149: mul r1.y, r1.y, r1.y
 150: mul r1.x, r1.x, r1.y
 151: mad r0.y, r0.y, r1.x, l(1.000000)
 152: mul r0.y, r0.y, r0.z
 153: mul r0.z, r2.w, r2.w
 154: max r0.z, r0.z, l(0.002000)
 155: add r1.x, -r0.z, l(1.000000)
 156: mad r1.y, |r0.w|, r1.x, r0.z
 157: mad r1.x, r2.x, r1.x, r0.z
 158: mul r0.w, |r0.w|, r1.x
 159: mad r0.w, r2.x, r1.y, r0.w
 160: add r0.w, r0.w, l(0.000010)
 161: div r0.w, l(0.500000), r0.w
 162: mul r0.z, r0.z, r0.z
 163: mad r1.x, r2.y, r0.z, -r2.y
 164: mad r1.x, r1.x, r2.y, l(1.000000)
 165: mul r0.z, r0.z, l(0.318310)
 166: mad r1.x, r1.x, r1.x, l(0.000000)
 167: div r0.z, r0.z, r1.x
 168: mul r0.z, r0.z, r0.w
 169: mul r0.z, r0.z, l(3.141593)
 170: max r0.z, r0.z, l(0.000100)
 171: sqrt r0.z, r0.z
 172: mul r0.yz, r2.xxxx, r0.yyzy
 173: dp3 r0.w, r5.xyzx, r5.xyzx
 174: ne r0.w, r0.w, l(0.000000)
 175: and r0.w, r0.w, l(0x3f800000)
 176: mul r0.z, r0.w, r0.z
 177: mul r1.xyz, r0.yyyy, r4.xyzx
 178: mul r0.yzw, r4.xxyz, r0.zzzz
 179: add r0.x, -r0.x, l(1.000000)
 180: mul r2.x, r0.x, r0.x
 181: mul r2.x, r2.x, r2.x
 182: mul r0.x, r0.x, r2.x
 183: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 184: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 185: mul r0.xyz, r0.yzwy, r2.xyzx
 186: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 187: mul o0.xyz, r1.wwww, r0.xyzx
 188: mov o0.w, l(1.000000)
 189: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 159 math, 8 temp registers, 12 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 11
Set 2D Texture "_Control" to slot 1
Set 2D Texture "_Splat0" to slot 2
Set 2D Texture "_Splat1" to slot 3
Set 2D Texture "_Splat2" to slot 4
Set 2D Texture "_Splat3" to slot 5
Set 2D Texture "_Normal0" to slot 6 sampler slot 7
Set 2D Texture "_Normal1" to slot 7 sampler slot 8
Set 2D Texture "_Normal2" to slot 8 sampler slot 9
Set 2D Texture "_Normal3" to slot 9 sampler slot 10
Set 2D Texture "_TerrainNormalmapTexture" to slot 10 sampler slot 6
Set 3D Texture "unity_ProbeVolumeSH" to slot 11 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 192
  Float _NormalScale1 at 196
  Float _NormalScale2 at 200
  Float _NormalScale3 at 204
  Float _Metallic0 at 208
  Float _Metallic1 at 212
  Float _Metallic2 at 216
  Float _Metallic3 at 220
  Float _Smoothness0 at 224
  Float _Smoothness1 at 228
  Float _Smoothness2 at 232
  Float _Smoothness3 at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float       
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture3d (float,float,float,float) t11
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v5.xyxx, t0.xyzw, s11
   5: eq r1.w, r2.x, l(0.000000)
   6: discard_nz r1.w
   7: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r2.xy, r2.xyxx, cb0[5].xyxx
  10: sample r2.xyzw, r2.xyxx, t1.xyzw, s1
  11: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r3.x, r1.w, l(0.001000)
  13: div r2.xyzw, r2.xyzw, r3.xxxx
  14: mad r3.xy, v5.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r3.zw, v5.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r4.xy, v5.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r4.zw, v5.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r5.xyzw, r3.xyxx, t2.xyzw, s2
  19: mul r5.xyzw, r2.xxxx, r5.xyzw
  20: mul r5.w, r5.w, cb0[14].x
  21: sample r6.xyzw, r3.zwzz, t3.xyzw, s3
  22: mul r6.xyzw, r2.yyyy, r6.xyzw
  23: mul r6.w, r6.w, cb0[14].y
  24: add r5.xyzw, r5.xyzw, r6.xyzw
  25: sample r6.xyzw, r4.xyxx, t4.xyzw, s4
  26: mul r6.xyzw, r2.zzzz, r6.xyzw
  27: mul r6.w, r6.w, cb0[14].z
  28: add r5.xyzw, r5.xyzw, r6.xyzw
  29: sample r6.xyzw, r4.zwzz, t5.xyzw, s5
  30: mul r6.xyzw, r2.wwww, r6.xyzw
  31: mul r6.w, r6.w, cb0[14].w
  32: add r5.xyzw, r5.xyzw, r6.xyzw
  33: sample r6.xyzw, r3.xyxx, t6.xyzw, s7
  34: mul r6.x, r6.w, r6.x
  35: mad r3.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  36: mul r6.xy, r3.xyxx, cb0[12].xxxx
  37: dp2 r3.x, r6.xyxx, r6.xyxx
  38: min r3.x, r3.x, l(1.000000)
  39: add r3.x, -r3.x, l(1.000000)
  40: sqrt r6.z, r3.x
  41: sample r3.xyzw, r3.zwzz, t7.xyzw, s8
  42: mul r3.x, r3.w, r3.x
  43: mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  44: mul r3.xy, r3.xyxx, cb0[12].yyyy
  45: dp2 r3.w, r3.xyxx, r3.xyxx
  46: min r3.w, r3.w, l(1.000000)
  47: add r3.w, -r3.w, l(1.000000)
  48: sqrt r3.z, r3.w
  49: mul r3.xyz, r2.yyyy, r3.xyzx
  50: mad r3.xyz, r6.xyzx, r2.xxxx, r3.xyzx
  51: sample r6.xyzw, r4.xyxx, t8.xyzw, s9
  52: mul r6.x, r6.w, r6.x
  53: mad r4.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  54: mul r6.xy, r4.xyxx, cb0[12].zzzz
  55: dp2 r3.w, r6.xyxx, r6.xyxx
  56: min r3.w, r3.w, l(1.000000)
  57: add r3.w, -r3.w, l(1.000000)
  58: sqrt r6.z, r3.w
  59: mad r3.xyz, r6.xyzx, r2.zzzz, r3.xyzx
  60: sample r4.xyzw, r4.zwzz, t9.xyzw, s10
  61: mul r4.x, r4.w, r4.x
  62: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  63: mul r4.xy, r4.xyxx, cb0[12].wwww
  64: dp2 r3.w, r4.xyxx, r4.xyxx
  65: min r3.w, r3.w, l(1.000000)
  66: add r3.w, -r3.w, l(1.000000)
  67: sqrt r4.z, r3.w
  68: mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx
  69: add r3.z, r3.z, l(0.000010)
  70: sample r4.xyzw, v5.zwzz, t10.xyzw, s6
  71: mad r4.xyz, r4.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  72: dp3 r3.w, r4.xyzx, r4.xyzx
  73: rsq r3.w, r3.w
  74: mul r4.xyz, r3.wwww, r4.xyzx
  75: mul r6.xyz, r4.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  76: mad r6.xyz, r4.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r6.xyzx
  77: dp2 r3.w, r6.xzxx, r6.xzxx
  78: rsq r3.w, r3.w
  79: mul r6.xyz, r3.wwww, r6.xyzx
  80: mul r7.xyz, r4.zxyz, r6.yzxy
  81: mad r7.xyz, r6.zxyz, r4.yzxy, -r7.xyzx
  82: dp3 r3.w, r7.xyzx, r7.xyzx
  83: rsq r3.w, r3.w
  84: mul r7.xyz, r3.wwww, r7.xyzx
  85: mul r7.xyz, r3.yyyy, r7.xyzx
  86: mad r3.xyw, r3.xxxx, r6.xyxz, r7.xyxz
  87: mad r3.xyz, r3.zzzz, r4.xyzx, r3.xywx
  88: dp4 r2.x, r2.xyzw, cb0[13].xyzw
  89: eq r2.y, cb3[0].x, l(1.000000)
  90: if_nz r2.y
  91:   eq r2.y, cb3[0].y, l(1.000000)
  92:   mul r4.xyz, v4.yyyy, cb3[2].xyzx
  93:   mad r4.xyz, cb3[1].xyzx, v4.xxxx, r4.xyzx
  94:   mad r4.xyz, cb3[3].xyzx, v4.zzzz, r4.xyzx
  95:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  96:   movc r2.yzw, r2.yyyy, r4.xxyz, v4.xxyz
  97:   add r2.yzw, r2.yyzw, -cb3[6].xxyz
  98:   mul r4.yzw, r2.yyzw, cb3[5].xxyz
  99:   mad r2.y, r4.y, l(0.250000), l(0.750000)
 100:   mad r2.z, cb3[0].z, l(0.500000), l(0.750000)
 101:   max r4.x, r2.z, r2.y
 102:   sample r4.xyzw, r4.xzwx, t11.xyzw, s0
 103: else 
 104:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 105: endif 
 106: dp4_sat r2.y, r4.xyzw, cb2[46].xyzw
 107: dp3 r4.x, v1.xyzx, r3.xyzx
 108: dp3 r4.y, v2.xyzx, r3.xyzx
 109: dp3 r4.z, v3.xyzx, r3.xyzx
 110: dp3 r2.z, r4.xyzx, r4.xyzx
 111: rsq r2.z, r2.z
 112: mul r3.xyz, r2.zzzz, r4.xyzx
 113: mul r2.yzw, r2.yyyy, cb0[2].xxyz
 114: add r4.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 115: mad r4.xyz, r2.xxxx, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 116: mad r2.x, -r2.x, l(0.779084), l(0.779084)
 117: mul r5.xyz, r2.xxxx, r5.xyzx
 118: add r2.x, -r5.w, l(1.000000)
 119: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 120: dp3 r0.w, r0.xyzx, r0.xyzx
 121: max r0.w, r0.w, l(0.001000)
 122: rsq r0.w, r0.w
 123: mul r0.xyz, r0.wwww, r0.xyzx
 124: dp3 r0.w, r3.xyzx, r1.xyzx
 125: dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
 126: dp3_sat r1.y, r3.xyzx, r0.xyzx
 127: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 128: mul r0.y, r0.x, r0.x
 129: dp2 r0.y, r0.yyyy, r2.xxxx
 130: add r0.y, r0.y, l(-0.500000)
 131: add r0.z, -r1.x, l(1.000000)
 132: mul r1.z, r0.z, r0.z
 133: mul r1.z, r1.z, r1.z
 134: mul r0.z, r0.z, r1.z
 135: mad r0.z, r0.y, r0.z, l(1.000000)
 136: add r1.z, -|r0.w|, l(1.000000)
 137: mul r3.x, r1.z, r1.z
 138: mul r3.x, r3.x, r3.x
 139: mul r1.z, r1.z, r3.x
 140: mad r0.y, r0.y, r1.z, l(1.000000)
 141: mul r0.y, r0.y, r0.z
 142: mul r0.z, r2.x, r2.x
 143: max r0.z, r0.z, l(0.002000)
 144: add r1.z, -r0.z, l(1.000000)
 145: mad r2.x, |r0.w|, r1.z, r0.z
 146: mad r1.z, r1.x, r1.z, r0.z
 147: mul r0.w, |r0.w|, r1.z
 148: mad r0.w, r1.x, r2.x, r0.w
 149: add r0.w, r0.w, l(0.000010)
 150: div r0.w, l(0.500000), r0.w
 151: mul r0.z, r0.z, r0.z
 152: mad r1.z, r1.y, r0.z, -r1.y
 153: mad r1.y, r1.z, r1.y, l(1.000000)
 154: mul r0.z, r0.z, l(0.318310)
 155: mad r1.y, r1.y, r1.y, l(0.000000)
 156: div r0.z, r0.z, r1.y
 157: mul r0.z, r0.z, r0.w
 158: mul r0.z, r0.z, l(3.141593)
 159: max r0.z, r0.z, l(0.000100)
 160: sqrt r0.z, r0.z
 161: mul r0.yz, r1.xxxx, r0.yyzy
 162: dp3 r0.w, r4.xyzx, r4.xyzx
 163: ne r0.w, r0.w, l(0.000000)
 164: and r0.w, r0.w, l(0x3f800000)
 165: mul r0.z, r0.w, r0.z
 166: mul r1.xyz, r0.yyyy, r2.yzwy
 167: mul r0.yzw, r2.yyzw, r0.zzzz
 168: add r0.x, -r0.x, l(1.000000)
 169: mul r2.x, r0.x, r0.x
 170: mul r2.x, r2.x, r2.x
 171: mul r0.x, r0.x, r2.x
 172: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 173: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
 174: mul r0.xyz, r0.yzwy, r2.xyzx
 175: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 176: mul o0.xyz, r1.wwww, r0.xyzx
 177: mov o0.w, l(1.000000)
 178: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SPOT 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 175 math, 9 temp registers, 14 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 13
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_Normal0" to slot 6 sampler slot 9
Set 2D Texture "_Normal1" to slot 7 sampler slot 10
Set 2D Texture "_Normal2" to slot 8 sampler slot 11
Set 2D Texture "_Normal3" to slot 9 sampler slot 12
Set 2D Texture "_TerrainNormalmapTexture" to slot 10 sampler slot 8
Set 2D Texture "_LightTexture0" to slot 11 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 12 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 13 sampler slot 0

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 256
  Float _NormalScale1 at 260
  Float _NormalScale2 at 264
  Float _NormalScale3 at 268
  Float _Metallic0 at 272
  Float _Metallic1 at 276
  Float _Metallic2 at 280
  Float _Metallic3 at 284
  Float _Smoothness0 at 288
  Float _Smoothness1 at 292
  Float _Smoothness2 at 296
  Float _Smoothness3 at 300
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[19], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_sampler s13, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture2d (float,float,float,float) t11
      dcl_resource_texture2d (float,float,float,float) t12
      dcl_resource_texture3d (float,float,float,float) t13
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 9
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: sample r3.xyzw, v5.xyxx, t0.xyzw, s13
   9: eq r1.w, r3.x, l(0.000000)
  10: discard_nz r1.w
  11: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r3.xy, v5.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, cb0[9].xyxx
  14: sample r3.xyzw, r3.xyxx, t1.xyzw, s3
  15: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r3.xyzw, r3.xyzw, r2.wwww
  18: mad r4.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r4.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r5.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r5.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r6.xyzw, r4.xyxx, t2.xyzw, s4
  23: mul r6.xyzw, r3.xxxx, r6.xyzw
  24: mul r6.w, r6.w, cb0[18].x
  25: sample r7.xyzw, r4.zwzz, t3.xyzw, s5
  26: mul r7.xyzw, r3.yyyy, r7.xyzw
  27: mul r7.w, r7.w, cb0[18].y
  28: add r6.xyzw, r6.xyzw, r7.xyzw
  29: sample r7.xyzw, r5.xyxx, t4.xyzw, s6
  30: mul r7.xyzw, r3.zzzz, r7.xyzw
  31: mul r7.w, r7.w, cb0[18].z
  32: add r6.xyzw, r6.xyzw, r7.xyzw
  33: sample r7.xyzw, r5.zwzz, t5.xyzw, s7
  34: mul r7.xyzw, r3.wwww, r7.xyzw
  35: mul r7.w, r7.w, cb0[18].w
  36: add r6.xyzw, r6.xyzw, r7.xyzw
  37: sample r7.xyzw, r4.xyxx, t6.xyzw, s9
  38: mul r7.x, r7.w, r7.x
  39: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  40: mul r7.xy, r4.xyxx, cb0[16].xxxx
  41: dp2 r2.w, r7.xyxx, r7.xyxx
  42: min r2.w, r2.w, l(1.000000)
  43: add r2.w, -r2.w, l(1.000000)
  44: sqrt r7.z, r2.w
  45: sample r4.xyzw, r4.zwzz, t7.xyzw, s10
  46: mul r4.x, r4.w, r4.x
  47: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  48: mul r4.xy, r4.xyxx, cb0[16].yyyy
  49: dp2 r2.w, r4.xyxx, r4.xyxx
  50: min r2.w, r2.w, l(1.000000)
  51: add r2.w, -r2.w, l(1.000000)
  52: sqrt r4.z, r2.w
  53: mul r4.xyz, r3.yyyy, r4.xyzx
  54: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  55: sample r7.xyzw, r5.xyxx, t8.xyzw, s11
  56: mul r7.x, r7.w, r7.x
  57: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  58: mul r7.xy, r5.xyxx, cb0[16].zzzz
  59: dp2 r2.w, r7.xyxx, r7.xyxx
  60: min r2.w, r2.w, l(1.000000)
  61: add r2.w, -r2.w, l(1.000000)
  62: sqrt r7.z, r2.w
  63: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  64: sample r5.xyzw, r5.zwzz, t9.xyzw, s12
  65: mul r5.x, r5.w, r5.x
  66: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  67: mul r5.xy, r5.xyxx, cb0[16].wwww
  68: dp2 r2.w, r5.xyxx, r5.xyxx
  69: min r2.w, r2.w, l(1.000000)
  70: add r2.w, -r2.w, l(1.000000)
  71: sqrt r5.z, r2.w
  72: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  73: add r2.w, r4.z, l(0.000010)
  74: sample r5.xyzw, v5.zwzz, t10.xyzw, s8
  75: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  76: dp3 r4.z, r5.xyzx, r5.xyzx
  77: rsq r4.z, r4.z
  78: mul r5.xyz, r4.zzzz, r5.xyzx
  79: mul r7.xyz, r5.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  80: mad r7.xyz, r5.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r7.xyzx
  81: dp2 r4.z, r7.xzxx, r7.xzxx
  82: rsq r4.z, r4.z
  83: mul r7.xyz, r4.zzzz, r7.xyzx
  84: mul r8.xyz, r5.zxyz, r7.yzxy
  85: mad r8.xyz, r7.zxyz, r5.yzxy, -r8.xyzx
  86: dp3 r4.z, r8.xyzx, r8.xyzx
  87: rsq r4.z, r4.z
  88: mul r8.xyz, r4.zzzz, r8.xyzx
  89: mul r4.yzw, r4.yyyy, r8.xxyz
  90: mad r4.xyz, r4.xxxx, r7.xyzx, r4.yzwy
  91: mad r4.xyz, r2.wwww, r5.xyzx, r4.xyzx
  92: dp4 r2.w, r3.xyzw, cb0[17].xyzw
  93: mul r3.xyzw, v4.yyyy, cb0[5].xyzw
  94: mad r3.xyzw, cb0[4].xyzw, v4.xxxx, r3.xyzw
  95: mad r3.xyzw, cb0[6].xyzw, v4.zzzz, r3.xyzw
  96: add r3.xyzw, r3.xyzw, cb0[7].xyzw
  97: eq r4.w, cb3[0].x, l(1.000000)
  98: if_nz r4.w
  99:   eq r4.w, cb3[0].y, l(1.000000)
 100:   mul r5.xyz, v4.yyyy, cb3[2].xyzx
 101:   mad r5.xyz, cb3[1].xyzx, v4.xxxx, r5.xyzx
 102:   mad r5.xyz, cb3[3].xyzx, v4.zzzz, r5.xyzx
 103:   add r5.xyz, r5.xyzx, cb3[4].xyzx
 104:   movc r5.xyz, r4.wwww, r5.xyzx, v4.xyzx
 105:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
 106:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
 107:   mad r4.w, r5.y, l(0.250000), l(0.750000)
 108:   mad r5.y, cb3[0].z, l(0.500000), l(0.750000)
 109:   max r5.x, r4.w, r5.y
 110:   sample r5.xyzw, r5.xzwx, t13.xyzw, s0
 111: else 
 112:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 113: endif 
 114: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
 115: lt r5.x, l(0.000000), r3.z
 116: and r5.x, r5.x, l(0x3f800000)
 117: div r5.yz, r3.xxyx, r3.wwww
 118: add r5.yz, r5.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
 119: sample r7.xyzw, r5.yzyy, t11.xyzw, s1
 120: mul r3.w, r5.x, r7.w
 121: dp3 r3.x, r3.xyzx, r3.xyzx
 122: sample r5.xyzw, r3.xxxx, t12.xyzw, s2
 123: mul r3.x, r3.w, r5.x
 124: mul r3.x, r4.w, r3.x
 125: dp3 r5.x, v1.xyzx, r4.xyzx
 126: dp3 r5.y, v2.xyzx, r4.xyzx
 127: dp3 r5.z, v3.xyzx, r4.xyzx
 128: dp3 r3.y, r5.xyzx, r5.xyzx
 129: rsq r3.y, r3.y
 130: mul r3.yzw, r3.yyyy, r5.xxyz
 131: mul r4.xyz, r3.xxxx, cb0[2].xyzx
 132: add r5.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 133: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 134: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 135: mul r6.xyz, r2.wwww, r6.xyzx
 136: add r2.w, -r6.w, l(1.000000)
 137: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
 138: dp3 r0.w, r0.xyzx, r0.xyzx
 139: max r0.w, r0.w, l(0.001000)
 140: rsq r0.w, r0.w
 141: mul r0.xyz, r0.wwww, r0.xyzx
 142: dp3 r0.w, r3.yzwy, r2.xyzx
 143: dp3_sat r2.x, r3.yzwy, r1.xyzx
 144: dp3_sat r2.y, r3.yzwy, r0.xyzx
 145: dp3_sat r0.x, r1.xyzx, r0.xyzx
 146: mul r0.y, r0.x, r0.x
 147: dp2 r0.y, r0.yyyy, r2.wwww
 148: add r0.y, r0.y, l(-0.500000)
 149: add r0.z, -r2.x, l(1.000000)
 150: mul r1.x, r0.z, r0.z
 151: mul r1.x, r1.x, r1.x
 152: mul r0.z, r0.z, r1.x
 153: mad r0.z, r0.y, r0.z, l(1.000000)
 154: add r1.x, -|r0.w|, l(1.000000)
 155: mul r1.y, r1.x, r1.x
 156: mul r1.y, r1.y, r1.y
 157: mul r1.x, r1.x, r1.y
 158: mad r0.y, r0.y, r1.x, l(1.000000)
 159: mul r0.y, r0.y, r0.z
 160: mul r0.z, r2.w, r2.w
 161: max r0.z, r0.z, l(0.002000)
 162: add r1.x, -r0.z, l(1.000000)
 163: mad r1.y, |r0.w|, r1.x, r0.z
 164: mad r1.x, r2.x, r1.x, r0.z
 165: mul r0.w, |r0.w|, r1.x
 166: mad r0.w, r2.x, r1.y, r0.w
 167: add r0.w, r0.w, l(0.000010)
 168: div r0.w, l(0.500000), r0.w
 169: mul r0.z, r0.z, r0.z
 170: mad r1.x, r2.y, r0.z, -r2.y
 171: mad r1.x, r1.x, r2.y, l(1.000000)
 172: mul r0.z, r0.z, l(0.318310)
 173: mad r1.x, r1.x, r1.x, l(0.000000)
 174: div r0.z, r0.z, r1.x
 175: mul r0.z, r0.z, r0.w
 176: mul r0.z, r0.z, l(3.141593)
 177: max r0.z, r0.z, l(0.000100)
 178: sqrt r0.z, r0.z
 179: mul r0.yz, r2.xxxx, r0.yyzy
 180: dp3 r0.w, r5.xyzx, r5.xyzx
 181: ne r0.w, r0.w, l(0.000000)
 182: and r0.w, r0.w, l(0x3f800000)
 183: mul r0.z, r0.w, r0.z
 184: mul r1.xyz, r0.yyyy, r4.xyzx
 185: mul r0.yzw, r4.xxyz, r0.zzzz
 186: add r0.x, -r0.x, l(1.000000)
 187: mul r2.x, r0.x, r0.x
 188: mul r2.x, r2.x, r2.x
 189: mul r0.x, r0.x, r2.x
 190: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 191: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 192: mul r0.xyz, r0.yzwy, r2.xyzx
 193: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 194: mul o0.xyz, r1.wwww, r0.xyzx
 195: mov o0.w, l(1.000000)
 196: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT_COOKIE 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 170 math, 9 temp registers, 14 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 13
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_Normal0" to slot 6 sampler slot 9
Set 2D Texture "_Normal1" to slot 7 sampler slot 10
Set 2D Texture "_Normal2" to slot 8 sampler slot 11
Set 2D Texture "_Normal3" to slot 9 sampler slot 12
Set 2D Texture "_TerrainNormalmapTexture" to slot 10 sampler slot 8
Set 2D Texture "_LightTextureB0" to slot 11 sampler slot 2
Set CUBE Texture "_LightTexture0" to slot 12 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 13 sampler slot 0

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 256
  Float _NormalScale1 at 260
  Float _NormalScale2 at 264
  Float _NormalScale3 at 268
  Float _Metallic0 at 272
  Float _Metallic1 at 276
  Float _Metallic2 at 280
  Float _Metallic3 at 284
  Float _Smoothness0 at 288
  Float _Smoothness1 at 292
  Float _Smoothness2 at 296
  Float _Smoothness3 at 300
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[19], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_sampler s13, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture2d (float,float,float,float) t11
      dcl_resource_texturecube (float,float,float,float) t12
      dcl_resource_texture3d (float,float,float,float) t13
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 9
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, r2.xyzx
   8: sample r3.xyzw, v5.xyxx, t0.xyzw, s13
   9: eq r1.w, r3.x, l(0.000000)
  10: discard_nz r1.w
  11: add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r3.xy, v5.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r3.xy, r3.xyxx, cb0[9].xyxx
  14: sample r3.xyzw, r3.xyxx, t1.xyzw, s3
  15: dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r3.xyzw, r3.xyzw, r2.wwww
  18: mad r4.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r4.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r5.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r5.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r6.xyzw, r4.xyxx, t2.xyzw, s4
  23: mul r6.xyzw, r3.xxxx, r6.xyzw
  24: mul r6.w, r6.w, cb0[18].x
  25: sample r7.xyzw, r4.zwzz, t3.xyzw, s5
  26: mul r7.xyzw, r3.yyyy, r7.xyzw
  27: mul r7.w, r7.w, cb0[18].y
  28: add r6.xyzw, r6.xyzw, r7.xyzw
  29: sample r7.xyzw, r5.xyxx, t4.xyzw, s6
  30: mul r7.xyzw, r3.zzzz, r7.xyzw
  31: mul r7.w, r7.w, cb0[18].z
  32: add r6.xyzw, r6.xyzw, r7.xyzw
  33: sample r7.xyzw, r5.zwzz, t5.xyzw, s7
  34: mul r7.xyzw, r3.wwww, r7.xyzw
  35: mul r7.w, r7.w, cb0[18].w
  36: add r6.xyzw, r6.xyzw, r7.xyzw
  37: sample r7.xyzw, r4.xyxx, t6.xyzw, s9
  38: mul r7.x, r7.w, r7.x
  39: mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  40: mul r7.xy, r4.xyxx, cb0[16].xxxx
  41: dp2 r2.w, r7.xyxx, r7.xyxx
  42: min r2.w, r2.w, l(1.000000)
  43: add r2.w, -r2.w, l(1.000000)
  44: sqrt r7.z, r2.w
  45: sample r4.xyzw, r4.zwzz, t7.xyzw, s10
  46: mul r4.x, r4.w, r4.x
  47: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  48: mul r4.xy, r4.xyxx, cb0[16].yyyy
  49: dp2 r2.w, r4.xyxx, r4.xyxx
  50: min r2.w, r2.w, l(1.000000)
  51: add r2.w, -r2.w, l(1.000000)
  52: sqrt r4.z, r2.w
  53: mul r4.xyz, r3.yyyy, r4.xyzx
  54: mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
  55: sample r7.xyzw, r5.xyxx, t8.xyzw, s11
  56: mul r7.x, r7.w, r7.x
  57: mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  58: mul r7.xy, r5.xyxx, cb0[16].zzzz
  59: dp2 r2.w, r7.xyxx, r7.xyxx
  60: min r2.w, r2.w, l(1.000000)
  61: add r2.w, -r2.w, l(1.000000)
  62: sqrt r7.z, r2.w
  63: mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
  64: sample r5.xyzw, r5.zwzz, t9.xyzw, s12
  65: mul r5.x, r5.w, r5.x
  66: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  67: mul r5.xy, r5.xyxx, cb0[16].wwww
  68: dp2 r2.w, r5.xyxx, r5.xyxx
  69: min r2.w, r2.w, l(1.000000)
  70: add r2.w, -r2.w, l(1.000000)
  71: sqrt r5.z, r2.w
  72: mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
  73: add r2.w, r4.z, l(0.000010)
  74: sample r5.xyzw, v5.zwzz, t10.xyzw, s8
  75: mad r5.xyz, r5.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  76: dp3 r4.z, r5.xyzx, r5.xyzx
  77: rsq r4.z, r4.z
  78: mul r5.xyz, r4.zzzz, r5.xyzx
  79: mul r7.xyz, r5.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  80: mad r7.xyz, r5.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r7.xyzx
  81: dp2 r4.z, r7.xzxx, r7.xzxx
  82: rsq r4.z, r4.z
  83: mul r7.xyz, r4.zzzz, r7.xyzx
  84: mul r8.xyz, r5.zxyz, r7.yzxy
  85: mad r8.xyz, r7.zxyz, r5.yzxy, -r8.xyzx
  86: dp3 r4.z, r8.xyzx, r8.xyzx
  87: rsq r4.z, r4.z
  88: mul r8.xyz, r4.zzzz, r8.xyzx
  89: mul r4.yzw, r4.yyyy, r8.xxyz
  90: mad r4.xyz, r4.xxxx, r7.xyzx, r4.yzwy
  91: mad r4.xyz, r2.wwww, r5.xyzx, r4.xyzx
  92: dp4 r2.w, r3.xyzw, cb0[17].xyzw
  93: mul r3.xyz, v4.yyyy, cb0[5].xyzx
  94: mad r3.xyz, cb0[4].xyzx, v4.xxxx, r3.xyzx
  95: mad r3.xyz, cb0[6].xyzx, v4.zzzz, r3.xyzx
  96: add r3.xyz, r3.xyzx, cb0[7].xyzx
  97: eq r3.w, cb3[0].x, l(1.000000)
  98: if_nz r3.w
  99:   eq r3.w, cb3[0].y, l(1.000000)
 100:   mul r5.xyz, v4.yyyy, cb3[2].xyzx
 101:   mad r5.xyz, cb3[1].xyzx, v4.xxxx, r5.xyzx
 102:   mad r5.xyz, cb3[3].xyzx, v4.zzzz, r5.xyzx
 103:   add r5.xyz, r5.xyzx, cb3[4].xyzx
 104:   movc r5.xyz, r3.wwww, r5.xyzx, v4.xyzx
 105:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
 106:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
 107:   mad r3.w, r5.y, l(0.250000), l(0.750000)
 108:   mad r4.w, cb3[0].z, l(0.500000), l(0.750000)
 109:   max r5.x, r3.w, r4.w
 110:   sample r5.xyzw, r5.xzwx, t13.xyzw, s0
 111: else 
 112:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 113: endif 
 114: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
 115: dp3 r4.w, r3.xyzx, r3.xyzx
 116: sample r5.xyzw, r4.wwww, t11.xyzw, s2
 117: sample r7.xyzw, r3.xyzx, t12.xyzw, s1
 118: mul r3.x, r5.x, r7.w
 119: mul r3.x, r3.w, r3.x
 120: dp3 r5.x, v1.xyzx, r4.xyzx
 121: dp3 r5.y, v2.xyzx, r4.xyzx
 122: dp3 r5.z, v3.xyzx, r4.xyzx
 123: dp3 r3.y, r5.xyzx, r5.xyzx
 124: rsq r3.y, r3.y
 125: mul r3.yzw, r3.yyyy, r5.xxyz
 126: mul r4.xyz, r3.xxxx, cb0[2].xyzx
 127: add r5.xyz, r6.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 128: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 129: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 130: mul r6.xyz, r2.wwww, r6.xyzx
 131: add r2.w, -r6.w, l(1.000000)
 132: mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
 133: dp3 r0.w, r0.xyzx, r0.xyzx
 134: max r0.w, r0.w, l(0.001000)
 135: rsq r0.w, r0.w
 136: mul r0.xyz, r0.wwww, r0.xyzx
 137: dp3 r0.w, r3.yzwy, r2.xyzx
 138: dp3_sat r2.x, r3.yzwy, r1.xyzx
 139: dp3_sat r2.y, r3.yzwy, r0.xyzx
 140: dp3_sat r0.x, r1.xyzx, r0.xyzx
 141: mul r0.y, r0.x, r0.x
 142: dp2 r0.y, r0.yyyy, r2.wwww
 143: add r0.y, r0.y, l(-0.500000)
 144: add r0.z, -r2.x, l(1.000000)
 145: mul r1.x, r0.z, r0.z
 146: mul r1.x, r1.x, r1.x
 147: mul r0.z, r0.z, r1.x
 148: mad r0.z, r0.y, r0.z, l(1.000000)
 149: add r1.x, -|r0.w|, l(1.000000)
 150: mul r1.y, r1.x, r1.x
 151: mul r1.y, r1.y, r1.y
 152: mul r1.x, r1.x, r1.y
 153: mad r0.y, r0.y, r1.x, l(1.000000)
 154: mul r0.y, r0.y, r0.z
 155: mul r0.z, r2.w, r2.w
 156: max r0.z, r0.z, l(0.002000)
 157: add r1.x, -r0.z, l(1.000000)
 158: mad r1.y, |r0.w|, r1.x, r0.z
 159: mad r1.x, r2.x, r1.x, r0.z
 160: mul r0.w, |r0.w|, r1.x
 161: mad r0.w, r2.x, r1.y, r0.w
 162: add r0.w, r0.w, l(0.000010)
 163: div r0.w, l(0.500000), r0.w
 164: mul r0.z, r0.z, r0.z
 165: mad r1.x, r2.y, r0.z, -r2.y
 166: mad r1.x, r1.x, r2.y, l(1.000000)
 167: mul r0.z, r0.z, l(0.318310)
 168: mad r1.x, r1.x, r1.x, l(0.000000)
 169: div r0.z, r0.z, r1.x
 170: mul r0.z, r0.z, r0.w
 171: mul r0.z, r0.z, l(3.141593)
 172: max r0.z, r0.z, l(0.000100)
 173: sqrt r0.z, r0.z
 174: mul r0.yz, r2.xxxx, r0.yyzy
 175: dp3 r0.w, r5.xyzx, r5.xyzx
 176: ne r0.w, r0.w, l(0.000000)
 177: and r0.w, r0.w, l(0x3f800000)
 178: mul r0.z, r0.w, r0.z
 179: mul r1.xyz, r0.yyyy, r4.xyzx
 180: mul r0.yzw, r4.xxyz, r0.zzzz
 181: add r0.x, -r0.x, l(1.000000)
 182: mul r2.x, r0.x, r0.x
 183: mul r2.x, r2.x, r2.x
 184: mul r0.x, r0.x, r2.x
 185: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 186: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 187: mul r0.xyz, r0.yzwy, r2.xyzx
 188: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 189: mul o0.xyz, r1.wwww, r0.xyzx
 190: mov o0.w, l(1.000000)
 191: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE INSTANCING_ON 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 164 math, 8 temp registers, 13 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 12
Set 2D Texture "_Control" to slot 1 sampler slot 2
Set 2D Texture "_Splat0" to slot 2 sampler slot 3
Set 2D Texture "_Splat1" to slot 3 sampler slot 4
Set 2D Texture "_Splat2" to slot 4 sampler slot 5
Set 2D Texture "_Splat3" to slot 5 sampler slot 6
Set 2D Texture "_Normal0" to slot 6 sampler slot 8
Set 2D Texture "_Normal1" to slot 7 sampler slot 9
Set 2D Texture "_Normal2" to slot 8 sampler slot 10
Set 2D Texture "_Normal3" to slot 9 sampler slot 11
Set 2D Texture "_TerrainNormalmapTexture" to slot 10 sampler slot 7
Set 2D Texture "_LightTexture0" to slot 11 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 0

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 256
  Float _NormalScale1 at 260
  Float _NormalScale2 at 264
  Float _NormalScale3 at 268
  Float _Metallic0 at 272
  Float _Metallic1 at 276
  Float _Metallic2 at 280
  Float _Metallic3 at 284
  Float _Smoothness0 at 288
  Float _Smoothness1 at 292
  Float _Smoothness2 at 296
  Float _Smoothness3 at 300
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[19], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture2d (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v5.xyxx, t0.xyzw, s12
   5: eq r1.w, r2.x, l(0.000000)
   6: discard_nz r1.w
   7: add r2.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r2.xy, r2.xyxx, cb0[9].xyxx
  10: sample r2.xyzw, r2.xyxx, t1.xyzw, s2
  11: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r3.x, r1.w, l(0.001000)
  13: div r2.xyzw, r2.xyzw, r3.xxxx
  14: mad r3.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  15: mad r3.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  16: mad r4.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  17: mad r4.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  18: sample r5.xyzw, r3.xyxx, t2.xyzw, s3
  19: mul r5.xyzw, r2.xxxx, r5.xyzw
  20: mul r5.w, r5.w, cb0[18].x
  21: sample r6.xyzw, r3.zwzz, t3.xyzw, s4
  22: mul r6.xyzw, r2.yyyy, r6.xyzw
  23: mul r6.w, r6.w, cb0[18].y
  24: add r5.xyzw, r5.xyzw, r6.xyzw
  25: sample r6.xyzw, r4.xyxx, t4.xyzw, s5
  26: mul r6.xyzw, r2.zzzz, r6.xyzw
  27: mul r6.w, r6.w, cb0[18].z
  28: add r5.xyzw, r5.xyzw, r6.xyzw
  29: sample r6.xyzw, r4.zwzz, t5.xyzw, s6
  30: mul r6.xyzw, r2.wwww, r6.xyzw
  31: mul r6.w, r6.w, cb0[18].w
  32: add r5.xyzw, r5.xyzw, r6.xyzw
  33: sample r6.xyzw, r3.xyxx, t6.xyzw, s8
  34: mul r6.x, r6.w, r6.x
  35: mad r3.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  36: mul r6.xy, r3.xyxx, cb0[16].xxxx
  37: dp2 r3.x, r6.xyxx, r6.xyxx
  38: min r3.x, r3.x, l(1.000000)
  39: add r3.x, -r3.x, l(1.000000)
  40: sqrt r6.z, r3.x
  41: sample r3.xyzw, r3.zwzz, t7.xyzw, s9
  42: mul r3.x, r3.w, r3.x
  43: mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  44: mul r3.xy, r3.xyxx, cb0[16].yyyy
  45: dp2 r3.w, r3.xyxx, r3.xyxx
  46: min r3.w, r3.w, l(1.000000)
  47: add r3.w, -r3.w, l(1.000000)
  48: sqrt r3.z, r3.w
  49: mul r3.xyz, r2.yyyy, r3.xyzx
  50: mad r3.xyz, r6.xyzx, r2.xxxx, r3.xyzx
  51: sample r6.xyzw, r4.xyxx, t8.xyzw, s10
  52: mul r6.x, r6.w, r6.x
  53: mad r4.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  54: mul r6.xy, r4.xyxx, cb0[16].zzzz
  55: dp2 r3.w, r6.xyxx, r6.xyxx
  56: min r3.w, r3.w, l(1.000000)
  57: add r3.w, -r3.w, l(1.000000)
  58: sqrt r6.z, r3.w
  59: mad r3.xyz, r6.xyzx, r2.zzzz, r3.xyzx
  60: sample r4.xyzw, r4.zwzz, t9.xyzw, s11
  61: mul r4.x, r4.w, r4.x
  62: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  63: mul r4.xy, r4.xyxx, cb0[16].wwww
  64: dp2 r3.w, r4.xyxx, r4.xyxx
  65: min r3.w, r3.w, l(1.000000)
  66: add r3.w, -r3.w, l(1.000000)
  67: sqrt r4.z, r3.w
  68: mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx
  69: add r3.z, r3.z, l(0.000010)
  70: sample r4.xyzw, v5.zwzz, t10.xyzw, s7
  71: mad r4.xyz, r4.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  72: dp3 r3.w, r4.xyzx, r4.xyzx
  73: rsq r3.w, r3.w
  74: mul r4.xyz, r3.wwww, r4.xyzx
  75: mul r6.xyz, r4.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  76: mad r6.xyz, r4.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r6.xyzx
  77: dp2 r3.w, r6.xzxx, r6.xzxx
  78: rsq r3.w, r3.w
  79: mul r6.xyz, r3.wwww, r6.xyzx
  80: mul r7.xyz, r4.zxyz, r6.yzxy
  81: mad r7.xyz, r6.zxyz, r4.yzxy, -r7.xyzx
  82: dp3 r3.w, r7.xyzx, r7.xyzx
  83: rsq r3.w, r3.w
  84: mul r7.xyz, r3.wwww, r7.xyzx
  85: mul r7.xyz, r3.yyyy, r7.xyzx
  86: mad r3.xyw, r3.xxxx, r6.xyxz, r7.xyxz
  87: mad r3.xyz, r3.zzzz, r4.xyzx, r3.xywx
  88: dp4 r2.x, r2.xyzw, cb0[17].xyzw
  89: mul r2.yz, v4.yyyy, cb0[5].xxyx
  90: mad r2.yz, cb0[4].xxyx, v4.xxxx, r2.yyzy
  91: mad r2.yz, cb0[6].xxyx, v4.zzzz, r2.yyzy
  92: add r2.yz, r2.yyzy, cb0[7].xxyx
  93: eq r2.w, cb3[0].x, l(1.000000)
  94: if_nz r2.w
  95:   eq r2.w, cb3[0].y, l(1.000000)
  96:   mul r4.xyz, v4.yyyy, cb3[2].xyzx
  97:   mad r4.xyz, cb3[1].xyzx, v4.xxxx, r4.xyzx
  98:   mad r4.xyz, cb3[3].xyzx, v4.zzzz, r4.xyzx
  99:   add r4.xyz, r4.xyzx, cb3[4].xyzx
 100:   movc r4.xyz, r2.wwww, r4.xyzx, v4.xyzx
 101:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
 102:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
 103:   mad r2.w, r4.y, l(0.250000), l(0.750000)
 104:   mad r3.w, cb3[0].z, l(0.500000), l(0.750000)
 105:   max r4.x, r2.w, r3.w
 106:   sample r4.xyzw, r4.xzwx, t12.xyzw, s0
 107: else 
 108:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 109: endif 
 110: dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
 111: sample r4.xyzw, r2.yzyy, t11.xyzw, s1
 112: mul r2.y, r2.w, r4.w
 113: dp3 r4.x, v1.xyzx, r3.xyzx
 114: dp3 r4.y, v2.xyzx, r3.xyzx
 115: dp3 r4.z, v3.xyzx, r3.xyzx
 116: dp3 r2.z, r4.xyzx, r4.xyzx
 117: rsq r2.z, r2.z
 118: mul r3.xyz, r2.zzzz, r4.xyzx
 119: mul r2.yzw, r2.yyyy, cb0[2].xxyz
 120: add r4.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 121: mad r4.xyz, r2.xxxx, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 122: mad r2.x, -r2.x, l(0.779084), l(0.779084)
 123: mul r5.xyz, r2.xxxx, r5.xyzx
 124: add r2.x, -r5.w, l(1.000000)
 125: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 126: dp3 r0.w, r0.xyzx, r0.xyzx
 127: max r0.w, r0.w, l(0.001000)
 128: rsq r0.w, r0.w
 129: mul r0.xyz, r0.wwww, r0.xyzx
 130: dp3 r0.w, r3.xyzx, r1.xyzx
 131: dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
 132: dp3_sat r1.y, r3.xyzx, r0.xyzx
 133: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 134: mul r0.y, r0.x, r0.x
 135: dp2 r0.y, r0.yyyy, r2.xxxx
 136: add r0.y, r0.y, l(-0.500000)
 137: add r0.z, -r1.x, l(1.000000)
 138: mul r1.z, r0.z, r0.z
 139: mul r1.z, r1.z, r1.z
 140: mul r0.z, r0.z, r1.z
 141: mad r0.z, r0.y, r0.z, l(1.000000)
 142: add r1.z, -|r0.w|, l(1.000000)
 143: mul r3.x, r1.z, r1.z
 144: mul r3.x, r3.x, r3.x
 145: mul r1.z, r1.z, r3.x
 146: mad r0.y, r0.y, r1.z, l(1.000000)
 147: mul r0.y, r0.y, r0.z
 148: mul r0.z, r2.x, r2.x
 149: max r0.z, r0.z, l(0.002000)
 150: add r1.z, -r0.z, l(1.000000)
 151: mad r2.x, |r0.w|, r1.z, r0.z
 152: mad r1.z, r1.x, r1.z, r0.z
 153: mul r0.w, |r0.w|, r1.z
 154: mad r0.w, r1.x, r2.x, r0.w
 155: add r0.w, r0.w, l(0.000010)
 156: div r0.w, l(0.500000), r0.w
 157: mul r0.z, r0.z, r0.z
 158: mad r1.z, r1.y, r0.z, -r1.y
 159: mad r1.y, r1.z, r1.y, l(1.000000)
 160: mul r0.z, r0.z, l(0.318310)
 161: mad r1.y, r1.y, r1.y, l(0.000000)
 162: div r0.z, r0.z, r1.y
 163: mul r0.z, r0.z, r0.w
 164: mul r0.z, r0.z, l(3.141593)
 165: max r0.z, r0.z, l(0.000100)
 166: sqrt r0.z, r0.z
 167: mul r0.yz, r1.xxxx, r0.yyzy
 168: dp3 r0.w, r4.xyzx, r4.xyzx
 169: ne r0.w, r0.w, l(0.000000)
 170: and r0.w, r0.w, l(0x3f800000)
 171: mul r0.z, r0.w, r0.z
 172: mul r1.xyz, r0.yyyy, r2.yzwy
 173: mul r0.yzw, r2.yyzw, r0.zzzz
 174: add r0.x, -r0.x, l(1.000000)
 175: mul r2.x, r0.x, r0.x
 176: mul r2.x, r2.x, r2.x
 177: mul r0.x, r0.x, r2.x
 178: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 179: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
 180: mul r0.xyz, r0.yzwy, r2.xyzx
 181: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 182: mul o0.xyz, r1.wwww, r0.xyzx
 183: mov o0.w, l(1.000000)
 184: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_DEPTH SPOT 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 191 math, 10 temp registers, 14 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 14
Set 2D Texture "_Control" to slot 1 sampler slot 4
Set 2D Texture "_Splat0" to slot 2 sampler slot 5
Set 2D Texture "_Splat1" to slot 3 sampler slot 6
Set 2D Texture "_Splat2" to slot 4 sampler slot 7
Set 2D Texture "_Splat3" to slot 5 sampler slot 8
Set 2D Texture "_Normal0" to slot 6 sampler slot 10
Set 2D Texture "_Normal1" to slot 7 sampler slot 11
Set 2D Texture "_Normal2" to slot 8 sampler slot 12
Set 2D Texture "_Normal3" to slot 9 sampler slot 13
Set 2D Texture "_TerrainNormalmapTexture" to slot 10 sampler slot 9
Set 2D Texture "_LightTexture0" to slot 11 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 12 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 13 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 14 sampler slot 1

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 256
  Float _NormalScale1 at 260
  Float _NormalScale2 at 264
  Float _NormalScale3 at 268
  Float _Metallic0 at 272
  Float _Metallic1 at 276
  Float _Metallic2 at 280
  Float _Metallic3 at 284
  Float _Smoothness0 at 288
  Float _Smoothness1 at 292
  Float _Smoothness2 at 296
  Float _Smoothness3 at 300
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[19], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_sampler s13, mode_default
      dcl_sampler s14, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture2d (float,float,float,float) t11
      dcl_resource_texture2d (float,float,float,float) t12
      dcl_resource_texture3d (float,float,float,float) t13
      dcl_resource_texture2d (float,float,float,float) t14
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 10
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v5.xyxx, t0.xyzw, s14
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[9].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s4
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s5
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[18].x
  25: sample r8.xyzw, r5.zwzz, t3.xyzw, s6
  26: mul r8.xyzw, r4.yyyy, r8.xyzw
  27: mul r8.w, r8.w, cb0[18].y
  28: add r7.xyzw, r7.xyzw, r8.xyzw
  29: sample r8.xyzw, r6.xyxx, t4.xyzw, s7
  30: mul r8.xyzw, r4.zzzz, r8.xyzw
  31: mul r8.w, r8.w, cb0[18].z
  32: add r7.xyzw, r7.xyzw, r8.xyzw
  33: sample r8.xyzw, r6.zwzz, t5.xyzw, s8
  34: mul r8.xyzw, r4.wwww, r8.xyzw
  35: mul r8.w, r8.w, cb0[18].w
  36: add r7.xyzw, r7.xyzw, r8.xyzw
  37: sample r8.xyzw, r5.xyxx, t6.xyzw, s10
  38: mul r8.x, r8.w, r8.x
  39: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  40: mul r8.xy, r5.xyxx, cb0[16].xxxx
  41: dp2 r2.w, r8.xyxx, r8.xyxx
  42: min r2.w, r2.w, l(1.000000)
  43: add r2.w, -r2.w, l(1.000000)
  44: sqrt r8.z, r2.w
  45: sample r5.xyzw, r5.zwzz, t7.xyzw, s11
  46: mul r5.x, r5.w, r5.x
  47: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  48: mul r5.xy, r5.xyxx, cb0[16].yyyy
  49: dp2 r2.w, r5.xyxx, r5.xyxx
  50: min r2.w, r2.w, l(1.000000)
  51: add r2.w, -r2.w, l(1.000000)
  52: sqrt r5.z, r2.w
  53: mul r5.xyz, r4.yyyy, r5.xyzx
  54: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  55: sample r8.xyzw, r6.xyxx, t8.xyzw, s12
  56: mul r8.x, r8.w, r8.x
  57: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  58: mul r8.xy, r6.xyxx, cb0[16].zzzz
  59: dp2 r2.w, r8.xyxx, r8.xyxx
  60: min r2.w, r2.w, l(1.000000)
  61: add r2.w, -r2.w, l(1.000000)
  62: sqrt r8.z, r2.w
  63: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  64: sample r6.xyzw, r6.zwzz, t9.xyzw, s13
  65: mul r6.x, r6.w, r6.x
  66: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  67: mul r6.xy, r6.xyxx, cb0[16].wwww
  68: dp2 r2.w, r6.xyxx, r6.xyxx
  69: min r2.w, r2.w, l(1.000000)
  70: add r2.w, -r2.w, l(1.000000)
  71: sqrt r6.z, r2.w
  72: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  73: add r2.w, r5.z, l(0.000010)
  74: sample r6.xyzw, v5.zwzz, t10.xyzw, s9
  75: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  76: dp3 r3.w, r6.xyzx, r6.xyzx
  77: rsq r3.w, r3.w
  78: mul r6.xyz, r3.wwww, r6.xyzx
  79: mul r8.xyz, r6.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  80: mad r8.xyz, r6.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r8.xyzx
  81: dp2 r3.w, r8.xzxx, r8.xzxx
  82: rsq r3.w, r3.w
  83: mul r8.xyz, r3.wwww, r8.xyzx
  84: mul r9.xyz, r6.zxyz, r8.yzxy
  85: mad r9.xyz, r8.zxyz, r6.yzxy, -r9.xyzx
  86: dp3 r3.w, r9.xyzx, r9.xyzx
  87: rsq r3.w, r3.w
  88: mul r9.xyz, r3.wwww, r9.xyzx
  89: mul r5.yzw, r5.yyyy, r9.xxyz
  90: mad r5.xyz, r5.xxxx, r8.xyzx, r5.yzwy
  91: mad r5.xyz, r2.wwww, r6.xyzx, r5.xyzx
  92: dp4 r2.w, r4.xyzw, cb0[17].xyzw
  93: mul r4.xyzw, v4.yyyy, cb0[5].xyzw
  94: mad r4.xyzw, cb0[4].xyzw, v4.xxxx, r4.xyzw
  95: mad r4.xyzw, cb0[6].xyzw, v4.zzzz, r4.xyzw
  96: add r4.xyzw, r4.xyzw, cb0[7].xyzw
  97: mov r6.x, cb4[9].z
  98: mov r6.y, cb4[10].z
  99: mov r6.z, cb4[11].z
 100: dp3 r2.x, r2.xyzx, r6.xyzx
 101: add r6.xyz, v4.xyzx, -cb3[25].xyzx
 102: dp3 r2.y, r6.xyzx, r6.xyzx
 103: sqrt r2.y, r2.y
 104: add r2.y, -r2.x, r2.y
 105: mad r2.x, cb3[25].w, r2.y, r2.x
 106: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
 107: eq r2.y, cb5[0].x, l(1.000000)
 108: if_nz r2.y
 109:   eq r2.y, cb5[0].y, l(1.000000)
 110:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
 111:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
 112:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
 113:   add r6.xyz, r6.xyzx, cb5[4].xyzx
 114:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
 115:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
 116:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
 117:   mad r2.y, r6.y, l(0.250000), l(0.750000)
 118:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
 119:   max r6.x, r2.z, r2.y
 120:   sample r6.xyzw, r6.xzwx, t13.xyzw, s0
 121: else 
 122:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 123: endif 
 124: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 125: mul r6.xyzw, v4.yyyy, cb3[9].xyzw
 126: mad r6.xyzw, cb3[8].xyzw, v4.xxxx, r6.xyzw
 127: mad r6.xyzw, cb3[10].xyzw, v4.zzzz, r6.xyzw
 128: add r6.xyzw, r6.xyzw, cb3[11].xyzw
 129: div r6.xyz, r6.xyzx, r6.wwww
 130: sample_c_lz r2.z, r6.xyxx, t14.xxxx, s1, r6.z
 131: add r3.w, -cb3[24].x, l(1.000000)
 132: mad r2.z, r2.z, r3.w, cb3[24].x
 133: add r2.y, -r2.z, r2.y
 134: mad r2.x, r2.x, r2.y, r2.z
 135: lt r2.y, l(0.000000), r4.z
 136: and r2.y, r2.y, l(0x3f800000)
 137: div r6.xy, r4.xyxx, r4.wwww
 138: add r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 139: sample r6.xyzw, r6.xyxx, t11.xyzw, s2
 140: mul r2.y, r2.y, r6.w
 141: dp3 r2.z, r4.xyzx, r4.xyzx
 142: sample r4.xyzw, r2.zzzz, t12.xyzw, s3
 143: mul r2.y, r2.y, r4.x
 144: mul r2.x, r2.x, r2.y
 145: dp3 r4.x, v1.xyzx, r5.xyzx
 146: dp3 r4.y, v2.xyzx, r5.xyzx
 147: dp3 r4.z, v3.xyzx, r5.xyzx
 148: dp3 r2.y, r4.xyzx, r4.xyzx
 149: rsq r2.y, r2.y
 150: mul r4.xyz, r2.yyyy, r4.xyzx
 151: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 152: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 153: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 154: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 155: mul r6.xyz, r2.wwww, r7.xyzx
 156: add r2.w, -r7.w, l(1.000000)
 157: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 158: dp3 r0.w, r0.xyzx, r0.xyzx
 159: max r0.w, r0.w, l(0.001000)
 160: rsq r0.w, r0.w
 161: mul r0.xyz, r0.wwww, r0.xyzx
 162: dp3 r0.w, r4.xyzx, r3.xyzx
 163: dp3_sat r3.x, r4.xyzx, r1.xyzx
 164: dp3_sat r3.y, r4.xyzx, r0.xyzx
 165: dp3_sat r0.x, r1.xyzx, r0.xyzx
 166: mul r0.y, r0.x, r0.x
 167: dp2 r0.y, r0.yyyy, r2.wwww
 168: add r0.y, r0.y, l(-0.500000)
 169: add r0.z, -r3.x, l(1.000000)
 170: mul r1.x, r0.z, r0.z
 171: mul r1.x, r1.x, r1.x
 172: mul r0.z, r0.z, r1.x
 173: mad r0.z, r0.y, r0.z, l(1.000000)
 174: add r1.x, -|r0.w|, l(1.000000)
 175: mul r1.y, r1.x, r1.x
 176: mul r1.y, r1.y, r1.y
 177: mul r1.x, r1.x, r1.y
 178: mad r0.y, r0.y, r1.x, l(1.000000)
 179: mul r0.y, r0.y, r0.z
 180: mul r0.z, r2.w, r2.w
 181: max r0.z, r0.z, l(0.002000)
 182: add r1.x, -r0.z, l(1.000000)
 183: mad r1.y, |r0.w|, r1.x, r0.z
 184: mad r1.x, r3.x, r1.x, r0.z
 185: mul r0.w, |r0.w|, r1.x
 186: mad r0.w, r3.x, r1.y, r0.w
 187: add r0.w, r0.w, l(0.000010)
 188: div r0.w, l(0.500000), r0.w
 189: mul r0.z, r0.z, r0.z
 190: mad r1.x, r3.y, r0.z, -r3.y
 191: mad r1.x, r1.x, r3.y, l(1.000000)
 192: mul r0.z, r0.z, l(0.318310)
 193: mad r1.x, r1.x, r1.x, l(0.000000)
 194: div r0.z, r0.z, r1.x
 195: mul r0.z, r0.z, r0.w
 196: mul r0.z, r0.z, l(3.141593)
 197: max r0.z, r0.z, l(0.000100)
 198: sqrt r0.z, r0.z
 199: mul r0.yz, r3.xxxx, r0.yyzy
 200: dp3 r0.w, r5.xyzx, r5.xyzx
 201: ne r0.w, r0.w, l(0.000000)
 202: and r0.w, r0.w, l(0x3f800000)
 203: mul r0.z, r0.w, r0.z
 204: mul r1.xyz, r0.yyyy, r2.xyzx
 205: mul r0.yzw, r2.xxyz, r0.zzzz
 206: add r0.x, -r0.x, l(1.000000)
 207: mul r2.x, r0.x, r0.x
 208: mul r2.x, r2.x, r2.x
 209: mul r0.x, r0.x, r2.x
 210: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 211: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 212: mul r0.xyz, r0.yzwy, r2.xyzx
 213: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 214: mul o0.xyz, r1.wwww, r0.xyzx
 215: mov o0.w, l(1.000000)
 216: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_DEPTH SHADOWS_SOFT SPOT 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 220 math, 13 temp registers, 14 textures, 4 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 14
Set 2D Texture "_Control" to slot 1 sampler slot 4
Set 2D Texture "_Splat0" to slot 2 sampler slot 5
Set 2D Texture "_Splat1" to slot 3 sampler slot 6
Set 2D Texture "_Splat2" to slot 4 sampler slot 7
Set 2D Texture "_Splat3" to slot 5 sampler slot 8
Set 2D Texture "_Normal0" to slot 6 sampler slot 10
Set 2D Texture "_Normal1" to slot 7 sampler slot 11
Set 2D Texture "_Normal2" to slot 8 sampler slot 12
Set 2D Texture "_Normal3" to slot 9 sampler slot 13
Set 2D Texture "_TerrainNormalmapTexture" to slot 10 sampler slot 9
Set 2D Texture "_LightTexture0" to slot 11 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 12 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 13 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 14 sampler slot 1

Constant Buffer "$Globals" (384 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 144
  Vector4 _LightColor0 at 32
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _Control_TexelSize at 224
  Vector4 _Splat0_ST at 240
  Vector4 _Splat1_ST at 256
  Vector4 _Splat2_ST at 272
  Vector4 _Splat3_ST at 288
  Float _NormalScale0 at 336
  Float _NormalScale1 at 340
  Float _NormalScale2 at 344
  Float _NormalScale3 at 348
  Float _Metallic0 at 352
  Float _Metallic1 at 356
  Float _Metallic2 at 360
  Float _Metallic3 at 364
  Float _Smoothness0 at 368
  Float _Smoothness1 at 372
  Float _Smoothness2 at 376
  Float _Smoothness3 at 380
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[24], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_sampler s13, mode_default
      dcl_sampler s14, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture2d (float,float,float,float) t11
      dcl_resource_texture2d (float,float,float,float) t12
      dcl_resource_texture3d (float,float,float,float) t13
      dcl_resource_texture2d (float,float,float,float) t14
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 13
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v5.xyxx, t0.xyzw, s14
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[14].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[14].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s4
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v5.xyxx, cb0[15].xyxx, cb0[15].zwzz
  19: mad r5.zw, v5.xxxy, cb0[16].xxxy, cb0[16].zzzw
  20: mad r6.xy, v5.xyxx, cb0[17].xyxx, cb0[17].zwzz
  21: mad r6.zw, v5.xxxy, cb0[18].xxxy, cb0[18].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s5
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[23].x
  25: sample r8.xyzw, r5.zwzz, t3.xyzw, s6
  26: mul r8.xyzw, r4.yyyy, r8.xyzw
  27: mul r8.w, r8.w, cb0[23].y
  28: add r7.xyzw, r7.xyzw, r8.xyzw
  29: sample r8.xyzw, r6.xyxx, t4.xyzw, s7
  30: mul r8.xyzw, r4.zzzz, r8.xyzw
  31: mul r8.w, r8.w, cb0[23].z
  32: add r7.xyzw, r7.xyzw, r8.xyzw
  33: sample r8.xyzw, r6.zwzz, t5.xyzw, s8
  34: mul r8.xyzw, r4.wwww, r8.xyzw
  35: mul r8.w, r8.w, cb0[23].w
  36: add r7.xyzw, r7.xyzw, r8.xyzw
  37: sample r8.xyzw, r5.xyxx, t6.xyzw, s10
  38: mul r8.x, r8.w, r8.x
  39: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  40: mul r8.xy, r5.xyxx, cb0[21].xxxx
  41: dp2 r2.w, r8.xyxx, r8.xyxx
  42: min r2.w, r2.w, l(1.000000)
  43: add r2.w, -r2.w, l(1.000000)
  44: sqrt r8.z, r2.w
  45: sample r5.xyzw, r5.zwzz, t7.xyzw, s11
  46: mul r5.x, r5.w, r5.x
  47: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  48: mul r5.xy, r5.xyxx, cb0[21].yyyy
  49: dp2 r2.w, r5.xyxx, r5.xyxx
  50: min r2.w, r2.w, l(1.000000)
  51: add r2.w, -r2.w, l(1.000000)
  52: sqrt r5.z, r2.w
  53: mul r5.xyz, r4.yyyy, r5.xyzx
  54: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  55: sample r8.xyzw, r6.xyxx, t8.xyzw, s12
  56: mul r8.x, r8.w, r8.x
  57: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  58: mul r8.xy, r6.xyxx, cb0[21].zzzz
  59: dp2 r2.w, r8.xyxx, r8.xyxx
  60: min r2.w, r2.w, l(1.000000)
  61: add r2.w, -r2.w, l(1.000000)
  62: sqrt r8.z, r2.w
  63: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  64: sample r6.xyzw, r6.zwzz, t9.xyzw, s13
  65: mul r6.x, r6.w, r6.x
  66: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  67: mul r6.xy, r6.xyxx, cb0[21].wwww
  68: dp2 r2.w, r6.xyxx, r6.xyxx
  69: min r2.w, r2.w, l(1.000000)
  70: add r2.w, -r2.w, l(1.000000)
  71: sqrt r6.z, r2.w
  72: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  73: add r2.w, r5.z, l(0.000010)
  74: sample r6.xyzw, v5.zwzz, t10.xyzw, s9
  75: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  76: dp3 r3.w, r6.xyzx, r6.xyzx
  77: rsq r3.w, r3.w
  78: mul r6.xyz, r3.wwww, r6.xyzx
  79: mul r8.xyz, r6.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  80: mad r8.xyz, r6.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r8.xyzx
  81: dp2 r3.w, r8.xzxx, r8.xzxx
  82: rsq r3.w, r3.w
  83: mul r8.xyz, r3.wwww, r8.xyzx
  84: mul r9.xyz, r6.zxyz, r8.yzxy
  85: mad r9.xyz, r8.zxyz, r6.yzxy, -r9.xyzx
  86: dp3 r3.w, r9.xyzx, r9.xyzx
  87: rsq r3.w, r3.w
  88: mul r9.xyz, r3.wwww, r9.xyzx
  89: mul r5.yzw, r5.yyyy, r9.xxyz
  90: mad r5.xyz, r5.xxxx, r8.xyzx, r5.yzwy
  91: mad r5.xyz, r2.wwww, r6.xyzx, r5.xyzx
  92: dp4 r2.w, r4.xyzw, cb0[22].xyzw
  93: mul r4.xyzw, v4.yyyy, cb0[10].xyzw
  94: mad r4.xyzw, cb0[9].xyzw, v4.xxxx, r4.xyzw
  95: mad r4.xyzw, cb0[11].xyzw, v4.zzzz, r4.xyzw
  96: add r4.xyzw, r4.xyzw, cb0[12].xyzw
  97: mov r6.x, cb4[9].z
  98: mov r6.y, cb4[10].z
  99: mov r6.z, cb4[11].z
 100: dp3 r2.x, r2.xyzx, r6.xyzx
 101: add r6.xyz, v4.xyzx, -cb3[25].xyzx
 102: dp3 r2.y, r6.xyzx, r6.xyzx
 103: sqrt r2.y, r2.y
 104: add r2.y, -r2.x, r2.y
 105: mad r2.x, cb3[25].w, r2.y, r2.x
 106: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
 107: eq r2.y, cb5[0].x, l(1.000000)
 108: if_nz r2.y
 109:   eq r2.y, cb5[0].y, l(1.000000)
 110:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
 111:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
 112:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
 113:   add r6.xyz, r6.xyzx, cb5[4].xyzx
 114:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
 115:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
 116:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
 117:   mad r2.y, r6.y, l(0.250000), l(0.750000)
 118:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
 119:   max r6.x, r2.z, r2.y
 120:   sample r6.xyzw, r6.xzwx, t13.xyzw, s0
 121: else 
 122:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 123: endif 
 124: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 125: lt r2.z, r2.x, l(0.990000)
 126: if_nz r2.z
 127:   mul r6.xyzw, v4.yyyy, cb3[9].xyzw
 128:   mad r6.xyzw, cb3[8].xyzw, v4.xxxx, r6.xyzw
 129:   mad r6.xyzw, cb3[10].xyzw, v4.zzzz, r6.xyzw
 130:   add r6.xyzw, r6.xyzw, cb3[11].xyzw
 131:   div r6.xyz, r6.xyzx, r6.wwww
 132:   mad r8.xy, r6.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
 133:   round_ni r8.xy, r8.xyxx
 134:   mad r6.xy, r6.xyxx, cb0[8].zwzz, -r8.xyxx
 135:   add r9.xyzw, r6.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
 136:   mul r10.xw, r9.xxxz, r9.xxxz
 137:   mad r8.zw, r10.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r6.xxxy
 138:   add r9.xz, -r6.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
 139:   min r11.xy, r6.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 140:   mad r9.xz, -r11.xxyx, r11.xxyx, r9.xxzx
 141:   max r6.xy, r6.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
 142:   mad r6.xy, -r6.xyxx, r6.xyxx, r9.ywyy
 143:   mov r11.x, r8.z
 144:   mov r11.y, r9.x
 145:   mov r11.z, r6.x
 146:   mov r11.w, r10.x
 147:   mul r11.xyzw, r11.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
 148:   mov r10.x, r8.w
 149:   mov r10.y, r9.z
 150:   mov r10.z, r6.y
 151:   mul r9.xyzw, r10.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
 152:   add r10.xyzw, r11.ywyw, r11.xzxz
 153:   add r12.xyzw, r9.yyww, r9.xxzz
 154:   div r6.xy, r11.ywyy, r10.zwzz
 155:   add r6.xy, r6.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
 156:   div r8.zw, r9.yyyw, r12.yyyw
 157:   add r8.zw, r8.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
 158:   mul r9.xy, r6.xyxx, cb0[8].xxxx
 159:   mul r9.zw, r8.zzzw, cb0[8].yyyy
 160:   mul r10.xyzw, r10.xyzw, r12.xyzw
 161:   mad r11.xyzw, r8.xyxy, cb0[8].xyxy, r9.xzyz
 162:   sample_c_lz r2.z, r11.xyxx, t14.xxxx, s1, r6.z
 163:   sample_c_lz r3.w, r11.zwzz, t14.xxxx, s1, r6.z
 164:   mul r3.w, r3.w, r10.y
 165:   mad r2.z, r10.x, r2.z, r3.w
 166:   mad r8.xyzw, r8.xyxy, cb0[8].xyxy, r9.xwyw
 167:   sample_c_lz r3.w, r8.xyxx, t14.xxxx, s1, r6.z
 168:   mad r2.z, r10.z, r3.w, r2.z
 169:   sample_c_lz r3.w, r8.zwzz, t14.xxxx, s1, r6.z
 170:   mad r2.z, r10.w, r3.w, r2.z
 171:   add r3.w, -cb3[24].x, l(1.000000)
 172:   mad r2.z, r2.z, r3.w, cb3[24].x
 173: else 
 174:   mov r2.z, l(1.000000)
 175: endif 
 176: add r2.y, -r2.z, r2.y
 177: mad r2.x, r2.x, r2.y, r2.z
 178: lt r2.y, l(0.000000), r4.z
 179: and r2.y, r2.y, l(0x3f800000)
 180: div r6.xy, r4.xyxx, r4.wwww
 181: add r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 182: sample r6.xyzw, r6.xyxx, t11.xyzw, s2
 183: mul r2.y, r2.y, r6.w
 184: dp3 r2.z, r4.xyzx, r4.xyzx
 185: sample r4.xyzw, r2.zzzz, t12.xyzw, s3
 186: mul r2.y, r2.y, r4.x
 187: mul r2.x, r2.x, r2.y
 188: dp3 r4.x, v1.xyzx, r5.xyzx
 189: dp3 r4.y, v2.xyzx, r5.xyzx
 190: dp3 r4.z, v3.xyzx, r5.xyzx
 191: dp3 r2.y, r4.xyzx, r4.xyzx
 192: rsq r2.y, r2.y
 193: mul r4.xyz, r2.yyyy, r4.xyzx
 194: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 195: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 196: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 197: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 198: mul r6.xyz, r2.wwww, r7.xyzx
 199: add r2.w, -r7.w, l(1.000000)
 200: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 201: dp3 r0.w, r0.xyzx, r0.xyzx
 202: max r0.w, r0.w, l(0.001000)
 203: rsq r0.w, r0.w
 204: mul r0.xyz, r0.wwww, r0.xyzx
 205: dp3 r0.w, r4.xyzx, r3.xyzx
 206: dp3_sat r3.x, r4.xyzx, r1.xyzx
 207: dp3_sat r3.y, r4.xyzx, r0.xyzx
 208: dp3_sat r0.x, r1.xyzx, r0.xyzx
 209: mul r0.y, r0.x, r0.x
 210: dp2 r0.y, r0.yyyy, r2.wwww
 211: add r0.y, r0.y, l(-0.500000)
 212: add r0.z, -r3.x, l(1.000000)
 213: mul r1.x, r0.z, r0.z
 214: mul r1.x, r1.x, r1.x
 215: mul r0.z, r0.z, r1.x
 216: mad r0.z, r0.y, r0.z, l(1.000000)
 217: add r1.x, -|r0.w|, l(1.000000)
 218: mul r1.y, r1.x, r1.x
 219: mul r1.y, r1.y, r1.y
 220: mul r1.x, r1.x, r1.y
 221: mad r0.y, r0.y, r1.x, l(1.000000)
 222: mul r0.y, r0.y, r0.z
 223: mul r0.z, r2.w, r2.w
 224: max r0.z, r0.z, l(0.002000)
 225: add r1.x, -r0.z, l(1.000000)
 226: mad r1.y, |r0.w|, r1.x, r0.z
 227: mad r1.x, r3.x, r1.x, r0.z
 228: mul r0.w, |r0.w|, r1.x
 229: mad r0.w, r3.x, r1.y, r0.w
 230: add r0.w, r0.w, l(0.000010)
 231: div r0.w, l(0.500000), r0.w
 232: mul r0.z, r0.z, r0.z
 233: mad r1.x, r3.y, r0.z, -r3.y
 234: mad r1.x, r1.x, r3.y, l(1.000000)
 235: mul r0.z, r0.z, l(0.318310)
 236: mad r1.x, r1.x, r1.x, l(0.000000)
 237: div r0.z, r0.z, r1.x
 238: mul r0.z, r0.z, r0.w
 239: mul r0.z, r0.z, l(3.141593)
 240: max r0.z, r0.z, l(0.000100)
 241: sqrt r0.z, r0.z
 242: mul r0.yz, r3.xxxx, r0.yyzy
 243: dp3 r0.w, r5.xyzx, r5.xyzx
 244: ne r0.w, r0.w, l(0.000000)
 245: and r0.w, r0.w, l(0x3f800000)
 246: mul r0.z, r0.w, r0.z
 247: mul r1.xyz, r0.yyyy, r2.xyzx
 248: mul r0.yzw, r2.xxyz, r0.zzzz
 249: add r0.x, -r0.x, l(1.000000)
 250: mul r2.x, r0.x, r0.x
 251: mul r2.x, r2.x, r2.x
 252: mul r0.x, r0.x, r2.x
 253: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 254: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 255: mul r0.xyz, r0.yzwy, r2.xyzx
 256: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 257: mul o0.xyz, r1.wwww, r0.xyzx
 258: mov o0.w, l(1.000000)
 259: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL INSTANCING_ON SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 169 math, 8 temp registers, 13 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 12
Set 2D Texture "_Control" to slot 1 sampler slot 2
Set 2D Texture "_Splat0" to slot 2 sampler slot 3
Set 2D Texture "_Splat1" to slot 3 sampler slot 4
Set 2D Texture "_Splat2" to slot 4 sampler slot 5
Set 2D Texture "_Splat3" to slot 5 sampler slot 6
Set 2D Texture "_Normal0" to slot 6 sampler slot 8
Set 2D Texture "_Normal1" to slot 7 sampler slot 9
Set 2D Texture "_Normal2" to slot 8 sampler slot 10
Set 2D Texture "_Normal3" to slot 9 sampler slot 11
Set 2D Texture "_TerrainNormalmapTexture" to slot 10 sampler slot 7
Set 2D Texture "_ShadowMapTexture" to slot 11 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 192
  Float _NormalScale1 at 196
  Float _NormalScale2 at 200
  Float _NormalScale3 at 204
  Float _Metallic0 at 208
  Float _Metallic1 at 212
  Float _Metallic2 at 216
  Float _Metallic3 at 220
  Float _Smoothness0 at 224
  Float _Smoothness1 at 228
  Float _Smoothness2 at 232
  Float _Smoothness3 at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyzw        6     NONE   float   xy w
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture2d (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v5.xyxx, t0.xyzw, s12
   5: eq r1.w, r2.x, l(0.000000)
   6: discard_nz r1.w
   7: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r2.xy, r2.xyxx, cb0[5].xyxx
  10: sample r2.xyzw, r2.xyxx, t1.xyzw, s2
  11: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r3.x, r1.w, l(0.001000)
  13: div r2.xyzw, r2.xyzw, r3.xxxx
  14: mad r3.xy, v5.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mad r3.zw, v5.xxxy, cb0[7].xxxy, cb0[7].zzzw
  16: mad r4.xy, v5.xyxx, cb0[8].xyxx, cb0[8].zwzz
  17: mad r4.zw, v5.xxxy, cb0[9].xxxy, cb0[9].zzzw
  18: sample r5.xyzw, r3.xyxx, t2.xyzw, s3
  19: mul r5.xyzw, r2.xxxx, r5.xyzw
  20: mul r5.w, r5.w, cb0[14].x
  21: sample r6.xyzw, r3.zwzz, t3.xyzw, s4
  22: mul r6.xyzw, r2.yyyy, r6.xyzw
  23: mul r6.w, r6.w, cb0[14].y
  24: add r5.xyzw, r5.xyzw, r6.xyzw
  25: sample r6.xyzw, r4.xyxx, t4.xyzw, s5
  26: mul r6.xyzw, r2.zzzz, r6.xyzw
  27: mul r6.w, r6.w, cb0[14].z
  28: add r5.xyzw, r5.xyzw, r6.xyzw
  29: sample r6.xyzw, r4.zwzz, t5.xyzw, s6
  30: mul r6.xyzw, r2.wwww, r6.xyzw
  31: mul r6.w, r6.w, cb0[14].w
  32: add r5.xyzw, r5.xyzw, r6.xyzw
  33: sample r6.xyzw, r3.xyxx, t6.xyzw, s8
  34: mul r6.x, r6.w, r6.x
  35: mad r3.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  36: mul r6.xy, r3.xyxx, cb0[12].xxxx
  37: dp2 r3.x, r6.xyxx, r6.xyxx
  38: min r3.x, r3.x, l(1.000000)
  39: add r3.x, -r3.x, l(1.000000)
  40: sqrt r6.z, r3.x
  41: sample r3.xyzw, r3.zwzz, t7.xyzw, s9
  42: mul r3.x, r3.w, r3.x
  43: mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  44: mul r3.xy, r3.xyxx, cb0[12].yyyy
  45: dp2 r3.w, r3.xyxx, r3.xyxx
  46: min r3.w, r3.w, l(1.000000)
  47: add r3.w, -r3.w, l(1.000000)
  48: sqrt r3.z, r3.w
  49: mul r3.xyz, r2.yyyy, r3.xyzx
  50: mad r3.xyz, r6.xyzx, r2.xxxx, r3.xyzx
  51: sample r6.xyzw, r4.xyxx, t8.xyzw, s10
  52: mul r6.x, r6.w, r6.x
  53: mad r4.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  54: mul r6.xy, r4.xyxx, cb0[12].zzzz
  55: dp2 r3.w, r6.xyxx, r6.xyxx
  56: min r3.w, r3.w, l(1.000000)
  57: add r3.w, -r3.w, l(1.000000)
  58: sqrt r6.z, r3.w
  59: mad r3.xyz, r6.xyzx, r2.zzzz, r3.xyzx
  60: sample r4.xyzw, r4.zwzz, t9.xyzw, s11
  61: mul r4.x, r4.w, r4.x
  62: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  63: mul r4.xy, r4.xyxx, cb0[12].wwww
  64: dp2 r3.w, r4.xyxx, r4.xyxx
  65: min r3.w, r3.w, l(1.000000)
  66: add r3.w, -r3.w, l(1.000000)
  67: sqrt r4.z, r3.w
  68: mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx
  69: add r3.z, r3.z, l(0.000010)
  70: sample r4.xyzw, v5.zwzz, t10.xyzw, s7
  71: mad r4.xyz, r4.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  72: dp3 r3.w, r4.xyzx, r4.xyzx
  73: rsq r3.w, r3.w
  74: mul r4.xyz, r3.wwww, r4.xyzx
  75: mul r6.xyz, r4.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  76: mad r6.xyz, r4.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r6.xyzx
  77: dp2 r3.w, r6.xzxx, r6.xzxx
  78: rsq r3.w, r3.w
  79: mul r6.xyz, r3.wwww, r6.xyzx
  80: mul r7.xyz, r4.zxyz, r6.yzxy
  81: mad r7.xyz, r6.zxyz, r4.yzxy, -r7.xyzx
  82: dp3 r3.w, r7.xyzx, r7.xyzx
  83: rsq r3.w, r3.w
  84: mul r7.xyz, r3.wwww, r7.xyzx
  85: mul r7.xyz, r3.yyyy, r7.xyzx
  86: mad r3.xyw, r3.xxxx, r6.xyxz, r7.xyxz
  87: mad r3.xyz, r3.zzzz, r4.xyzx, r3.xywx
  88: dp4 r2.x, r2.xyzw, cb0[13].xyzw
  89: mov r4.x, cb4[9].z
  90: mov r4.y, cb4[10].z
  91: mov r4.z, cb4[11].z
  92: dp3 r2.y, r0.xyzx, r4.xyzx
  93: add r4.xyz, v4.xyzx, -cb3[25].xyzx
  94: dp3 r2.z, r4.xyzx, r4.xyzx
  95: sqrt r2.z, r2.z
  96: add r2.z, -r2.y, r2.z
  97: mad r2.y, cb3[25].w, r2.z, r2.y
  98: mad_sat r2.y, r2.y, cb3[24].z, cb3[24].w
  99: eq r2.z, cb5[0].x, l(1.000000)
 100: if_nz r2.z
 101:   eq r2.z, cb5[0].y, l(1.000000)
 102:   mul r4.xyz, v4.yyyy, cb5[2].xyzx
 103:   mad r4.xyz, cb5[1].xyzx, v4.xxxx, r4.xyzx
 104:   mad r4.xyz, cb5[3].xyzx, v4.zzzz, r4.xyzx
 105:   add r4.xyz, r4.xyzx, cb5[4].xyzx
 106:   movc r4.xyz, r2.zzzz, r4.xyzx, v4.xyzx
 107:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
 108:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
 109:   mad r2.z, r4.y, l(0.250000), l(0.750000)
 110:   mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
 111:   max r4.x, r2.w, r2.z
 112:   sample r4.xyzw, r4.xzwx, t12.xyzw, s0
 113: else 
 114:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 115: endif 
 116: dp4_sat r2.z, r4.xyzw, cb2[46].xyzw
 117: div r4.xy, v6.xyxx, v6.wwww
 118: sample r4.xyzw, r4.xyxx, t11.xyzw, s1
 119: add r2.z, r2.z, -r4.x
 120: mad r2.y, r2.y, r2.z, r4.x
 121: dp3 r4.x, v1.xyzx, r3.xyzx
 122: dp3 r4.y, v2.xyzx, r3.xyzx
 123: dp3 r4.z, v3.xyzx, r3.xyzx
 124: dp3 r2.z, r4.xyzx, r4.xyzx
 125: rsq r2.z, r2.z
 126: mul r3.xyz, r2.zzzz, r4.xyzx
 127: mul r2.yzw, r2.yyyy, cb0[2].xxyz
 128: add r4.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 129: mad r4.xyz, r2.xxxx, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 130: mad r2.x, -r2.x, l(0.779084), l(0.779084)
 131: mul r5.xyz, r2.xxxx, r5.xyzx
 132: add r2.x, -r5.w, l(1.000000)
 133: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 134: dp3 r0.w, r0.xyzx, r0.xyzx
 135: max r0.w, r0.w, l(0.001000)
 136: rsq r0.w, r0.w
 137: mul r0.xyz, r0.wwww, r0.xyzx
 138: dp3 r0.w, r3.xyzx, r1.xyzx
 139: dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
 140: dp3_sat r1.y, r3.xyzx, r0.xyzx
 141: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 142: mul r0.y, r0.x, r0.x
 143: dp2 r0.y, r0.yyyy, r2.xxxx
 144: add r0.y, r0.y, l(-0.500000)
 145: add r0.z, -r1.x, l(1.000000)
 146: mul r1.z, r0.z, r0.z
 147: mul r1.z, r1.z, r1.z
 148: mul r0.z, r0.z, r1.z
 149: mad r0.z, r0.y, r0.z, l(1.000000)
 150: add r1.z, -|r0.w|, l(1.000000)
 151: mul r3.x, r1.z, r1.z
 152: mul r3.x, r3.x, r3.x
 153: mul r1.z, r1.z, r3.x
 154: mad r0.y, r0.y, r1.z, l(1.000000)
 155: mul r0.y, r0.y, r0.z
 156: mul r0.z, r2.x, r2.x
 157: max r0.z, r0.z, l(0.002000)
 158: add r1.z, -r0.z, l(1.000000)
 159: mad r2.x, |r0.w|, r1.z, r0.z
 160: mad r1.z, r1.x, r1.z, r0.z
 161: mul r0.w, |r0.w|, r1.z
 162: mad r0.w, r1.x, r2.x, r0.w
 163: add r0.w, r0.w, l(0.000010)
 164: div r0.w, l(0.500000), r0.w
 165: mul r0.z, r0.z, r0.z
 166: mad r1.z, r1.y, r0.z, -r1.y
 167: mad r1.y, r1.z, r1.y, l(1.000000)
 168: mul r0.z, r0.z, l(0.318310)
 169: mad r1.y, r1.y, r1.y, l(0.000000)
 170: div r0.z, r0.z, r1.y
 171: mul r0.z, r0.z, r0.w
 172: mul r0.z, r0.z, l(3.141593)
 173: max r0.z, r0.z, l(0.000100)
 174: sqrt r0.z, r0.z
 175: mul r0.yz, r1.xxxx, r0.yyzy
 176: dp3 r0.w, r4.xyzx, r4.xyzx
 177: ne r0.w, r0.w, l(0.000000)
 178: and r0.w, r0.w, l(0x3f800000)
 179: mul r0.z, r0.w, r0.z
 180: mul r1.xyz, r0.yyyy, r2.yzwy
 181: mul r0.yzw, r2.yyzw, r0.zzzz
 182: add r0.x, -r0.x, l(1.000000)
 183: mul r2.x, r0.x, r0.x
 184: mul r2.x, r2.x, r2.x
 185: mul r0.x, r0.x, r2.x
 186: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 187: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
 188: mul r0.xyz, r0.yzwy, r2.xyzx
 189: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 190: mul o0.xyz, r1.wwww, r0.xyzx
 191: mov o0.w, l(1.000000)
 192: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE INSTANCING_ON SHADOWS_SCREEN 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 174 math, 8 temp registers, 14 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 13
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_Normal0" to slot 6 sampler slot 9
Set 2D Texture "_Normal1" to slot 7 sampler slot 10
Set 2D Texture "_Normal2" to slot 8 sampler slot 11
Set 2D Texture "_Normal3" to slot 9 sampler slot 12
Set 2D Texture "_TerrainNormalmapTexture" to slot 10 sampler slot 8
Set 2D Texture "_ShadowMapTexture" to slot 11 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 12 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 13 sampler slot 0

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 256
  Float _NormalScale1 at 260
  Float _NormalScale2 at 264
  Float _NormalScale3 at 268
  Float _Metallic0 at 272
  Float _Metallic1 at 276
  Float _Metallic2 at 280
  Float _Metallic3 at 284
  Float _Smoothness0 at 288
  Float _Smoothness1 at 292
  Float _Smoothness2 at 296
  Float _Smoothness3 at 300
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xy          6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[19], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_sampler s13, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture2d (float,float,float,float) t11
      dcl_resource_texture2d (float,float,float,float) t12
      dcl_resource_texture3d (float,float,float,float) t13
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 8
   0: add r0.xyz, -v4.xyzx, cb1[4].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: sample r2.xyzw, v5.xyxx, t0.xyzw, s13
   5: eq r1.w, r2.x, l(0.000000)
   6: discard_nz r1.w
   7: add r2.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: mad r2.xy, v5.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   9: mul r2.xy, r2.xyxx, cb0[9].xyxx
  10: sample r2.xyzw, r2.xyxx, t1.xyzw, s3
  11: dp4 r1.w, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  12: add r3.x, r1.w, l(0.001000)
  13: div r2.xyzw, r2.xyzw, r3.xxxx
  14: mad r3.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  15: mad r3.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  16: mad r4.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  17: mad r4.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  18: sample r5.xyzw, r3.xyxx, t2.xyzw, s4
  19: mul r5.xyzw, r2.xxxx, r5.xyzw
  20: mul r5.w, r5.w, cb0[18].x
  21: sample r6.xyzw, r3.zwzz, t3.xyzw, s5
  22: mul r6.xyzw, r2.yyyy, r6.xyzw
  23: mul r6.w, r6.w, cb0[18].y
  24: add r5.xyzw, r5.xyzw, r6.xyzw
  25: sample r6.xyzw, r4.xyxx, t4.xyzw, s6
  26: mul r6.xyzw, r2.zzzz, r6.xyzw
  27: mul r6.w, r6.w, cb0[18].z
  28: add r5.xyzw, r5.xyzw, r6.xyzw
  29: sample r6.xyzw, r4.zwzz, t5.xyzw, s7
  30: mul r6.xyzw, r2.wwww, r6.xyzw
  31: mul r6.w, r6.w, cb0[18].w
  32: add r5.xyzw, r5.xyzw, r6.xyzw
  33: sample r6.xyzw, r3.xyxx, t6.xyzw, s9
  34: mul r6.x, r6.w, r6.x
  35: mad r3.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  36: mul r6.xy, r3.xyxx, cb0[16].xxxx
  37: dp2 r3.x, r6.xyxx, r6.xyxx
  38: min r3.x, r3.x, l(1.000000)
  39: add r3.x, -r3.x, l(1.000000)
  40: sqrt r6.z, r3.x
  41: sample r3.xyzw, r3.zwzz, t7.xyzw, s10
  42: mul r3.x, r3.w, r3.x
  43: mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  44: mul r3.xy, r3.xyxx, cb0[16].yyyy
  45: dp2 r3.w, r3.xyxx, r3.xyxx
  46: min r3.w, r3.w, l(1.000000)
  47: add r3.w, -r3.w, l(1.000000)
  48: sqrt r3.z, r3.w
  49: mul r3.xyz, r2.yyyy, r3.xyzx
  50: mad r3.xyz, r6.xyzx, r2.xxxx, r3.xyzx
  51: sample r6.xyzw, r4.xyxx, t8.xyzw, s11
  52: mul r6.x, r6.w, r6.x
  53: mad r4.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  54: mul r6.xy, r4.xyxx, cb0[16].zzzz
  55: dp2 r3.w, r6.xyxx, r6.xyxx
  56: min r3.w, r3.w, l(1.000000)
  57: add r3.w, -r3.w, l(1.000000)
  58: sqrt r6.z, r3.w
  59: mad r3.xyz, r6.xyzx, r2.zzzz, r3.xyzx
  60: sample r4.xyzw, r4.zwzz, t9.xyzw, s12
  61: mul r4.x, r4.w, r4.x
  62: mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  63: mul r4.xy, r4.xyxx, cb0[16].wwww
  64: dp2 r3.w, r4.xyxx, r4.xyxx
  65: min r3.w, r3.w, l(1.000000)
  66: add r3.w, -r3.w, l(1.000000)
  67: sqrt r4.z, r3.w
  68: mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx
  69: add r3.z, r3.z, l(0.000010)
  70: sample r4.xyzw, v5.zwzz, t10.xyzw, s8
  71: mad r4.xyz, r4.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  72: dp3 r3.w, r4.xyzx, r4.xyzx
  73: rsq r3.w, r3.w
  74: mul r4.xyz, r3.wwww, r4.xyzx
  75: mul r6.xyz, r4.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  76: mad r6.xyz, r4.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r6.xyzx
  77: dp2 r3.w, r6.xzxx, r6.xzxx
  78: rsq r3.w, r3.w
  79: mul r6.xyz, r3.wwww, r6.xyzx
  80: mul r7.xyz, r4.zxyz, r6.yzxy
  81: mad r7.xyz, r6.zxyz, r4.yzxy, -r7.xyzx
  82: dp3 r3.w, r7.xyzx, r7.xyzx
  83: rsq r3.w, r3.w
  84: mul r7.xyz, r3.wwww, r7.xyzx
  85: mul r7.xyz, r3.yyyy, r7.xyzx
  86: mad r3.xyw, r3.xxxx, r6.xyxz, r7.xyxz
  87: mad r3.xyz, r3.zzzz, r4.xyzx, r3.xywx
  88: dp4 r2.x, r2.xyzw, cb0[17].xyzw
  89: mul r2.yz, v4.yyyy, cb0[5].xxyx
  90: mad r2.yz, cb0[4].xxyx, v4.xxxx, r2.yyzy
  91: mad r2.yz, cb0[6].xxyx, v4.zzzz, r2.yyzy
  92: add r2.yz, r2.yyzy, cb0[7].xxyx
  93: mov r4.x, cb4[9].z
  94: mov r4.y, cb4[10].z
  95: mov r4.z, cb4[11].z
  96: dp3 r2.w, r0.xyzx, r4.xyzx
  97: add r4.xyz, v4.xyzx, -cb3[25].xyzx
  98: dp3 r3.w, r4.xyzx, r4.xyzx
  99: sqrt r3.w, r3.w
 100: add r3.w, -r2.w, r3.w
 101: mad r2.w, cb3[25].w, r3.w, r2.w
 102: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
 103: eq r3.w, cb5[0].x, l(1.000000)
 104: if_nz r3.w
 105:   eq r3.w, cb5[0].y, l(1.000000)
 106:   mul r4.xyz, v4.yyyy, cb5[2].xyzx
 107:   mad r4.xyz, cb5[1].xyzx, v4.xxxx, r4.xyzx
 108:   mad r4.xyz, cb5[3].xyzx, v4.zzzz, r4.xyzx
 109:   add r4.xyz, r4.xyzx, cb5[4].xyzx
 110:   movc r4.xyz, r3.wwww, r4.xyzx, v4.xyzx
 111:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
 112:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
 113:   mad r3.w, r4.y, l(0.250000), l(0.750000)
 114:   mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
 115:   max r4.x, r3.w, r4.y
 116:   sample r4.xyzw, r4.xzwx, t13.xyzw, s0
 117: else 
 118:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 119: endif 
 120: dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
 121: div r4.xy, v7.xyxx, v7.wwww
 122: sample r4.xyzw, r4.xyxx, t11.xyzw, s1
 123: add r3.w, r3.w, -r4.x
 124: mad r2.w, r2.w, r3.w, r4.x
 125: sample r4.xyzw, r2.yzyy, t12.xyzw, s2
 126: mul r2.y, r2.w, r4.w
 127: dp3 r4.x, v1.xyzx, r3.xyzx
 128: dp3 r4.y, v2.xyzx, r3.xyzx
 129: dp3 r4.z, v3.xyzx, r3.xyzx
 130: dp3 r2.z, r4.xyzx, r4.xyzx
 131: rsq r2.z, r2.z
 132: mul r3.xyz, r2.zzzz, r4.xyzx
 133: mul r2.yzw, r2.yyyy, cb0[2].xxyz
 134: add r4.xyz, r5.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 135: mad r4.xyz, r2.xxxx, r4.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 136: mad r2.x, -r2.x, l(0.779084), l(0.779084)
 137: mul r5.xyz, r2.xxxx, r5.xyzx
 138: add r2.x, -r5.w, l(1.000000)
 139: mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
 140: dp3 r0.w, r0.xyzx, r0.xyzx
 141: max r0.w, r0.w, l(0.001000)
 142: rsq r0.w, r0.w
 143: mul r0.xyz, r0.wwww, r0.xyzx
 144: dp3 r0.w, r3.xyzx, r1.xyzx
 145: dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
 146: dp3_sat r1.y, r3.xyzx, r0.xyzx
 147: dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
 148: mul r0.y, r0.x, r0.x
 149: dp2 r0.y, r0.yyyy, r2.xxxx
 150: add r0.y, r0.y, l(-0.500000)
 151: add r0.z, -r1.x, l(1.000000)
 152: mul r1.z, r0.z, r0.z
 153: mul r1.z, r1.z, r1.z
 154: mul r0.z, r0.z, r1.z
 155: mad r0.z, r0.y, r0.z, l(1.000000)
 156: add r1.z, -|r0.w|, l(1.000000)
 157: mul r3.x, r1.z, r1.z
 158: mul r3.x, r3.x, r3.x
 159: mul r1.z, r1.z, r3.x
 160: mad r0.y, r0.y, r1.z, l(1.000000)
 161: mul r0.y, r0.y, r0.z
 162: mul r0.z, r2.x, r2.x
 163: max r0.z, r0.z, l(0.002000)
 164: add r1.z, -r0.z, l(1.000000)
 165: mad r2.x, |r0.w|, r1.z, r0.z
 166: mad r1.z, r1.x, r1.z, r0.z
 167: mul r0.w, |r0.w|, r1.z
 168: mad r0.w, r1.x, r2.x, r0.w
 169: add r0.w, r0.w, l(0.000010)
 170: div r0.w, l(0.500000), r0.w
 171: mul r0.z, r0.z, r0.z
 172: mad r1.z, r1.y, r0.z, -r1.y
 173: mad r1.y, r1.z, r1.y, l(1.000000)
 174: mul r0.z, r0.z, l(0.318310)
 175: mad r1.y, r1.y, r1.y, l(0.000000)
 176: div r0.z, r0.z, r1.y
 177: mul r0.z, r0.z, r0.w
 178: mul r0.z, r0.z, l(3.141593)
 179: max r0.z, r0.z, l(0.000100)
 180: sqrt r0.z, r0.z
 181: mul r0.yz, r1.xxxx, r0.yyzy
 182: dp3 r0.w, r4.xyzx, r4.xyzx
 183: ne r0.w, r0.w, l(0.000000)
 184: and r0.w, r0.w, l(0x3f800000)
 185: mul r0.z, r0.w, r0.z
 186: mul r1.xyz, r0.yyyy, r2.yzwy
 187: mul r0.yzw, r2.yyzw, r0.zzzz
 188: add r0.x, -r0.x, l(1.000000)
 189: mul r2.x, r0.x, r0.x
 190: mul r2.x, r2.x, r2.x
 191: mul r0.x, r0.x, r2.x
 192: add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 193: mad r2.xyz, r2.xyzx, r0.xxxx, r4.xyzx
 194: mul r0.xyz, r0.yzwy, r2.xyzx
 195: mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
 196: mul o0.xyz, r1.wwww, r0.xyzx
 197: mov o0.w, l(1.000000)
 198: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT SHADOWS_CUBE 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 189 math, 10 temp registers, 13 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 13
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_Normal0" to slot 6 sampler slot 9
Set 2D Texture "_Normal1" to slot 7 sampler slot 10
Set 2D Texture "_Normal2" to slot 8 sampler slot 11
Set 2D Texture "_Normal3" to slot 9 sampler slot 12
Set 2D Texture "_TerrainNormalmapTexture" to slot 10 sampler slot 8
Set 2D Texture "_LightTexture0" to slot 11 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 13 sampler slot 1

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 256
  Float _NormalScale1 at 260
  Float _NormalScale2 at 264
  Float _NormalScale3 at 268
  Float _Metallic0 at 272
  Float _Metallic1 at 276
  Float _Metallic2 at 280
  Float _Metallic3 at 284
  Float _Smoothness0 at 288
  Float _Smoothness1 at 292
  Float _Smoothness2 at 296
  Float _Smoothness3 at 300
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[19], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_sampler s13, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture2d (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_resource_texturecube (float,float,float,float) t13
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 10
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v5.xyxx, t0.xyzw, s13
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[9].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s3
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s4
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[18].x
  25: sample r8.xyzw, r5.zwzz, t3.xyzw, s5
  26: mul r8.xyzw, r4.yyyy, r8.xyzw
  27: mul r8.w, r8.w, cb0[18].y
  28: add r7.xyzw, r7.xyzw, r8.xyzw
  29: sample r8.xyzw, r6.xyxx, t4.xyzw, s6
  30: mul r8.xyzw, r4.zzzz, r8.xyzw
  31: mul r8.w, r8.w, cb0[18].z
  32: add r7.xyzw, r7.xyzw, r8.xyzw
  33: sample r8.xyzw, r6.zwzz, t5.xyzw, s7
  34: mul r8.xyzw, r4.wwww, r8.xyzw
  35: mul r8.w, r8.w, cb0[18].w
  36: add r7.xyzw, r7.xyzw, r8.xyzw
  37: sample r8.xyzw, r5.xyxx, t6.xyzw, s9
  38: mul r8.x, r8.w, r8.x
  39: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  40: mul r8.xy, r5.xyxx, cb0[16].xxxx
  41: dp2 r2.w, r8.xyxx, r8.xyxx
  42: min r2.w, r2.w, l(1.000000)
  43: add r2.w, -r2.w, l(1.000000)
  44: sqrt r8.z, r2.w
  45: sample r5.xyzw, r5.zwzz, t7.xyzw, s10
  46: mul r5.x, r5.w, r5.x
  47: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  48: mul r5.xy, r5.xyxx, cb0[16].yyyy
  49: dp2 r2.w, r5.xyxx, r5.xyxx
  50: min r2.w, r2.w, l(1.000000)
  51: add r2.w, -r2.w, l(1.000000)
  52: sqrt r5.z, r2.w
  53: mul r5.xyz, r4.yyyy, r5.xyzx
  54: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  55: sample r8.xyzw, r6.xyxx, t8.xyzw, s11
  56: mul r8.x, r8.w, r8.x
  57: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  58: mul r8.xy, r6.xyxx, cb0[16].zzzz
  59: dp2 r2.w, r8.xyxx, r8.xyxx
  60: min r2.w, r2.w, l(1.000000)
  61: add r2.w, -r2.w, l(1.000000)
  62: sqrt r8.z, r2.w
  63: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  64: sample r6.xyzw, r6.zwzz, t9.xyzw, s12
  65: mul r6.x, r6.w, r6.x
  66: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  67: mul r6.xy, r6.xyxx, cb0[16].wwww
  68: dp2 r2.w, r6.xyxx, r6.xyxx
  69: min r2.w, r2.w, l(1.000000)
  70: add r2.w, -r2.w, l(1.000000)
  71: sqrt r6.z, r2.w
  72: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  73: add r2.w, r5.z, l(0.000010)
  74: sample r6.xyzw, v5.zwzz, t10.xyzw, s8
  75: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  76: dp3 r3.w, r6.xyzx, r6.xyzx
  77: rsq r3.w, r3.w
  78: mul r6.xyz, r3.wwww, r6.xyzx
  79: mul r8.xyz, r6.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  80: mad r8.xyz, r6.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r8.xyzx
  81: dp2 r3.w, r8.xzxx, r8.xzxx
  82: rsq r3.w, r3.w
  83: mul r8.xyz, r3.wwww, r8.xyzx
  84: mul r9.xyz, r6.zxyz, r8.yzxy
  85: mad r9.xyz, r8.zxyz, r6.yzxy, -r9.xyzx
  86: dp3 r3.w, r9.xyzx, r9.xyzx
  87: rsq r3.w, r3.w
  88: mul r9.xyz, r3.wwww, r9.xyzx
  89: mul r5.yzw, r5.yyyy, r9.xxyz
  90: mad r5.xyz, r5.xxxx, r8.xyzx, r5.yzwy
  91: mad r5.xyz, r2.wwww, r6.xyzx, r5.xyzx
  92: dp4 r2.w, r4.xyzw, cb0[17].xyzw
  93: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  94: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  95: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  96: add r4.xyz, r4.xyzx, cb0[7].xyzx
  97: mov r6.x, cb4[9].z
  98: mov r6.y, cb4[10].z
  99: mov r6.z, cb4[11].z
 100: dp3 r2.x, r2.xyzx, r6.xyzx
 101: add r6.xyz, v4.xyzx, -cb3[25].xyzx
 102: dp3 r2.y, r6.xyzx, r6.xyzx
 103: sqrt r2.y, r2.y
 104: add r2.y, -r2.x, r2.y
 105: mad r2.x, cb3[25].w, r2.y, r2.x
 106: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
 107: eq r2.y, cb5[0].x, l(1.000000)
 108: if_nz r2.y
 109:   eq r2.y, cb5[0].y, l(1.000000)
 110:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
 111:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
 112:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
 113:   add r6.xyz, r6.xyzx, cb5[4].xyzx
 114:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
 115:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
 116:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
 117:   mad r2.y, r6.y, l(0.250000), l(0.750000)
 118:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
 119:   max r6.x, r2.z, r2.y
 120:   sample r6.xyzw, r6.xzwx, t12.xyzw, s0
 121: else 
 122:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 123: endif 
 124: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 125: add r6.xyz, v4.xyzx, -cb2[1].xyzx
 126: max r2.z, |r6.y|, |r6.x|
 127: max r2.z, |r6.z|, r2.z
 128: add r2.z, r2.z, -cb2[2].z
 129: max r2.z, r2.z, l(0.000010)
 130: mul r2.z, r2.z, cb2[2].w
 131: div r2.z, cb2[2].y, r2.z
 132: add r2.z, r2.z, -cb2[2].x
 133: add r2.z, -r2.z, l(1.000000)
 134: sample_c_lz r2.z, r6.xyzx, t13.xxxx, s1, r2.z
 135: add r3.w, -cb3[24].x, l(1.000000)
 136: mad r2.z, r2.z, r3.w, cb3[24].x
 137: add r2.y, -r2.z, r2.y
 138: mad r2.x, r2.x, r2.y, r2.z
 139: dp3 r2.y, r4.xyzx, r4.xyzx
 140: sample r4.xyzw, r2.yyyy, t11.xyzw, s2
 141: mul r2.x, r2.x, r4.x
 142: dp3 r4.x, v1.xyzx, r5.xyzx
 143: dp3 r4.y, v2.xyzx, r5.xyzx
 144: dp3 r4.z, v3.xyzx, r5.xyzx
 145: dp3 r2.y, r4.xyzx, r4.xyzx
 146: rsq r2.y, r2.y
 147: mul r4.xyz, r2.yyyy, r4.xyzx
 148: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 149: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 150: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 151: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 152: mul r6.xyz, r2.wwww, r7.xyzx
 153: add r2.w, -r7.w, l(1.000000)
 154: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 155: dp3 r0.w, r0.xyzx, r0.xyzx
 156: max r0.w, r0.w, l(0.001000)
 157: rsq r0.w, r0.w
 158: mul r0.xyz, r0.wwww, r0.xyzx
 159: dp3 r0.w, r4.xyzx, r3.xyzx
 160: dp3_sat r3.x, r4.xyzx, r1.xyzx
 161: dp3_sat r3.y, r4.xyzx, r0.xyzx
 162: dp3_sat r0.x, r1.xyzx, r0.xyzx
 163: mul r0.y, r0.x, r0.x
 164: dp2 r0.y, r0.yyyy, r2.wwww
 165: add r0.y, r0.y, l(-0.500000)
 166: add r0.z, -r3.x, l(1.000000)
 167: mul r1.x, r0.z, r0.z
 168: mul r1.x, r1.x, r1.x
 169: mul r0.z, r0.z, r1.x
 170: mad r0.z, r0.y, r0.z, l(1.000000)
 171: add r1.x, -|r0.w|, l(1.000000)
 172: mul r1.y, r1.x, r1.x
 173: mul r1.y, r1.y, r1.y
 174: mul r1.x, r1.x, r1.y
 175: mad r0.y, r0.y, r1.x, l(1.000000)
 176: mul r0.y, r0.y, r0.z
 177: mul r0.z, r2.w, r2.w
 178: max r0.z, r0.z, l(0.002000)
 179: add r1.x, -r0.z, l(1.000000)
 180: mad r1.y, |r0.w|, r1.x, r0.z
 181: mad r1.x, r3.x, r1.x, r0.z
 182: mul r0.w, |r0.w|, r1.x
 183: mad r0.w, r3.x, r1.y, r0.w
 184: add r0.w, r0.w, l(0.000010)
 185: div r0.w, l(0.500000), r0.w
 186: mul r0.z, r0.z, r0.z
 187: mad r1.x, r3.y, r0.z, -r3.y
 188: mad r1.x, r1.x, r3.y, l(1.000000)
 189: mul r0.z, r0.z, l(0.318310)
 190: mad r1.x, r1.x, r1.x, l(0.000000)
 191: div r0.z, r0.z, r1.x
 192: mul r0.z, r0.z, r0.w
 193: mul r0.z, r0.z, l(3.141593)
 194: max r0.z, r0.z, l(0.000100)
 195: sqrt r0.z, r0.z
 196: mul r0.yz, r3.xxxx, r0.yyzy
 197: dp3 r0.w, r5.xyzx, r5.xyzx
 198: ne r0.w, r0.w, l(0.000000)
 199: and r0.w, r0.w, l(0x3f800000)
 200: mul r0.z, r0.w, r0.z
 201: mul r1.xyz, r0.yyyy, r2.xyzx
 202: mul r0.yzw, r2.xxyz, r0.zzzz
 203: add r0.x, -r0.x, l(1.000000)
 204: mul r2.x, r0.x, r0.x
 205: mul r2.x, r2.x, r2.x
 206: mul r0.x, r0.x, r2.x
 207: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 208: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 209: mul r0.xyz, r0.yzwy, r2.xyzx
 210: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 211: mul o0.xyz, r1.wwww, r0.xyzx
 212: mov o0.w, l(1.000000)
 213: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 195 math, 10 temp registers, 13 textures, 4 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 13
Set 2D Texture "_Control" to slot 1 sampler slot 3
Set 2D Texture "_Splat0" to slot 2 sampler slot 4
Set 2D Texture "_Splat1" to slot 3 sampler slot 5
Set 2D Texture "_Splat2" to slot 4 sampler slot 6
Set 2D Texture "_Splat3" to slot 5 sampler slot 7
Set 2D Texture "_Normal0" to slot 6 sampler slot 9
Set 2D Texture "_Normal1" to slot 7 sampler slot 10
Set 2D Texture "_Normal2" to slot 8 sampler slot 11
Set 2D Texture "_Normal3" to slot 9 sampler slot 12
Set 2D Texture "_TerrainNormalmapTexture" to slot 10 sampler slot 8
Set 2D Texture "_LightTexture0" to slot 11 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 12 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 13 sampler slot 1

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 256
  Float _NormalScale1 at 260
  Float _NormalScale2 at 264
  Float _NormalScale3 at 268
  Float _Metallic0 at 272
  Float _Metallic1 at 276
  Float _Metallic2 at 280
  Float _Metallic3 at 284
  Float _Smoothness0 at 288
  Float _Smoothness1 at 292
  Float _Smoothness2 at 296
  Float _Smoothness3 at 300
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[19], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_sampler s13, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture2d (float,float,float,float) t11
      dcl_resource_texture3d (float,float,float,float) t12
      dcl_resource_texturecube (float,float,float,float) t13
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 10
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v5.xyxx, t0.xyzw, s13
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[9].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s3
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s4
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[18].x
  25: sample r8.xyzw, r5.zwzz, t3.xyzw, s5
  26: mul r8.xyzw, r4.yyyy, r8.xyzw
  27: mul r8.w, r8.w, cb0[18].y
  28: add r7.xyzw, r7.xyzw, r8.xyzw
  29: sample r8.xyzw, r6.xyxx, t4.xyzw, s6
  30: mul r8.xyzw, r4.zzzz, r8.xyzw
  31: mul r8.w, r8.w, cb0[18].z
  32: add r7.xyzw, r7.xyzw, r8.xyzw
  33: sample r8.xyzw, r6.zwzz, t5.xyzw, s7
  34: mul r8.xyzw, r4.wwww, r8.xyzw
  35: mul r8.w, r8.w, cb0[18].w
  36: add r7.xyzw, r7.xyzw, r8.xyzw
  37: sample r8.xyzw, r5.xyxx, t6.xyzw, s9
  38: mul r8.x, r8.w, r8.x
  39: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  40: mul r8.xy, r5.xyxx, cb0[16].xxxx
  41: dp2 r2.w, r8.xyxx, r8.xyxx
  42: min r2.w, r2.w, l(1.000000)
  43: add r2.w, -r2.w, l(1.000000)
  44: sqrt r8.z, r2.w
  45: sample r5.xyzw, r5.zwzz, t7.xyzw, s10
  46: mul r5.x, r5.w, r5.x
  47: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  48: mul r5.xy, r5.xyxx, cb0[16].yyyy
  49: dp2 r2.w, r5.xyxx, r5.xyxx
  50: min r2.w, r2.w, l(1.000000)
  51: add r2.w, -r2.w, l(1.000000)
  52: sqrt r5.z, r2.w
  53: mul r5.xyz, r4.yyyy, r5.xyzx
  54: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  55: sample r8.xyzw, r6.xyxx, t8.xyzw, s11
  56: mul r8.x, r8.w, r8.x
  57: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  58: mul r8.xy, r6.xyxx, cb0[16].zzzz
  59: dp2 r2.w, r8.xyxx, r8.xyxx
  60: min r2.w, r2.w, l(1.000000)
  61: add r2.w, -r2.w, l(1.000000)
  62: sqrt r8.z, r2.w
  63: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  64: sample r6.xyzw, r6.zwzz, t9.xyzw, s12
  65: mul r6.x, r6.w, r6.x
  66: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  67: mul r6.xy, r6.xyxx, cb0[16].wwww
  68: dp2 r2.w, r6.xyxx, r6.xyxx
  69: min r2.w, r2.w, l(1.000000)
  70: add r2.w, -r2.w, l(1.000000)
  71: sqrt r6.z, r2.w
  72: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  73: add r2.w, r5.z, l(0.000010)
  74: sample r6.xyzw, v5.zwzz, t10.xyzw, s8
  75: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  76: dp3 r3.w, r6.xyzx, r6.xyzx
  77: rsq r3.w, r3.w
  78: mul r6.xyz, r3.wwww, r6.xyzx
  79: mul r8.xyz, r6.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  80: mad r8.xyz, r6.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r8.xyzx
  81: dp2 r3.w, r8.xzxx, r8.xzxx
  82: rsq r3.w, r3.w
  83: mul r8.xyz, r3.wwww, r8.xyzx
  84: mul r9.xyz, r6.zxyz, r8.yzxy
  85: mad r9.xyz, r8.zxyz, r6.yzxy, -r9.xyzx
  86: dp3 r3.w, r9.xyzx, r9.xyzx
  87: rsq r3.w, r3.w
  88: mul r9.xyz, r3.wwww, r9.xyzx
  89: mul r5.yzw, r5.yyyy, r9.xxyz
  90: mad r5.xyz, r5.xxxx, r8.xyzx, r5.yzwy
  91: mad r5.xyz, r2.wwww, r6.xyzx, r5.xyzx
  92: dp4 r2.w, r4.xyzw, cb0[17].xyzw
  93: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  94: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  95: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  96: add r4.xyz, r4.xyzx, cb0[7].xyzx
  97: mov r6.x, cb4[9].z
  98: mov r6.y, cb4[10].z
  99: mov r6.z, cb4[11].z
 100: dp3 r2.x, r2.xyzx, r6.xyzx
 101: add r6.xyz, v4.xyzx, -cb3[25].xyzx
 102: dp3 r2.y, r6.xyzx, r6.xyzx
 103: sqrt r2.y, r2.y
 104: add r2.y, -r2.x, r2.y
 105: mad r2.x, cb3[25].w, r2.y, r2.x
 106: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
 107: eq r2.y, cb5[0].x, l(1.000000)
 108: if_nz r2.y
 109:   eq r2.y, cb5[0].y, l(1.000000)
 110:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
 111:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
 112:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
 113:   add r6.xyz, r6.xyzx, cb5[4].xyzx
 114:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
 115:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
 116:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
 117:   mad r2.y, r6.y, l(0.250000), l(0.750000)
 118:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
 119:   max r6.x, r2.z, r2.y
 120:   sample r6.xyzw, r6.xzwx, t12.xyzw, s0
 121: else 
 122:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 123: endif 
 124: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 125: lt r2.z, r2.x, l(0.990000)
 126: if_nz r2.z
 127:   add r6.xyz, v4.xyzx, -cb2[1].xyzx
 128:   max r2.z, |r6.y|, |r6.x|
 129:   max r2.z, |r6.z|, r2.z
 130:   add r2.z, r2.z, -cb2[2].z
 131:   max r2.z, r2.z, l(0.000010)
 132:   mul r2.z, r2.z, cb2[2].w
 133:   div r2.z, cb2[2].y, r2.z
 134:   add r2.z, r2.z, -cb2[2].x
 135:   add r2.z, -r2.z, l(1.000000)
 136:   add r8.xyz, r6.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
 137:   sample_c_lz r8.x, r8.xyzx, t13.xxxx, s1, r2.z
 138:   add r9.xyz, r6.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
 139:   sample_c_lz r8.y, r9.xyzx, t13.xxxx, s1, r2.z
 140:   add r9.xyz, r6.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
 141:   sample_c_lz r8.z, r9.xyzx, t13.xxxx, s1, r2.z
 142:   add r6.xyz, r6.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
 143:   sample_c_lz r8.w, r6.xyzx, t13.xxxx, s1, r2.z
 144:   dp4 r2.z, r8.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
 145:   add r3.w, -cb3[24].x, l(1.000000)
 146:   mad r2.z, r2.z, r3.w, cb3[24].x
 147: else 
 148:   mov r2.z, l(1.000000)
 149: endif 
 150: add r2.y, -r2.z, r2.y
 151: mad r2.x, r2.x, r2.y, r2.z
 152: dp3 r2.y, r4.xyzx, r4.xyzx
 153: sample r4.xyzw, r2.yyyy, t11.xyzw, s2
 154: mul r2.x, r2.x, r4.x
 155: dp3 r4.x, v1.xyzx, r5.xyzx
 156: dp3 r4.y, v2.xyzx, r5.xyzx
 157: dp3 r4.z, v3.xyzx, r5.xyzx
 158: dp3 r2.y, r4.xyzx, r4.xyzx
 159: rsq r2.y, r2.y
 160: mul r4.xyz, r2.yyyy, r4.xyzx
 161: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 162: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 163: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 164: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 165: mul r6.xyz, r2.wwww, r7.xyzx
 166: add r2.w, -r7.w, l(1.000000)
 167: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 168: dp3 r0.w, r0.xyzx, r0.xyzx
 169: max r0.w, r0.w, l(0.001000)
 170: rsq r0.w, r0.w
 171: mul r0.xyz, r0.wwww, r0.xyzx
 172: dp3 r0.w, r4.xyzx, r3.xyzx
 173: dp3_sat r3.x, r4.xyzx, r1.xyzx
 174: dp3_sat r3.y, r4.xyzx, r0.xyzx
 175: dp3_sat r0.x, r1.xyzx, r0.xyzx
 176: mul r0.y, r0.x, r0.x
 177: dp2 r0.y, r0.yyyy, r2.wwww
 178: add r0.y, r0.y, l(-0.500000)
 179: add r0.z, -r3.x, l(1.000000)
 180: mul r1.x, r0.z, r0.z
 181: mul r1.x, r1.x, r1.x
 182: mul r0.z, r0.z, r1.x
 183: mad r0.z, r0.y, r0.z, l(1.000000)
 184: add r1.x, -|r0.w|, l(1.000000)
 185: mul r1.y, r1.x, r1.x
 186: mul r1.y, r1.y, r1.y
 187: mul r1.x, r1.x, r1.y
 188: mad r0.y, r0.y, r1.x, l(1.000000)
 189: mul r0.y, r0.y, r0.z
 190: mul r0.z, r2.w, r2.w
 191: max r0.z, r0.z, l(0.002000)
 192: add r1.x, -r0.z, l(1.000000)
 193: mad r1.y, |r0.w|, r1.x, r0.z
 194: mad r1.x, r3.x, r1.x, r0.z
 195: mul r0.w, |r0.w|, r1.x
 196: mad r0.w, r3.x, r1.y, r0.w
 197: add r0.w, r0.w, l(0.000010)
 198: div r0.w, l(0.500000), r0.w
 199: mul r0.z, r0.z, r0.z
 200: mad r1.x, r3.y, r0.z, -r3.y
 201: mad r1.x, r1.x, r3.y, l(1.000000)
 202: mul r0.z, r0.z, l(0.318310)
 203: mad r1.x, r1.x, r1.x, l(0.000000)
 204: div r0.z, r0.z, r1.x
 205: mul r0.z, r0.z, r0.w
 206: mul r0.z, r0.z, l(3.141593)
 207: max r0.z, r0.z, l(0.000100)
 208: sqrt r0.z, r0.z
 209: mul r0.yz, r3.xxxx, r0.yyzy
 210: dp3 r0.w, r5.xyzx, r5.xyzx
 211: ne r0.w, r0.w, l(0.000000)
 212: and r0.w, r0.w, l(0x3f800000)
 213: mul r0.z, r0.w, r0.z
 214: mul r1.xyz, r0.yyyy, r2.xyzx
 215: mul r0.yzw, r2.xxyz, r0.zzzz
 216: add r0.x, -r0.x, l(1.000000)
 217: mul r2.x, r0.x, r0.x
 218: mul r2.x, r2.x, r2.x
 219: mul r0.x, r0.x, r2.x
 220: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 221: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 222: mul r0.xyz, r0.yzwy, r2.xyzx
 223: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 224: mul o0.xyz, r1.wwww, r0.xyzx
 225: mov o0.w, l(1.000000)
 226: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT_COOKIE SHADOWS_CUBE 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 190 math, 10 temp registers, 14 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 14
Set 2D Texture "_Control" to slot 1 sampler slot 4
Set 2D Texture "_Splat0" to slot 2 sampler slot 5
Set 2D Texture "_Splat1" to slot 3 sampler slot 6
Set 2D Texture "_Splat2" to slot 4 sampler slot 7
Set 2D Texture "_Splat3" to slot 5 sampler slot 8
Set 2D Texture "_Normal0" to slot 6 sampler slot 10
Set 2D Texture "_Normal1" to slot 7 sampler slot 11
Set 2D Texture "_Normal2" to slot 8 sampler slot 12
Set 2D Texture "_Normal3" to slot 9 sampler slot 13
Set 2D Texture "_TerrainNormalmapTexture" to slot 10 sampler slot 9
Set 2D Texture "_LightTextureB0" to slot 11 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 12 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 13 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 14 sampler slot 1

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 256
  Float _NormalScale1 at 260
  Float _NormalScale2 at 264
  Float _NormalScale3 at 268
  Float _Metallic0 at 272
  Float _Metallic1 at 276
  Float _Metallic2 at 280
  Float _Metallic3 at 284
  Float _Smoothness0 at 288
  Float _Smoothness1 at 292
  Float _Smoothness2 at 296
  Float _Smoothness3 at 300
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[19], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_sampler s13, mode_default
      dcl_sampler s14, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture2d (float,float,float,float) t11
      dcl_resource_texturecube (float,float,float,float) t12
      dcl_resource_texture3d (float,float,float,float) t13
      dcl_resource_texturecube (float,float,float,float) t14
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 10
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v5.xyxx, t0.xyzw, s14
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[9].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s4
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s5
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[18].x
  25: sample r8.xyzw, r5.zwzz, t3.xyzw, s6
  26: mul r8.xyzw, r4.yyyy, r8.xyzw
  27: mul r8.w, r8.w, cb0[18].y
  28: add r7.xyzw, r7.xyzw, r8.xyzw
  29: sample r8.xyzw, r6.xyxx, t4.xyzw, s7
  30: mul r8.xyzw, r4.zzzz, r8.xyzw
  31: mul r8.w, r8.w, cb0[18].z
  32: add r7.xyzw, r7.xyzw, r8.xyzw
  33: sample r8.xyzw, r6.zwzz, t5.xyzw, s8
  34: mul r8.xyzw, r4.wwww, r8.xyzw
  35: mul r8.w, r8.w, cb0[18].w
  36: add r7.xyzw, r7.xyzw, r8.xyzw
  37: sample r8.xyzw, r5.xyxx, t6.xyzw, s10
  38: mul r8.x, r8.w, r8.x
  39: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  40: mul r8.xy, r5.xyxx, cb0[16].xxxx
  41: dp2 r2.w, r8.xyxx, r8.xyxx
  42: min r2.w, r2.w, l(1.000000)
  43: add r2.w, -r2.w, l(1.000000)
  44: sqrt r8.z, r2.w
  45: sample r5.xyzw, r5.zwzz, t7.xyzw, s11
  46: mul r5.x, r5.w, r5.x
  47: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  48: mul r5.xy, r5.xyxx, cb0[16].yyyy
  49: dp2 r2.w, r5.xyxx, r5.xyxx
  50: min r2.w, r2.w, l(1.000000)
  51: add r2.w, -r2.w, l(1.000000)
  52: sqrt r5.z, r2.w
  53: mul r5.xyz, r4.yyyy, r5.xyzx
  54: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  55: sample r8.xyzw, r6.xyxx, t8.xyzw, s12
  56: mul r8.x, r8.w, r8.x
  57: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  58: mul r8.xy, r6.xyxx, cb0[16].zzzz
  59: dp2 r2.w, r8.xyxx, r8.xyxx
  60: min r2.w, r2.w, l(1.000000)
  61: add r2.w, -r2.w, l(1.000000)
  62: sqrt r8.z, r2.w
  63: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  64: sample r6.xyzw, r6.zwzz, t9.xyzw, s13
  65: mul r6.x, r6.w, r6.x
  66: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  67: mul r6.xy, r6.xyxx, cb0[16].wwww
  68: dp2 r2.w, r6.xyxx, r6.xyxx
  69: min r2.w, r2.w, l(1.000000)
  70: add r2.w, -r2.w, l(1.000000)
  71: sqrt r6.z, r2.w
  72: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  73: add r2.w, r5.z, l(0.000010)
  74: sample r6.xyzw, v5.zwzz, t10.xyzw, s9
  75: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  76: dp3 r3.w, r6.xyzx, r6.xyzx
  77: rsq r3.w, r3.w
  78: mul r6.xyz, r3.wwww, r6.xyzx
  79: mul r8.xyz, r6.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  80: mad r8.xyz, r6.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r8.xyzx
  81: dp2 r3.w, r8.xzxx, r8.xzxx
  82: rsq r3.w, r3.w
  83: mul r8.xyz, r3.wwww, r8.xyzx
  84: mul r9.xyz, r6.zxyz, r8.yzxy
  85: mad r9.xyz, r8.zxyz, r6.yzxy, -r9.xyzx
  86: dp3 r3.w, r9.xyzx, r9.xyzx
  87: rsq r3.w, r3.w
  88: mul r9.xyz, r3.wwww, r9.xyzx
  89: mul r5.yzw, r5.yyyy, r9.xxyz
  90: mad r5.xyz, r5.xxxx, r8.xyzx, r5.yzwy
  91: mad r5.xyz, r2.wwww, r6.xyzx, r5.xyzx
  92: dp4 r2.w, r4.xyzw, cb0[17].xyzw
  93: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  94: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  95: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  96: add r4.xyz, r4.xyzx, cb0[7].xyzx
  97: mov r6.x, cb4[9].z
  98: mov r6.y, cb4[10].z
  99: mov r6.z, cb4[11].z
 100: dp3 r2.x, r2.xyzx, r6.xyzx
 101: add r6.xyz, v4.xyzx, -cb3[25].xyzx
 102: dp3 r2.y, r6.xyzx, r6.xyzx
 103: sqrt r2.y, r2.y
 104: add r2.y, -r2.x, r2.y
 105: mad r2.x, cb3[25].w, r2.y, r2.x
 106: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
 107: eq r2.y, cb5[0].x, l(1.000000)
 108: if_nz r2.y
 109:   eq r2.y, cb5[0].y, l(1.000000)
 110:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
 111:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
 112:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
 113:   add r6.xyz, r6.xyzx, cb5[4].xyzx
 114:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
 115:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
 116:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
 117:   mad r2.y, r6.y, l(0.250000), l(0.750000)
 118:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
 119:   max r6.x, r2.z, r2.y
 120:   sample r6.xyzw, r6.xzwx, t13.xyzw, s0
 121: else 
 122:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 123: endif 
 124: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 125: add r6.xyz, v4.xyzx, -cb2[1].xyzx
 126: max r2.z, |r6.y|, |r6.x|
 127: max r2.z, |r6.z|, r2.z
 128: add r2.z, r2.z, -cb2[2].z
 129: max r2.z, r2.z, l(0.000010)
 130: mul r2.z, r2.z, cb2[2].w
 131: div r2.z, cb2[2].y, r2.z
 132: add r2.z, r2.z, -cb2[2].x
 133: add r2.z, -r2.z, l(1.000000)
 134: sample_c_lz r2.z, r6.xyzx, t14.xxxx, s1, r2.z
 135: add r3.w, -cb3[24].x, l(1.000000)
 136: mad r2.z, r2.z, r3.w, cb3[24].x
 137: add r2.y, -r2.z, r2.y
 138: mad r2.x, r2.x, r2.y, r2.z
 139: dp3 r2.y, r4.xyzx, r4.xyzx
 140: sample r6.xyzw, r2.yyyy, t11.xyzw, s3
 141: sample r4.xyzw, r4.xyzx, t12.xyzw, s2
 142: mul r2.y, r4.w, r6.x
 143: mul r2.x, r2.x, r2.y
 144: dp3 r4.x, v1.xyzx, r5.xyzx
 145: dp3 r4.y, v2.xyzx, r5.xyzx
 146: dp3 r4.z, v3.xyzx, r5.xyzx
 147: dp3 r2.y, r4.xyzx, r4.xyzx
 148: rsq r2.y, r2.y
 149: mul r4.xyz, r2.yyyy, r4.xyzx
 150: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 151: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 152: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 153: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 154: mul r6.xyz, r2.wwww, r7.xyzx
 155: add r2.w, -r7.w, l(1.000000)
 156: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 157: dp3 r0.w, r0.xyzx, r0.xyzx
 158: max r0.w, r0.w, l(0.001000)
 159: rsq r0.w, r0.w
 160: mul r0.xyz, r0.wwww, r0.xyzx
 161: dp3 r0.w, r4.xyzx, r3.xyzx
 162: dp3_sat r3.x, r4.xyzx, r1.xyzx
 163: dp3_sat r3.y, r4.xyzx, r0.xyzx
 164: dp3_sat r0.x, r1.xyzx, r0.xyzx
 165: mul r0.y, r0.x, r0.x
 166: dp2 r0.y, r0.yyyy, r2.wwww
 167: add r0.y, r0.y, l(-0.500000)
 168: add r0.z, -r3.x, l(1.000000)
 169: mul r1.x, r0.z, r0.z
 170: mul r1.x, r1.x, r1.x
 171: mul r0.z, r0.z, r1.x
 172: mad r0.z, r0.y, r0.z, l(1.000000)
 173: add r1.x, -|r0.w|, l(1.000000)
 174: mul r1.y, r1.x, r1.x
 175: mul r1.y, r1.y, r1.y
 176: mul r1.x, r1.x, r1.y
 177: mad r0.y, r0.y, r1.x, l(1.000000)
 178: mul r0.y, r0.y, r0.z
 179: mul r0.z, r2.w, r2.w
 180: max r0.z, r0.z, l(0.002000)
 181: add r1.x, -r0.z, l(1.000000)
 182: mad r1.y, |r0.w|, r1.x, r0.z
 183: mad r1.x, r3.x, r1.x, r0.z
 184: mul r0.w, |r0.w|, r1.x
 185: mad r0.w, r3.x, r1.y, r0.w
 186: add r0.w, r0.w, l(0.000010)
 187: div r0.w, l(0.500000), r0.w
 188: mul r0.z, r0.z, r0.z
 189: mad r1.x, r3.y, r0.z, -r3.y
 190: mad r1.x, r1.x, r3.y, l(1.000000)
 191: mul r0.z, r0.z, l(0.318310)
 192: mad r1.x, r1.x, r1.x, l(0.000000)
 193: div r0.z, r0.z, r1.x
 194: mul r0.z, r0.z, r0.w
 195: mul r0.z, r0.z, l(3.141593)
 196: max r0.z, r0.z, l(0.000100)
 197: sqrt r0.z, r0.z
 198: mul r0.yz, r3.xxxx, r0.yyzy
 199: dp3 r0.w, r5.xyzx, r5.xyzx
 200: ne r0.w, r0.w, l(0.000000)
 201: and r0.w, r0.w, l(0x3f800000)
 202: mul r0.z, r0.w, r0.z
 203: mul r1.xyz, r0.yyyy, r2.xyzx
 204: mul r0.yzw, r2.xxyz, r0.zzzz
 205: add r0.x, -r0.x, l(1.000000)
 206: mul r2.x, r0.x, r0.x
 207: mul r2.x, r2.x, r2.x
 208: mul r0.x, r0.x, r2.x
 209: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 210: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 211: mul r0.xyz, r0.yzwy, r2.xyzx
 212: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 213: mul o0.xyz, r1.wwww, r0.xyzx
 214: mov o0.w, l(1.000000)
 215: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 196 math, 10 temp registers, 14 textures, 4 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 14
Set 2D Texture "_Control" to slot 1 sampler slot 4
Set 2D Texture "_Splat0" to slot 2 sampler slot 5
Set 2D Texture "_Splat1" to slot 3 sampler slot 6
Set 2D Texture "_Splat2" to slot 4 sampler slot 7
Set 2D Texture "_Splat3" to slot 5 sampler slot 8
Set 2D Texture "_Normal0" to slot 6 sampler slot 10
Set 2D Texture "_Normal1" to slot 7 sampler slot 11
Set 2D Texture "_Normal2" to slot 8 sampler slot 12
Set 2D Texture "_Normal3" to slot 9 sampler slot 13
Set 2D Texture "_TerrainNormalmapTexture" to slot 10 sampler slot 9
Set 2D Texture "_LightTextureB0" to slot 11 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 12 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 13 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 14 sampler slot 1

Constant Buffer "$Globals" (304 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Control_TexelSize at 144
  Vector4 _Splat0_ST at 160
  Vector4 _Splat1_ST at 176
  Vector4 _Splat2_ST at 192
  Vector4 _Splat3_ST at 208
  Float _NormalScale0 at 256
  Float _NormalScale1 at 260
  Float _NormalScale2 at 264
  Float _NormalScale3 at 268
  Float _Metallic0 at 272
  Float _Metallic1 at 276
  Float _Metallic2 at 280
  Float _Metallic3 at 284
  Float _Smoothness0 at 288
  Float _Smoothness1 at 292
  Float _Smoothness2 at 296
  Float _Smoothness3 at 300
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float       
// TEXCOORD                 6   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[19], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_sampler s12, mode_default
      dcl_sampler s13, mode_default
      dcl_sampler s14, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture2d (float,float,float,float) t11
      dcl_resource_texturecube (float,float,float,float) t12
      dcl_resource_texture3d (float,float,float,float) t13
      dcl_resource_texturecube (float,float,float,float) t14
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 10
   0: add r0.xyz, -v4.xyzx, cb2[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r1.xyz, r0.wwww, r0.xyzx
   4: add r2.xyz, -v4.xyzx, cb1[4].xyzx
   5: dp3 r1.w, r2.xyzx, r2.xyzx
   6: rsq r1.w, r1.w
   7: mul r3.xyz, r1.wwww, r2.xyzx
   8: sample r4.xyzw, v5.xyxx, t0.xyzw, s14
   9: eq r1.w, r4.x, l(0.000000)
  10: discard_nz r1.w
  11: add r4.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  12: mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  13: mul r4.xy, r4.xyxx, cb0[9].xyxx
  14: sample r4.xyzw, r4.xyxx, t1.xyzw, s4
  15: dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  16: add r2.w, r1.w, l(0.001000)
  17: div r4.xyzw, r4.xyzw, r2.wwww
  18: mad r5.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
  19: mad r5.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
  20: mad r6.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
  21: mad r6.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
  22: sample r7.xyzw, r5.xyxx, t2.xyzw, s5
  23: mul r7.xyzw, r4.xxxx, r7.xyzw
  24: mul r7.w, r7.w, cb0[18].x
  25: sample r8.xyzw, r5.zwzz, t3.xyzw, s6
  26: mul r8.xyzw, r4.yyyy, r8.xyzw
  27: mul r8.w, r8.w, cb0[18].y
  28: add r7.xyzw, r7.xyzw, r8.xyzw
  29: sample r8.xyzw, r6.xyxx, t4.xyzw, s7
  30: mul r8.xyzw, r4.zzzz, r8.xyzw
  31: mul r8.w, r8.w, cb0[18].z
  32: add r7.xyzw, r7.xyzw, r8.xyzw
  33: sample r8.xyzw, r6.zwzz, t5.xyzw, s8
  34: mul r8.xyzw, r4.wwww, r8.xyzw
  35: mul r8.w, r8.w, cb0[18].w
  36: add r7.xyzw, r7.xyzw, r8.xyzw
  37: sample r8.xyzw, r5.xyxx, t6.xyzw, s10
  38: mul r8.x, r8.w, r8.x
  39: mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  40: mul r8.xy, r5.xyxx, cb0[16].xxxx
  41: dp2 r2.w, r8.xyxx, r8.xyxx
  42: min r2.w, r2.w, l(1.000000)
  43: add r2.w, -r2.w, l(1.000000)
  44: sqrt r8.z, r2.w
  45: sample r5.xyzw, r5.zwzz, t7.xyzw, s11
  46: mul r5.x, r5.w, r5.x
  47: mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  48: mul r5.xy, r5.xyxx, cb0[16].yyyy
  49: dp2 r2.w, r5.xyxx, r5.xyxx
  50: min r2.w, r2.w, l(1.000000)
  51: add r2.w, -r2.w, l(1.000000)
  52: sqrt r5.z, r2.w
  53: mul r5.xyz, r4.yyyy, r5.xyzx
  54: mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
  55: sample r8.xyzw, r6.xyxx, t8.xyzw, s12
  56: mul r8.x, r8.w, r8.x
  57: mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  58: mul r8.xy, r6.xyxx, cb0[16].zzzz
  59: dp2 r2.w, r8.xyxx, r8.xyxx
  60: min r2.w, r2.w, l(1.000000)
  61: add r2.w, -r2.w, l(1.000000)
  62: sqrt r8.z, r2.w
  63: mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
  64: sample r6.xyzw, r6.zwzz, t9.xyzw, s13
  65: mul r6.x, r6.w, r6.x
  66: mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  67: mul r6.xy, r6.xyxx, cb0[16].wwww
  68: dp2 r2.w, r6.xyxx, r6.xyxx
  69: min r2.w, r2.w, l(1.000000)
  70: add r2.w, -r2.w, l(1.000000)
  71: sqrt r6.z, r2.w
  72: mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
  73: add r2.w, r5.z, l(0.000010)
  74: sample r6.xyzw, v5.zwzz, t10.xyzw, s9
  75: mad r6.xyz, r6.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  76: dp3 r3.w, r6.xyzx, r6.xyzx
  77: rsq r3.w, r3.w
  78: mul r6.xyz, r3.wwww, r6.xyzx
  79: mul r8.xyz, r6.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  80: mad r8.xyz, r6.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r8.xyzx
  81: dp2 r3.w, r8.xzxx, r8.xzxx
  82: rsq r3.w, r3.w
  83: mul r8.xyz, r3.wwww, r8.xyzx
  84: mul r9.xyz, r6.zxyz, r8.yzxy
  85: mad r9.xyz, r8.zxyz, r6.yzxy, -r9.xyzx
  86: dp3 r3.w, r9.xyzx, r9.xyzx
  87: rsq r3.w, r3.w
  88: mul r9.xyz, r3.wwww, r9.xyzx
  89: mul r5.yzw, r5.yyyy, r9.xxyz
  90: mad r5.xyz, r5.xxxx, r8.xyzx, r5.yzwy
  91: mad r5.xyz, r2.wwww, r6.xyzx, r5.xyzx
  92: dp4 r2.w, r4.xyzw, cb0[17].xyzw
  93: mul r4.xyz, v4.yyyy, cb0[5].xyzx
  94: mad r4.xyz, cb0[4].xyzx, v4.xxxx, r4.xyzx
  95: mad r4.xyz, cb0[6].xyzx, v4.zzzz, r4.xyzx
  96: add r4.xyz, r4.xyzx, cb0[7].xyzx
  97: mov r6.x, cb4[9].z
  98: mov r6.y, cb4[10].z
  99: mov r6.z, cb4[11].z
 100: dp3 r2.x, r2.xyzx, r6.xyzx
 101: add r6.xyz, v4.xyzx, -cb3[25].xyzx
 102: dp3 r2.y, r6.xyzx, r6.xyzx
 103: sqrt r2.y, r2.y
 104: add r2.y, -r2.x, r2.y
 105: mad r2.x, cb3[25].w, r2.y, r2.x
 106: mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
 107: eq r2.y, cb5[0].x, l(1.000000)
 108: if_nz r2.y
 109:   eq r2.y, cb5[0].y, l(1.000000)
 110:   mul r6.xyz, v4.yyyy, cb5[2].xyzx
 111:   mad r6.xyz, cb5[1].xyzx, v4.xxxx, r6.xyzx
 112:   mad r6.xyz, cb5[3].xyzx, v4.zzzz, r6.xyzx
 113:   add r6.xyz, r6.xyzx, cb5[4].xyzx
 114:   movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
 115:   add r6.xyz, r6.xyzx, -cb5[6].xyzx
 116:   mul r6.yzw, r6.xxyz, cb5[5].xxyz
 117:   mad r2.y, r6.y, l(0.250000), l(0.750000)
 118:   mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
 119:   max r6.x, r2.z, r2.y
 120:   sample r6.xyzw, r6.xzwx, t13.xyzw, s0
 121: else 
 122:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
 123: endif 
 124: dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
 125: lt r2.z, r2.x, l(0.990000)
 126: if_nz r2.z
 127:   add r6.xyz, v4.xyzx, -cb2[1].xyzx
 128:   max r2.z, |r6.y|, |r6.x|
 129:   max r2.z, |r6.z|, r2.z
 130:   add r2.z, r2.z, -cb2[2].z
 131:   max r2.z, r2.z, l(0.000010)
 132:   mul r2.z, r2.z, cb2[2].w
 133:   div r2.z, cb2[2].y, r2.z
 134:   add r2.z, r2.z, -cb2[2].x
 135:   add r2.z, -r2.z, l(1.000000)
 136:   add r8.xyz, r6.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
 137:   sample_c_lz r8.x, r8.xyzx, t14.xxxx, s1, r2.z
 138:   add r9.xyz, r6.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
 139:   sample_c_lz r8.y, r9.xyzx, t14.xxxx, s1, r2.z
 140:   add r9.xyz, r6.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
 141:   sample_c_lz r8.z, r9.xyzx, t14.xxxx, s1, r2.z
 142:   add r6.xyz, r6.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
 143:   sample_c_lz r8.w, r6.xyzx, t14.xxxx, s1, r2.z
 144:   dp4 r2.z, r8.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
 145:   add r3.w, -cb3[24].x, l(1.000000)
 146:   mad r2.z, r2.z, r3.w, cb3[24].x
 147: else 
 148:   mov r2.z, l(1.000000)
 149: endif 
 150: add r2.y, -r2.z, r2.y
 151: mad r2.x, r2.x, r2.y, r2.z
 152: dp3 r2.y, r4.xyzx, r4.xyzx
 153: sample r6.xyzw, r2.yyyy, t11.xyzw, s3
 154: sample r4.xyzw, r4.xyzx, t12.xyzw, s2
 155: mul r2.y, r4.w, r6.x
 156: mul r2.x, r2.x, r2.y
 157: dp3 r4.x, v1.xyzx, r5.xyzx
 158: dp3 r4.y, v2.xyzx, r5.xyzx
 159: dp3 r4.z, v3.xyzx, r5.xyzx
 160: dp3 r2.y, r4.xyzx, r4.xyzx
 161: rsq r2.y, r2.y
 162: mul r4.xyz, r2.yyyy, r4.xyzx
 163: mul r2.xyz, r2.xxxx, cb0[2].xyzx
 164: add r5.xyz, r7.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
 165: mad r5.xyz, r2.wwww, r5.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
 166: mad r2.w, -r2.w, l(0.779084), l(0.779084)
 167: mul r6.xyz, r2.wwww, r7.xyzx
 168: add r2.w, -r7.w, l(1.000000)
 169: mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
 170: dp3 r0.w, r0.xyzx, r0.xyzx
 171: max r0.w, r0.w, l(0.001000)
 172: rsq r0.w, r0.w
 173: mul r0.xyz, r0.wwww, r0.xyzx
 174: dp3 r0.w, r4.xyzx, r3.xyzx
 175: dp3_sat r3.x, r4.xyzx, r1.xyzx
 176: dp3_sat r3.y, r4.xyzx, r0.xyzx
 177: dp3_sat r0.x, r1.xyzx, r0.xyzx
 178: mul r0.y, r0.x, r0.x
 179: dp2 r0.y, r0.yyyy, r2.wwww
 180: add r0.y, r0.y, l(-0.500000)
 181: add r0.z, -r3.x, l(1.000000)
 182: mul r1.x, r0.z, r0.z
 183: mul r1.x, r1.x, r1.x
 184: mul r0.z, r0.z, r1.x
 185: mad r0.z, r0.y, r0.z, l(1.000000)
 186: add r1.x, -|r0.w|, l(1.000000)
 187: mul r1.y, r1.x, r1.x
 188: mul r1.y, r1.y, r1.y
 189: mul r1.x, r1.x, r1.y
 190: mad r0.y, r0.y, r1.x, l(1.000000)
 191: mul r0.y, r0.y, r0.z
 192: mul r0.z, r2.w, r2.w
 193: max r0.z, r0.z, l(0.002000)
 194: add r1.x, -r0.z, l(1.000000)
 195: mad r1.y, |r0.w|, r1.x, r0.z
 196: mad r1.x, r3.x, r1.x, r0.z
 197: mul r0.w, |r0.w|, r1.x
 198: mad r0.w, r3.x, r1.y, r0.w
 199: add r0.w, r0.w, l(0.000010)
 200: div r0.w, l(0.500000), r0.w
 201: mul r0.z, r0.z, r0.z
 202: mad r1.x, r3.y, r0.z, -r3.y
 203: mad r1.x, r1.x, r3.y, l(1.000000)
 204: mul r0.z, r0.z, l(0.318310)
 205: mad r1.x, r1.x, r1.x, l(0.000000)
 206: div r0.z, r0.z, r1.x
 207: mul r0.z, r0.z, r0.w
 208: mul r0.z, r0.z, l(3.141593)
 209: max r0.z, r0.z, l(0.000100)
 210: sqrt r0.z, r0.z
 211: mul r0.yz, r3.xxxx, r0.yyzy
 212: dp3 r0.w, r5.xyzx, r5.xyzx
 213: ne r0.w, r0.w, l(0.000000)
 214: and r0.w, r0.w, l(0x3f800000)
 215: mul r0.z, r0.w, r0.z
 216: mul r1.xyz, r0.yyyy, r2.xyzx
 217: mul r0.yzw, r2.xxyz, r0.zzzz
 218: add r0.x, -r0.x, l(1.000000)
 219: mul r2.x, r0.x, r0.x
 220: mul r2.x, r2.x, r2.x
 221: mul r0.x, r0.x, r2.x
 222: add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 223: mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
 224: mul r0.xyz, r0.yzwy, r2.xyzx
 225: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
 226: mul o0.xyz, r1.wwww, r0.xyzx
 227: mov o0.w, l(1.000000)
 228: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 27 avg math (15..34)
 // Stats for Fragment shader:
 //        d3d11: 72 avg math (30..118), 9 avg texture (5..14), 1 avg branch (0..2)
 Pass {
  Name "DEFERRED"
  Tags { "LIGHTMODE"="DEFERRED" "QUEUE"="Geometry-100" "RenderType"="Opaque" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 15 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerDraw" (176 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[4], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb0[3].xyzw
   4: mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb1[18].xyzw
   6: mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
   9: mul r0.xyz, v2.yyyy, cb0[1].xyzx
  10: mad r0.xyz, cb0[0].xyzx, v2.xxxx, r0.xyzx
  11: mad r0.xyz, cb0[2].xyzx, v2.zzzz, r0.xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mov o3.xy, v3.xyxx
  16: mov o3.zw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 30 math, 4 temp registers, 5 textures
Set 2D Texture "_Control" to slot 0
Set 2D Texture "_Splat0" to slot 1
Set 2D Texture "_Splat1" to slot 2
Set 2D Texture "_Splat2" to slot 3
Set 2D Texture "_Splat3" to slot 4

Constant Buffer "$Globals" (208 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 160
  Float _Metallic1 at 164
  Float _Metallic2 at 168
  Float _Metallic3 at 172
  Float _Smoothness0 at 176
  Float _Smoothness1 at 180
  Float _Smoothness2 at 184
  Float _Smoothness3 at 188
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 4
   0: mad r0.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
   1: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
   2: add r1.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   3: mad r1.xy, v3.xyxx, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   4: mul r1.xy, r1.xyxx, cb0[5].xyxx
   5: sample r1.xyzw, r1.xyxx, t0.xyzw, s0
   6: dp4 r2.x, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   7: add r2.y, r2.x, l(0.001000)
   8: div r1.xyzw, r1.xyzw, r2.yyyy
   9: mul r0.xyzw, r0.xyzw, r1.xxxx
  10: mul r0.w, r0.w, cb0[11].x
  11: mad r2.yz, v3.xxyx, cb0[7].xxyx, cb0[7].zzwz
  12: sample r3.xyzw, r2.yzyy, t2.xyzw, s2
  13: mul r3.xyzw, r1.yyyy, r3.xyzw
  14: mul r3.w, r3.w, cb0[11].y
  15: add r0.xyzw, r0.xyzw, r3.xyzw
  16: mad r2.yz, v3.xxyx, cb0[8].xxyx, cb0[8].zzwz
  17: sample r3.xyzw, r2.yzyy, t3.xyzw, s3
  18: mul r3.xyzw, r1.zzzz, r3.xyzw
  19: mul r3.w, r3.w, cb0[11].z
  20: add r0.xyzw, r0.xyzw, r3.xyzw
  21: mad r2.yz, v3.xxyx, cb0[9].xxyx, cb0[9].zzwz
  22: sample r3.xyzw, r2.yzyy, t4.xyzw, s4
  23: mul r3.xyzw, r1.wwww, r3.xyzw
  24: dp4 r1.x, r1.xyzw, cb0[10].xyzw
  25: mul r3.w, r3.w, cb0[11].w
  26: add r0.xyzw, r0.xyzw, r3.xyzw
  27: mad r1.y, -r1.x, l(0.779084), l(0.779084)
  28: mul r1.yzw, r0.xxyz, r1.yyyy
  29: mul o0.xyz, r2.xxxx, r1.yzwy
  30: mov o0.w, l(1.000000)
  31: add r1.yzw, r0.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  32: mad r0.xyz, r1.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
  33: mul o1.xyzw, r2.xxxx, r0.xyzw
  34: mad r0.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  35: mul o2.xyz, r2.xxxx, r0.xyzx
  36: mov o3.xyzw, r2.xxxx
  37: mov o2.w, l(1.000000)
  38: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[46], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  10: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  11: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul r0.xyz, r0.wwww, r0.xyzx
  15: mov o1.xyz, r0.xyzx
  16: mov o3.xy, v3.xyxx
  17: mov o3.zw, l(0,0,0,0)
  18: mov o4.xyzw, l(0,0,0,0)
  19: mul r0.w, r0.y, r0.y
  20: mad r0.w, r0.x, r0.x, -r0.w
  21: mul r1.xyzw, r0.yzzx, r0.xyzz
  22: dp4 r0.x, cb0[42].xyzw, r1.xyzw
  23: dp4 r0.y, cb0[43].xyzw, r1.xyzw
  24: dp4 r0.z, cb0[44].xyzw, r1.xyzw
  25: mad o5.xyz, cb0[45].xyzx, r0.wwww, r0.xyzx
  26: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 61 math, 7 temp registers, 8 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 1
Set 2D Texture "_Splat0" to slot 1 sampler slot 2
Set 2D Texture "_Splat1" to slot 2 sampler slot 3
Set 2D Texture "_Splat2" to slot 3 sampler slot 4
Set 2D Texture "_Splat3" to slot 4 sampler slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0

Constant Buffer "$Globals" (208 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 160
  Float _Metallic1 at 164
  Float _Metallic2 at 168
  Float _Metallic3 at 172
  Float _Smoothness0 at 176
  Float _Smoothness1 at 180
  Float _Smoothness2 at 184
  Float _Smoothness3 at 188
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float       
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: add r0.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   1: mad r0.xy, v3.xyxx, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   2: mul r0.xy, r0.xyxx, cb0[5].xyxx
   3: sample r0.xyzw, r0.xyxx, t0.xyzw, s1
   4: dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   5: add r1.y, r1.x, l(0.001000)
   6: div r0.xyzw, r0.xyzw, r1.yyyy
   7: mad r1.yz, v3.xxyx, cb0[6].xxyx, cb0[6].zzwz
   8: mad r2.xy, v3.xyxx, cb0[7].xyxx, cb0[7].zwzz
   9: mad r2.zw, v3.xxxy, cb0[8].xxxy, cb0[8].zzzw
  10: mad r3.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  11: sample r4.xyzw, r1.yzyy, t1.xyzw, s2
  12: mul r4.xyzw, r0.xxxx, r4.xyzw
  13: mul r4.w, r4.w, cb0[11].x
  14: sample r5.xyzw, r2.xyxx, t2.xyzw, s3
  15: mul r5.xyzw, r0.yyyy, r5.xyzw
  16: mul r5.w, r5.w, cb0[11].y
  17: add r4.xyzw, r4.xyzw, r5.xyzw
  18: sample r2.xyzw, r2.zwzz, t3.xyzw, s4
  19: mul r2.xyzw, r0.zzzz, r2.xyzw
  20: mul r2.w, r2.w, cb0[11].z
  21: add r2.xyzw, r2.xyzw, r4.xyzw
  22: sample r3.xyzw, r3.xyxx, t4.xyzw, s5
  23: mul r3.xyzw, r0.wwww, r3.xyzw
  24: mul r3.w, r3.w, cb0[11].w
  25: add r2.xyzw, r2.xyzw, r3.xyzw
  26: dp4 r0.x, r0.xyzw, cb0[10].xyzw
  27: eq r0.y, cb2[0].x, l(1.000000)
  28: if_nz r0.y
  29:   eq r0.y, cb2[0].y, l(1.000000)
  30:   mul r1.yzw, v2.yyyy, cb2[2].xxyz
  31:   mad r1.yzw, cb2[1].xxyz, v2.xxxx, r1.yyzw
  32:   mad r1.yzw, cb2[3].xxyz, v2.zzzz, r1.yyzw
  33:   add r1.yzw, r1.yyzw, cb2[4].xxyz
  34:   movc r0.yzw, r0.yyyy, r1.yyzw, v2.xxyz
  35:   add r0.yzw, r0.yyzw, -cb2[6].xxyz
  36:   mul r3.yzw, r0.yyzw, cb2[5].xxyz
  37:   mul r0.y, r3.y, l(0.250000)
  38:   mul r0.z, cb2[0].z, l(0.500000)
  39:   mad r0.w, -cb2[0].z, l(0.500000), l(0.250000)
  40:   max r0.y, r0.z, r0.y
  41:   min r3.x, r0.w, r0.y
  42:   sample r4.xyzw, r3.xzwx, t5.xyzw, s0
  43:   add r0.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  44:   sample r5.xyzw, r0.yzwy, t5.xyzw, s0
  45:   add r0.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  46:   sample r3.xyzw, r0.yzwy, t5.xyzw, s0
  47:   mov r6.xyz, v1.xyzx
  48:   mov r6.w, l(1.000000)
  49:   dp4 r4.x, r4.xyzw, r6.xyzw
  50:   dp4 r4.y, r5.xyzw, r6.xyzw
  51:   dp4 r4.z, r3.xyzw, r6.xyzw
  52: else 
  53:   mov r3.xyz, v1.xyzx
  54:   mov r3.w, l(1.000000)
  55:   dp4 r4.x, cb1[39].xyzw, r3.xyzw
  56:   dp4 r4.y, cb1[40].xyzw, r3.xyzw
  57:   dp4 r4.z, cb1[41].xyzw, r3.xyzw
  58: endif 
  59: add r0.yzw, r4.xxyz, v5.xxyz
  60: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  61: log r0.yzw, r0.yyzw
  62: mul r0.yzw, r0.yyzw, l(0.000000, 0.416667, 0.416667, 0.416667)
  63: exp r0.yzw, r0.yyzw
  64: mad r0.yzw, r0.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
  65: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  66: add r1.yzw, r2.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  67: mad r3.xyz, r0.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
  68: mad r0.x, -r0.x, l(0.779084), l(0.779084)
  69: mul r1.yzw, r0.xxxx, r2.xxyz
  70: mul r0.xyz, r0.yzwy, r1.yzwy
  71: mad r2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  72: exp r0.xyz, -r0.xyzx
  73: mul o0.xyz, r1.xxxx, r1.yzwy
  74: mov r3.w, r2.w
  75: mul o1.xyzw, r1.xxxx, r3.xyzw
  76: mul o2.xyz, r1.xxxx, r2.xyzx
  77: mov r0.w, l(1.000000)
  78: mul o3.xyzw, r1.xxxx, r0.xyzw
  79: mov o0.w, l(1.000000)
  80: mov o2.w, l(1.000000)
  81: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: UNITY_HDR_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 15 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerDraw" (176 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[4], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb0[3].xyzw
   4: mad o2.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb1[18].xyzw
   6: mad r0.xyzw, cb1[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb1[20].xyzw, r1.wwww, r0.xyzw
   9: mul r0.xyz, v2.yyyy, cb0[1].xyzx
  10: mad r0.xyz, cb0[0].xyzx, v2.xxxx, r0.xyzx
  11: mad r0.xyz, cb0[2].xyzx, v2.zzzz, r0.xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul o1.xyz, r0.wwww, r0.xyzx
  15: mov o3.xy, v3.xyxx
  16: mov o3.zw, l(0,0,0,0)
  17: mov o4.xyzw, l(0,0,0,0)
  18: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 31 math, 4 temp registers, 5 textures
Set 2D Texture "_Control" to slot 0
Set 2D Texture "_Splat0" to slot 1
Set 2D Texture "_Splat1" to slot 2
Set 2D Texture "_Splat2" to slot 3
Set 2D Texture "_Splat3" to slot 4

Constant Buffer "$Globals" (208 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 160
  Float _Metallic1 at 164
  Float _Metallic2 at 168
  Float _Metallic3 at 172
  Float _Smoothness0 at 176
  Float _Smoothness1 at 180
  Float _Smoothness2 at 184
  Float _Smoothness3 at 188
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 4
   0: mad r0.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
   1: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
   2: add r1.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   3: mad r1.xy, v3.xyxx, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   4: mul r1.xy, r1.xyxx, cb0[5].xyxx
   5: sample r1.xyzw, r1.xyxx, t0.xyzw, s0
   6: dp4 r2.x, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   7: add r2.y, r2.x, l(0.001000)
   8: div r1.xyzw, r1.xyzw, r2.yyyy
   9: mul r0.xyzw, r0.xyzw, r1.xxxx
  10: mul r0.w, r0.w, cb0[11].x
  11: mad r2.yz, v3.xxyx, cb0[7].xxyx, cb0[7].zzwz
  12: sample r3.xyzw, r2.yzyy, t2.xyzw, s2
  13: mul r3.xyzw, r1.yyyy, r3.xyzw
  14: mul r3.w, r3.w, cb0[11].y
  15: add r0.xyzw, r0.xyzw, r3.xyzw
  16: mad r2.yz, v3.xxyx, cb0[8].xxyx, cb0[8].zzwz
  17: sample r3.xyzw, r2.yzyy, t3.xyzw, s3
  18: mul r3.xyzw, r1.zzzz, r3.xyzw
  19: mul r3.w, r3.w, cb0[11].z
  20: add r0.xyzw, r0.xyzw, r3.xyzw
  21: mad r2.yz, v3.xxyx, cb0[9].xxyx, cb0[9].zzwz
  22: sample r3.xyzw, r2.yzyy, t4.xyzw, s4
  23: mul r3.xyzw, r1.wwww, r3.xyzw
  24: dp4 r1.x, r1.xyzw, cb0[10].xyzw
  25: mul r3.w, r3.w, cb0[11].w
  26: add r0.xyzw, r0.xyzw, r3.xyzw
  27: mad r1.y, -r1.x, l(0.779084), l(0.779084)
  28: mul r1.yzw, r0.xxyz, r1.yyyy
  29: mul o0.xyz, r2.xxxx, r1.yzwy
  30: mov o0.w, l(1.000000)
  31: add r1.yzw, r0.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  32: mad r0.xyz, r1.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
  33: mul o1.xyzw, r2.xxxx, r0.xyzw
  34: mad r0.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  35: mul o2.xyz, r2.xxxx, r0.xyzx
  36: mul o3.xyzw, r2.xxxx, l(0.000000, 0.000000, 0.000000, 1.000000)
  37: mov o2.w, l(1.000000)
  38: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH UNITY_HDR_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[46], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mul r0.xyz, v2.yyyy, cb1[1].xyzx
  10: mad r0.xyz, cb1[0].xyzx, v2.xxxx, r0.xyzx
  11: mad r0.xyz, cb1[2].xyzx, v2.zzzz, r0.xyzx
  12: dp3 r0.w, r0.xyzx, r0.xyzx
  13: rsq r0.w, r0.w
  14: mul r0.xyz, r0.wwww, r0.xyzx
  15: mov o1.xyz, r0.xyzx
  16: mov o3.xy, v3.xyxx
  17: mov o3.zw, l(0,0,0,0)
  18: mov o4.xyzw, l(0,0,0,0)
  19: mul r0.w, r0.y, r0.y
  20: mad r0.w, r0.x, r0.x, -r0.w
  21: mul r1.xyzw, r0.yzzx, r0.xyzz
  22: dp4 r0.x, cb0[42].xyzw, r1.xyzw
  23: dp4 r0.y, cb0[43].xyzw, r1.xyzw
  24: dp4 r0.z, cb0[44].xyzw, r1.xyzw
  25: mad o5.xyz, cb0[45].xyzx, r0.wwww, r0.xyzx
  26: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 60 math, 7 temp registers, 8 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 1
Set 2D Texture "_Splat0" to slot 1 sampler slot 2
Set 2D Texture "_Splat1" to slot 2 sampler slot 3
Set 2D Texture "_Splat2" to slot 3 sampler slot 4
Set 2D Texture "_Splat3" to slot 4 sampler slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0

Constant Buffer "$Globals" (208 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 160
  Float _Metallic1 at 164
  Float _Metallic2 at 168
  Float _Metallic3 at 172
  Float _Smoothness0 at 176
  Float _Smoothness1 at 180
  Float _Smoothness2 at 184
  Float _Smoothness3 at 188
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float       
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: add r0.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   1: mad r0.xy, v3.xyxx, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   2: mul r0.xy, r0.xyxx, cb0[5].xyxx
   3: sample r0.xyzw, r0.xyxx, t0.xyzw, s1
   4: dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   5: add r1.y, r1.x, l(0.001000)
   6: div r0.xyzw, r0.xyzw, r1.yyyy
   7: mad r1.yz, v3.xxyx, cb0[6].xxyx, cb0[6].zzwz
   8: mad r2.xy, v3.xyxx, cb0[7].xyxx, cb0[7].zwzz
   9: mad r2.zw, v3.xxxy, cb0[8].xxxy, cb0[8].zzzw
  10: mad r3.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  11: sample r4.xyzw, r1.yzyy, t1.xyzw, s2
  12: mul r4.xyzw, r0.xxxx, r4.xyzw
  13: mul r4.w, r4.w, cb0[11].x
  14: sample r5.xyzw, r2.xyxx, t2.xyzw, s3
  15: mul r5.xyzw, r0.yyyy, r5.xyzw
  16: mul r5.w, r5.w, cb0[11].y
  17: add r4.xyzw, r4.xyzw, r5.xyzw
  18: sample r2.xyzw, r2.zwzz, t3.xyzw, s4
  19: mul r2.xyzw, r0.zzzz, r2.xyzw
  20: mul r2.w, r2.w, cb0[11].z
  21: add r2.xyzw, r2.xyzw, r4.xyzw
  22: sample r3.xyzw, r3.xyxx, t4.xyzw, s5
  23: mul r3.xyzw, r0.wwww, r3.xyzw
  24: mul r3.w, r3.w, cb0[11].w
  25: add r2.xyzw, r2.xyzw, r3.xyzw
  26: dp4 r0.x, r0.xyzw, cb0[10].xyzw
  27: eq r0.y, cb2[0].x, l(1.000000)
  28: if_nz r0.y
  29:   eq r0.y, cb2[0].y, l(1.000000)
  30:   mul r1.yzw, v2.yyyy, cb2[2].xxyz
  31:   mad r1.yzw, cb2[1].xxyz, v2.xxxx, r1.yyzw
  32:   mad r1.yzw, cb2[3].xxyz, v2.zzzz, r1.yyzw
  33:   add r1.yzw, r1.yyzw, cb2[4].xxyz
  34:   movc r0.yzw, r0.yyyy, r1.yyzw, v2.xxyz
  35:   add r0.yzw, r0.yyzw, -cb2[6].xxyz
  36:   mul r3.yzw, r0.yyzw, cb2[5].xxyz
  37:   mul r0.y, r3.y, l(0.250000)
  38:   mul r0.z, cb2[0].z, l(0.500000)
  39:   mad r0.w, -cb2[0].z, l(0.500000), l(0.250000)
  40:   max r0.y, r0.z, r0.y
  41:   min r3.x, r0.w, r0.y
  42:   sample r4.xyzw, r3.xzwx, t5.xyzw, s0
  43:   add r0.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  44:   sample r5.xyzw, r0.yzwy, t5.xyzw, s0
  45:   add r0.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  46:   sample r3.xyzw, r0.yzwy, t5.xyzw, s0
  47:   mov r6.xyz, v1.xyzx
  48:   mov r6.w, l(1.000000)
  49:   dp4 r4.x, r4.xyzw, r6.xyzw
  50:   dp4 r4.y, r5.xyzw, r6.xyzw
  51:   dp4 r4.z, r3.xyzw, r6.xyzw
  52: else 
  53:   mov r3.xyz, v1.xyzx
  54:   mov r3.w, l(1.000000)
  55:   dp4 r4.x, cb1[39].xyzw, r3.xyzw
  56:   dp4 r4.y, cb1[40].xyzw, r3.xyzw
  57:   dp4 r4.z, cb1[41].xyzw, r3.xyzw
  58: endif 
  59: add r0.yzw, r4.xxyz, v5.xxyz
  60: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  61: log r0.yzw, r0.yyzw
  62: mul r0.yzw, r0.yyzw, l(0.000000, 0.416667, 0.416667, 0.416667)
  63: exp r0.yzw, r0.yyzw
  64: mad r0.yzw, r0.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
  65: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  66: add r1.yzw, r2.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  67: mad r3.xyz, r0.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
  68: mad r0.x, -r0.x, l(0.779084), l(0.779084)
  69: mul r1.yzw, r0.xxxx, r2.xxyz
  70: mul r0.xyz, r0.yzwy, r1.yzwy
  71: mad r2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  72: mul o0.xyz, r1.xxxx, r1.yzwy
  73: mov r3.w, r2.w
  74: mul o1.xyzw, r1.xxxx, r3.xyzw
  75: mul o2.xyz, r1.xxxx, r2.xyzx
  76: mov r0.w, l(1.000000)
  77: mul o3.xyzw, r1.xxxx, r0.xyzw
  78: mov o0.w, l(1.000000)
  79: mov o2.w, l(1.000000)
  80: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerDraw" (176 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb0[3].xyzw
   4: mad r0.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb1[18].xyzw
   6: mad r2.xyzw, cb1[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb1[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb1[20].xyzw, r1.wwww, r2.xyzw
   9: mov o1.w, r0.x
  10: mul r0.xw, v2.zzzx, l(0.000000, 0.000000, 0.000000, 1.000000)
  11: mad r0.xw, v2.yyyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xxxw
  12: mul r1.xyz, r0.wwww, cb0[1].yzxy
  13: mad r1.xyz, cb0[0].yzxy, r0.xxxx, r1.xyzx
  14: dp3 r0.x, r1.xyzx, r1.xyzx
  15: rsq r0.x, r0.x
  16: mul r1.xyz, r0.xxxx, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb0[1].zxyz
  18: mad r2.xyz, cb0[0].zxyz, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb0[2].zxyz, v2.zzzz, r2.xyzx
  20: dp3 r0.x, r2.xyzx, r2.xyzx
  21: rsq r0.x, r0.x
  22: mul r2.xyz, r0.xxxx, r2.xyzx
  23: mul r3.xyz, r1.xyzx, r2.xyzx
  24: mad r3.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
  25: mul r3.xyz, r3.xyzx, -cb0[9].wwww
  26: mov o1.y, r3.x
  27: mov o1.x, r1.z
  28: mov o1.z, r2.y
  29: mov o2.x, r1.x
  30: mov o3.x, r1.y
  31: mov o2.z, r2.z
  32: mov o3.z, r2.x
  33: mov o2.w, r0.y
  34: mov o3.w, r0.z
  35: mov o2.y, r3.y
  36: mov o3.y, r3.z
  37: mov o4.xy, v3.xyxx
  38: mov o4.zw, l(0,0,0,0)
  39: mov o5.xyzw, l(0,0,0,0)
  40: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 69 math, 7 temp registers, 9 textures
Set 2D Texture "_Control" to slot 0
Set 2D Texture "_Splat0" to slot 1
Set 2D Texture "_Splat1" to slot 2
Set 2D Texture "_Splat2" to slot 3
Set 2D Texture "_Splat3" to slot 4
Set 2D Texture "_Normal0" to slot 5
Set 2D Texture "_Normal1" to slot 6
Set 2D Texture "_Normal2" to slot 7
Set 2D Texture "_Normal3" to slot 8

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 160
  Float _NormalScale1 at 164
  Float _NormalScale2 at 168
  Float _NormalScale3 at 172
  Float _Metallic0 at 176
  Float _Metallic1 at 180
  Float _Metallic2 at 184
  Float _Metallic3 at 188
  Float _Smoothness0 at 192
  Float _Smoothness1 at 196
  Float _Smoothness2 at 200
  Float _Smoothness3 at 204
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 5   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: mad r0.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
   1: sample r1.xyzw, r0.xyxx, t1.xyzw, s1
   2: sample r0.xyzw, r0.xyxx, t5.xyzw, s5
   3: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   4: mad r2.xy, v4.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   5: mul r2.xy, r2.xyxx, cb0[5].xyxx
   6: sample r2.xyzw, r2.xyxx, t0.xyzw, s0
   7: dp4 r0.z, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   8: add r3.x, r0.z, l(0.001000)
   9: div r2.xyzw, r2.xyzw, r3.xxxx
  10: mul r1.xyzw, r1.xyzw, r2.xxxx
  11: mul r1.w, r1.w, cb0[12].x
  12: mad r3.xy, v4.xyxx, cb0[7].xyxx, cb0[7].zwzz
  13: sample r4.xyzw, r3.xyxx, t2.xyzw, s2
  14: sample r3.xyzw, r3.xyxx, t6.xyzw, s6
  15: mul r4.xyzw, r2.yyyy, r4.xyzw
  16: mul r4.w, r4.w, cb0[12].y
  17: add r1.xyzw, r1.xyzw, r4.xyzw
  18: mad r4.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  19: sample r5.xyzw, r4.xyxx, t3.xyzw, s3
  20: sample r4.xyzw, r4.xyxx, t7.xyzw, s7
  21: mul r5.xyzw, r2.zzzz, r5.xyzw
  22: mul r5.w, r5.w, cb0[12].z
  23: add r1.xyzw, r1.xyzw, r5.xyzw
  24: mad r5.xy, v4.xyxx, cb0[9].xyxx, cb0[9].zwzz
  25: sample r6.xyzw, r5.xyxx, t4.xyzw, s4
  26: sample r5.xyzw, r5.xyxx, t8.xyzw, s8
  27: mul r6.xyzw, r2.wwww, r6.xyzw
  28: mul r6.w, r6.w, cb0[12].w
  29: add r1.xyzw, r1.xyzw, r6.xyzw
  30: dp4 r3.z, r2.xyzw, cb0[11].xyzw
  31: mad r4.z, -r3.z, l(0.779084), l(0.779084)
  32: mul r6.xyz, r1.xyzx, r4.zzzz
  33: mul o0.xyz, r0.zzzz, r6.xyzx
  34: mov o0.w, l(1.000000)
  35: add r6.xyz, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  36: mad r1.xyz, r3.zzzz, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  37: mul o1.xyzw, r0.zzzz, r1.xyzw
  38: mul r0.x, r0.w, r0.x
  39: mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  40: mul r1.xy, r0.xyxx, cb0[10].xxxx
  41: dp2 r0.x, r1.xyxx, r1.xyxx
  42: min r0.x, r0.x, l(1.000000)
  43: add r0.x, -r0.x, l(1.000000)
  44: sqrt r1.z, r0.x
  45: mul r3.x, r3.w, r3.x
  46: mad r0.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  47: mul r3.xy, r0.xyxx, cb0[10].yyyy
  48: dp2 r0.x, r3.xyxx, r3.xyxx
  49: min r0.x, r0.x, l(1.000000)
  50: add r0.x, -r0.x, l(1.000000)
  51: sqrt r3.z, r0.x
  52: mul r0.xyw, r2.yyyy, r3.xyxz
  53: mad r0.xyw, r1.xyxz, r2.xxxx, r0.xyxw
  54: mul r4.x, r4.w, r4.x
  55: mad r1.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  56: mul r1.xy, r1.xyxx, cb0[10].zzzz
  57: dp2 r1.w, r1.xyxx, r1.xyxx
  58: min r1.w, r1.w, l(1.000000)
  59: add r1.w, -r1.w, l(1.000000)
  60: sqrt r1.z, r1.w
  61: mad r0.xyw, r1.xyxz, r2.zzzz, r0.xyxw
  62: mul r5.x, r5.w, r5.x
  63: mad r1.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  64: mul r1.xy, r1.xyxx, cb0[10].wwww
  65: dp2 r1.w, r1.xyxx, r1.xyxx
  66: min r1.w, r1.w, l(1.000000)
  67: add r1.w, -r1.w, l(1.000000)
  68: sqrt r1.z, r1.w
  69: mad r1.xyz, r1.xyzx, r2.wwww, r0.xywx
  70: add r1.w, r1.z, l(0.000010)
  71: dp3 r2.x, v1.xyzx, r1.xywx
  72: dp3 r2.y, v2.xyzx, r1.xywx
  73: dp3 r2.z, v3.xyzx, r1.xywx
  74: dp3 r0.x, r2.xyzx, r2.xyzx
  75: rsq r0.x, r0.x
  76: mul r0.xyw, r0.xxxx, r2.xyxz
  77: mad r0.xyw, r0.xyxw, l(0.500000, 0.500000, 0.000000, 0.500000), l(0.500000, 0.500000, 0.000000, 0.500000)
  78: mul o2.xyz, r0.zzzz, r0.xywx
  79: mov o3.xyzw, r0.zzzz
  80: mov o2.w, l(1.000000)
  81: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[46], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   9: mov o1.w, r0.x
  10: mul r0.xw, v2.zzzx, l(0.000000, 0.000000, 0.000000, 1.000000)
  11: mad r0.xw, v2.yyyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xxxw
  12: mul r1.xyz, r0.wwww, cb1[1].yzxy
  13: mad r1.xyz, cb1[0].yzxy, r0.xxxx, r1.xyzx
  14: dp3 r0.x, r1.xyzx, r1.xyzx
  15: rsq r0.x, r0.x
  16: mul r1.xyz, r0.xxxx, r1.xyzx
  17: mov o1.x, r1.z
  18: mul r2.xyzw, v2.yyyy, cb1[1].xyzz
  19: mad r2.xyzw, cb1[0].xyzz, v2.xxxx, r2.xyzw
  20: mad r2.xyzw, cb1[2].xyzz, v2.zzzz, r2.xyzw
  21: dp3 r0.x, r2.xywx, r2.xywx
  22: rsq r0.x, r0.x
  23: mul r2.xyzw, r0.xxxx, r2.xyzw
  24: mul r3.xyz, r1.xyzx, r2.wxyw
  25: mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
  26: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  27: mov o1.y, r3.x
  28: mov o1.z, r2.x
  29: mov o2.x, r1.x
  30: mov o3.x, r1.y
  31: mov o2.w, r0.y
  32: mov o3.w, r0.z
  33: mov o2.y, r3.y
  34: mov o3.y, r3.z
  35: mov o2.z, r2.y
  36: mov o3.z, r2.w
  37: mov o4.xy, v3.xyxx
  38: mov o4.zw, l(0,0,0,0)
  39: mov o5.xyzw, l(0,0,0,0)
  40: mul r0.x, r2.y, r2.y
  41: mad r0.x, r2.x, r2.x, -r0.x
  42: mul r1.xyzw, r2.ywzx, r2.xyzw
  43: dp4 r2.x, cb0[42].xyzw, r1.xyzw
  44: dp4 r2.y, cb0[43].xyzw, r1.xyzw
  45: dp4 r2.z, cb0[44].xyzw, r1.xyzw
  46: mad o6.xyz, cb0[45].xyzx, r0.xxxx, r2.xyzx
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 100 math, 7 temp registers, 12 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 1
Set 2D Texture "_Splat0" to slot 1 sampler slot 2
Set 2D Texture "_Splat1" to slot 2 sampler slot 3
Set 2D Texture "_Splat2" to slot 3 sampler slot 4
Set 2D Texture "_Splat3" to slot 4 sampler slot 5
Set 2D Texture "_Normal0" to slot 5 sampler slot 6
Set 2D Texture "_Normal1" to slot 6 sampler slot 7
Set 2D Texture "_Normal2" to slot 7 sampler slot 8
Set 2D Texture "_Normal3" to slot 8 sampler slot 9
Set 3D Texture "unity_ProbeVolumeSH" to slot 9 sampler slot 0

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 160
  Float _NormalScale1 at 164
  Float _NormalScale2 at 168
  Float _NormalScale3 at 172
  Float _Metallic0 at 176
  Float _Metallic1 at 180
  Float _Metallic2 at 184
  Float _Metallic3 at 188
  Float _Smoothness0 at 192
  Float _Smoothness1 at 196
  Float _Smoothness2 at 200
  Float _Smoothness3 at 204
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 5   xyzw        5     NONE   float       
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[13], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture3d (float,float,float,float) t9
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: add r0.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   1: mad r0.xy, v4.xyxx, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   2: mul r0.xy, r0.xyxx, cb0[5].xyxx
   3: sample r0.xyzw, r0.xyxx, t0.xyzw, s1
   4: dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   5: add r1.y, r1.x, l(0.001000)
   6: div r0.xyzw, r0.xyzw, r1.yyyy
   7: mad r1.yz, v4.xxyx, cb0[6].xxyx, cb0[6].zzwz
   8: mad r2.xy, v4.xyxx, cb0[7].xyxx, cb0[7].zwzz
   9: mad r2.zw, v4.xxxy, cb0[8].xxxy, cb0[8].zzzw
  10: mad r3.xy, v4.xyxx, cb0[9].xyxx, cb0[9].zwzz
  11: sample r4.xyzw, r1.yzyy, t1.xyzw, s2
  12: mul r4.xyzw, r0.xxxx, r4.xyzw
  13: mul r4.w, r4.w, cb0[12].x
  14: sample r5.xyzw, r2.xyxx, t2.xyzw, s3
  15: mul r5.xyzw, r0.yyyy, r5.xyzw
  16: mul r5.w, r5.w, cb0[12].y
  17: add r4.xyzw, r4.xyzw, r5.xyzw
  18: sample r5.xyzw, r2.zwzz, t3.xyzw, s4
  19: mul r5.xyzw, r0.zzzz, r5.xyzw
  20: mul r5.w, r5.w, cb0[12].z
  21: add r4.xyzw, r4.xyzw, r5.xyzw
  22: sample r5.xyzw, r3.xyxx, t4.xyzw, s5
  23: mul r5.xyzw, r0.wwww, r5.xyzw
  24: mul r5.w, r5.w, cb0[12].w
  25: add r4.xyzw, r4.xyzw, r5.xyzw
  26: sample r5.xyzw, r1.yzyy, t5.xyzw, s6
  27: mul r5.x, r5.w, r5.x
  28: mad r1.yz, r5.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  29: mul r5.xy, r1.yzyy, cb0[10].xxxx
  30: dp2 r1.y, r5.xyxx, r5.xyxx
  31: min r1.y, r1.y, l(1.000000)
  32: add r1.y, -r1.y, l(1.000000)
  33: sqrt r5.z, r1.y
  34: sample r6.xyzw, r2.xyxx, t6.xyzw, s7
  35: mul r6.x, r6.w, r6.x
  36: mad r1.yz, r6.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  37: mul r6.xy, r1.yzyy, cb0[10].yyyy
  38: dp2 r1.y, r6.xyxx, r6.xyxx
  39: min r1.y, r1.y, l(1.000000)
  40: add r1.y, -r1.y, l(1.000000)
  41: sqrt r6.z, r1.y
  42: mul r1.yzw, r0.yyyy, r6.xxyz
  43: mad r1.yzw, r5.xxyz, r0.xxxx, r1.yyzw
  44: sample r2.xyzw, r2.zwzz, t7.xyzw, s8
  45: mul r2.x, r2.w, r2.x
  46: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  47: mul r2.xy, r2.xyxx, cb0[10].zzzz
  48: dp2 r2.w, r2.xyxx, r2.xyxx
  49: min r2.w, r2.w, l(1.000000)
  50: add r2.w, -r2.w, l(1.000000)
  51: sqrt r2.z, r2.w
  52: mad r1.yzw, r2.xxyz, r0.zzzz, r1.yyzw
  53: sample r2.xyzw, r3.xyxx, t8.xyzw, s9
  54: mul r2.x, r2.w, r2.x
  55: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  56: mul r2.xy, r2.xyxx, cb0[10].wwww
  57: dp2 r2.w, r2.xyxx, r2.xyxx
  58: min r2.w, r2.w, l(1.000000)
  59: add r2.w, -r2.w, l(1.000000)
  60: sqrt r2.z, r2.w
  61: mad r2.xyz, r2.xyzx, r0.wwww, r1.yzwy
  62: dp4 r0.x, r0.xyzw, cb0[11].xyzw
  63: add r2.w, r2.z, l(0.000010)
  64: dp3 r3.x, v1.xyzx, r2.xywx
  65: dp3 r3.y, v2.xyzx, r2.xywx
  66: dp3 r3.z, v3.xyzx, r2.xywx
  67: dp3 r0.y, r3.xyzx, r3.xyzx
  68: rsq r0.y, r0.y
  69: mul r2.xyz, r0.yyyy, r3.xyzx
  70: eq r0.y, cb2[0].x, l(1.000000)
  71: if_nz r0.y
  72:   eq r0.y, cb2[0].y, l(1.000000)
  73:   mul r1.yzw, v2.wwww, cb2[2].xxyz
  74:   mad r1.yzw, cb2[1].xxyz, v1.wwww, r1.yyzw
  75:   mad r1.yzw, cb2[3].xxyz, v3.wwww, r1.yyzw
  76:   add r1.yzw, r1.yyzw, cb2[4].xxyz
  77:   mov r3.y, v1.w
  78:   mov r3.z, v2.w
  79:   mov r3.w, v3.w
  80:   movc r0.yzw, r0.yyyy, r1.yyzw, r3.yyzw
  81:   add r0.yzw, r0.yyzw, -cb2[6].xxyz
  82:   mul r3.yzw, r0.yyzw, cb2[5].xxyz
  83:   mul r0.y, r3.y, l(0.250000)
  84:   mul r0.z, cb2[0].z, l(0.500000)
  85:   mad r0.w, -cb2[0].z, l(0.500000), l(0.250000)
  86:   max r0.y, r0.z, r0.y
  87:   min r3.x, r0.w, r0.y
  88:   sample r5.xyzw, r3.xzwx, t9.xyzw, s0
  89:   add r0.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  90:   sample r6.xyzw, r0.yzwy, t9.xyzw, s0
  91:   add r0.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  92:   sample r3.xyzw, r0.yzwy, t9.xyzw, s0
  93:   mov r2.w, l(1.000000)
  94:   dp4 r5.x, r5.xyzw, r2.xyzw
  95:   dp4 r5.y, r6.xyzw, r2.xyzw
  96:   dp4 r5.z, r3.xyzw, r2.xyzw
  97: else 
  98:   mov r2.w, l(1.000000)
  99:   dp4 r5.x, cb1[39].xyzw, r2.xyzw
 100:   dp4 r5.y, cb1[40].xyzw, r2.xyzw
 101:   dp4 r5.z, cb1[41].xyzw, r2.xyzw
 102: endif 
 103: add r0.yzw, r5.xxyz, v6.xxyz
 104: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
 105: log r0.yzw, r0.yyzw
 106: mul r0.yzw, r0.yyzw, l(0.000000, 0.416667, 0.416667, 0.416667)
 107: exp r0.yzw, r0.yyzw
 108: mad r0.yzw, r0.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
 109: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
 110: add r1.yzw, r4.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
 111: mad r3.xyz, r0.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
 112: mad r0.x, -r0.x, l(0.779084), l(0.779084)
 113: mul r1.yzw, r0.xxxx, r4.xxyz
 114: mul r0.xyz, r0.yzwy, r1.yzwy
 115: mad r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
 116: exp r0.xyz, -r0.xyzx
 117: mul o0.xyz, r1.xxxx, r1.yzwy
 118: mov r3.w, r4.w
 119: mul o1.xyzw, r1.xxxx, r3.xyzw
 120: mul o2.xyz, r1.xxxx, r2.xyzx
 121: mov r0.w, l(1.000000)
 122: mul o3.xyzw, r1.xxxx, r0.xyzw
 123: mov o0.w, l(1.000000)
 124: mov o2.w, l(1.000000)
 125: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: UNITY_HDR_ON 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityPerDraw" (176 bytes) on slot 0 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 1 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb0[1].xyzw
   1: mad r0.xyzw, cb0[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb0[3].xyzw
   4: mad r0.xyz, cb0[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb1[18].xyzw
   6: mad r2.xyzw, cb1[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb1[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb1[20].xyzw, r1.wwww, r2.xyzw
   9: mov o1.w, r0.x
  10: mul r0.xw, v2.zzzx, l(0.000000, 0.000000, 0.000000, 1.000000)
  11: mad r0.xw, v2.yyyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xxxw
  12: mul r1.xyz, r0.wwww, cb0[1].yzxy
  13: mad r1.xyz, cb0[0].yzxy, r0.xxxx, r1.xyzx
  14: dp3 r0.x, r1.xyzx, r1.xyzx
  15: rsq r0.x, r0.x
  16: mul r1.xyz, r0.xxxx, r1.xyzx
  17: mul r2.xyz, v2.yyyy, cb0[1].zxyz
  18: mad r2.xyz, cb0[0].zxyz, v2.xxxx, r2.xyzx
  19: mad r2.xyz, cb0[2].zxyz, v2.zzzz, r2.xyzx
  20: dp3 r0.x, r2.xyzx, r2.xyzx
  21: rsq r0.x, r0.x
  22: mul r2.xyz, r0.xxxx, r2.xyzx
  23: mul r3.xyz, r1.xyzx, r2.xyzx
  24: mad r3.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
  25: mul r3.xyz, r3.xyzx, -cb0[9].wwww
  26: mov o1.y, r3.x
  27: mov o1.x, r1.z
  28: mov o1.z, r2.y
  29: mov o2.x, r1.x
  30: mov o3.x, r1.y
  31: mov o2.z, r2.z
  32: mov o3.z, r2.x
  33: mov o2.w, r0.y
  34: mov o3.w, r0.z
  35: mov o2.y, r3.y
  36: mov o3.y, r3.z
  37: mov o4.xy, v3.xyxx
  38: mov o4.zw, l(0,0,0,0)
  39: mov o5.xyzw, l(0,0,0,0)
  40: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 70 math, 7 temp registers, 9 textures
Set 2D Texture "_Control" to slot 0
Set 2D Texture "_Splat0" to slot 1
Set 2D Texture "_Splat1" to slot 2
Set 2D Texture "_Splat2" to slot 3
Set 2D Texture "_Splat3" to slot 4
Set 2D Texture "_Normal0" to slot 5
Set 2D Texture "_Normal1" to slot 6
Set 2D Texture "_Normal2" to slot 7
Set 2D Texture "_Normal3" to slot 8

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 160
  Float _NormalScale1 at 164
  Float _NormalScale2 at 168
  Float _NormalScale3 at 172
  Float _Metallic0 at 176
  Float _Metallic1 at 180
  Float _Metallic2 at 184
  Float _Metallic3 at 188
  Float _Smoothness0 at 192
  Float _Smoothness1 at 196
  Float _Smoothness2 at 200
  Float _Smoothness3 at 204
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 5   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: mad r0.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
   1: sample r1.xyzw, r0.xyxx, t1.xyzw, s1
   2: sample r0.xyzw, r0.xyxx, t5.xyzw, s5
   3: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   4: mad r2.xy, v4.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   5: mul r2.xy, r2.xyxx, cb0[5].xyxx
   6: sample r2.xyzw, r2.xyxx, t0.xyzw, s0
   7: dp4 r0.z, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   8: add r3.x, r0.z, l(0.001000)
   9: div r2.xyzw, r2.xyzw, r3.xxxx
  10: mul r1.xyzw, r1.xyzw, r2.xxxx
  11: mul r1.w, r1.w, cb0[12].x
  12: mad r3.xy, v4.xyxx, cb0[7].xyxx, cb0[7].zwzz
  13: sample r4.xyzw, r3.xyxx, t2.xyzw, s2
  14: sample r3.xyzw, r3.xyxx, t6.xyzw, s6
  15: mul r4.xyzw, r2.yyyy, r4.xyzw
  16: mul r4.w, r4.w, cb0[12].y
  17: add r1.xyzw, r1.xyzw, r4.xyzw
  18: mad r4.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  19: sample r5.xyzw, r4.xyxx, t3.xyzw, s3
  20: sample r4.xyzw, r4.xyxx, t7.xyzw, s7
  21: mul r5.xyzw, r2.zzzz, r5.xyzw
  22: mul r5.w, r5.w, cb0[12].z
  23: add r1.xyzw, r1.xyzw, r5.xyzw
  24: mad r5.xy, v4.xyxx, cb0[9].xyxx, cb0[9].zwzz
  25: sample r6.xyzw, r5.xyxx, t4.xyzw, s4
  26: sample r5.xyzw, r5.xyxx, t8.xyzw, s8
  27: mul r6.xyzw, r2.wwww, r6.xyzw
  28: mul r6.w, r6.w, cb0[12].w
  29: add r1.xyzw, r1.xyzw, r6.xyzw
  30: dp4 r3.z, r2.xyzw, cb0[11].xyzw
  31: mad r4.z, -r3.z, l(0.779084), l(0.779084)
  32: mul r6.xyz, r1.xyzx, r4.zzzz
  33: mul o0.xyz, r0.zzzz, r6.xyzx
  34: mov o0.w, l(1.000000)
  35: add r6.xyz, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  36: mad r1.xyz, r3.zzzz, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  37: mul o1.xyzw, r0.zzzz, r1.xyzw
  38: mul r0.x, r0.w, r0.x
  39: mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  40: mul r1.xy, r0.xyxx, cb0[10].xxxx
  41: dp2 r0.x, r1.xyxx, r1.xyxx
  42: min r0.x, r0.x, l(1.000000)
  43: add r0.x, -r0.x, l(1.000000)
  44: sqrt r1.z, r0.x
  45: mul r3.x, r3.w, r3.x
  46: mad r0.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  47: mul r3.xy, r0.xyxx, cb0[10].yyyy
  48: dp2 r0.x, r3.xyxx, r3.xyxx
  49: min r0.x, r0.x, l(1.000000)
  50: add r0.x, -r0.x, l(1.000000)
  51: sqrt r3.z, r0.x
  52: mul r0.xyw, r2.yyyy, r3.xyxz
  53: mad r0.xyw, r1.xyxz, r2.xxxx, r0.xyxw
  54: mul r4.x, r4.w, r4.x
  55: mad r1.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  56: mul r1.xy, r1.xyxx, cb0[10].zzzz
  57: dp2 r1.w, r1.xyxx, r1.xyxx
  58: min r1.w, r1.w, l(1.000000)
  59: add r1.w, -r1.w, l(1.000000)
  60: sqrt r1.z, r1.w
  61: mad r0.xyw, r1.xyxz, r2.zzzz, r0.xyxw
  62: mul r5.x, r5.w, r5.x
  63: mad r1.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  64: mul r1.xy, r1.xyxx, cb0[10].wwww
  65: dp2 r1.w, r1.xyxx, r1.xyxx
  66: min r1.w, r1.w, l(1.000000)
  67: add r1.w, -r1.w, l(1.000000)
  68: sqrt r1.z, r1.w
  69: mad r1.xyz, r1.xyzx, r2.wwww, r0.xywx
  70: add r1.w, r1.z, l(0.000010)
  71: dp3 r2.x, v1.xyzx, r1.xywx
  72: dp3 r2.y, v2.xyzx, r1.xywx
  73: dp3 r2.z, v3.xyzx, r1.xywx
  74: dp3 r0.x, r2.xyzx, r2.xyzx
  75: rsq r0.x, r0.x
  76: mul r0.xyw, r0.xxxx, r2.xyxz
  77: mad r0.xyw, r0.xyxw, l(0.500000, 0.500000, 0.000000, 0.500000), l(0.500000, 0.500000, 0.000000, 0.500000)
  78: mul o2.xyz, r0.zzzz, r0.xywx
  79: mul o3.xyzw, r0.zzzz, l(0.000000, 0.000000, 0.000000, 1.000000)
  80: mov o2.w, l(1.000000)
  81: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH UNITY_HDR_ON 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[46], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   9: mov o1.w, r0.x
  10: mul r0.xw, v2.zzzx, l(0.000000, 0.000000, 0.000000, 1.000000)
  11: mad r0.xw, v2.yyyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r0.xxxw
  12: mul r1.xyz, r0.wwww, cb1[1].yzxy
  13: mad r1.xyz, cb1[0].yzxy, r0.xxxx, r1.xyzx
  14: dp3 r0.x, r1.xyzx, r1.xyzx
  15: rsq r0.x, r0.x
  16: mul r1.xyz, r0.xxxx, r1.xyzx
  17: mov o1.x, r1.z
  18: mul r2.xyzw, v2.yyyy, cb1[1].xyzz
  19: mad r2.xyzw, cb1[0].xyzz, v2.xxxx, r2.xyzw
  20: mad r2.xyzw, cb1[2].xyzz, v2.zzzz, r2.xyzw
  21: dp3 r0.x, r2.xywx, r2.xywx
  22: rsq r0.x, r0.x
  23: mul r2.xyzw, r0.xxxx, r2.xyzw
  24: mul r3.xyz, r1.xyzx, r2.wxyw
  25: mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
  26: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  27: mov o1.y, r3.x
  28: mov o1.z, r2.x
  29: mov o2.x, r1.x
  30: mov o3.x, r1.y
  31: mov o2.w, r0.y
  32: mov o3.w, r0.z
  33: mov o2.y, r3.y
  34: mov o3.y, r3.z
  35: mov o2.z, r2.y
  36: mov o3.z, r2.w
  37: mov o4.xy, v3.xyxx
  38: mov o4.zw, l(0,0,0,0)
  39: mov o5.xyzw, l(0,0,0,0)
  40: mul r0.x, r2.y, r2.y
  41: mad r0.x, r2.x, r2.x, -r0.x
  42: mul r1.xyzw, r2.ywzx, r2.xyzw
  43: dp4 r2.x, cb0[42].xyzw, r1.xyzw
  44: dp4 r2.y, cb0[43].xyzw, r1.xyzw
  45: dp4 r2.z, cb0[44].xyzw, r1.xyzw
  46: mad o6.xyz, cb0[45].xyzx, r0.xxxx, r2.xyzx
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 99 math, 7 temp registers, 12 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 1
Set 2D Texture "_Splat0" to slot 1 sampler slot 2
Set 2D Texture "_Splat1" to slot 2 sampler slot 3
Set 2D Texture "_Splat2" to slot 3 sampler slot 4
Set 2D Texture "_Splat3" to slot 4 sampler slot 5
Set 2D Texture "_Normal0" to slot 5 sampler slot 6
Set 2D Texture "_Normal1" to slot 6 sampler slot 7
Set 2D Texture "_Normal2" to slot 7 sampler slot 8
Set 2D Texture "_Normal3" to slot 8 sampler slot 9
Set 3D Texture "unity_ProbeVolumeSH" to slot 9 sampler slot 0

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 160
  Float _NormalScale1 at 164
  Float _NormalScale2 at 168
  Float _NormalScale3 at 172
  Float _Metallic0 at 176
  Float _Metallic1 at 180
  Float _Metallic2 at 184
  Float _Metallic3 at 188
  Float _Smoothness0 at 192
  Float _Smoothness1 at 196
  Float _Smoothness2 at 200
  Float _Smoothness3 at 204
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 5   xyzw        5     NONE   float       
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[13], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture3d (float,float,float,float) t9
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: add r0.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   1: mad r0.xy, v4.xyxx, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   2: mul r0.xy, r0.xyxx, cb0[5].xyxx
   3: sample r0.xyzw, r0.xyxx, t0.xyzw, s1
   4: dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   5: add r1.y, r1.x, l(0.001000)
   6: div r0.xyzw, r0.xyzw, r1.yyyy
   7: mad r1.yz, v4.xxyx, cb0[6].xxyx, cb0[6].zzwz
   8: mad r2.xy, v4.xyxx, cb0[7].xyxx, cb0[7].zwzz
   9: mad r2.zw, v4.xxxy, cb0[8].xxxy, cb0[8].zzzw
  10: mad r3.xy, v4.xyxx, cb0[9].xyxx, cb0[9].zwzz
  11: sample r4.xyzw, r1.yzyy, t1.xyzw, s2
  12: mul r4.xyzw, r0.xxxx, r4.xyzw
  13: mul r4.w, r4.w, cb0[12].x
  14: sample r5.xyzw, r2.xyxx, t2.xyzw, s3
  15: mul r5.xyzw, r0.yyyy, r5.xyzw
  16: mul r5.w, r5.w, cb0[12].y
  17: add r4.xyzw, r4.xyzw, r5.xyzw
  18: sample r5.xyzw, r2.zwzz, t3.xyzw, s4
  19: mul r5.xyzw, r0.zzzz, r5.xyzw
  20: mul r5.w, r5.w, cb0[12].z
  21: add r4.xyzw, r4.xyzw, r5.xyzw
  22: sample r5.xyzw, r3.xyxx, t4.xyzw, s5
  23: mul r5.xyzw, r0.wwww, r5.xyzw
  24: mul r5.w, r5.w, cb0[12].w
  25: add r4.xyzw, r4.xyzw, r5.xyzw
  26: sample r5.xyzw, r1.yzyy, t5.xyzw, s6
  27: mul r5.x, r5.w, r5.x
  28: mad r1.yz, r5.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  29: mul r5.xy, r1.yzyy, cb0[10].xxxx
  30: dp2 r1.y, r5.xyxx, r5.xyxx
  31: min r1.y, r1.y, l(1.000000)
  32: add r1.y, -r1.y, l(1.000000)
  33: sqrt r5.z, r1.y
  34: sample r6.xyzw, r2.xyxx, t6.xyzw, s7
  35: mul r6.x, r6.w, r6.x
  36: mad r1.yz, r6.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  37: mul r6.xy, r1.yzyy, cb0[10].yyyy
  38: dp2 r1.y, r6.xyxx, r6.xyxx
  39: min r1.y, r1.y, l(1.000000)
  40: add r1.y, -r1.y, l(1.000000)
  41: sqrt r6.z, r1.y
  42: mul r1.yzw, r0.yyyy, r6.xxyz
  43: mad r1.yzw, r5.xxyz, r0.xxxx, r1.yyzw
  44: sample r2.xyzw, r2.zwzz, t7.xyzw, s8
  45: mul r2.x, r2.w, r2.x
  46: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  47: mul r2.xy, r2.xyxx, cb0[10].zzzz
  48: dp2 r2.w, r2.xyxx, r2.xyxx
  49: min r2.w, r2.w, l(1.000000)
  50: add r2.w, -r2.w, l(1.000000)
  51: sqrt r2.z, r2.w
  52: mad r1.yzw, r2.xxyz, r0.zzzz, r1.yyzw
  53: sample r2.xyzw, r3.xyxx, t8.xyzw, s9
  54: mul r2.x, r2.w, r2.x
  55: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  56: mul r2.xy, r2.xyxx, cb0[10].wwww
  57: dp2 r2.w, r2.xyxx, r2.xyxx
  58: min r2.w, r2.w, l(1.000000)
  59: add r2.w, -r2.w, l(1.000000)
  60: sqrt r2.z, r2.w
  61: mad r2.xyz, r2.xyzx, r0.wwww, r1.yzwy
  62: dp4 r0.x, r0.xyzw, cb0[11].xyzw
  63: add r2.w, r2.z, l(0.000010)
  64: dp3 r3.x, v1.xyzx, r2.xywx
  65: dp3 r3.y, v2.xyzx, r2.xywx
  66: dp3 r3.z, v3.xyzx, r2.xywx
  67: dp3 r0.y, r3.xyzx, r3.xyzx
  68: rsq r0.y, r0.y
  69: mul r2.xyz, r0.yyyy, r3.xyzx
  70: eq r0.y, cb2[0].x, l(1.000000)
  71: if_nz r0.y
  72:   eq r0.y, cb2[0].y, l(1.000000)
  73:   mul r1.yzw, v2.wwww, cb2[2].xxyz
  74:   mad r1.yzw, cb2[1].xxyz, v1.wwww, r1.yyzw
  75:   mad r1.yzw, cb2[3].xxyz, v3.wwww, r1.yyzw
  76:   add r1.yzw, r1.yyzw, cb2[4].xxyz
  77:   mov r3.y, v1.w
  78:   mov r3.z, v2.w
  79:   mov r3.w, v3.w
  80:   movc r0.yzw, r0.yyyy, r1.yyzw, r3.yyzw
  81:   add r0.yzw, r0.yyzw, -cb2[6].xxyz
  82:   mul r3.yzw, r0.yyzw, cb2[5].xxyz
  83:   mul r0.y, r3.y, l(0.250000)
  84:   mul r0.z, cb2[0].z, l(0.500000)
  85:   mad r0.w, -cb2[0].z, l(0.500000), l(0.250000)
  86:   max r0.y, r0.z, r0.y
  87:   min r3.x, r0.w, r0.y
  88:   sample r5.xyzw, r3.xzwx, t9.xyzw, s0
  89:   add r0.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  90:   sample r6.xyzw, r0.yzwy, t9.xyzw, s0
  91:   add r0.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  92:   sample r3.xyzw, r0.yzwy, t9.xyzw, s0
  93:   mov r2.w, l(1.000000)
  94:   dp4 r5.x, r5.xyzw, r2.xyzw
  95:   dp4 r5.y, r6.xyzw, r2.xyzw
  96:   dp4 r5.z, r3.xyzw, r2.xyzw
  97: else 
  98:   mov r2.w, l(1.000000)
  99:   dp4 r5.x, cb1[39].xyzw, r2.xyzw
 100:   dp4 r5.y, cb1[40].xyzw, r2.xyzw
 101:   dp4 r5.z, cb1[41].xyzw, r2.xyzw
 102: endif 
 103: add r0.yzw, r5.xxyz, v6.xxyz
 104: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
 105: log r0.yzw, r0.yyzw
 106: mul r0.yzw, r0.yyzw, l(0.000000, 0.416667, 0.416667, 0.416667)
 107: exp r0.yzw, r0.yyzw
 108: mad r0.yzw, r0.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
 109: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
 110: add r1.yzw, r4.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
 111: mad r3.xyz, r0.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
 112: mad r0.x, -r0.x, l(0.779084), l(0.779084)
 113: mul r1.yzw, r0.xxxx, r4.xxyz
 114: mul r0.xyz, r0.yzwy, r1.yzwy
 115: mad r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
 116: mul o0.xyz, r1.xxxx, r1.yzwy
 117: mov r3.w, r4.w
 118: mul o1.xyzw, r1.xxxx, r3.xyzw
 119: mul o2.xyz, r1.xxxx, r2.xyzx
 120: mov r0.w, l(1.000000)
 121: mul o3.xyzw, r1.xxxx, r0.xyzw
 122: mov o0.w, l(1.000000)
 123: mov o2.w, l(1.000000)
 124: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 27 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// SV_InstanceID            0   x           6     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: mov o1.w, r0.x
  21: dp3 r0.x, cb1[1].xyzx, cb1[1].xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, cb1[1].zxyz
  24: dp3 r0.x, cb1[0].xyzx, cb1[0].xyzx
  25: rsq r0.x, r0.x
  26: mul r2.xyz, r0.xxxx, cb1[0].yzxy
  27: mul r3.xyz, r1.xyzx, r2.xyzx
  28: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  29: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  30: mov o1.y, r3.x
  31: mov o1.x, r2.z
  32: mov o1.z, r1.y
  33: mov o2.w, r0.y
  34: mov o3.w, r0.z
  35: mov o2.x, r2.x
  36: mov o3.x, r2.y
  37: mov o2.z, r1.z
  38: mov o3.z, r1.x
  39: mov o2.y, r3.y
  40: mov o3.y, r3.z
  41: mov o5.xyzw, l(0,0,0,0)
  42: mov o6.x, v8.x
  43: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON LIGHTPROBE_SH 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 4 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 5 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
// SV_InstanceID            0   x           7     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb4[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb5[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb5[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  10: add r0.yz, v0.xxyx, cb5[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb5[r0.x + 0].zzzz
  13: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb2[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb2[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  17: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  20: mov o1.w, r0.x
  21: dp3 r0.x, cb2[0].xyzx, cb2[0].xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, cb2[0].yzxy
  24: mov o1.x, r1.z
  25: dp3 r0.x, cb2[1].xyzx, cb2[1].xyzx
  26: rsq r0.x, r0.x
  27: mul r2.xyzw, r0.xxxx, cb2[1].xyzz
  28: mul r3.xyz, r1.xyzx, r2.wxyw
  29: mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
  30: mul r3.xyz, r3.xyzx, -cb2[9].wwww
  31: mov o1.y, r3.x
  32: mov o1.z, r2.x
  33: mov o2.w, r0.y
  34: mov o3.w, r0.z
  35: mov o2.x, r1.x
  36: mov o3.x, r1.y
  37: mov o2.y, r3.y
  38: mov o3.y, r3.z
  39: mov o2.z, r2.y
  40: mov o3.z, r2.w
  41: mov o5.xyzw, l(0,0,0,0)
  42: mul r0.x, r2.y, r2.y
  43: mad r0.x, r2.x, r2.x, -r0.x
  44: mul r1.xyzw, r2.ywzx, r2.xyzw
  45: dp4 r2.x, cb1[42].xyzw, r1.xyzw
  46: dp4 r2.y, cb1[43].xyzw, r1.xyzw
  47: dp4 r2.z, cb1[44].xyzw, r1.xyzw
  48: mad o6.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
  49: mov o7.x, v8.x
  50: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON UNITY_HDR_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 27 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// SV_InstanceID            0   x           6     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: mov o1.w, r0.x
  21: dp3 r0.x, cb1[1].xyzx, cb1[1].xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, cb1[1].zxyz
  24: dp3 r0.x, cb1[0].xyzx, cb1[0].xyzx
  25: rsq r0.x, r0.x
  26: mul r2.xyz, r0.xxxx, cb1[0].yzxy
  27: mul r3.xyz, r1.xyzx, r2.xyzx
  28: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  29: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  30: mov o1.y, r3.x
  31: mov o1.x, r2.z
  32: mov o1.z, r1.y
  33: mov o2.w, r0.y
  34: mov o3.w, r0.z
  35: mov o2.x, r2.x
  36: mov o3.x, r2.y
  37: mov o2.z, r1.z
  38: mov o3.z, r1.x
  39: mov o2.y, r3.y
  40: mov o3.y, r3.z
  41: mov o5.xyzw, l(0,0,0,0)
  42: mov o6.x, v8.x
  43: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON LIGHTPROBE_SH UNITY_HDR_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 4 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 5 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
// SV_InstanceID            0   x           7     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb4[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb5[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb5[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  10: add r0.yz, v0.xxyx, cb5[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb5[r0.x + 0].zzzz
  13: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb2[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb2[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  17: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  20: mov o1.w, r0.x
  21: dp3 r0.x, cb2[0].xyzx, cb2[0].xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, cb2[0].yzxy
  24: mov o1.x, r1.z
  25: dp3 r0.x, cb2[1].xyzx, cb2[1].xyzx
  26: rsq r0.x, r0.x
  27: mul r2.xyzw, r0.xxxx, cb2[1].xyzz
  28: mul r3.xyz, r1.xyzx, r2.wxyw
  29: mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
  30: mul r3.xyz, r3.xyzx, -cb2[9].wwww
  31: mov o1.y, r3.x
  32: mov o1.z, r2.x
  33: mov o2.w, r0.y
  34: mov o3.w, r0.z
  35: mov o2.x, r1.x
  36: mov o3.x, r1.y
  37: mov o2.y, r3.y
  38: mov o3.y, r3.z
  39: mov o2.z, r2.y
  40: mov o3.z, r2.w
  41: mov o5.xyzw, l(0,0,0,0)
  42: mul r0.x, r2.y, r2.y
  43: mad r0.x, r2.x, r2.x, -r0.x
  44: mul r1.xyzw, r2.ywzx, r2.xyzw
  45: dp4 r2.x, cb1[42].xyzw, r1.xyzw
  46: dp4 r2.y, cb1[43].xyzw, r1.xyzw
  47: dp4 r2.z, cb1[44].xyzw, r1.xyzw
  48: mad o6.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
  49: mov o7.x, v8.x
  50: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 27 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// SV_InstanceID            0   x           6     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: mov o1.w, r0.x
  21: dp3 r0.x, cb1[1].xyzx, cb1[1].xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, cb1[1].zxyz
  24: dp3 r0.x, cb1[0].xyzx, cb1[0].xyzx
  25: rsq r0.x, r0.x
  26: mul r2.xyz, r0.xxxx, cb1[0].yzxy
  27: mul r3.xyz, r1.xyzx, r2.xyzx
  28: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  29: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  30: mov o1.y, r3.x
  31: mov o1.x, r2.z
  32: mov o1.z, r1.y
  33: mov o2.w, r0.y
  34: mov o3.w, r0.z
  35: mov o2.x, r2.x
  36: mov o3.x, r2.y
  37: mov o2.z, r1.z
  38: mov o3.z, r1.x
  39: mov o2.y, r3.y
  40: mov o3.y, r3.z
  41: mov o5.xyzw, l(0,0,0,0)
  42: mov o6.x, v8.x
  43: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON LIGHTPROBE_SH 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 4 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 5 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
// SV_InstanceID            0   x           7     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb4[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb5[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb5[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  10: add r0.yz, v0.xxyx, cb5[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb5[r0.x + 0].zzzz
  13: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb2[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb2[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  17: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  20: mov o1.w, r0.x
  21: dp3 r0.x, cb2[0].xyzx, cb2[0].xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, cb2[0].yzxy
  24: mov o1.x, r1.z
  25: dp3 r0.x, cb2[1].xyzx, cb2[1].xyzx
  26: rsq r0.x, r0.x
  27: mul r2.xyzw, r0.xxxx, cb2[1].xyzz
  28: mul r3.xyz, r1.xyzx, r2.wxyw
  29: mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
  30: mul r3.xyz, r3.xyzx, -cb2[9].wwww
  31: mov o1.y, r3.x
  32: mov o1.z, r2.x
  33: mov o2.w, r0.y
  34: mov o3.w, r0.z
  35: mov o2.x, r1.x
  36: mov o3.x, r1.y
  37: mov o2.y, r3.y
  38: mov o3.y, r3.z
  39: mov o2.z, r2.y
  40: mov o3.z, r2.w
  41: mov o5.xyzw, l(0,0,0,0)
  42: mul r0.x, r2.y, r2.y
  43: mad r0.x, r2.x, r2.x, -r0.x
  44: mul r1.xyzw, r2.ywzx, r2.xyzw
  45: dp4 r2.x, cb1[42].xyzw, r1.xyzw
  46: dp4 r2.y, cb1[43].xyzw, r1.xyzw
  47: dp4 r2.z, cb1[44].xyzw, r1.xyzw
  48: mad o6.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
  49: mov o7.x, v8.x
  50: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON UNITY_HDR_ON 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 27 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 3 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 4 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// SV_InstanceID            0   x           6     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb3[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb4[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb4[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb1[1].xyzw
  10: add r0.yz, v0.xxyx, cb4[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb4[r0.x + 0].zzzz
  13: mad r1.xyzw, cb1[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb1[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb1[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  17: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  20: mov o1.w, r0.x
  21: dp3 r0.x, cb1[1].xyzx, cb1[1].xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, cb1[1].zxyz
  24: dp3 r0.x, cb1[0].xyzx, cb1[0].xyzx
  25: rsq r0.x, r0.x
  26: mul r2.xyz, r0.xxxx, cb1[0].yzxy
  27: mul r3.xyz, r1.xyzx, r2.xyzx
  28: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  29: mul r3.xyz, r3.xyzx, -cb1[9].wwww
  30: mov o1.y, r3.x
  31: mov o1.x, r2.z
  32: mov o1.z, r1.y
  33: mov o2.w, r0.y
  34: mov o3.w, r0.z
  35: mov o2.x, r2.x
  36: mov o3.x, r2.y
  37: mov o2.z, r1.z
  38: mov o3.z, r1.x
  39: mov o2.y, r3.y
  40: mov o3.y, r3.z
  41: mov o5.xyzw, l(0,0,0,0)
  42: mov o6.x, v8.x
  43: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON LIGHTPROBE_SH UNITY_HDR_ON 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 4 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 5 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
// SV_InstanceID            0   x           7     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.x
      dcl_temps 4
   0: iadd r0.x, v8.x, cb4[0].x
   1: mul r1.xyzw, cb0[10].xyzw, cb5[r0.x + 0].zzzz
   2: mul r2.xyzw, r1.xyzw, cb5[r0.x + 0].xyxy
   3: mad r0.yz, cb0[10].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), r2.xxyx
   4: mad o4.xy, v0.xyxx, r1.zwzz, r2.zwzz
   5: mad r0.yz, v0.xxyx, r1.xxyx, r0.yyzy
   6: sample_l r1.xyzw, r0.yzyy, t0.xyzw, s0, l(0.000000)
   7: mov o4.zw, r0.yyyz
   8: mul r0.y, r1.x, cb0[11].y
   9: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  10: add r0.yz, v0.xxyx, cb5[r0.x + 0].xxyx
  11: mul r0.yz, r0.yyzy, cb0[11].xxzx
  12: mul r0.xy, r0.yzyy, cb5[r0.x + 0].zzzz
  13: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  14: mad r0.xyzw, cb2[2].xyzw, r0.yyyy, r1.xyzw
  15: add r0.xyzw, r0.xyzw, cb2[3].xyzw
  16: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  17: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  18: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  19: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  20: mov o1.w, r0.x
  21: dp3 r0.x, cb2[0].xyzx, cb2[0].xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, cb2[0].yzxy
  24: mov o1.x, r1.z
  25: dp3 r0.x, cb2[1].xyzx, cb2[1].xyzx
  26: rsq r0.x, r0.x
  27: mul r2.xyzw, r0.xxxx, cb2[1].xyzz
  28: mul r3.xyz, r1.xyzx, r2.wxyw
  29: mad r3.xyz, r2.ywxy, r1.yzxy, -r3.xyzx
  30: mul r3.xyz, r3.xyzx, -cb2[9].wwww
  31: mov o1.y, r3.x
  32: mov o1.z, r2.x
  33: mov o2.w, r0.y
  34: mov o3.w, r0.z
  35: mov o2.x, r1.x
  36: mov o3.x, r1.y
  37: mov o2.y, r3.y
  38: mov o3.y, r3.z
  39: mov o2.z, r2.y
  40: mov o3.z, r2.w
  41: mov o5.xyzw, l(0,0,0,0)
  42: mul r0.x, r2.y, r2.y
  43: mad r0.x, r2.x, r2.x, -r0.x
  44: mul r1.xyzw, r2.ywzx, r2.xyzw
  45: dp4 r2.x, cb1[42].xyzw, r1.xyzw
  46: dp4 r2.y, cb1[43].xyzw, r1.xyzw
  47: dp4 r2.z, cb1[44].xyzw, r1.xyzw
  48: mad o6.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
  49: mov o7.x, v8.x
  50: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 31 math, 4 temp registers, 6 textures
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 5
Set 2D Texture "_Control" to slot 1 sampler slot 0
Set 2D Texture "_Splat0" to slot 2 sampler slot 1
Set 2D Texture "_Splat1" to slot 3 sampler slot 2
Set 2D Texture "_Splat2" to slot 4 sampler slot 3
Set 2D Texture "_Splat3" to slot 5 sampler slot 4

Constant Buffer "$Globals" (208 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 160
  Float _Metallic1 at 164
  Float _Metallic2 at 168
  Float _Metallic3 at 172
  Float _Smoothness0 at 176
  Float _Smoothness1 at 180
  Float _Smoothness2 at 184
  Float _Smoothness3 at 188
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 4
   0: sample r0.xyzw, v3.xyxx, t0.xyzw, s5
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: mad r0.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
   4: sample r0.xyzw, r0.xyxx, t2.xyzw, s1
   5: add r1.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   6: mad r1.xy, v3.xyxx, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   7: mul r1.xy, r1.xyxx, cb0[5].xyxx
   8: sample r1.xyzw, r1.xyxx, t1.xyzw, s0
   9: dp4 r2.x, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  10: add r2.y, r2.x, l(0.001000)
  11: div r1.xyzw, r1.xyzw, r2.yyyy
  12: mul r0.xyzw, r0.xyzw, r1.xxxx
  13: mul r0.w, r0.w, cb0[11].x
  14: mad r2.yz, v3.xxyx, cb0[7].xxyx, cb0[7].zzwz
  15: sample r3.xyzw, r2.yzyy, t3.xyzw, s2
  16: mul r3.xyzw, r1.yyyy, r3.xyzw
  17: mul r3.w, r3.w, cb0[11].y
  18: add r0.xyzw, r0.xyzw, r3.xyzw
  19: mad r2.yz, v3.xxyx, cb0[8].xxyx, cb0[8].zzwz
  20: sample r3.xyzw, r2.yzyy, t4.xyzw, s3
  21: mul r3.xyzw, r1.zzzz, r3.xyzw
  22: mul r3.w, r3.w, cb0[11].z
  23: add r0.xyzw, r0.xyzw, r3.xyzw
  24: mad r2.yz, v3.xxyx, cb0[9].xxyx, cb0[9].zzwz
  25: sample r3.xyzw, r2.yzyy, t5.xyzw, s4
  26: mul r3.xyzw, r1.wwww, r3.xyzw
  27: dp4 r1.x, r1.xyzw, cb0[10].xyzw
  28: mul r3.w, r3.w, cb0[11].w
  29: add r0.xyzw, r0.xyzw, r3.xyzw
  30: mad r1.y, -r1.x, l(0.779084), l(0.779084)
  31: mul r1.yzw, r0.xxyz, r1.yyyy
  32: mul o0.xyz, r2.xxxx, r1.yzwy
  33: mov o0.w, l(1.000000)
  34: add r1.yzw, r0.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  35: mad r0.xyz, r1.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
  36: mul o1.xyzw, r2.xxxx, r0.xyzw
  37: mad r0.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  38: mul o2.xyz, r2.xxxx, r0.xyzx
  39: mov o3.xyzw, r2.xxxx
  40: mov o2.w, l(1.000000)
  41: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 62 math, 7 temp registers, 9 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 6
Set 2D Texture "_Control" to slot 1
Set 2D Texture "_Splat0" to slot 2
Set 2D Texture "_Splat1" to slot 3
Set 2D Texture "_Splat2" to slot 4
Set 2D Texture "_Splat3" to slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 0

Constant Buffer "$Globals" (208 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 160
  Float _Metallic1 at 164
  Float _Metallic2 at 168
  Float _Metallic3 at 172
  Float _Smoothness0 at 176
  Float _Smoothness1 at 180
  Float _Smoothness2 at 184
  Float _Smoothness3 at 188
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float       
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v3.xyxx, t0.xyzw, s6
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: add r0.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   4: mad r0.xy, v3.xyxx, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   5: mul r0.xy, r0.xyxx, cb0[5].xyxx
   6: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
   7: dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   8: add r1.y, r1.x, l(0.001000)
   9: div r0.xyzw, r0.xyzw, r1.yyyy
  10: mad r1.yz, v3.xxyx, cb0[6].xxyx, cb0[6].zzwz
  11: mad r2.xy, v3.xyxx, cb0[7].xyxx, cb0[7].zwzz
  12: mad r2.zw, v3.xxxy, cb0[8].xxxy, cb0[8].zzzw
  13: mad r3.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  14: sample r4.xyzw, r1.yzyy, t2.xyzw, s2
  15: mul r4.xyzw, r0.xxxx, r4.xyzw
  16: mul r4.w, r4.w, cb0[11].x
  17: sample r5.xyzw, r2.xyxx, t3.xyzw, s3
  18: mul r5.xyzw, r0.yyyy, r5.xyzw
  19: mul r5.w, r5.w, cb0[11].y
  20: add r4.xyzw, r4.xyzw, r5.xyzw
  21: sample r2.xyzw, r2.zwzz, t4.xyzw, s4
  22: mul r2.xyzw, r0.zzzz, r2.xyzw
  23: mul r2.w, r2.w, cb0[11].z
  24: add r2.xyzw, r2.xyzw, r4.xyzw
  25: sample r3.xyzw, r3.xyxx, t5.xyzw, s5
  26: mul r3.xyzw, r0.wwww, r3.xyzw
  27: mul r3.w, r3.w, cb0[11].w
  28: add r2.xyzw, r2.xyzw, r3.xyzw
  29: dp4 r0.x, r0.xyzw, cb0[10].xyzw
  30: eq r0.y, cb2[0].x, l(1.000000)
  31: if_nz r0.y
  32:   eq r0.y, cb2[0].y, l(1.000000)
  33:   mul r1.yzw, v2.yyyy, cb2[2].xxyz
  34:   mad r1.yzw, cb2[1].xxyz, v2.xxxx, r1.yyzw
  35:   mad r1.yzw, cb2[3].xxyz, v2.zzzz, r1.yyzw
  36:   add r1.yzw, r1.yyzw, cb2[4].xxyz
  37:   movc r0.yzw, r0.yyyy, r1.yyzw, v2.xxyz
  38:   add r0.yzw, r0.yyzw, -cb2[6].xxyz
  39:   mul r3.yzw, r0.yyzw, cb2[5].xxyz
  40:   mul r0.y, r3.y, l(0.250000)
  41:   mul r0.z, cb2[0].z, l(0.500000)
  42:   mad r0.w, -cb2[0].z, l(0.500000), l(0.250000)
  43:   max r0.y, r0.z, r0.y
  44:   min r3.x, r0.w, r0.y
  45:   sample r4.xyzw, r3.xzwx, t6.xyzw, s0
  46:   add r0.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  47:   sample r5.xyzw, r0.yzwy, t6.xyzw, s0
  48:   add r0.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  49:   sample r3.xyzw, r0.yzwy, t6.xyzw, s0
  50:   mov r6.xyz, v1.xyzx
  51:   mov r6.w, l(1.000000)
  52:   dp4 r4.x, r4.xyzw, r6.xyzw
  53:   dp4 r4.y, r5.xyzw, r6.xyzw
  54:   dp4 r4.z, r3.xyzw, r6.xyzw
  55: else 
  56:   mov r3.xyz, v1.xyzx
  57:   mov r3.w, l(1.000000)
  58:   dp4 r4.x, cb1[39].xyzw, r3.xyzw
  59:   dp4 r4.y, cb1[40].xyzw, r3.xyzw
  60:   dp4 r4.z, cb1[41].xyzw, r3.xyzw
  61: endif 
  62: add r0.yzw, r4.xxyz, v5.xxyz
  63: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  64: log r0.yzw, r0.yyzw
  65: mul r0.yzw, r0.yyzw, l(0.000000, 0.416667, 0.416667, 0.416667)
  66: exp r0.yzw, r0.yyzw
  67: mad r0.yzw, r0.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
  68: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  69: add r1.yzw, r2.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  70: mad r3.xyz, r0.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
  71: mad r0.x, -r0.x, l(0.779084), l(0.779084)
  72: mul r1.yzw, r0.xxxx, r2.xxyz
  73: mul r0.xyz, r0.yzwy, r1.yzwy
  74: mad r2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  75: exp r0.xyz, -r0.xyzx
  76: mul o0.xyz, r1.xxxx, r1.yzwy
  77: mov r3.w, r2.w
  78: mul o1.xyzw, r1.xxxx, r3.xyzw
  79: mul o2.xyz, r1.xxxx, r2.xyzx
  80: mov r0.w, l(1.000000)
  81: mul o3.xyzw, r1.xxxx, r0.xyzw
  82: mov o0.w, l(1.000000)
  83: mov o2.w, l(1.000000)
  84: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: UNITY_HDR_ON 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 32 math, 4 temp registers, 6 textures
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 5
Set 2D Texture "_Control" to slot 1 sampler slot 0
Set 2D Texture "_Splat0" to slot 2 sampler slot 1
Set 2D Texture "_Splat1" to slot 3 sampler slot 2
Set 2D Texture "_Splat2" to slot 4 sampler slot 3
Set 2D Texture "_Splat3" to slot 5 sampler slot 4

Constant Buffer "$Globals" (208 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 160
  Float _Metallic1 at 164
  Float _Metallic2 at 168
  Float _Metallic3 at 172
  Float _Smoothness0 at 176
  Float _Smoothness1 at 180
  Float _Smoothness2 at 184
  Float _Smoothness3 at 188
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v3.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 4
   0: sample r0.xyzw, v3.xyxx, t0.xyzw, s5
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: mad r0.xy, v3.xyxx, cb0[6].xyxx, cb0[6].zwzz
   4: sample r0.xyzw, r0.xyxx, t2.xyzw, s1
   5: add r1.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   6: mad r1.xy, v3.xyxx, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   7: mul r1.xy, r1.xyxx, cb0[5].xyxx
   8: sample r1.xyzw, r1.xyxx, t1.xyzw, s0
   9: dp4 r2.x, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  10: add r2.y, r2.x, l(0.001000)
  11: div r1.xyzw, r1.xyzw, r2.yyyy
  12: mul r0.xyzw, r0.xyzw, r1.xxxx
  13: mul r0.w, r0.w, cb0[11].x
  14: mad r2.yz, v3.xxyx, cb0[7].xxyx, cb0[7].zzwz
  15: sample r3.xyzw, r2.yzyy, t3.xyzw, s2
  16: mul r3.xyzw, r1.yyyy, r3.xyzw
  17: mul r3.w, r3.w, cb0[11].y
  18: add r0.xyzw, r0.xyzw, r3.xyzw
  19: mad r2.yz, v3.xxyx, cb0[8].xxyx, cb0[8].zzwz
  20: sample r3.xyzw, r2.yzyy, t4.xyzw, s3
  21: mul r3.xyzw, r1.zzzz, r3.xyzw
  22: mul r3.w, r3.w, cb0[11].z
  23: add r0.xyzw, r0.xyzw, r3.xyzw
  24: mad r2.yz, v3.xxyx, cb0[9].xxyx, cb0[9].zzwz
  25: sample r3.xyzw, r2.yzyy, t5.xyzw, s4
  26: mul r3.xyzw, r1.wwww, r3.xyzw
  27: dp4 r1.x, r1.xyzw, cb0[10].xyzw
  28: mul r3.w, r3.w, cb0[11].w
  29: add r0.xyzw, r0.xyzw, r3.xyzw
  30: mad r1.y, -r1.x, l(0.779084), l(0.779084)
  31: mul r1.yzw, r0.xxyz, r1.yyyy
  32: mul o0.xyz, r2.xxxx, r1.yzwy
  33: mov o0.w, l(1.000000)
  34: add r1.yzw, r0.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  35: mad r0.xyz, r1.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
  36: mul o1.xyzw, r2.xxxx, r0.xyzw
  37: mad r0.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  38: mul o2.xyz, r2.xxxx, r0.xyzx
  39: mul o3.xyzw, r2.xxxx, l(0.000000, 0.000000, 0.000000, 1.000000)
  40: mov o2.w, l(1.000000)
  41: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH UNITY_HDR_ON 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 61 math, 7 temp registers, 9 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 6
Set 2D Texture "_Control" to slot 1
Set 2D Texture "_Splat0" to slot 2
Set 2D Texture "_Splat1" to slot 3
Set 2D Texture "_Splat2" to slot 4
Set 2D Texture "_Splat3" to slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 0

Constant Buffer "$Globals" (208 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 160
  Float _Metallic1 at 164
  Float _Metallic2 at 168
  Float _Metallic3 at 172
  Float _Smoothness0 at 176
  Float _Smoothness1 at 180
  Float _Smoothness2 at 184
  Float _Smoothness3 at 188
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float       
// TEXCOORD                 5   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xy
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v3.xyxx, t0.xyzw, s6
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: add r0.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   4: mad r0.xy, v3.xyxx, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   5: mul r0.xy, r0.xyxx, cb0[5].xyxx
   6: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
   7: dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   8: add r1.y, r1.x, l(0.001000)
   9: div r0.xyzw, r0.xyzw, r1.yyyy
  10: mad r1.yz, v3.xxyx, cb0[6].xxyx, cb0[6].zzwz
  11: mad r2.xy, v3.xyxx, cb0[7].xyxx, cb0[7].zwzz
  12: mad r2.zw, v3.xxxy, cb0[8].xxxy, cb0[8].zzzw
  13: mad r3.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  14: sample r4.xyzw, r1.yzyy, t2.xyzw, s2
  15: mul r4.xyzw, r0.xxxx, r4.xyzw
  16: mul r4.w, r4.w, cb0[11].x
  17: sample r5.xyzw, r2.xyxx, t3.xyzw, s3
  18: mul r5.xyzw, r0.yyyy, r5.xyzw
  19: mul r5.w, r5.w, cb0[11].y
  20: add r4.xyzw, r4.xyzw, r5.xyzw
  21: sample r2.xyzw, r2.zwzz, t4.xyzw, s4
  22: mul r2.xyzw, r0.zzzz, r2.xyzw
  23: mul r2.w, r2.w, cb0[11].z
  24: add r2.xyzw, r2.xyzw, r4.xyzw
  25: sample r3.xyzw, r3.xyxx, t5.xyzw, s5
  26: mul r3.xyzw, r0.wwww, r3.xyzw
  27: mul r3.w, r3.w, cb0[11].w
  28: add r2.xyzw, r2.xyzw, r3.xyzw
  29: dp4 r0.x, r0.xyzw, cb0[10].xyzw
  30: eq r0.y, cb2[0].x, l(1.000000)
  31: if_nz r0.y
  32:   eq r0.y, cb2[0].y, l(1.000000)
  33:   mul r1.yzw, v2.yyyy, cb2[2].xxyz
  34:   mad r1.yzw, cb2[1].xxyz, v2.xxxx, r1.yyzw
  35:   mad r1.yzw, cb2[3].xxyz, v2.zzzz, r1.yyzw
  36:   add r1.yzw, r1.yyzw, cb2[4].xxyz
  37:   movc r0.yzw, r0.yyyy, r1.yyzw, v2.xxyz
  38:   add r0.yzw, r0.yyzw, -cb2[6].xxyz
  39:   mul r3.yzw, r0.yyzw, cb2[5].xxyz
  40:   mul r0.y, r3.y, l(0.250000)
  41:   mul r0.z, cb2[0].z, l(0.500000)
  42:   mad r0.w, -cb2[0].z, l(0.500000), l(0.250000)
  43:   max r0.y, r0.z, r0.y
  44:   min r3.x, r0.w, r0.y
  45:   sample r4.xyzw, r3.xzwx, t6.xyzw, s0
  46:   add r0.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  47:   sample r5.xyzw, r0.yzwy, t6.xyzw, s0
  48:   add r0.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  49:   sample r3.xyzw, r0.yzwy, t6.xyzw, s0
  50:   mov r6.xyz, v1.xyzx
  51:   mov r6.w, l(1.000000)
  52:   dp4 r4.x, r4.xyzw, r6.xyzw
  53:   dp4 r4.y, r5.xyzw, r6.xyzw
  54:   dp4 r4.z, r3.xyzw, r6.xyzw
  55: else 
  56:   mov r3.xyz, v1.xyzx
  57:   mov r3.w, l(1.000000)
  58:   dp4 r4.x, cb1[39].xyzw, r3.xyzw
  59:   dp4 r4.y, cb1[40].xyzw, r3.xyzw
  60:   dp4 r4.z, cb1[41].xyzw, r3.xyzw
  61: endif 
  62: add r0.yzw, r4.xxyz, v5.xxyz
  63: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  64: log r0.yzw, r0.yyzw
  65: mul r0.yzw, r0.yyzw, l(0.000000, 0.416667, 0.416667, 0.416667)
  66: exp r0.yzw, r0.yyzw
  67: mad r0.yzw, r0.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
  68: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  69: add r1.yzw, r2.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  70: mad r3.xyz, r0.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
  71: mad r0.x, -r0.x, l(0.779084), l(0.779084)
  72: mul r1.yzw, r0.xxxx, r2.xxyz
  73: mul r0.xyz, r0.yzwy, r1.yzwy
  74: mad r2.xyz, v1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  75: mul o0.xyz, r1.xxxx, r1.yzwy
  76: mov r3.w, r2.w
  77: mul o1.xyzw, r1.xxxx, r3.xyzw
  78: mul o2.xyz, r1.xxxx, r2.xyzx
  79: mov r0.w, l(1.000000)
  80: mul o3.xyzw, r1.xxxx, r0.xyzw
  81: mov o0.w, l(1.000000)
  82: mov o2.w, l(1.000000)
  83: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 70 math, 7 temp registers, 10 textures
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 9
Set 2D Texture "_Control" to slot 1 sampler slot 0
Set 2D Texture "_Splat0" to slot 2 sampler slot 1
Set 2D Texture "_Splat1" to slot 3 sampler slot 2
Set 2D Texture "_Splat2" to slot 4 sampler slot 3
Set 2D Texture "_Splat3" to slot 5 sampler slot 4
Set 2D Texture "_Normal0" to slot 6 sampler slot 5
Set 2D Texture "_Normal1" to slot 7 sampler slot 6
Set 2D Texture "_Normal2" to slot 8 sampler slot 7
Set 2D Texture "_Normal3" to slot 9 sampler slot 8

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 160
  Float _NormalScale1 at 164
  Float _NormalScale2 at 168
  Float _NormalScale3 at 172
  Float _Metallic0 at 176
  Float _Metallic1 at 180
  Float _Metallic2 at 184
  Float _Metallic3 at 188
  Float _Smoothness0 at 192
  Float _Smoothness1 at 196
  Float _Smoothness2 at 200
  Float _Smoothness3 at 204
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 5   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v4.xyxx, t0.xyzw, s9
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: mad r0.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
   4: sample r1.xyzw, r0.xyxx, t2.xyzw, s1
   5: sample r0.xyzw, r0.xyxx, t6.xyzw, s5
   6: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   7: mad r2.xy, v4.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   8: mul r2.xy, r2.xyxx, cb0[5].xyxx
   9: sample r2.xyzw, r2.xyxx, t1.xyzw, s0
  10: dp4 r0.z, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  11: add r3.x, r0.z, l(0.001000)
  12: div r2.xyzw, r2.xyzw, r3.xxxx
  13: mul r1.xyzw, r1.xyzw, r2.xxxx
  14: mul r1.w, r1.w, cb0[12].x
  15: mad r3.xy, v4.xyxx, cb0[7].xyxx, cb0[7].zwzz
  16: sample r4.xyzw, r3.xyxx, t3.xyzw, s2
  17: sample r3.xyzw, r3.xyxx, t7.xyzw, s6
  18: mul r4.xyzw, r2.yyyy, r4.xyzw
  19: mul r4.w, r4.w, cb0[12].y
  20: add r1.xyzw, r1.xyzw, r4.xyzw
  21: mad r4.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  22: sample r5.xyzw, r4.xyxx, t4.xyzw, s3
  23: sample r4.xyzw, r4.xyxx, t8.xyzw, s7
  24: mul r5.xyzw, r2.zzzz, r5.xyzw
  25: mul r5.w, r5.w, cb0[12].z
  26: add r1.xyzw, r1.xyzw, r5.xyzw
  27: mad r5.xy, v4.xyxx, cb0[9].xyxx, cb0[9].zwzz
  28: sample r6.xyzw, r5.xyxx, t5.xyzw, s4
  29: sample r5.xyzw, r5.xyxx, t9.xyzw, s8
  30: mul r6.xyzw, r2.wwww, r6.xyzw
  31: mul r6.w, r6.w, cb0[12].w
  32: add r1.xyzw, r1.xyzw, r6.xyzw
  33: dp4 r3.z, r2.xyzw, cb0[11].xyzw
  34: mad r4.z, -r3.z, l(0.779084), l(0.779084)
  35: mul r6.xyz, r1.xyzx, r4.zzzz
  36: mul o0.xyz, r0.zzzz, r6.xyzx
  37: mov o0.w, l(1.000000)
  38: add r6.xyz, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  39: mad r1.xyz, r3.zzzz, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  40: mul o1.xyzw, r0.zzzz, r1.xyzw
  41: mul r0.x, r0.w, r0.x
  42: mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  43: mul r1.xy, r0.xyxx, cb0[10].xxxx
  44: dp2 r0.x, r1.xyxx, r1.xyxx
  45: min r0.x, r0.x, l(1.000000)
  46: add r0.x, -r0.x, l(1.000000)
  47: sqrt r1.z, r0.x
  48: mul r3.x, r3.w, r3.x
  49: mad r0.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  50: mul r3.xy, r0.xyxx, cb0[10].yyyy
  51: dp2 r0.x, r3.xyxx, r3.xyxx
  52: min r0.x, r0.x, l(1.000000)
  53: add r0.x, -r0.x, l(1.000000)
  54: sqrt r3.z, r0.x
  55: mul r0.xyw, r2.yyyy, r3.xyxz
  56: mad r0.xyw, r1.xyxz, r2.xxxx, r0.xyxw
  57: mul r4.x, r4.w, r4.x
  58: mad r1.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  59: mul r1.xy, r1.xyxx, cb0[10].zzzz
  60: dp2 r1.w, r1.xyxx, r1.xyxx
  61: min r1.w, r1.w, l(1.000000)
  62: add r1.w, -r1.w, l(1.000000)
  63: sqrt r1.z, r1.w
  64: mad r0.xyw, r1.xyxz, r2.zzzz, r0.xyxw
  65: mul r5.x, r5.w, r5.x
  66: mad r1.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  67: mul r1.xy, r1.xyxx, cb0[10].wwww
  68: dp2 r1.w, r1.xyxx, r1.xyxx
  69: min r1.w, r1.w, l(1.000000)
  70: add r1.w, -r1.w, l(1.000000)
  71: sqrt r1.z, r1.w
  72: mad r1.xyz, r1.xyzx, r2.wwww, r0.xywx
  73: add r1.w, r1.z, l(0.000010)
  74: dp3 r2.x, v1.xyzx, r1.xywx
  75: dp3 r2.y, v2.xyzx, r1.xywx
  76: dp3 r2.z, v3.xyzx, r1.xywx
  77: dp3 r0.x, r2.xyzx, r2.xyzx
  78: rsq r0.x, r0.x
  79: mul r0.xyw, r0.xxxx, r2.xyxz
  80: mad r0.xyw, r0.xyxw, l(0.500000, 0.500000, 0.000000, 0.500000), l(0.500000, 0.500000, 0.000000, 0.500000)
  81: mul o2.xyz, r0.zzzz, r0.xywx
  82: mov o3.xyzw, r0.zzzz
  83: mov o2.w, l(1.000000)
  84: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 101 math, 7 temp registers, 13 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 10
Set 2D Texture "_Control" to slot 1
Set 2D Texture "_Splat0" to slot 2
Set 2D Texture "_Splat1" to slot 3
Set 2D Texture "_Splat2" to slot 4
Set 2D Texture "_Splat3" to slot 5
Set 2D Texture "_Normal0" to slot 6
Set 2D Texture "_Normal1" to slot 7
Set 2D Texture "_Normal2" to slot 8
Set 2D Texture "_Normal3" to slot 9
Set 3D Texture "unity_ProbeVolumeSH" to slot 10 sampler slot 0

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 160
  Float _NormalScale1 at 164
  Float _NormalScale2 at 168
  Float _NormalScale3 at 172
  Float _Metallic0 at 176
  Float _Metallic1 at 180
  Float _Metallic2 at 184
  Float _Metallic3 at 188
  Float _Smoothness0 at 192
  Float _Smoothness1 at 196
  Float _Smoothness2 at 200
  Float _Smoothness3 at 204
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 5   xyzw        5     NONE   float       
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[13], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture3d (float,float,float,float) t10
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v4.xyxx, t0.xyzw, s10
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: add r0.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   4: mad r0.xy, v4.xyxx, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   5: mul r0.xy, r0.xyxx, cb0[5].xyxx
   6: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
   7: dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   8: add r1.y, r1.x, l(0.001000)
   9: div r0.xyzw, r0.xyzw, r1.yyyy
  10: mad r1.yz, v4.xxyx, cb0[6].xxyx, cb0[6].zzwz
  11: mad r2.xy, v4.xyxx, cb0[7].xyxx, cb0[7].zwzz
  12: mad r2.zw, v4.xxxy, cb0[8].xxxy, cb0[8].zzzw
  13: mad r3.xy, v4.xyxx, cb0[9].xyxx, cb0[9].zwzz
  14: sample r4.xyzw, r1.yzyy, t2.xyzw, s2
  15: mul r4.xyzw, r0.xxxx, r4.xyzw
  16: mul r4.w, r4.w, cb0[12].x
  17: sample r5.xyzw, r2.xyxx, t3.xyzw, s3
  18: mul r5.xyzw, r0.yyyy, r5.xyzw
  19: mul r5.w, r5.w, cb0[12].y
  20: add r4.xyzw, r4.xyzw, r5.xyzw
  21: sample r5.xyzw, r2.zwzz, t4.xyzw, s4
  22: mul r5.xyzw, r0.zzzz, r5.xyzw
  23: mul r5.w, r5.w, cb0[12].z
  24: add r4.xyzw, r4.xyzw, r5.xyzw
  25: sample r5.xyzw, r3.xyxx, t5.xyzw, s5
  26: mul r5.xyzw, r0.wwww, r5.xyzw
  27: mul r5.w, r5.w, cb0[12].w
  28: add r4.xyzw, r4.xyzw, r5.xyzw
  29: sample r5.xyzw, r1.yzyy, t6.xyzw, s6
  30: mul r5.x, r5.w, r5.x
  31: mad r1.yz, r5.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  32: mul r5.xy, r1.yzyy, cb0[10].xxxx
  33: dp2 r1.y, r5.xyxx, r5.xyxx
  34: min r1.y, r1.y, l(1.000000)
  35: add r1.y, -r1.y, l(1.000000)
  36: sqrt r5.z, r1.y
  37: sample r6.xyzw, r2.xyxx, t7.xyzw, s7
  38: mul r6.x, r6.w, r6.x
  39: mad r1.yz, r6.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  40: mul r6.xy, r1.yzyy, cb0[10].yyyy
  41: dp2 r1.y, r6.xyxx, r6.xyxx
  42: min r1.y, r1.y, l(1.000000)
  43: add r1.y, -r1.y, l(1.000000)
  44: sqrt r6.z, r1.y
  45: mul r1.yzw, r0.yyyy, r6.xxyz
  46: mad r1.yzw, r5.xxyz, r0.xxxx, r1.yyzw
  47: sample r2.xyzw, r2.zwzz, t8.xyzw, s8
  48: mul r2.x, r2.w, r2.x
  49: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  50: mul r2.xy, r2.xyxx, cb0[10].zzzz
  51: dp2 r2.w, r2.xyxx, r2.xyxx
  52: min r2.w, r2.w, l(1.000000)
  53: add r2.w, -r2.w, l(1.000000)
  54: sqrt r2.z, r2.w
  55: mad r1.yzw, r2.xxyz, r0.zzzz, r1.yyzw
  56: sample r2.xyzw, r3.xyxx, t9.xyzw, s9
  57: mul r2.x, r2.w, r2.x
  58: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  59: mul r2.xy, r2.xyxx, cb0[10].wwww
  60: dp2 r2.w, r2.xyxx, r2.xyxx
  61: min r2.w, r2.w, l(1.000000)
  62: add r2.w, -r2.w, l(1.000000)
  63: sqrt r2.z, r2.w
  64: mad r2.xyz, r2.xyzx, r0.wwww, r1.yzwy
  65: dp4 r0.x, r0.xyzw, cb0[11].xyzw
  66: add r2.w, r2.z, l(0.000010)
  67: dp3 r3.x, v1.xyzx, r2.xywx
  68: dp3 r3.y, v2.xyzx, r2.xywx
  69: dp3 r3.z, v3.xyzx, r2.xywx
  70: dp3 r0.y, r3.xyzx, r3.xyzx
  71: rsq r0.y, r0.y
  72: mul r2.xyz, r0.yyyy, r3.xyzx
  73: eq r0.y, cb2[0].x, l(1.000000)
  74: if_nz r0.y
  75:   eq r0.y, cb2[0].y, l(1.000000)
  76:   mul r1.yzw, v2.wwww, cb2[2].xxyz
  77:   mad r1.yzw, cb2[1].xxyz, v1.wwww, r1.yyzw
  78:   mad r1.yzw, cb2[3].xxyz, v3.wwww, r1.yyzw
  79:   add r1.yzw, r1.yyzw, cb2[4].xxyz
  80:   mov r3.y, v1.w
  81:   mov r3.z, v2.w
  82:   mov r3.w, v3.w
  83:   movc r0.yzw, r0.yyyy, r1.yyzw, r3.yyzw
  84:   add r0.yzw, r0.yyzw, -cb2[6].xxyz
  85:   mul r3.yzw, r0.yyzw, cb2[5].xxyz
  86:   mul r0.y, r3.y, l(0.250000)
  87:   mul r0.z, cb2[0].z, l(0.500000)
  88:   mad r0.w, -cb2[0].z, l(0.500000), l(0.250000)
  89:   max r0.y, r0.z, r0.y
  90:   min r3.x, r0.w, r0.y
  91:   sample r5.xyzw, r3.xzwx, t10.xyzw, s0
  92:   add r0.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  93:   sample r6.xyzw, r0.yzwy, t10.xyzw, s0
  94:   add r0.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  95:   sample r3.xyzw, r0.yzwy, t10.xyzw, s0
  96:   mov r2.w, l(1.000000)
  97:   dp4 r5.x, r5.xyzw, r2.xyzw
  98:   dp4 r5.y, r6.xyzw, r2.xyzw
  99:   dp4 r5.z, r3.xyzw, r2.xyzw
 100: else 
 101:   mov r2.w, l(1.000000)
 102:   dp4 r5.x, cb1[39].xyzw, r2.xyzw
 103:   dp4 r5.y, cb1[40].xyzw, r2.xyzw
 104:   dp4 r5.z, cb1[41].xyzw, r2.xyzw
 105: endif 
 106: add r0.yzw, r5.xxyz, v6.xxyz
 107: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
 108: log r0.yzw, r0.yyzw
 109: mul r0.yzw, r0.yyzw, l(0.000000, 0.416667, 0.416667, 0.416667)
 110: exp r0.yzw, r0.yyzw
 111: mad r0.yzw, r0.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
 112: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
 113: add r1.yzw, r4.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
 114: mad r3.xyz, r0.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
 115: mad r0.x, -r0.x, l(0.779084), l(0.779084)
 116: mul r1.yzw, r0.xxxx, r4.xxyz
 117: mul r0.xyz, r0.yzwy, r1.yzwy
 118: mad r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
 119: exp r0.xyz, -r0.xyzx
 120: mul o0.xyz, r1.xxxx, r1.yzwy
 121: mov r3.w, r4.w
 122: mul o1.xyzw, r1.xxxx, r3.xyzw
 123: mul o2.xyz, r1.xxxx, r2.xyzx
 124: mov r0.w, l(1.000000)
 125: mul o3.xyzw, r1.xxxx, r0.xyzw
 126: mov o0.w, l(1.000000)
 127: mov o2.w, l(1.000000)
 128: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: UNITY_HDR_ON 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 71 math, 7 temp registers, 10 textures
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 9
Set 2D Texture "_Control" to slot 1 sampler slot 0
Set 2D Texture "_Splat0" to slot 2 sampler slot 1
Set 2D Texture "_Splat1" to slot 3 sampler slot 2
Set 2D Texture "_Splat2" to slot 4 sampler slot 3
Set 2D Texture "_Splat3" to slot 5 sampler slot 4
Set 2D Texture "_Normal0" to slot 6 sampler slot 5
Set 2D Texture "_Normal1" to slot 7 sampler slot 6
Set 2D Texture "_Normal2" to slot 8 sampler slot 7
Set 2D Texture "_Normal3" to slot 9 sampler slot 8

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 160
  Float _NormalScale1 at 164
  Float _NormalScale2 at 168
  Float _NormalScale3 at 172
  Float _Metallic0 at 176
  Float _Metallic1 at 180
  Float _Metallic2 at 184
  Float _Metallic3 at 188
  Float _Smoothness0 at 192
  Float _Smoothness1 at 196
  Float _Smoothness2 at 200
  Float _Smoothness3 at 204
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 5   xyzw        5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[13], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v4.xyxx, t0.xyzw, s9
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: mad r0.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
   4: sample r1.xyzw, r0.xyxx, t2.xyzw, s1
   5: sample r0.xyzw, r0.xyxx, t6.xyzw, s5
   6: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   7: mad r2.xy, v4.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   8: mul r2.xy, r2.xyxx, cb0[5].xyxx
   9: sample r2.xyzw, r2.xyxx, t1.xyzw, s0
  10: dp4 r0.z, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  11: add r3.x, r0.z, l(0.001000)
  12: div r2.xyzw, r2.xyzw, r3.xxxx
  13: mul r1.xyzw, r1.xyzw, r2.xxxx
  14: mul r1.w, r1.w, cb0[12].x
  15: mad r3.xy, v4.xyxx, cb0[7].xyxx, cb0[7].zwzz
  16: sample r4.xyzw, r3.xyxx, t3.xyzw, s2
  17: sample r3.xyzw, r3.xyxx, t7.xyzw, s6
  18: mul r4.xyzw, r2.yyyy, r4.xyzw
  19: mul r4.w, r4.w, cb0[12].y
  20: add r1.xyzw, r1.xyzw, r4.xyzw
  21: mad r4.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  22: sample r5.xyzw, r4.xyxx, t4.xyzw, s3
  23: sample r4.xyzw, r4.xyxx, t8.xyzw, s7
  24: mul r5.xyzw, r2.zzzz, r5.xyzw
  25: mul r5.w, r5.w, cb0[12].z
  26: add r1.xyzw, r1.xyzw, r5.xyzw
  27: mad r5.xy, v4.xyxx, cb0[9].xyxx, cb0[9].zwzz
  28: sample r6.xyzw, r5.xyxx, t5.xyzw, s4
  29: sample r5.xyzw, r5.xyxx, t9.xyzw, s8
  30: mul r6.xyzw, r2.wwww, r6.xyzw
  31: mul r6.w, r6.w, cb0[12].w
  32: add r1.xyzw, r1.xyzw, r6.xyzw
  33: dp4 r3.z, r2.xyzw, cb0[11].xyzw
  34: mad r4.z, -r3.z, l(0.779084), l(0.779084)
  35: mul r6.xyz, r1.xyzx, r4.zzzz
  36: mul o0.xyz, r0.zzzz, r6.xyzx
  37: mov o0.w, l(1.000000)
  38: add r6.xyz, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  39: mad r1.xyz, r3.zzzz, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  40: mul o1.xyzw, r0.zzzz, r1.xyzw
  41: mul r0.x, r0.w, r0.x
  42: mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  43: mul r1.xy, r0.xyxx, cb0[10].xxxx
  44: dp2 r0.x, r1.xyxx, r1.xyxx
  45: min r0.x, r0.x, l(1.000000)
  46: add r0.x, -r0.x, l(1.000000)
  47: sqrt r1.z, r0.x
  48: mul r3.x, r3.w, r3.x
  49: mad r0.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  50: mul r3.xy, r0.xyxx, cb0[10].yyyy
  51: dp2 r0.x, r3.xyxx, r3.xyxx
  52: min r0.x, r0.x, l(1.000000)
  53: add r0.x, -r0.x, l(1.000000)
  54: sqrt r3.z, r0.x
  55: mul r0.xyw, r2.yyyy, r3.xyxz
  56: mad r0.xyw, r1.xyxz, r2.xxxx, r0.xyxw
  57: mul r4.x, r4.w, r4.x
  58: mad r1.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  59: mul r1.xy, r1.xyxx, cb0[10].zzzz
  60: dp2 r1.w, r1.xyxx, r1.xyxx
  61: min r1.w, r1.w, l(1.000000)
  62: add r1.w, -r1.w, l(1.000000)
  63: sqrt r1.z, r1.w
  64: mad r0.xyw, r1.xyxz, r2.zzzz, r0.xyxw
  65: mul r5.x, r5.w, r5.x
  66: mad r1.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  67: mul r1.xy, r1.xyxx, cb0[10].wwww
  68: dp2 r1.w, r1.xyxx, r1.xyxx
  69: min r1.w, r1.w, l(1.000000)
  70: add r1.w, -r1.w, l(1.000000)
  71: sqrt r1.z, r1.w
  72: mad r1.xyz, r1.xyzx, r2.wwww, r0.xywx
  73: add r1.w, r1.z, l(0.000010)
  74: dp3 r2.x, v1.xyzx, r1.xywx
  75: dp3 r2.y, v2.xyzx, r1.xywx
  76: dp3 r2.z, v3.xyzx, r1.xywx
  77: dp3 r0.x, r2.xyzx, r2.xyzx
  78: rsq r0.x, r0.x
  79: mul r0.xyw, r0.xxxx, r2.xyxz
  80: mad r0.xyw, r0.xyxw, l(0.500000, 0.500000, 0.000000, 0.500000), l(0.500000, 0.500000, 0.000000, 0.500000)
  81: mul o2.xyz, r0.zzzz, r0.xywx
  82: mul o3.xyzw, r0.zzzz, l(0.000000, 0.000000, 0.000000, 1.000000)
  83: mov o2.w, l(1.000000)
  84: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH UNITY_HDR_ON 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 100 math, 7 temp registers, 13 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 10
Set 2D Texture "_Control" to slot 1
Set 2D Texture "_Splat0" to slot 2
Set 2D Texture "_Splat1" to slot 3
Set 2D Texture "_Splat2" to slot 4
Set 2D Texture "_Splat3" to slot 5
Set 2D Texture "_Normal0" to slot 6
Set 2D Texture "_Normal1" to slot 7
Set 2D Texture "_Normal2" to slot 8
Set 2D Texture "_Normal3" to slot 9
Set 3D Texture "unity_ProbeVolumeSH" to slot 10 sampler slot 0

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 160
  Float _NormalScale1 at 164
  Float _NormalScale2 at 168
  Float _NormalScale3 at 172
  Float _Metallic0 at 176
  Float _Metallic1 at 180
  Float _Metallic2 at 184
  Float _Metallic3 at 188
  Float _Smoothness0 at 192
  Float _Smoothness1 at 196
  Float _Smoothness2 at 200
  Float _Smoothness3 at 204
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy  
// TEXCOORD                 5   xyzw        5     NONE   float       
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[13], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture3d (float,float,float,float) t10
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xy
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v4.xyxx, t0.xyzw, s10
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: add r0.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   4: mad r0.xy, v4.xyxx, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   5: mul r0.xy, r0.xyxx, cb0[5].xyxx
   6: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
   7: dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   8: add r1.y, r1.x, l(0.001000)
   9: div r0.xyzw, r0.xyzw, r1.yyyy
  10: mad r1.yz, v4.xxyx, cb0[6].xxyx, cb0[6].zzwz
  11: mad r2.xy, v4.xyxx, cb0[7].xyxx, cb0[7].zwzz
  12: mad r2.zw, v4.xxxy, cb0[8].xxxy, cb0[8].zzzw
  13: mad r3.xy, v4.xyxx, cb0[9].xyxx, cb0[9].zwzz
  14: sample r4.xyzw, r1.yzyy, t2.xyzw, s2
  15: mul r4.xyzw, r0.xxxx, r4.xyzw
  16: mul r4.w, r4.w, cb0[12].x
  17: sample r5.xyzw, r2.xyxx, t3.xyzw, s3
  18: mul r5.xyzw, r0.yyyy, r5.xyzw
  19: mul r5.w, r5.w, cb0[12].y
  20: add r4.xyzw, r4.xyzw, r5.xyzw
  21: sample r5.xyzw, r2.zwzz, t4.xyzw, s4
  22: mul r5.xyzw, r0.zzzz, r5.xyzw
  23: mul r5.w, r5.w, cb0[12].z
  24: add r4.xyzw, r4.xyzw, r5.xyzw
  25: sample r5.xyzw, r3.xyxx, t5.xyzw, s5
  26: mul r5.xyzw, r0.wwww, r5.xyzw
  27: mul r5.w, r5.w, cb0[12].w
  28: add r4.xyzw, r4.xyzw, r5.xyzw
  29: sample r5.xyzw, r1.yzyy, t6.xyzw, s6
  30: mul r5.x, r5.w, r5.x
  31: mad r1.yz, r5.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  32: mul r5.xy, r1.yzyy, cb0[10].xxxx
  33: dp2 r1.y, r5.xyxx, r5.xyxx
  34: min r1.y, r1.y, l(1.000000)
  35: add r1.y, -r1.y, l(1.000000)
  36: sqrt r5.z, r1.y
  37: sample r6.xyzw, r2.xyxx, t7.xyzw, s7
  38: mul r6.x, r6.w, r6.x
  39: mad r1.yz, r6.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  40: mul r6.xy, r1.yzyy, cb0[10].yyyy
  41: dp2 r1.y, r6.xyxx, r6.xyxx
  42: min r1.y, r1.y, l(1.000000)
  43: add r1.y, -r1.y, l(1.000000)
  44: sqrt r6.z, r1.y
  45: mul r1.yzw, r0.yyyy, r6.xxyz
  46: mad r1.yzw, r5.xxyz, r0.xxxx, r1.yyzw
  47: sample r2.xyzw, r2.zwzz, t8.xyzw, s8
  48: mul r2.x, r2.w, r2.x
  49: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  50: mul r2.xy, r2.xyxx, cb0[10].zzzz
  51: dp2 r2.w, r2.xyxx, r2.xyxx
  52: min r2.w, r2.w, l(1.000000)
  53: add r2.w, -r2.w, l(1.000000)
  54: sqrt r2.z, r2.w
  55: mad r1.yzw, r2.xxyz, r0.zzzz, r1.yyzw
  56: sample r2.xyzw, r3.xyxx, t9.xyzw, s9
  57: mul r2.x, r2.w, r2.x
  58: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  59: mul r2.xy, r2.xyxx, cb0[10].wwww
  60: dp2 r2.w, r2.xyxx, r2.xyxx
  61: min r2.w, r2.w, l(1.000000)
  62: add r2.w, -r2.w, l(1.000000)
  63: sqrt r2.z, r2.w
  64: mad r2.xyz, r2.xyzx, r0.wwww, r1.yzwy
  65: dp4 r0.x, r0.xyzw, cb0[11].xyzw
  66: add r2.w, r2.z, l(0.000010)
  67: dp3 r3.x, v1.xyzx, r2.xywx
  68: dp3 r3.y, v2.xyzx, r2.xywx
  69: dp3 r3.z, v3.xyzx, r2.xywx
  70: dp3 r0.y, r3.xyzx, r3.xyzx
  71: rsq r0.y, r0.y
  72: mul r2.xyz, r0.yyyy, r3.xyzx
  73: eq r0.y, cb2[0].x, l(1.000000)
  74: if_nz r0.y
  75:   eq r0.y, cb2[0].y, l(1.000000)
  76:   mul r1.yzw, v2.wwww, cb2[2].xxyz
  77:   mad r1.yzw, cb2[1].xxyz, v1.wwww, r1.yyzw
  78:   mad r1.yzw, cb2[3].xxyz, v3.wwww, r1.yyzw
  79:   add r1.yzw, r1.yyzw, cb2[4].xxyz
  80:   mov r3.y, v1.w
  81:   mov r3.z, v2.w
  82:   mov r3.w, v3.w
  83:   movc r0.yzw, r0.yyyy, r1.yyzw, r3.yyzw
  84:   add r0.yzw, r0.yyzw, -cb2[6].xxyz
  85:   mul r3.yzw, r0.yyzw, cb2[5].xxyz
  86:   mul r0.y, r3.y, l(0.250000)
  87:   mul r0.z, cb2[0].z, l(0.500000)
  88:   mad r0.w, -cb2[0].z, l(0.500000), l(0.250000)
  89:   max r0.y, r0.z, r0.y
  90:   min r3.x, r0.w, r0.y
  91:   sample r5.xyzw, r3.xzwx, t10.xyzw, s0
  92:   add r0.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  93:   sample r6.xyzw, r0.yzwy, t10.xyzw, s0
  94:   add r0.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  95:   sample r3.xyzw, r0.yzwy, t10.xyzw, s0
  96:   mov r2.w, l(1.000000)
  97:   dp4 r5.x, r5.xyzw, r2.xyzw
  98:   dp4 r5.y, r6.xyzw, r2.xyzw
  99:   dp4 r5.z, r3.xyzw, r2.xyzw
 100: else 
 101:   mov r2.w, l(1.000000)
 102:   dp4 r5.x, cb1[39].xyzw, r2.xyzw
 103:   dp4 r5.y, cb1[40].xyzw, r2.xyzw
 104:   dp4 r5.z, cb1[41].xyzw, r2.xyzw
 105: endif 
 106: add r0.yzw, r5.xxyz, v6.xxyz
 107: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
 108: log r0.yzw, r0.yyzw
 109: mul r0.yzw, r0.yyzw, l(0.000000, 0.416667, 0.416667, 0.416667)
 110: exp r0.yzw, r0.yyzw
 111: mad r0.yzw, r0.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
 112: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
 113: add r1.yzw, r4.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
 114: mad r3.xyz, r0.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
 115: mad r0.x, -r0.x, l(0.779084), l(0.779084)
 116: mul r1.yzw, r0.xxxx, r4.xxyz
 117: mul r0.xyz, r0.yzwy, r1.yzwy
 118: mad r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
 119: mul o0.xyz, r1.xxxx, r1.yzwy
 120: mov r3.w, r4.w
 121: mul o1.xyzw, r1.xxxx, r3.xyzw
 122: mul o2.xyz, r1.xxxx, r2.xyzx
 123: mov r0.w, l(1.000000)
 124: mul o3.xyzw, r1.xxxx, r0.xyzw
 125: mov o0.w, l(1.000000)
 126: mov o2.w, l(1.000000)
 127: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 40 math, 4 temp registers, 6 textures
Set 2D Texture "_Control" to slot 0
Set 2D Texture "_Splat0" to slot 1
Set 2D Texture "_Splat1" to slot 2
Set 2D Texture "_Splat2" to slot 3
Set 2D Texture "_Splat3" to slot 4
Set 2D Texture "_TerrainNormalmapTexture" to slot 5

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 192
  Float _Metallic1 at 196
  Float _Metallic2 at 200
  Float _Metallic3 at 204
  Float _Smoothness0 at 208
  Float _Smoothness1 at 212
  Float _Smoothness2 at 216
  Float _Smoothness3 at 220
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
// SV_InstanceID            0   x           6     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 4
   0: mad r0.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
   1: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
   2: add r1.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   3: mad r1.xy, v4.xyxx, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   4: mul r1.xy, r1.xyxx, cb0[5].xyxx
   5: sample r1.xyzw, r1.xyxx, t0.xyzw, s0
   6: dp4 r2.x, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   7: add r2.y, r2.x, l(0.001000)
   8: div r1.xyzw, r1.xyzw, r2.yyyy
   9: mul r0.xyzw, r0.xyzw, r1.xxxx
  10: mul r0.w, r0.w, cb0[13].x
  11: mad r2.yz, v4.xxyx, cb0[7].xxyx, cb0[7].zzwz
  12: sample r3.xyzw, r2.yzyy, t2.xyzw, s2
  13: mul r3.xyzw, r1.yyyy, r3.xyzw
  14: mul r3.w, r3.w, cb0[13].y
  15: add r0.xyzw, r0.xyzw, r3.xyzw
  16: mad r2.yz, v4.xxyx, cb0[8].xxyx, cb0[8].zzwz
  17: sample r3.xyzw, r2.yzyy, t3.xyzw, s3
  18: mul r3.xyzw, r1.zzzz, r3.xyzw
  19: mul r3.w, r3.w, cb0[13].z
  20: add r0.xyzw, r0.xyzw, r3.xyzw
  21: mad r2.yz, v4.xxyx, cb0[9].xxyx, cb0[9].zzwz
  22: sample r3.xyzw, r2.yzyy, t4.xyzw, s4
  23: mul r3.xyzw, r1.wwww, r3.xyzw
  24: dp4 r1.x, r1.xyzw, cb0[12].xyzw
  25: mul r3.w, r3.w, cb0[13].w
  26: add r0.xyzw, r0.xyzw, r3.xyzw
  27: mad r1.y, -r1.x, l(0.779084), l(0.779084)
  28: mul r1.yzw, r0.xxyz, r1.yyyy
  29: mul o0.xyz, r2.xxxx, r1.yzwy
  30: mov o0.w, l(1.000000)
  31: add r1.yzw, r0.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  32: mad r0.xyz, r1.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
  33: mul o1.xyzw, r2.xxxx, r0.xyzw
  34: sample r0.xyzw, v4.zwzz, t5.xyzw, s5
  35: mad r0.xyz, r0.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  36: dp3 r0.w, r0.xyzx, r0.xyzx
  37: rsq r0.w, r0.w
  38: mul r0.xyz, r0.wwww, r0.xyzx
  39: dp3 r1.x, v1.xyzx, r0.xyzx
  40: dp3 r1.y, v2.xyzx, r0.xyzx
  41: dp3 r1.z, v3.xyzx, r0.xyzx
  42: dp3 r0.x, r1.xyzx, r1.xyzx
  43: rsq r0.x, r0.x
  44: mul r0.xyz, r0.xxxx, r1.xyzx
  45: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  46: mul o2.xyz, r2.xxxx, r0.xyzx
  47: mov o3.xyzw, r2.xxxx
  48: mov o2.w, l(1.000000)
  49: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON LIGHTPROBE_SH 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 71 math, 7 temp registers, 9 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 1
Set 2D Texture "_Splat0" to slot 1 sampler slot 2
Set 2D Texture "_Splat1" to slot 2 sampler slot 3
Set 2D Texture "_Splat2" to slot 3 sampler slot 4
Set 2D Texture "_Splat3" to slot 4 sampler slot 5
Set 2D Texture "_TerrainNormalmapTexture" to slot 5 sampler slot 6
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 192
  Float _Metallic1 at 196
  Float _Metallic2 at 200
  Float _Metallic3 at 204
  Float _Smoothness0 at 208
  Float _Smoothness1 at 212
  Float _Smoothness2 at 216
  Float _Smoothness3 at 220
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: add r0.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   1: mad r0.xy, v4.xyxx, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   2: mul r0.xy, r0.xyxx, cb0[5].xyxx
   3: sample r0.xyzw, r0.xyxx, t0.xyzw, s1
   4: dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   5: add r1.y, r1.x, l(0.001000)
   6: div r0.xyzw, r0.xyzw, r1.yyyy
   7: mad r1.yz, v4.xxyx, cb0[6].xxyx, cb0[6].zzwz
   8: mad r2.xy, v4.xyxx, cb0[7].xyxx, cb0[7].zwzz
   9: mad r2.zw, v4.xxxy, cb0[8].xxxy, cb0[8].zzzw
  10: mad r3.xy, v4.xyxx, cb0[9].xyxx, cb0[9].zwzz
  11: sample r4.xyzw, r1.yzyy, t1.xyzw, s2
  12: mul r4.xyzw, r0.xxxx, r4.xyzw
  13: mul r4.w, r4.w, cb0[13].x
  14: sample r5.xyzw, r2.xyxx, t2.xyzw, s3
  15: mul r5.xyzw, r0.yyyy, r5.xyzw
  16: mul r5.w, r5.w, cb0[13].y
  17: add r4.xyzw, r4.xyzw, r5.xyzw
  18: sample r2.xyzw, r2.zwzz, t3.xyzw, s4
  19: mul r2.xyzw, r0.zzzz, r2.xyzw
  20: mul r2.w, r2.w, cb0[13].z
  21: add r2.xyzw, r2.xyzw, r4.xyzw
  22: sample r3.xyzw, r3.xyxx, t4.xyzw, s5
  23: mul r3.xyzw, r0.wwww, r3.xyzw
  24: mul r3.w, r3.w, cb0[13].w
  25: add r2.xyzw, r2.xyzw, r3.xyzw
  26: sample r3.xyzw, v4.zwzz, t5.xyzw, s6
  27: mad r1.yzw, r3.xxzy, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
  28: dp3 r3.x, r1.yzwy, r1.yzwy
  29: rsq r3.x, r3.x
  30: mul r1.yzw, r1.yyzw, r3.xxxx
  31: dp4 r0.x, r0.xyzw, cb0[12].xyzw
  32: dp3 r3.x, v1.xyzx, r1.yzwy
  33: dp3 r3.y, v2.xyzx, r1.yzwy
  34: dp3 r3.z, v3.xyzx, r1.yzwy
  35: dp3 r0.y, r3.xyzx, r3.xyzx
  36: rsq r0.y, r0.y
  37: mul r3.xyz, r0.yyyy, r3.xyzx
  38: eq r0.y, cb2[0].x, l(1.000000)
  39: if_nz r0.y
  40:   eq r0.y, cb2[0].y, l(1.000000)
  41:   mul r1.yzw, v2.wwww, cb2[2].xxyz
  42:   mad r1.yzw, cb2[1].xxyz, v1.wwww, r1.yyzw
  43:   mad r1.yzw, cb2[3].xxyz, v3.wwww, r1.yyzw
  44:   add r1.yzw, r1.yyzw, cb2[4].xxyz
  45:   mov r4.y, v1.w
  46:   mov r4.z, v2.w
  47:   mov r4.w, v3.w
  48:   movc r0.yzw, r0.yyyy, r1.yyzw, r4.yyzw
  49:   add r0.yzw, r0.yyzw, -cb2[6].xxyz
  50:   mul r4.yzw, r0.yyzw, cb2[5].xxyz
  51:   mul r0.y, r4.y, l(0.250000)
  52:   mul r0.z, cb2[0].z, l(0.500000)
  53:   mad r0.w, -cb2[0].z, l(0.500000), l(0.250000)
  54:   max r0.y, r0.z, r0.y
  55:   min r4.x, r0.w, r0.y
  56:   sample r5.xyzw, r4.xzwx, t6.xyzw, s0
  57:   add r0.yzw, r4.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  58:   sample r6.xyzw, r0.yzwy, t6.xyzw, s0
  59:   add r0.yzw, r4.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  60:   sample r4.xyzw, r0.yzwy, t6.xyzw, s0
  61:   mov r3.w, l(1.000000)
  62:   dp4 r5.x, r5.xyzw, r3.xyzw
  63:   dp4 r5.y, r6.xyzw, r3.xyzw
  64:   dp4 r5.z, r4.xyzw, r3.xyzw
  65: else 
  66:   mov r3.w, l(1.000000)
  67:   dp4 r5.x, cb1[39].xyzw, r3.xyzw
  68:   dp4 r5.y, cb1[40].xyzw, r3.xyzw
  69:   dp4 r5.z, cb1[41].xyzw, r3.xyzw
  70: endif 
  71: add r0.yzw, r5.xxyz, v6.xxyz
  72: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  73: log r0.yzw, r0.yyzw
  74: mul r0.yzw, r0.yyzw, l(0.000000, 0.416667, 0.416667, 0.416667)
  75: exp r0.yzw, r0.yyzw
  76: mad r0.yzw, r0.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
  77: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  78: add r1.yzw, r2.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  79: mad r4.xyz, r0.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
  80: mad r0.x, -r0.x, l(0.779084), l(0.779084)
  81: mul r1.yzw, r0.xxxx, r2.xxyz
  82: mul r0.xyz, r0.yzwy, r1.yzwy
  83: mad r2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  84: exp r0.xyz, -r0.xyzx
  85: mul o0.xyz, r1.xxxx, r1.yzwy
  86: mov r4.w, r2.w
  87: mul o1.xyzw, r1.xxxx, r4.xyzw
  88: mul o2.xyz, r1.xxxx, r2.xyzx
  89: mov r0.w, l(1.000000)
  90: mul o3.xyzw, r1.xxxx, r0.xyzw
  91: mov o0.w, l(1.000000)
  92: mov o2.w, l(1.000000)
  93: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON UNITY_HDR_ON 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 41 math, 4 temp registers, 6 textures
Set 2D Texture "_Control" to slot 0
Set 2D Texture "_Splat0" to slot 1
Set 2D Texture "_Splat1" to slot 2
Set 2D Texture "_Splat2" to slot 3
Set 2D Texture "_Splat3" to slot 4
Set 2D Texture "_TerrainNormalmapTexture" to slot 5

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 192
  Float _Metallic1 at 196
  Float _Metallic2 at 200
  Float _Metallic3 at 204
  Float _Smoothness0 at 208
  Float _Smoothness1 at 212
  Float _Smoothness2 at 216
  Float _Smoothness3 at 220
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
// SV_InstanceID            0   x           6     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 4
   0: mad r0.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
   1: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
   2: add r1.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   3: mad r1.xy, v4.xyxx, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   4: mul r1.xy, r1.xyxx, cb0[5].xyxx
   5: sample r1.xyzw, r1.xyxx, t0.xyzw, s0
   6: dp4 r2.x, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   7: add r2.y, r2.x, l(0.001000)
   8: div r1.xyzw, r1.xyzw, r2.yyyy
   9: mul r0.xyzw, r0.xyzw, r1.xxxx
  10: mul r0.w, r0.w, cb0[13].x
  11: mad r2.yz, v4.xxyx, cb0[7].xxyx, cb0[7].zzwz
  12: sample r3.xyzw, r2.yzyy, t2.xyzw, s2
  13: mul r3.xyzw, r1.yyyy, r3.xyzw
  14: mul r3.w, r3.w, cb0[13].y
  15: add r0.xyzw, r0.xyzw, r3.xyzw
  16: mad r2.yz, v4.xxyx, cb0[8].xxyx, cb0[8].zzwz
  17: sample r3.xyzw, r2.yzyy, t3.xyzw, s3
  18: mul r3.xyzw, r1.zzzz, r3.xyzw
  19: mul r3.w, r3.w, cb0[13].z
  20: add r0.xyzw, r0.xyzw, r3.xyzw
  21: mad r2.yz, v4.xxyx, cb0[9].xxyx, cb0[9].zzwz
  22: sample r3.xyzw, r2.yzyy, t4.xyzw, s4
  23: mul r3.xyzw, r1.wwww, r3.xyzw
  24: dp4 r1.x, r1.xyzw, cb0[12].xyzw
  25: mul r3.w, r3.w, cb0[13].w
  26: add r0.xyzw, r0.xyzw, r3.xyzw
  27: mad r1.y, -r1.x, l(0.779084), l(0.779084)
  28: mul r1.yzw, r0.xxyz, r1.yyyy
  29: mul o0.xyz, r2.xxxx, r1.yzwy
  30: mov o0.w, l(1.000000)
  31: add r1.yzw, r0.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  32: mad r0.xyz, r1.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
  33: mul o1.xyzw, r2.xxxx, r0.xyzw
  34: sample r0.xyzw, v4.zwzz, t5.xyzw, s5
  35: mad r0.xyz, r0.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  36: dp3 r0.w, r0.xyzx, r0.xyzx
  37: rsq r0.w, r0.w
  38: mul r0.xyz, r0.wwww, r0.xyzx
  39: dp3 r1.x, v1.xyzx, r0.xyzx
  40: dp3 r1.y, v2.xyzx, r0.xyzx
  41: dp3 r1.z, v3.xyzx, r0.xyzx
  42: dp3 r0.x, r1.xyzx, r1.xyzx
  43: rsq r0.x, r0.x
  44: mul r0.xyz, r0.xxxx, r1.xyzx
  45: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  46: mul o2.xyz, r2.xxxx, r0.xyzx
  47: mul o3.xyzw, r2.xxxx, l(0.000000, 0.000000, 0.000000, 1.000000)
  48: mov o2.w, l(1.000000)
  49: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON LIGHTPROBE_SH UNITY_HDR_ON 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 70 math, 7 temp registers, 9 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 1
Set 2D Texture "_Splat0" to slot 1 sampler slot 2
Set 2D Texture "_Splat1" to slot 2 sampler slot 3
Set 2D Texture "_Splat2" to slot 3 sampler slot 4
Set 2D Texture "_Splat3" to slot 4 sampler slot 5
Set 2D Texture "_TerrainNormalmapTexture" to slot 5 sampler slot 6
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 192
  Float _Metallic1 at 196
  Float _Metallic2 at 200
  Float _Metallic3 at 204
  Float _Smoothness0 at 208
  Float _Smoothness1 at 212
  Float _Smoothness2 at 216
  Float _Smoothness3 at 220
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: add r0.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   1: mad r0.xy, v4.xyxx, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   2: mul r0.xy, r0.xyxx, cb0[5].xyxx
   3: sample r0.xyzw, r0.xyxx, t0.xyzw, s1
   4: dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   5: add r1.y, r1.x, l(0.001000)
   6: div r0.xyzw, r0.xyzw, r1.yyyy
   7: mad r1.yz, v4.xxyx, cb0[6].xxyx, cb0[6].zzwz
   8: mad r2.xy, v4.xyxx, cb0[7].xyxx, cb0[7].zwzz
   9: mad r2.zw, v4.xxxy, cb0[8].xxxy, cb0[8].zzzw
  10: mad r3.xy, v4.xyxx, cb0[9].xyxx, cb0[9].zwzz
  11: sample r4.xyzw, r1.yzyy, t1.xyzw, s2
  12: mul r4.xyzw, r0.xxxx, r4.xyzw
  13: mul r4.w, r4.w, cb0[13].x
  14: sample r5.xyzw, r2.xyxx, t2.xyzw, s3
  15: mul r5.xyzw, r0.yyyy, r5.xyzw
  16: mul r5.w, r5.w, cb0[13].y
  17: add r4.xyzw, r4.xyzw, r5.xyzw
  18: sample r2.xyzw, r2.zwzz, t3.xyzw, s4
  19: mul r2.xyzw, r0.zzzz, r2.xyzw
  20: mul r2.w, r2.w, cb0[13].z
  21: add r2.xyzw, r2.xyzw, r4.xyzw
  22: sample r3.xyzw, r3.xyxx, t4.xyzw, s5
  23: mul r3.xyzw, r0.wwww, r3.xyzw
  24: mul r3.w, r3.w, cb0[13].w
  25: add r2.xyzw, r2.xyzw, r3.xyzw
  26: sample r3.xyzw, v4.zwzz, t5.xyzw, s6
  27: mad r1.yzw, r3.xxzy, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
  28: dp3 r3.x, r1.yzwy, r1.yzwy
  29: rsq r3.x, r3.x
  30: mul r1.yzw, r1.yyzw, r3.xxxx
  31: dp4 r0.x, r0.xyzw, cb0[12].xyzw
  32: dp3 r3.x, v1.xyzx, r1.yzwy
  33: dp3 r3.y, v2.xyzx, r1.yzwy
  34: dp3 r3.z, v3.xyzx, r1.yzwy
  35: dp3 r0.y, r3.xyzx, r3.xyzx
  36: rsq r0.y, r0.y
  37: mul r3.xyz, r0.yyyy, r3.xyzx
  38: eq r0.y, cb2[0].x, l(1.000000)
  39: if_nz r0.y
  40:   eq r0.y, cb2[0].y, l(1.000000)
  41:   mul r1.yzw, v2.wwww, cb2[2].xxyz
  42:   mad r1.yzw, cb2[1].xxyz, v1.wwww, r1.yyzw
  43:   mad r1.yzw, cb2[3].xxyz, v3.wwww, r1.yyzw
  44:   add r1.yzw, r1.yyzw, cb2[4].xxyz
  45:   mov r4.y, v1.w
  46:   mov r4.z, v2.w
  47:   mov r4.w, v3.w
  48:   movc r0.yzw, r0.yyyy, r1.yyzw, r4.yyzw
  49:   add r0.yzw, r0.yyzw, -cb2[6].xxyz
  50:   mul r4.yzw, r0.yyzw, cb2[5].xxyz
  51:   mul r0.y, r4.y, l(0.250000)
  52:   mul r0.z, cb2[0].z, l(0.500000)
  53:   mad r0.w, -cb2[0].z, l(0.500000), l(0.250000)
  54:   max r0.y, r0.z, r0.y
  55:   min r4.x, r0.w, r0.y
  56:   sample r5.xyzw, r4.xzwx, t6.xyzw, s0
  57:   add r0.yzw, r4.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  58:   sample r6.xyzw, r0.yzwy, t6.xyzw, s0
  59:   add r0.yzw, r4.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  60:   sample r4.xyzw, r0.yzwy, t6.xyzw, s0
  61:   mov r3.w, l(1.000000)
  62:   dp4 r5.x, r5.xyzw, r3.xyzw
  63:   dp4 r5.y, r6.xyzw, r3.xyzw
  64:   dp4 r5.z, r4.xyzw, r3.xyzw
  65: else 
  66:   mov r3.w, l(1.000000)
  67:   dp4 r5.x, cb1[39].xyzw, r3.xyzw
  68:   dp4 r5.y, cb1[40].xyzw, r3.xyzw
  69:   dp4 r5.z, cb1[41].xyzw, r3.xyzw
  70: endif 
  71: add r0.yzw, r5.xxyz, v6.xxyz
  72: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  73: log r0.yzw, r0.yyzw
  74: mul r0.yzw, r0.yyzw, l(0.000000, 0.416667, 0.416667, 0.416667)
  75: exp r0.yzw, r0.yyzw
  76: mad r0.yzw, r0.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
  77: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  78: add r1.yzw, r2.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  79: mad r4.xyz, r0.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
  80: mad r0.x, -r0.x, l(0.779084), l(0.779084)
  81: mul r1.yzw, r0.xxxx, r2.xxyz
  82: mul r0.xyz, r0.yzwy, r1.yzwy
  83: mad r2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  84: mul o0.xyz, r1.xxxx, r1.yzwy
  85: mov r4.w, r2.w
  86: mul o1.xyzw, r1.xxxx, r4.xyzw
  87: mul o2.xyz, r1.xxxx, r2.xyzx
  88: mov r0.w, l(1.000000)
  89: mul o3.xyzw, r1.xxxx, r0.xyzw
  90: mov o0.w, l(1.000000)
  91: mov o2.w, l(1.000000)
  92: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON 
Local Keywords: _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 86 math, 7 temp registers, 10 textures
Set 2D Texture "_Control" to slot 0
Set 2D Texture "_Splat0" to slot 1
Set 2D Texture "_Splat1" to slot 2
Set 2D Texture "_Splat2" to slot 3
Set 2D Texture "_Splat3" to slot 4
Set 2D Texture "_Normal0" to slot 5 sampler slot 6
Set 2D Texture "_Normal1" to slot 6 sampler slot 7
Set 2D Texture "_Normal2" to slot 7 sampler slot 8
Set 2D Texture "_Normal3" to slot 8 sampler slot 9
Set 2D Texture "_TerrainNormalmapTexture" to slot 9 sampler slot 5

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 192
  Float _NormalScale1 at 196
  Float _NormalScale2 at 200
  Float _NormalScale3 at 204
  Float _Metallic0 at 208
  Float _Metallic1 at 212
  Float _Metallic2 at 216
  Float _Metallic3 at 220
  Float _Smoothness0 at 224
  Float _Smoothness1 at 228
  Float _Smoothness2 at 232
  Float _Smoothness3 at 236
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
// SV_InstanceID            0   x           6     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: mad r0.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
   1: sample r1.xyzw, r0.xyxx, t1.xyzw, s1
   2: sample r0.xyzw, r0.xyxx, t5.xyzw, s6
   3: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   4: mad r2.xy, v4.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   5: mul r2.xy, r2.xyxx, cb0[5].xyxx
   6: sample r2.xyzw, r2.xyxx, t0.xyzw, s0
   7: dp4 r0.z, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   8: add r3.x, r0.z, l(0.001000)
   9: div r2.xyzw, r2.xyzw, r3.xxxx
  10: mul r1.xyzw, r1.xyzw, r2.xxxx
  11: mul r1.w, r1.w, cb0[14].x
  12: mad r3.xy, v4.xyxx, cb0[7].xyxx, cb0[7].zwzz
  13: sample r4.xyzw, r3.xyxx, t2.xyzw, s2
  14: sample r3.xyzw, r3.xyxx, t6.xyzw, s7
  15: mul r4.xyzw, r2.yyyy, r4.xyzw
  16: mul r4.w, r4.w, cb0[14].y
  17: add r1.xyzw, r1.xyzw, r4.xyzw
  18: mad r4.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  19: sample r5.xyzw, r4.xyxx, t3.xyzw, s3
  20: sample r4.xyzw, r4.xyxx, t7.xyzw, s8
  21: mul r5.xyzw, r2.zzzz, r5.xyzw
  22: mul r5.w, r5.w, cb0[14].z
  23: add r1.xyzw, r1.xyzw, r5.xyzw
  24: mad r5.xy, v4.xyxx, cb0[9].xyxx, cb0[9].zwzz
  25: sample r6.xyzw, r5.xyxx, t4.xyzw, s4
  26: sample r5.xyzw, r5.xyxx, t8.xyzw, s9
  27: mul r6.xyzw, r2.wwww, r6.xyzw
  28: mul r6.w, r6.w, cb0[14].w
  29: add r1.xyzw, r1.xyzw, r6.xyzw
  30: dp4 r3.z, r2.xyzw, cb0[13].xyzw
  31: mad r4.z, -r3.z, l(0.779084), l(0.779084)
  32: mul r6.xyz, r1.xyzx, r4.zzzz
  33: mul o0.xyz, r0.zzzz, r6.xyzx
  34: mov o0.w, l(1.000000)
  35: add r6.xyz, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  36: mad r1.xyz, r3.zzzz, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  37: mul o1.xyzw, r0.zzzz, r1.xyzw
  38: mul r0.x, r0.w, r0.x
  39: mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  40: mul r1.xy, r0.xyxx, cb0[12].xxxx
  41: dp2 r0.x, r1.xyxx, r1.xyxx
  42: min r0.x, r0.x, l(1.000000)
  43: add r0.x, -r0.x, l(1.000000)
  44: sqrt r1.z, r0.x
  45: mul r3.x, r3.w, r3.x
  46: mad r0.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  47: mul r3.xy, r0.xyxx, cb0[12].yyyy
  48: dp2 r0.x, r3.xyxx, r3.xyxx
  49: min r0.x, r0.x, l(1.000000)
  50: add r0.x, -r0.x, l(1.000000)
  51: sqrt r3.z, r0.x
  52: mul r0.xyw, r2.yyyy, r3.xyxz
  53: mad r0.xyw, r1.xyxz, r2.xxxx, r0.xyxw
  54: mul r4.x, r4.w, r4.x
  55: mad r1.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  56: mul r1.xy, r1.xyxx, cb0[12].zzzz
  57: dp2 r1.w, r1.xyxx, r1.xyxx
  58: min r1.w, r1.w, l(1.000000)
  59: add r1.w, -r1.w, l(1.000000)
  60: sqrt r1.z, r1.w
  61: mad r0.xyw, r1.xyxz, r2.zzzz, r0.xyxw
  62: mul r5.x, r5.w, r5.x
  63: mad r1.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  64: mul r1.xy, r1.xyxx, cb0[12].wwww
  65: dp2 r1.w, r1.xyxx, r1.xyxx
  66: min r1.w, r1.w, l(1.000000)
  67: add r1.w, -r1.w, l(1.000000)
  68: sqrt r1.z, r1.w
  69: mad r0.xyw, r1.xyxz, r2.wwww, r0.xyxw
  70: add r0.w, r0.w, l(0.000010)
  71: sample r1.xyzw, v4.zwzz, t9.xyzw, s5
  72: mad r1.xyz, r1.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  73: dp3 r1.w, r1.xyzx, r1.xyzx
  74: rsq r1.w, r1.w
  75: mul r1.xyz, r1.wwww, r1.xyzx
  76: mul r2.xyz, r1.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  77: mad r2.xyz, r1.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r2.xyzx
  78: dp2 r1.w, r2.xzxx, r2.xzxx
  79: rsq r1.w, r1.w
  80: mul r2.xyz, r1.wwww, r2.xyzx
  81: mul r3.xyz, r1.zxyz, r2.yzxy
  82: mad r3.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
  83: dp3 r1.w, r3.xyzx, r3.xyzx
  84: rsq r1.w, r1.w
  85: mul r3.xyz, r1.wwww, r3.xyzx
  86: mul r3.xyz, r0.yyyy, r3.xyzx
  87: mad r2.xyz, r0.xxxx, r2.xyzx, r3.xyzx
  88: mad r0.xyw, r0.wwww, r1.xyxz, r2.xyxz
  89: dp3 r1.x, v1.xyzx, r0.xywx
  90: dp3 r1.y, v2.xyzx, r0.xywx
  91: dp3 r1.z, v3.xyzx, r0.xywx
  92: dp3 r0.x, r1.xyzx, r1.xyzx
  93: rsq r0.x, r0.x
  94: mul r0.xyw, r0.xxxx, r1.xyxz
  95: mad r0.xyw, r0.xyxw, l(0.500000, 0.500000, 0.000000, 0.500000), l(0.500000, 0.500000, 0.000000, 0.500000)
  96: mul o2.xyz, r0.zzzz, r0.xywx
  97: mov o3.xyzw, r0.zzzz
  98: mov o2.w, l(1.000000)
  99: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON LIGHTPROBE_SH 
Local Keywords: _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 117 math, 7 temp registers, 13 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 1
Set 2D Texture "_Splat0" to slot 1 sampler slot 2
Set 2D Texture "_Splat1" to slot 2 sampler slot 3
Set 2D Texture "_Splat2" to slot 3 sampler slot 4
Set 2D Texture "_Splat3" to slot 4 sampler slot 5
Set 2D Texture "_Normal0" to slot 5 sampler slot 7
Set 2D Texture "_Normal1" to slot 6 sampler slot 8
Set 2D Texture "_Normal2" to slot 7 sampler slot 9
Set 2D Texture "_Normal3" to slot 8 sampler slot 10
Set 2D Texture "_TerrainNormalmapTexture" to slot 9 sampler slot 6
Set 3D Texture "unity_ProbeVolumeSH" to slot 10 sampler slot 0

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 192
  Float _NormalScale1 at 196
  Float _NormalScale2 at 200
  Float _NormalScale3 at 204
  Float _Metallic0 at 208
  Float _Metallic1 at 212
  Float _Metallic2 at 216
  Float _Metallic3 at 220
  Float _Smoothness0 at 224
  Float _Smoothness1 at 228
  Float _Smoothness2 at 232
  Float _Smoothness3 at 236
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture3d (float,float,float,float) t10
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: add r0.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   1: mad r0.xy, v4.xyxx, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   2: mul r0.xy, r0.xyxx, cb0[5].xyxx
   3: sample r0.xyzw, r0.xyxx, t0.xyzw, s1
   4: dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   5: add r1.y, r1.x, l(0.001000)
   6: div r0.xyzw, r0.xyzw, r1.yyyy
   7: mad r1.yz, v4.xxyx, cb0[6].xxyx, cb0[6].zzwz
   8: mad r2.xy, v4.xyxx, cb0[7].xyxx, cb0[7].zwzz
   9: mad r2.zw, v4.xxxy, cb0[8].xxxy, cb0[8].zzzw
  10: mad r3.xy, v4.xyxx, cb0[9].xyxx, cb0[9].zwzz
  11: sample r4.xyzw, r1.yzyy, t1.xyzw, s2
  12: mul r4.xyzw, r0.xxxx, r4.xyzw
  13: mul r4.w, r4.w, cb0[14].x
  14: sample r5.xyzw, r2.xyxx, t2.xyzw, s3
  15: mul r5.xyzw, r0.yyyy, r5.xyzw
  16: mul r5.w, r5.w, cb0[14].y
  17: add r4.xyzw, r4.xyzw, r5.xyzw
  18: sample r5.xyzw, r2.zwzz, t3.xyzw, s4
  19: mul r5.xyzw, r0.zzzz, r5.xyzw
  20: mul r5.w, r5.w, cb0[14].z
  21: add r4.xyzw, r4.xyzw, r5.xyzw
  22: sample r5.xyzw, r3.xyxx, t4.xyzw, s5
  23: mul r5.xyzw, r0.wwww, r5.xyzw
  24: mul r5.w, r5.w, cb0[14].w
  25: add r4.xyzw, r4.xyzw, r5.xyzw
  26: sample r5.xyzw, r1.yzyy, t5.xyzw, s7
  27: mul r5.x, r5.w, r5.x
  28: mad r1.yz, r5.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  29: mul r5.xy, r1.yzyy, cb0[12].xxxx
  30: dp2 r1.y, r5.xyxx, r5.xyxx
  31: min r1.y, r1.y, l(1.000000)
  32: add r1.y, -r1.y, l(1.000000)
  33: sqrt r5.z, r1.y
  34: sample r6.xyzw, r2.xyxx, t6.xyzw, s8
  35: mul r6.x, r6.w, r6.x
  36: mad r1.yz, r6.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  37: mul r6.xy, r1.yzyy, cb0[12].yyyy
  38: dp2 r1.y, r6.xyxx, r6.xyxx
  39: min r1.y, r1.y, l(1.000000)
  40: add r1.y, -r1.y, l(1.000000)
  41: sqrt r6.z, r1.y
  42: mul r1.yzw, r0.yyyy, r6.xxyz
  43: mad r1.yzw, r5.xxyz, r0.xxxx, r1.yyzw
  44: sample r2.xyzw, r2.zwzz, t7.xyzw, s9
  45: mul r2.x, r2.w, r2.x
  46: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  47: mul r2.xy, r2.xyxx, cb0[12].zzzz
  48: dp2 r2.w, r2.xyxx, r2.xyxx
  49: min r2.w, r2.w, l(1.000000)
  50: add r2.w, -r2.w, l(1.000000)
  51: sqrt r2.z, r2.w
  52: mad r1.yzw, r2.xxyz, r0.zzzz, r1.yyzw
  53: sample r2.xyzw, r3.xyxx, t8.xyzw, s10
  54: mul r2.x, r2.w, r2.x
  55: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  56: mul r2.xy, r2.xyxx, cb0[12].wwww
  57: dp2 r2.w, r2.xyxx, r2.xyxx
  58: min r2.w, r2.w, l(1.000000)
  59: add r2.w, -r2.w, l(1.000000)
  60: sqrt r2.z, r2.w
  61: mad r1.yzw, r2.xxyz, r0.wwww, r1.yyzw
  62: add r1.w, r1.w, l(0.000010)
  63: sample r2.xyzw, v4.zwzz, t9.xyzw, s6
  64: mad r2.xyz, r2.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  65: dp3 r2.w, r2.xyzx, r2.xyzx
  66: rsq r2.w, r2.w
  67: mul r2.xyz, r2.wwww, r2.xyzx
  68: mul r3.xyz, r2.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  69: mad r3.xyz, r2.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r3.xyzx
  70: dp2 r2.w, r3.xzxx, r3.xzxx
  71: rsq r2.w, r2.w
  72: mul r3.xyz, r2.wwww, r3.xyzx
  73: mul r5.xyz, r2.zxyz, r3.yzxy
  74: mad r5.xyz, r3.zxyz, r2.yzxy, -r5.xyzx
  75: dp3 r2.w, r5.xyzx, r5.xyzx
  76: rsq r2.w, r2.w
  77: mul r5.xyz, r2.wwww, r5.xyzx
  78: mul r5.xyz, r1.zzzz, r5.xyzx
  79: mad r3.xyz, r1.yyyy, r3.xyzx, r5.xyzx
  80: mad r1.yzw, r1.wwww, r2.xxyz, r3.xxyz
  81: dp4 r0.x, r0.xyzw, cb0[13].xyzw
  82: dp3 r2.x, v1.xyzx, r1.yzwy
  83: dp3 r2.y, v2.xyzx, r1.yzwy
  84: dp3 r2.z, v3.xyzx, r1.yzwy
  85: dp3 r0.y, r2.xyzx, r2.xyzx
  86: rsq r0.y, r0.y
  87: mul r2.xyz, r0.yyyy, r2.xyzx
  88: eq r0.y, cb2[0].x, l(1.000000)
  89: if_nz r0.y
  90:   eq r0.y, cb2[0].y, l(1.000000)
  91:   mul r1.yzw, v2.wwww, cb2[2].xxyz
  92:   mad r1.yzw, cb2[1].xxyz, v1.wwww, r1.yyzw
  93:   mad r1.yzw, cb2[3].xxyz, v3.wwww, r1.yyzw
  94:   add r1.yzw, r1.yyzw, cb2[4].xxyz
  95:   mov r3.y, v1.w
  96:   mov r3.z, v2.w
  97:   mov r3.w, v3.w
  98:   movc r0.yzw, r0.yyyy, r1.yyzw, r3.yyzw
  99:   add r0.yzw, r0.yyzw, -cb2[6].xxyz
 100:   mul r3.yzw, r0.yyzw, cb2[5].xxyz
 101:   mul r0.y, r3.y, l(0.250000)
 102:   mul r0.z, cb2[0].z, l(0.500000)
 103:   mad r0.w, -cb2[0].z, l(0.500000), l(0.250000)
 104:   max r0.y, r0.z, r0.y
 105:   min r3.x, r0.w, r0.y
 106:   sample r5.xyzw, r3.xzwx, t10.xyzw, s0
 107:   add r0.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
 108:   sample r6.xyzw, r0.yzwy, t10.xyzw, s0
 109:   add r0.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
 110:   sample r3.xyzw, r0.yzwy, t10.xyzw, s0
 111:   mov r2.w, l(1.000000)
 112:   dp4 r5.x, r5.xyzw, r2.xyzw
 113:   dp4 r5.y, r6.xyzw, r2.xyzw
 114:   dp4 r5.z, r3.xyzw, r2.xyzw
 115: else 
 116:   mov r2.w, l(1.000000)
 117:   dp4 r5.x, cb1[39].xyzw, r2.xyzw
 118:   dp4 r5.y, cb1[40].xyzw, r2.xyzw
 119:   dp4 r5.z, cb1[41].xyzw, r2.xyzw
 120: endif 
 121: add r0.yzw, r5.xxyz, v6.xxyz
 122: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
 123: log r0.yzw, r0.yyzw
 124: mul r0.yzw, r0.yyzw, l(0.000000, 0.416667, 0.416667, 0.416667)
 125: exp r0.yzw, r0.yyzw
 126: mad r0.yzw, r0.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
 127: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
 128: add r1.yzw, r4.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
 129: mad r3.xyz, r0.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
 130: mad r0.x, -r0.x, l(0.779084), l(0.779084)
 131: mul r1.yzw, r0.xxxx, r4.xxyz
 132: mul r0.xyz, r0.yzwy, r1.yzwy
 133: mad r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
 134: exp r0.xyz, -r0.xyzx
 135: mul o0.xyz, r1.xxxx, r1.yzwy
 136: mov r3.w, r4.w
 137: mul o1.xyzw, r1.xxxx, r3.xyzw
 138: mul o2.xyz, r1.xxxx, r2.xyzx
 139: mov r0.w, l(1.000000)
 140: mul o3.xyzw, r1.xxxx, r0.xyzw
 141: mov o0.w, l(1.000000)
 142: mov o2.w, l(1.000000)
 143: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON UNITY_HDR_ON 
Local Keywords: _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 87 math, 7 temp registers, 10 textures
Set 2D Texture "_Control" to slot 0
Set 2D Texture "_Splat0" to slot 1
Set 2D Texture "_Splat1" to slot 2
Set 2D Texture "_Splat2" to slot 3
Set 2D Texture "_Splat3" to slot 4
Set 2D Texture "_Normal0" to slot 5 sampler slot 6
Set 2D Texture "_Normal1" to slot 6 sampler slot 7
Set 2D Texture "_Normal2" to slot 7 sampler slot 8
Set 2D Texture "_Normal3" to slot 8 sampler slot 9
Set 2D Texture "_TerrainNormalmapTexture" to slot 9 sampler slot 5

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 192
  Float _NormalScale1 at 196
  Float _NormalScale2 at 200
  Float _NormalScale3 at 204
  Float _Metallic0 at 208
  Float _Metallic1 at 212
  Float _Metallic2 at 216
  Float _Metallic3 at 220
  Float _Smoothness0 at 224
  Float _Smoothness1 at 228
  Float _Smoothness2 at 232
  Float _Smoothness3 at 236
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
// SV_InstanceID            0   x           6     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: mad r0.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
   1: sample r1.xyzw, r0.xyxx, t1.xyzw, s1
   2: sample r0.xyzw, r0.xyxx, t5.xyzw, s6
   3: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   4: mad r2.xy, v4.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   5: mul r2.xy, r2.xyxx, cb0[5].xyxx
   6: sample r2.xyzw, r2.xyxx, t0.xyzw, s0
   7: dp4 r0.z, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   8: add r3.x, r0.z, l(0.001000)
   9: div r2.xyzw, r2.xyzw, r3.xxxx
  10: mul r1.xyzw, r1.xyzw, r2.xxxx
  11: mul r1.w, r1.w, cb0[14].x
  12: mad r3.xy, v4.xyxx, cb0[7].xyxx, cb0[7].zwzz
  13: sample r4.xyzw, r3.xyxx, t2.xyzw, s2
  14: sample r3.xyzw, r3.xyxx, t6.xyzw, s7
  15: mul r4.xyzw, r2.yyyy, r4.xyzw
  16: mul r4.w, r4.w, cb0[14].y
  17: add r1.xyzw, r1.xyzw, r4.xyzw
  18: mad r4.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  19: sample r5.xyzw, r4.xyxx, t3.xyzw, s3
  20: sample r4.xyzw, r4.xyxx, t7.xyzw, s8
  21: mul r5.xyzw, r2.zzzz, r5.xyzw
  22: mul r5.w, r5.w, cb0[14].z
  23: add r1.xyzw, r1.xyzw, r5.xyzw
  24: mad r5.xy, v4.xyxx, cb0[9].xyxx, cb0[9].zwzz
  25: sample r6.xyzw, r5.xyxx, t4.xyzw, s4
  26: sample r5.xyzw, r5.xyxx, t8.xyzw, s9
  27: mul r6.xyzw, r2.wwww, r6.xyzw
  28: mul r6.w, r6.w, cb0[14].w
  29: add r1.xyzw, r1.xyzw, r6.xyzw
  30: dp4 r3.z, r2.xyzw, cb0[13].xyzw
  31: mad r4.z, -r3.z, l(0.779084), l(0.779084)
  32: mul r6.xyz, r1.xyzx, r4.zzzz
  33: mul o0.xyz, r0.zzzz, r6.xyzx
  34: mov o0.w, l(1.000000)
  35: add r6.xyz, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  36: mad r1.xyz, r3.zzzz, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  37: mul o1.xyzw, r0.zzzz, r1.xyzw
  38: mul r0.x, r0.w, r0.x
  39: mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  40: mul r1.xy, r0.xyxx, cb0[12].xxxx
  41: dp2 r0.x, r1.xyxx, r1.xyxx
  42: min r0.x, r0.x, l(1.000000)
  43: add r0.x, -r0.x, l(1.000000)
  44: sqrt r1.z, r0.x
  45: mul r3.x, r3.w, r3.x
  46: mad r0.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  47: mul r3.xy, r0.xyxx, cb0[12].yyyy
  48: dp2 r0.x, r3.xyxx, r3.xyxx
  49: min r0.x, r0.x, l(1.000000)
  50: add r0.x, -r0.x, l(1.000000)
  51: sqrt r3.z, r0.x
  52: mul r0.xyw, r2.yyyy, r3.xyxz
  53: mad r0.xyw, r1.xyxz, r2.xxxx, r0.xyxw
  54: mul r4.x, r4.w, r4.x
  55: mad r1.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  56: mul r1.xy, r1.xyxx, cb0[12].zzzz
  57: dp2 r1.w, r1.xyxx, r1.xyxx
  58: min r1.w, r1.w, l(1.000000)
  59: add r1.w, -r1.w, l(1.000000)
  60: sqrt r1.z, r1.w
  61: mad r0.xyw, r1.xyxz, r2.zzzz, r0.xyxw
  62: mul r5.x, r5.w, r5.x
  63: mad r1.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  64: mul r1.xy, r1.xyxx, cb0[12].wwww
  65: dp2 r1.w, r1.xyxx, r1.xyxx
  66: min r1.w, r1.w, l(1.000000)
  67: add r1.w, -r1.w, l(1.000000)
  68: sqrt r1.z, r1.w
  69: mad r0.xyw, r1.xyxz, r2.wwww, r0.xyxw
  70: add r0.w, r0.w, l(0.000010)
  71: sample r1.xyzw, v4.zwzz, t9.xyzw, s5
  72: mad r1.xyz, r1.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  73: dp3 r1.w, r1.xyzx, r1.xyzx
  74: rsq r1.w, r1.w
  75: mul r1.xyz, r1.wwww, r1.xyzx
  76: mul r2.xyz, r1.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  77: mad r2.xyz, r1.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r2.xyzx
  78: dp2 r1.w, r2.xzxx, r2.xzxx
  79: rsq r1.w, r1.w
  80: mul r2.xyz, r1.wwww, r2.xyzx
  81: mul r3.xyz, r1.zxyz, r2.yzxy
  82: mad r3.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
  83: dp3 r1.w, r3.xyzx, r3.xyzx
  84: rsq r1.w, r1.w
  85: mul r3.xyz, r1.wwww, r3.xyzx
  86: mul r3.xyz, r0.yyyy, r3.xyzx
  87: mad r2.xyz, r0.xxxx, r2.xyzx, r3.xyzx
  88: mad r0.xyw, r0.wwww, r1.xyxz, r2.xyxz
  89: dp3 r1.x, v1.xyzx, r0.xywx
  90: dp3 r1.y, v2.xyzx, r0.xywx
  91: dp3 r1.z, v3.xyzx, r0.xywx
  92: dp3 r0.x, r1.xyzx, r1.xyzx
  93: rsq r0.x, r0.x
  94: mul r0.xyw, r0.xxxx, r1.xyxz
  95: mad r0.xyw, r0.xyxw, l(0.500000, 0.500000, 0.000000, 0.500000), l(0.500000, 0.500000, 0.000000, 0.500000)
  96: mul o2.xyz, r0.zzzz, r0.xywx
  97: mul o3.xyzw, r0.zzzz, l(0.000000, 0.000000, 0.000000, 1.000000)
  98: mov o2.w, l(1.000000)
  99: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON LIGHTPROBE_SH UNITY_HDR_ON 
Local Keywords: _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 116 math, 7 temp registers, 13 textures, 2 branches
Set 2D Texture "_Control" to slot 0 sampler slot 1
Set 2D Texture "_Splat0" to slot 1 sampler slot 2
Set 2D Texture "_Splat1" to slot 2 sampler slot 3
Set 2D Texture "_Splat2" to slot 3 sampler slot 4
Set 2D Texture "_Splat3" to slot 4 sampler slot 5
Set 2D Texture "_Normal0" to slot 5 sampler slot 7
Set 2D Texture "_Normal1" to slot 6 sampler slot 8
Set 2D Texture "_Normal2" to slot 7 sampler slot 9
Set 2D Texture "_Normal3" to slot 8 sampler slot 10
Set 2D Texture "_TerrainNormalmapTexture" to slot 9 sampler slot 6
Set 3D Texture "unity_ProbeVolumeSH" to slot 10 sampler slot 0

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 192
  Float _NormalScale1 at 196
  Float _NormalScale2 at 200
  Float _NormalScale3 at 204
  Float _Metallic0 at 208
  Float _Metallic1 at 212
  Float _Metallic2 at 216
  Float _Metallic3 at 220
  Float _Smoothness0 at 224
  Float _Smoothness1 at 228
  Float _Smoothness2 at 232
  Float _Smoothness3 at 236
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture3d (float,float,float,float) t10
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: add r0.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   1: mad r0.xy, v4.xyxx, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   2: mul r0.xy, r0.xyxx, cb0[5].xyxx
   3: sample r0.xyzw, r0.xyxx, t0.xyzw, s1
   4: dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   5: add r1.y, r1.x, l(0.001000)
   6: div r0.xyzw, r0.xyzw, r1.yyyy
   7: mad r1.yz, v4.xxyx, cb0[6].xxyx, cb0[6].zzwz
   8: mad r2.xy, v4.xyxx, cb0[7].xyxx, cb0[7].zwzz
   9: mad r2.zw, v4.xxxy, cb0[8].xxxy, cb0[8].zzzw
  10: mad r3.xy, v4.xyxx, cb0[9].xyxx, cb0[9].zwzz
  11: sample r4.xyzw, r1.yzyy, t1.xyzw, s2
  12: mul r4.xyzw, r0.xxxx, r4.xyzw
  13: mul r4.w, r4.w, cb0[14].x
  14: sample r5.xyzw, r2.xyxx, t2.xyzw, s3
  15: mul r5.xyzw, r0.yyyy, r5.xyzw
  16: mul r5.w, r5.w, cb0[14].y
  17: add r4.xyzw, r4.xyzw, r5.xyzw
  18: sample r5.xyzw, r2.zwzz, t3.xyzw, s4
  19: mul r5.xyzw, r0.zzzz, r5.xyzw
  20: mul r5.w, r5.w, cb0[14].z
  21: add r4.xyzw, r4.xyzw, r5.xyzw
  22: sample r5.xyzw, r3.xyxx, t4.xyzw, s5
  23: mul r5.xyzw, r0.wwww, r5.xyzw
  24: mul r5.w, r5.w, cb0[14].w
  25: add r4.xyzw, r4.xyzw, r5.xyzw
  26: sample r5.xyzw, r1.yzyy, t5.xyzw, s7
  27: mul r5.x, r5.w, r5.x
  28: mad r1.yz, r5.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  29: mul r5.xy, r1.yzyy, cb0[12].xxxx
  30: dp2 r1.y, r5.xyxx, r5.xyxx
  31: min r1.y, r1.y, l(1.000000)
  32: add r1.y, -r1.y, l(1.000000)
  33: sqrt r5.z, r1.y
  34: sample r6.xyzw, r2.xyxx, t6.xyzw, s8
  35: mul r6.x, r6.w, r6.x
  36: mad r1.yz, r6.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  37: mul r6.xy, r1.yzyy, cb0[12].yyyy
  38: dp2 r1.y, r6.xyxx, r6.xyxx
  39: min r1.y, r1.y, l(1.000000)
  40: add r1.y, -r1.y, l(1.000000)
  41: sqrt r6.z, r1.y
  42: mul r1.yzw, r0.yyyy, r6.xxyz
  43: mad r1.yzw, r5.xxyz, r0.xxxx, r1.yyzw
  44: sample r2.xyzw, r2.zwzz, t7.xyzw, s9
  45: mul r2.x, r2.w, r2.x
  46: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  47: mul r2.xy, r2.xyxx, cb0[12].zzzz
  48: dp2 r2.w, r2.xyxx, r2.xyxx
  49: min r2.w, r2.w, l(1.000000)
  50: add r2.w, -r2.w, l(1.000000)
  51: sqrt r2.z, r2.w
  52: mad r1.yzw, r2.xxyz, r0.zzzz, r1.yyzw
  53: sample r2.xyzw, r3.xyxx, t8.xyzw, s10
  54: mul r2.x, r2.w, r2.x
  55: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  56: mul r2.xy, r2.xyxx, cb0[12].wwww
  57: dp2 r2.w, r2.xyxx, r2.xyxx
  58: min r2.w, r2.w, l(1.000000)
  59: add r2.w, -r2.w, l(1.000000)
  60: sqrt r2.z, r2.w
  61: mad r1.yzw, r2.xxyz, r0.wwww, r1.yyzw
  62: add r1.w, r1.w, l(0.000010)
  63: sample r2.xyzw, v4.zwzz, t9.xyzw, s6
  64: mad r2.xyz, r2.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  65: dp3 r2.w, r2.xyzx, r2.xyzx
  66: rsq r2.w, r2.w
  67: mul r2.xyz, r2.wwww, r2.xyzx
  68: mul r3.xyz, r2.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  69: mad r3.xyz, r2.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r3.xyzx
  70: dp2 r2.w, r3.xzxx, r3.xzxx
  71: rsq r2.w, r2.w
  72: mul r3.xyz, r2.wwww, r3.xyzx
  73: mul r5.xyz, r2.zxyz, r3.yzxy
  74: mad r5.xyz, r3.zxyz, r2.yzxy, -r5.xyzx
  75: dp3 r2.w, r5.xyzx, r5.xyzx
  76: rsq r2.w, r2.w
  77: mul r5.xyz, r2.wwww, r5.xyzx
  78: mul r5.xyz, r1.zzzz, r5.xyzx
  79: mad r3.xyz, r1.yyyy, r3.xyzx, r5.xyzx
  80: mad r1.yzw, r1.wwww, r2.xxyz, r3.xxyz
  81: dp4 r0.x, r0.xyzw, cb0[13].xyzw
  82: dp3 r2.x, v1.xyzx, r1.yzwy
  83: dp3 r2.y, v2.xyzx, r1.yzwy
  84: dp3 r2.z, v3.xyzx, r1.yzwy
  85: dp3 r0.y, r2.xyzx, r2.xyzx
  86: rsq r0.y, r0.y
  87: mul r2.xyz, r0.yyyy, r2.xyzx
  88: eq r0.y, cb2[0].x, l(1.000000)
  89: if_nz r0.y
  90:   eq r0.y, cb2[0].y, l(1.000000)
  91:   mul r1.yzw, v2.wwww, cb2[2].xxyz
  92:   mad r1.yzw, cb2[1].xxyz, v1.wwww, r1.yyzw
  93:   mad r1.yzw, cb2[3].xxyz, v3.wwww, r1.yyzw
  94:   add r1.yzw, r1.yyzw, cb2[4].xxyz
  95:   mov r3.y, v1.w
  96:   mov r3.z, v2.w
  97:   mov r3.w, v3.w
  98:   movc r0.yzw, r0.yyyy, r1.yyzw, r3.yyzw
  99:   add r0.yzw, r0.yyzw, -cb2[6].xxyz
 100:   mul r3.yzw, r0.yyzw, cb2[5].xxyz
 101:   mul r0.y, r3.y, l(0.250000)
 102:   mul r0.z, cb2[0].z, l(0.500000)
 103:   mad r0.w, -cb2[0].z, l(0.500000), l(0.250000)
 104:   max r0.y, r0.z, r0.y
 105:   min r3.x, r0.w, r0.y
 106:   sample r5.xyzw, r3.xzwx, t10.xyzw, s0
 107:   add r0.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
 108:   sample r6.xyzw, r0.yzwy, t10.xyzw, s0
 109:   add r0.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
 110:   sample r3.xyzw, r0.yzwy, t10.xyzw, s0
 111:   mov r2.w, l(1.000000)
 112:   dp4 r5.x, r5.xyzw, r2.xyzw
 113:   dp4 r5.y, r6.xyzw, r2.xyzw
 114:   dp4 r5.z, r3.xyzw, r2.xyzw
 115: else 
 116:   mov r2.w, l(1.000000)
 117:   dp4 r5.x, cb1[39].xyzw, r2.xyzw
 118:   dp4 r5.y, cb1[40].xyzw, r2.xyzw
 119:   dp4 r5.z, cb1[41].xyzw, r2.xyzw
 120: endif 
 121: add r0.yzw, r5.xxyz, v6.xxyz
 122: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
 123: log r0.yzw, r0.yyzw
 124: mul r0.yzw, r0.yyzw, l(0.000000, 0.416667, 0.416667, 0.416667)
 125: exp r0.yzw, r0.yyzw
 126: mad r0.yzw, r0.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
 127: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
 128: add r1.yzw, r4.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
 129: mad r3.xyz, r0.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
 130: mad r0.x, -r0.x, l(0.779084), l(0.779084)
 131: mul r1.yzw, r0.xxxx, r4.xxyz
 132: mul r0.xyz, r0.yzwy, r1.yzwy
 133: mad r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
 134: mul o0.xyz, r1.xxxx, r1.yzwy
 135: mov r3.w, r4.w
 136: mul o1.xyzw, r1.xxxx, r3.xyzw
 137: mul o2.xyz, r1.xxxx, r2.xyzx
 138: mov r0.w, l(1.000000)
 139: mul o3.xyzw, r1.xxxx, r0.xyzw
 140: mov o0.w, l(1.000000)
 141: mov o2.w, l(1.000000)
 142: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 41 math, 4 temp registers, 7 textures
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 6
Set 2D Texture "_Control" to slot 1 sampler slot 0
Set 2D Texture "_Splat0" to slot 2 sampler slot 1
Set 2D Texture "_Splat1" to slot 3 sampler slot 2
Set 2D Texture "_Splat2" to slot 4 sampler slot 3
Set 2D Texture "_Splat3" to slot 5 sampler slot 4
Set 2D Texture "_TerrainNormalmapTexture" to slot 6 sampler slot 5

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 192
  Float _Metallic1 at 196
  Float _Metallic2 at 200
  Float _Metallic3 at 204
  Float _Smoothness0 at 208
  Float _Smoothness1 at 212
  Float _Smoothness2 at 216
  Float _Smoothness3 at 220
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
// SV_InstanceID            0   x           6     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 4
   0: sample r0.xyzw, v4.xyxx, t0.xyzw, s6
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: mad r0.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
   4: sample r0.xyzw, r0.xyxx, t2.xyzw, s1
   5: add r1.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   6: mad r1.xy, v4.xyxx, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   7: mul r1.xy, r1.xyxx, cb0[5].xyxx
   8: sample r1.xyzw, r1.xyxx, t1.xyzw, s0
   9: dp4 r2.x, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  10: add r2.y, r2.x, l(0.001000)
  11: div r1.xyzw, r1.xyzw, r2.yyyy
  12: mul r0.xyzw, r0.xyzw, r1.xxxx
  13: mul r0.w, r0.w, cb0[13].x
  14: mad r2.yz, v4.xxyx, cb0[7].xxyx, cb0[7].zzwz
  15: sample r3.xyzw, r2.yzyy, t3.xyzw, s2
  16: mul r3.xyzw, r1.yyyy, r3.xyzw
  17: mul r3.w, r3.w, cb0[13].y
  18: add r0.xyzw, r0.xyzw, r3.xyzw
  19: mad r2.yz, v4.xxyx, cb0[8].xxyx, cb0[8].zzwz
  20: sample r3.xyzw, r2.yzyy, t4.xyzw, s3
  21: mul r3.xyzw, r1.zzzz, r3.xyzw
  22: mul r3.w, r3.w, cb0[13].z
  23: add r0.xyzw, r0.xyzw, r3.xyzw
  24: mad r2.yz, v4.xxyx, cb0[9].xxyx, cb0[9].zzwz
  25: sample r3.xyzw, r2.yzyy, t5.xyzw, s4
  26: mul r3.xyzw, r1.wwww, r3.xyzw
  27: dp4 r1.x, r1.xyzw, cb0[12].xyzw
  28: mul r3.w, r3.w, cb0[13].w
  29: add r0.xyzw, r0.xyzw, r3.xyzw
  30: mad r1.y, -r1.x, l(0.779084), l(0.779084)
  31: mul r1.yzw, r0.xxyz, r1.yyyy
  32: mul o0.xyz, r2.xxxx, r1.yzwy
  33: mov o0.w, l(1.000000)
  34: add r1.yzw, r0.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  35: mad r0.xyz, r1.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
  36: mul o1.xyzw, r2.xxxx, r0.xyzw
  37: sample r0.xyzw, v4.zwzz, t6.xyzw, s5
  38: mad r0.xyz, r0.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  39: dp3 r0.w, r0.xyzx, r0.xyzx
  40: rsq r0.w, r0.w
  41: mul r0.xyz, r0.wwww, r0.xyzx
  42: dp3 r1.x, v1.xyzx, r0.xyzx
  43: dp3 r1.y, v2.xyzx, r0.xyzx
  44: dp3 r1.z, v3.xyzx, r0.xyzx
  45: dp3 r0.x, r1.xyzx, r1.xyzx
  46: rsq r0.x, r0.x
  47: mul r0.xyz, r0.xxxx, r1.xyzx
  48: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  49: mul o2.xyz, r2.xxxx, r0.xyzx
  50: mov o3.xyzw, r2.xxxx
  51: mov o2.w, l(1.000000)
  52: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON LIGHTPROBE_SH 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 72 math, 7 temp registers, 10 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 7
Set 2D Texture "_Control" to slot 1
Set 2D Texture "_Splat0" to slot 2
Set 2D Texture "_Splat1" to slot 3
Set 2D Texture "_Splat2" to slot 4
Set 2D Texture "_Splat3" to slot 5
Set 2D Texture "_TerrainNormalmapTexture" to slot 6
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 192
  Float _Metallic1 at 196
  Float _Metallic2 at 200
  Float _Metallic3 at 204
  Float _Smoothness0 at 208
  Float _Smoothness1 at 212
  Float _Smoothness2 at 216
  Float _Smoothness3 at 220
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v4.xyxx, t0.xyzw, s7
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: add r0.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   4: mad r0.xy, v4.xyxx, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   5: mul r0.xy, r0.xyxx, cb0[5].xyxx
   6: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
   7: dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   8: add r1.y, r1.x, l(0.001000)
   9: div r0.xyzw, r0.xyzw, r1.yyyy
  10: mad r1.yz, v4.xxyx, cb0[6].xxyx, cb0[6].zzwz
  11: mad r2.xy, v4.xyxx, cb0[7].xyxx, cb0[7].zwzz
  12: mad r2.zw, v4.xxxy, cb0[8].xxxy, cb0[8].zzzw
  13: mad r3.xy, v4.xyxx, cb0[9].xyxx, cb0[9].zwzz
  14: sample r4.xyzw, r1.yzyy, t2.xyzw, s2
  15: mul r4.xyzw, r0.xxxx, r4.xyzw
  16: mul r4.w, r4.w, cb0[13].x
  17: sample r5.xyzw, r2.xyxx, t3.xyzw, s3
  18: mul r5.xyzw, r0.yyyy, r5.xyzw
  19: mul r5.w, r5.w, cb0[13].y
  20: add r4.xyzw, r4.xyzw, r5.xyzw
  21: sample r2.xyzw, r2.zwzz, t4.xyzw, s4
  22: mul r2.xyzw, r0.zzzz, r2.xyzw
  23: mul r2.w, r2.w, cb0[13].z
  24: add r2.xyzw, r2.xyzw, r4.xyzw
  25: sample r3.xyzw, r3.xyxx, t5.xyzw, s5
  26: mul r3.xyzw, r0.wwww, r3.xyzw
  27: mul r3.w, r3.w, cb0[13].w
  28: add r2.xyzw, r2.xyzw, r3.xyzw
  29: sample r3.xyzw, v4.zwzz, t6.xyzw, s6
  30: mad r1.yzw, r3.xxzy, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
  31: dp3 r3.x, r1.yzwy, r1.yzwy
  32: rsq r3.x, r3.x
  33: mul r1.yzw, r1.yyzw, r3.xxxx
  34: dp4 r0.x, r0.xyzw, cb0[12].xyzw
  35: dp3 r3.x, v1.xyzx, r1.yzwy
  36: dp3 r3.y, v2.xyzx, r1.yzwy
  37: dp3 r3.z, v3.xyzx, r1.yzwy
  38: dp3 r0.y, r3.xyzx, r3.xyzx
  39: rsq r0.y, r0.y
  40: mul r3.xyz, r0.yyyy, r3.xyzx
  41: eq r0.y, cb2[0].x, l(1.000000)
  42: if_nz r0.y
  43:   eq r0.y, cb2[0].y, l(1.000000)
  44:   mul r1.yzw, v2.wwww, cb2[2].xxyz
  45:   mad r1.yzw, cb2[1].xxyz, v1.wwww, r1.yyzw
  46:   mad r1.yzw, cb2[3].xxyz, v3.wwww, r1.yyzw
  47:   add r1.yzw, r1.yyzw, cb2[4].xxyz
  48:   mov r4.y, v1.w
  49:   mov r4.z, v2.w
  50:   mov r4.w, v3.w
  51:   movc r0.yzw, r0.yyyy, r1.yyzw, r4.yyzw
  52:   add r0.yzw, r0.yyzw, -cb2[6].xxyz
  53:   mul r4.yzw, r0.yyzw, cb2[5].xxyz
  54:   mul r0.y, r4.y, l(0.250000)
  55:   mul r0.z, cb2[0].z, l(0.500000)
  56:   mad r0.w, -cb2[0].z, l(0.500000), l(0.250000)
  57:   max r0.y, r0.z, r0.y
  58:   min r4.x, r0.w, r0.y
  59:   sample r5.xyzw, r4.xzwx, t7.xyzw, s0
  60:   add r0.yzw, r4.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  61:   sample r6.xyzw, r0.yzwy, t7.xyzw, s0
  62:   add r0.yzw, r4.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  63:   sample r4.xyzw, r0.yzwy, t7.xyzw, s0
  64:   mov r3.w, l(1.000000)
  65:   dp4 r5.x, r5.xyzw, r3.xyzw
  66:   dp4 r5.y, r6.xyzw, r3.xyzw
  67:   dp4 r5.z, r4.xyzw, r3.xyzw
  68: else 
  69:   mov r3.w, l(1.000000)
  70:   dp4 r5.x, cb1[39].xyzw, r3.xyzw
  71:   dp4 r5.y, cb1[40].xyzw, r3.xyzw
  72:   dp4 r5.z, cb1[41].xyzw, r3.xyzw
  73: endif 
  74: add r0.yzw, r5.xxyz, v6.xxyz
  75: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  76: log r0.yzw, r0.yyzw
  77: mul r0.yzw, r0.yyzw, l(0.000000, 0.416667, 0.416667, 0.416667)
  78: exp r0.yzw, r0.yyzw
  79: mad r0.yzw, r0.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
  80: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  81: add r1.yzw, r2.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  82: mad r4.xyz, r0.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
  83: mad r0.x, -r0.x, l(0.779084), l(0.779084)
  84: mul r1.yzw, r0.xxxx, r2.xxyz
  85: mul r0.xyz, r0.yzwy, r1.yzwy
  86: mad r2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  87: exp r0.xyz, -r0.xyzx
  88: mul o0.xyz, r1.xxxx, r1.yzwy
  89: mov r4.w, r2.w
  90: mul o1.xyzw, r1.xxxx, r4.xyzw
  91: mul o2.xyz, r1.xxxx, r2.xyzx
  92: mov r0.w, l(1.000000)
  93: mul o3.xyzw, r1.xxxx, r0.xyzw
  94: mov o0.w, l(1.000000)
  95: mov o2.w, l(1.000000)
  96: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON UNITY_HDR_ON 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 42 math, 4 temp registers, 7 textures
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 6
Set 2D Texture "_Control" to slot 1 sampler slot 0
Set 2D Texture "_Splat0" to slot 2 sampler slot 1
Set 2D Texture "_Splat1" to slot 3 sampler slot 2
Set 2D Texture "_Splat2" to slot 4 sampler slot 3
Set 2D Texture "_Splat3" to slot 5 sampler slot 4
Set 2D Texture "_TerrainNormalmapTexture" to slot 6 sampler slot 5

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 192
  Float _Metallic1 at 196
  Float _Metallic2 at 200
  Float _Metallic3 at 204
  Float _Smoothness0 at 208
  Float _Smoothness1 at 212
  Float _Smoothness2 at 216
  Float _Smoothness3 at 220
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
// SV_InstanceID            0   x           6     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 4
   0: sample r0.xyzw, v4.xyxx, t0.xyzw, s6
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: mad r0.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
   4: sample r0.xyzw, r0.xyxx, t2.xyzw, s1
   5: add r1.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   6: mad r1.xy, v4.xyxx, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   7: mul r1.xy, r1.xyxx, cb0[5].xyxx
   8: sample r1.xyzw, r1.xyxx, t1.xyzw, s0
   9: dp4 r2.x, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  10: add r2.y, r2.x, l(0.001000)
  11: div r1.xyzw, r1.xyzw, r2.yyyy
  12: mul r0.xyzw, r0.xyzw, r1.xxxx
  13: mul r0.w, r0.w, cb0[13].x
  14: mad r2.yz, v4.xxyx, cb0[7].xxyx, cb0[7].zzwz
  15: sample r3.xyzw, r2.yzyy, t3.xyzw, s2
  16: mul r3.xyzw, r1.yyyy, r3.xyzw
  17: mul r3.w, r3.w, cb0[13].y
  18: add r0.xyzw, r0.xyzw, r3.xyzw
  19: mad r2.yz, v4.xxyx, cb0[8].xxyx, cb0[8].zzwz
  20: sample r3.xyzw, r2.yzyy, t4.xyzw, s3
  21: mul r3.xyzw, r1.zzzz, r3.xyzw
  22: mul r3.w, r3.w, cb0[13].z
  23: add r0.xyzw, r0.xyzw, r3.xyzw
  24: mad r2.yz, v4.xxyx, cb0[9].xxyx, cb0[9].zzwz
  25: sample r3.xyzw, r2.yzyy, t5.xyzw, s4
  26: mul r3.xyzw, r1.wwww, r3.xyzw
  27: dp4 r1.x, r1.xyzw, cb0[12].xyzw
  28: mul r3.w, r3.w, cb0[13].w
  29: add r0.xyzw, r0.xyzw, r3.xyzw
  30: mad r1.y, -r1.x, l(0.779084), l(0.779084)
  31: mul r1.yzw, r0.xxyz, r1.yyyy
  32: mul o0.xyz, r2.xxxx, r1.yzwy
  33: mov o0.w, l(1.000000)
  34: add r1.yzw, r0.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  35: mad r0.xyz, r1.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
  36: mul o1.xyzw, r2.xxxx, r0.xyzw
  37: sample r0.xyzw, v4.zwzz, t6.xyzw, s5
  38: mad r0.xyz, r0.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  39: dp3 r0.w, r0.xyzx, r0.xyzx
  40: rsq r0.w, r0.w
  41: mul r0.xyz, r0.wwww, r0.xyzx
  42: dp3 r1.x, v1.xyzx, r0.xyzx
  43: dp3 r1.y, v2.xyzx, r0.xyzx
  44: dp3 r1.z, v3.xyzx, r0.xyzx
  45: dp3 r0.x, r1.xyzx, r1.xyzx
  46: rsq r0.x, r0.x
  47: mul r0.xyz, r0.xxxx, r1.xyzx
  48: mad r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  49: mul o2.xyz, r2.xxxx, r0.xyzx
  50: mul o3.xyzw, r2.xxxx, l(0.000000, 0.000000, 0.000000, 1.000000)
  51: mov o2.w, l(1.000000)
  52: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON LIGHTPROBE_SH UNITY_HDR_ON 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 71 math, 7 temp registers, 10 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 7
Set 2D Texture "_Control" to slot 1
Set 2D Texture "_Splat0" to slot 2
Set 2D Texture "_Splat1" to slot 3
Set 2D Texture "_Splat2" to slot 4
Set 2D Texture "_Splat3" to slot 5
Set 2D Texture "_TerrainNormalmapTexture" to slot 6
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _Metallic0 at 192
  Float _Metallic1 at 196
  Float _Metallic2 at 200
  Float _Metallic3 at 204
  Float _Smoothness0 at 208
  Float _Smoothness1 at 212
  Float _Smoothness2 at 216
  Float _Smoothness3 at 220
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[14], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v4.xyxx, t0.xyzw, s7
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: add r0.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   4: mad r0.xy, v4.xyxx, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   5: mul r0.xy, r0.xyxx, cb0[5].xyxx
   6: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
   7: dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   8: add r1.y, r1.x, l(0.001000)
   9: div r0.xyzw, r0.xyzw, r1.yyyy
  10: mad r1.yz, v4.xxyx, cb0[6].xxyx, cb0[6].zzwz
  11: mad r2.xy, v4.xyxx, cb0[7].xyxx, cb0[7].zwzz
  12: mad r2.zw, v4.xxxy, cb0[8].xxxy, cb0[8].zzzw
  13: mad r3.xy, v4.xyxx, cb0[9].xyxx, cb0[9].zwzz
  14: sample r4.xyzw, r1.yzyy, t2.xyzw, s2
  15: mul r4.xyzw, r0.xxxx, r4.xyzw
  16: mul r4.w, r4.w, cb0[13].x
  17: sample r5.xyzw, r2.xyxx, t3.xyzw, s3
  18: mul r5.xyzw, r0.yyyy, r5.xyzw
  19: mul r5.w, r5.w, cb0[13].y
  20: add r4.xyzw, r4.xyzw, r5.xyzw
  21: sample r2.xyzw, r2.zwzz, t4.xyzw, s4
  22: mul r2.xyzw, r0.zzzz, r2.xyzw
  23: mul r2.w, r2.w, cb0[13].z
  24: add r2.xyzw, r2.xyzw, r4.xyzw
  25: sample r3.xyzw, r3.xyxx, t5.xyzw, s5
  26: mul r3.xyzw, r0.wwww, r3.xyzw
  27: mul r3.w, r3.w, cb0[13].w
  28: add r2.xyzw, r2.xyzw, r3.xyzw
  29: sample r3.xyzw, v4.zwzz, t6.xyzw, s6
  30: mad r1.yzw, r3.xxzy, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
  31: dp3 r3.x, r1.yzwy, r1.yzwy
  32: rsq r3.x, r3.x
  33: mul r1.yzw, r1.yyzw, r3.xxxx
  34: dp4 r0.x, r0.xyzw, cb0[12].xyzw
  35: dp3 r3.x, v1.xyzx, r1.yzwy
  36: dp3 r3.y, v2.xyzx, r1.yzwy
  37: dp3 r3.z, v3.xyzx, r1.yzwy
  38: dp3 r0.y, r3.xyzx, r3.xyzx
  39: rsq r0.y, r0.y
  40: mul r3.xyz, r0.yyyy, r3.xyzx
  41: eq r0.y, cb2[0].x, l(1.000000)
  42: if_nz r0.y
  43:   eq r0.y, cb2[0].y, l(1.000000)
  44:   mul r1.yzw, v2.wwww, cb2[2].xxyz
  45:   mad r1.yzw, cb2[1].xxyz, v1.wwww, r1.yyzw
  46:   mad r1.yzw, cb2[3].xxyz, v3.wwww, r1.yyzw
  47:   add r1.yzw, r1.yyzw, cb2[4].xxyz
  48:   mov r4.y, v1.w
  49:   mov r4.z, v2.w
  50:   mov r4.w, v3.w
  51:   movc r0.yzw, r0.yyyy, r1.yyzw, r4.yyzw
  52:   add r0.yzw, r0.yyzw, -cb2[6].xxyz
  53:   mul r4.yzw, r0.yyzw, cb2[5].xxyz
  54:   mul r0.y, r4.y, l(0.250000)
  55:   mul r0.z, cb2[0].z, l(0.500000)
  56:   mad r0.w, -cb2[0].z, l(0.500000), l(0.250000)
  57:   max r0.y, r0.z, r0.y
  58:   min r4.x, r0.w, r0.y
  59:   sample r5.xyzw, r4.xzwx, t7.xyzw, s0
  60:   add r0.yzw, r4.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  61:   sample r6.xyzw, r0.yzwy, t7.xyzw, s0
  62:   add r0.yzw, r4.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  63:   sample r4.xyzw, r0.yzwy, t7.xyzw, s0
  64:   mov r3.w, l(1.000000)
  65:   dp4 r5.x, r5.xyzw, r3.xyzw
  66:   dp4 r5.y, r6.xyzw, r3.xyzw
  67:   dp4 r5.z, r4.xyzw, r3.xyzw
  68: else 
  69:   mov r3.w, l(1.000000)
  70:   dp4 r5.x, cb1[39].xyzw, r3.xyzw
  71:   dp4 r5.y, cb1[40].xyzw, r3.xyzw
  72:   dp4 r5.z, cb1[41].xyzw, r3.xyzw
  73: endif 
  74: add r0.yzw, r5.xxyz, v6.xxyz
  75: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  76: log r0.yzw, r0.yyzw
  77: mul r0.yzw, r0.yyzw, l(0.000000, 0.416667, 0.416667, 0.416667)
  78: exp r0.yzw, r0.yyzw
  79: mad r0.yzw, r0.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
  80: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  81: add r1.yzw, r2.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
  82: mad r4.xyz, r0.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
  83: mad r0.x, -r0.x, l(0.779084), l(0.779084)
  84: mul r1.yzw, r0.xxxx, r2.xxyz
  85: mul r0.xyz, r0.yzwy, r1.yzwy
  86: mad r2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  87: mul o0.xyz, r1.xxxx, r1.yzwy
  88: mov r4.w, r2.w
  89: mul o1.xyzw, r1.xxxx, r4.xyzw
  90: mul o2.xyz, r1.xxxx, r2.xyzx
  91: mov r0.w, l(1.000000)
  92: mul o3.xyzw, r1.xxxx, r0.xyzw
  93: mov o0.w, l(1.000000)
  94: mov o2.w, l(1.000000)
  95: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 87 math, 7 temp registers, 11 textures
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 10
Set 2D Texture "_Control" to slot 1 sampler slot 0
Set 2D Texture "_Splat0" to slot 2 sampler slot 1
Set 2D Texture "_Splat1" to slot 3 sampler slot 2
Set 2D Texture "_Splat2" to slot 4 sampler slot 3
Set 2D Texture "_Splat3" to slot 5 sampler slot 4
Set 2D Texture "_Normal0" to slot 6
Set 2D Texture "_Normal1" to slot 7
Set 2D Texture "_Normal2" to slot 8
Set 2D Texture "_Normal3" to slot 9
Set 2D Texture "_TerrainNormalmapTexture" to slot 10 sampler slot 5

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 192
  Float _NormalScale1 at 196
  Float _NormalScale2 at 200
  Float _NormalScale3 at 204
  Float _Metallic0 at 208
  Float _Metallic1 at 212
  Float _Metallic2 at 216
  Float _Metallic3 at 220
  Float _Smoothness0 at 224
  Float _Smoothness1 at 228
  Float _Smoothness2 at 232
  Float _Smoothness3 at 236
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
// SV_InstanceID            0   x           6     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v4.xyxx, t0.xyzw, s10
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: mad r0.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
   4: sample r1.xyzw, r0.xyxx, t2.xyzw, s1
   5: sample r0.xyzw, r0.xyxx, t6.xyzw, s6
   6: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   7: mad r2.xy, v4.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   8: mul r2.xy, r2.xyxx, cb0[5].xyxx
   9: sample r2.xyzw, r2.xyxx, t1.xyzw, s0
  10: dp4 r0.z, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  11: add r3.x, r0.z, l(0.001000)
  12: div r2.xyzw, r2.xyzw, r3.xxxx
  13: mul r1.xyzw, r1.xyzw, r2.xxxx
  14: mul r1.w, r1.w, cb0[14].x
  15: mad r3.xy, v4.xyxx, cb0[7].xyxx, cb0[7].zwzz
  16: sample r4.xyzw, r3.xyxx, t3.xyzw, s2
  17: sample r3.xyzw, r3.xyxx, t7.xyzw, s7
  18: mul r4.xyzw, r2.yyyy, r4.xyzw
  19: mul r4.w, r4.w, cb0[14].y
  20: add r1.xyzw, r1.xyzw, r4.xyzw
  21: mad r4.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  22: sample r5.xyzw, r4.xyxx, t4.xyzw, s3
  23: sample r4.xyzw, r4.xyxx, t8.xyzw, s8
  24: mul r5.xyzw, r2.zzzz, r5.xyzw
  25: mul r5.w, r5.w, cb0[14].z
  26: add r1.xyzw, r1.xyzw, r5.xyzw
  27: mad r5.xy, v4.xyxx, cb0[9].xyxx, cb0[9].zwzz
  28: sample r6.xyzw, r5.xyxx, t5.xyzw, s4
  29: sample r5.xyzw, r5.xyxx, t9.xyzw, s9
  30: mul r6.xyzw, r2.wwww, r6.xyzw
  31: mul r6.w, r6.w, cb0[14].w
  32: add r1.xyzw, r1.xyzw, r6.xyzw
  33: dp4 r3.z, r2.xyzw, cb0[13].xyzw
  34: mad r4.z, -r3.z, l(0.779084), l(0.779084)
  35: mul r6.xyz, r1.xyzx, r4.zzzz
  36: mul o0.xyz, r0.zzzz, r6.xyzx
  37: mov o0.w, l(1.000000)
  38: add r6.xyz, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  39: mad r1.xyz, r3.zzzz, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  40: mul o1.xyzw, r0.zzzz, r1.xyzw
  41: mul r0.x, r0.w, r0.x
  42: mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  43: mul r1.xy, r0.xyxx, cb0[12].xxxx
  44: dp2 r0.x, r1.xyxx, r1.xyxx
  45: min r0.x, r0.x, l(1.000000)
  46: add r0.x, -r0.x, l(1.000000)
  47: sqrt r1.z, r0.x
  48: mul r3.x, r3.w, r3.x
  49: mad r0.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  50: mul r3.xy, r0.xyxx, cb0[12].yyyy
  51: dp2 r0.x, r3.xyxx, r3.xyxx
  52: min r0.x, r0.x, l(1.000000)
  53: add r0.x, -r0.x, l(1.000000)
  54: sqrt r3.z, r0.x
  55: mul r0.xyw, r2.yyyy, r3.xyxz
  56: mad r0.xyw, r1.xyxz, r2.xxxx, r0.xyxw
  57: mul r4.x, r4.w, r4.x
  58: mad r1.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  59: mul r1.xy, r1.xyxx, cb0[12].zzzz
  60: dp2 r1.w, r1.xyxx, r1.xyxx
  61: min r1.w, r1.w, l(1.000000)
  62: add r1.w, -r1.w, l(1.000000)
  63: sqrt r1.z, r1.w
  64: mad r0.xyw, r1.xyxz, r2.zzzz, r0.xyxw
  65: mul r5.x, r5.w, r5.x
  66: mad r1.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  67: mul r1.xy, r1.xyxx, cb0[12].wwww
  68: dp2 r1.w, r1.xyxx, r1.xyxx
  69: min r1.w, r1.w, l(1.000000)
  70: add r1.w, -r1.w, l(1.000000)
  71: sqrt r1.z, r1.w
  72: mad r0.xyw, r1.xyxz, r2.wwww, r0.xyxw
  73: add r0.w, r0.w, l(0.000010)
  74: sample r1.xyzw, v4.zwzz, t10.xyzw, s5
  75: mad r1.xyz, r1.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  76: dp3 r1.w, r1.xyzx, r1.xyzx
  77: rsq r1.w, r1.w
  78: mul r1.xyz, r1.wwww, r1.xyzx
  79: mul r2.xyz, r1.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  80: mad r2.xyz, r1.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r2.xyzx
  81: dp2 r1.w, r2.xzxx, r2.xzxx
  82: rsq r1.w, r1.w
  83: mul r2.xyz, r1.wwww, r2.xyzx
  84: mul r3.xyz, r1.zxyz, r2.yzxy
  85: mad r3.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
  86: dp3 r1.w, r3.xyzx, r3.xyzx
  87: rsq r1.w, r1.w
  88: mul r3.xyz, r1.wwww, r3.xyzx
  89: mul r3.xyz, r0.yyyy, r3.xyzx
  90: mad r2.xyz, r0.xxxx, r2.xyzx, r3.xyzx
  91: mad r0.xyw, r0.wwww, r1.xyxz, r2.xyxz
  92: dp3 r1.x, v1.xyzx, r0.xywx
  93: dp3 r1.y, v2.xyzx, r0.xywx
  94: dp3 r1.z, v3.xyzx, r0.xywx
  95: dp3 r0.x, r1.xyzx, r1.xyzx
  96: rsq r0.x, r0.x
  97: mul r0.xyw, r0.xxxx, r1.xyxz
  98: mad r0.xyw, r0.xyxw, l(0.500000, 0.500000, 0.000000, 0.500000), l(0.500000, 0.500000, 0.000000, 0.500000)
  99: mul o2.xyz, r0.zzzz, r0.xywx
 100: mov o3.xyzw, r0.zzzz
 101: mov o2.w, l(1.000000)
 102: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON LIGHTPROBE_SH 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 118 math, 7 temp registers, 14 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 11
Set 2D Texture "_Control" to slot 1
Set 2D Texture "_Splat0" to slot 2
Set 2D Texture "_Splat1" to slot 3
Set 2D Texture "_Splat2" to slot 4
Set 2D Texture "_Splat3" to slot 5
Set 2D Texture "_Normal0" to slot 6 sampler slot 7
Set 2D Texture "_Normal1" to slot 7 sampler slot 8
Set 2D Texture "_Normal2" to slot 8 sampler slot 9
Set 2D Texture "_Normal3" to slot 9 sampler slot 10
Set 2D Texture "_TerrainNormalmapTexture" to slot 10 sampler slot 6
Set 3D Texture "unity_ProbeVolumeSH" to slot 11 sampler slot 0

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 192
  Float _NormalScale1 at 196
  Float _NormalScale2 at 200
  Float _NormalScale3 at 204
  Float _Metallic0 at 208
  Float _Metallic1 at 212
  Float _Metallic2 at 216
  Float _Metallic3 at 220
  Float _Smoothness0 at 224
  Float _Smoothness1 at 228
  Float _Smoothness2 at 232
  Float _Smoothness3 at 236
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture3d (float,float,float,float) t11
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v4.xyxx, t0.xyzw, s11
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: add r0.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   4: mad r0.xy, v4.xyxx, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   5: mul r0.xy, r0.xyxx, cb0[5].xyxx
   6: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
   7: dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   8: add r1.y, r1.x, l(0.001000)
   9: div r0.xyzw, r0.xyzw, r1.yyyy
  10: mad r1.yz, v4.xxyx, cb0[6].xxyx, cb0[6].zzwz
  11: mad r2.xy, v4.xyxx, cb0[7].xyxx, cb0[7].zwzz
  12: mad r2.zw, v4.xxxy, cb0[8].xxxy, cb0[8].zzzw
  13: mad r3.xy, v4.xyxx, cb0[9].xyxx, cb0[9].zwzz
  14: sample r4.xyzw, r1.yzyy, t2.xyzw, s2
  15: mul r4.xyzw, r0.xxxx, r4.xyzw
  16: mul r4.w, r4.w, cb0[14].x
  17: sample r5.xyzw, r2.xyxx, t3.xyzw, s3
  18: mul r5.xyzw, r0.yyyy, r5.xyzw
  19: mul r5.w, r5.w, cb0[14].y
  20: add r4.xyzw, r4.xyzw, r5.xyzw
  21: sample r5.xyzw, r2.zwzz, t4.xyzw, s4
  22: mul r5.xyzw, r0.zzzz, r5.xyzw
  23: mul r5.w, r5.w, cb0[14].z
  24: add r4.xyzw, r4.xyzw, r5.xyzw
  25: sample r5.xyzw, r3.xyxx, t5.xyzw, s5
  26: mul r5.xyzw, r0.wwww, r5.xyzw
  27: mul r5.w, r5.w, cb0[14].w
  28: add r4.xyzw, r4.xyzw, r5.xyzw
  29: sample r5.xyzw, r1.yzyy, t6.xyzw, s7
  30: mul r5.x, r5.w, r5.x
  31: mad r1.yz, r5.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  32: mul r5.xy, r1.yzyy, cb0[12].xxxx
  33: dp2 r1.y, r5.xyxx, r5.xyxx
  34: min r1.y, r1.y, l(1.000000)
  35: add r1.y, -r1.y, l(1.000000)
  36: sqrt r5.z, r1.y
  37: sample r6.xyzw, r2.xyxx, t7.xyzw, s8
  38: mul r6.x, r6.w, r6.x
  39: mad r1.yz, r6.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  40: mul r6.xy, r1.yzyy, cb0[12].yyyy
  41: dp2 r1.y, r6.xyxx, r6.xyxx
  42: min r1.y, r1.y, l(1.000000)
  43: add r1.y, -r1.y, l(1.000000)
  44: sqrt r6.z, r1.y
  45: mul r1.yzw, r0.yyyy, r6.xxyz
  46: mad r1.yzw, r5.xxyz, r0.xxxx, r1.yyzw
  47: sample r2.xyzw, r2.zwzz, t8.xyzw, s9
  48: mul r2.x, r2.w, r2.x
  49: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  50: mul r2.xy, r2.xyxx, cb0[12].zzzz
  51: dp2 r2.w, r2.xyxx, r2.xyxx
  52: min r2.w, r2.w, l(1.000000)
  53: add r2.w, -r2.w, l(1.000000)
  54: sqrt r2.z, r2.w
  55: mad r1.yzw, r2.xxyz, r0.zzzz, r1.yyzw
  56: sample r2.xyzw, r3.xyxx, t9.xyzw, s10
  57: mul r2.x, r2.w, r2.x
  58: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  59: mul r2.xy, r2.xyxx, cb0[12].wwww
  60: dp2 r2.w, r2.xyxx, r2.xyxx
  61: min r2.w, r2.w, l(1.000000)
  62: add r2.w, -r2.w, l(1.000000)
  63: sqrt r2.z, r2.w
  64: mad r1.yzw, r2.xxyz, r0.wwww, r1.yyzw
  65: add r1.w, r1.w, l(0.000010)
  66: sample r2.xyzw, v4.zwzz, t10.xyzw, s6
  67: mad r2.xyz, r2.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  68: dp3 r2.w, r2.xyzx, r2.xyzx
  69: rsq r2.w, r2.w
  70: mul r2.xyz, r2.wwww, r2.xyzx
  71: mul r3.xyz, r2.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  72: mad r3.xyz, r2.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r3.xyzx
  73: dp2 r2.w, r3.xzxx, r3.xzxx
  74: rsq r2.w, r2.w
  75: mul r3.xyz, r2.wwww, r3.xyzx
  76: mul r5.xyz, r2.zxyz, r3.yzxy
  77: mad r5.xyz, r3.zxyz, r2.yzxy, -r5.xyzx
  78: dp3 r2.w, r5.xyzx, r5.xyzx
  79: rsq r2.w, r2.w
  80: mul r5.xyz, r2.wwww, r5.xyzx
  81: mul r5.xyz, r1.zzzz, r5.xyzx
  82: mad r3.xyz, r1.yyyy, r3.xyzx, r5.xyzx
  83: mad r1.yzw, r1.wwww, r2.xxyz, r3.xxyz
  84: dp4 r0.x, r0.xyzw, cb0[13].xyzw
  85: dp3 r2.x, v1.xyzx, r1.yzwy
  86: dp3 r2.y, v2.xyzx, r1.yzwy
  87: dp3 r2.z, v3.xyzx, r1.yzwy
  88: dp3 r0.y, r2.xyzx, r2.xyzx
  89: rsq r0.y, r0.y
  90: mul r2.xyz, r0.yyyy, r2.xyzx
  91: eq r0.y, cb2[0].x, l(1.000000)
  92: if_nz r0.y
  93:   eq r0.y, cb2[0].y, l(1.000000)
  94:   mul r1.yzw, v2.wwww, cb2[2].xxyz
  95:   mad r1.yzw, cb2[1].xxyz, v1.wwww, r1.yyzw
  96:   mad r1.yzw, cb2[3].xxyz, v3.wwww, r1.yyzw
  97:   add r1.yzw, r1.yyzw, cb2[4].xxyz
  98:   mov r3.y, v1.w
  99:   mov r3.z, v2.w
 100:   mov r3.w, v3.w
 101:   movc r0.yzw, r0.yyyy, r1.yyzw, r3.yyzw
 102:   add r0.yzw, r0.yyzw, -cb2[6].xxyz
 103:   mul r3.yzw, r0.yyzw, cb2[5].xxyz
 104:   mul r0.y, r3.y, l(0.250000)
 105:   mul r0.z, cb2[0].z, l(0.500000)
 106:   mad r0.w, -cb2[0].z, l(0.500000), l(0.250000)
 107:   max r0.y, r0.z, r0.y
 108:   min r3.x, r0.w, r0.y
 109:   sample r5.xyzw, r3.xzwx, t11.xyzw, s0
 110:   add r0.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
 111:   sample r6.xyzw, r0.yzwy, t11.xyzw, s0
 112:   add r0.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
 113:   sample r3.xyzw, r0.yzwy, t11.xyzw, s0
 114:   mov r2.w, l(1.000000)
 115:   dp4 r5.x, r5.xyzw, r2.xyzw
 116:   dp4 r5.y, r6.xyzw, r2.xyzw
 117:   dp4 r5.z, r3.xyzw, r2.xyzw
 118: else 
 119:   mov r2.w, l(1.000000)
 120:   dp4 r5.x, cb1[39].xyzw, r2.xyzw
 121:   dp4 r5.y, cb1[40].xyzw, r2.xyzw
 122:   dp4 r5.z, cb1[41].xyzw, r2.xyzw
 123: endif 
 124: add r0.yzw, r5.xxyz, v6.xxyz
 125: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
 126: log r0.yzw, r0.yyzw
 127: mul r0.yzw, r0.yyzw, l(0.000000, 0.416667, 0.416667, 0.416667)
 128: exp r0.yzw, r0.yyzw
 129: mad r0.yzw, r0.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
 130: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
 131: add r1.yzw, r4.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
 132: mad r3.xyz, r0.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
 133: mad r0.x, -r0.x, l(0.779084), l(0.779084)
 134: mul r1.yzw, r0.xxxx, r4.xxyz
 135: mul r0.xyz, r0.yzwy, r1.yzwy
 136: mad r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
 137: exp r0.xyz, -r0.xyzx
 138: mul o0.xyz, r1.xxxx, r1.yzwy
 139: mov r3.w, r4.w
 140: mul o1.xyzw, r1.xxxx, r3.xyzw
 141: mul o2.xyz, r1.xxxx, r2.xyzx
 142: mov r0.w, l(1.000000)
 143: mul o3.xyzw, r1.xxxx, r0.xyzw
 144: mov o0.w, l(1.000000)
 145: mov o2.w, l(1.000000)
 146: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON UNITY_HDR_ON 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 88 math, 7 temp registers, 11 textures
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 10
Set 2D Texture "_Control" to slot 1 sampler slot 0
Set 2D Texture "_Splat0" to slot 2 sampler slot 1
Set 2D Texture "_Splat1" to slot 3 sampler slot 2
Set 2D Texture "_Splat2" to slot 4 sampler slot 3
Set 2D Texture "_Splat3" to slot 5 sampler slot 4
Set 2D Texture "_Normal0" to slot 6
Set 2D Texture "_Normal1" to slot 7
Set 2D Texture "_Normal2" to slot 8
Set 2D Texture "_Normal3" to slot 9
Set 2D Texture "_TerrainNormalmapTexture" to slot 10 sampler slot 5

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 192
  Float _NormalScale1 at 196
  Float _NormalScale2 at 200
  Float _NormalScale3 at 204
  Float _Metallic0 at 208
  Float _Metallic1 at 212
  Float _Metallic2 at 216
  Float _Metallic3 at 220
  Float _Smoothness0 at 224
  Float _Smoothness1 at 228
  Float _Smoothness2 at 232
  Float _Smoothness3 at 236
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
// SV_InstanceID            0   x           6     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_input_ps linear v1.xyz
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyzw
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v4.xyxx, t0.xyzw, s10
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: mad r0.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
   4: sample r1.xyzw, r0.xyxx, t2.xyzw, s1
   5: sample r0.xyzw, r0.xyxx, t6.xyzw, s6
   6: add r2.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   7: mad r2.xy, v4.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   8: mul r2.xy, r2.xyxx, cb0[5].xyxx
   9: sample r2.xyzw, r2.xyxx, t1.xyzw, s0
  10: dp4 r0.z, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  11: add r3.x, r0.z, l(0.001000)
  12: div r2.xyzw, r2.xyzw, r3.xxxx
  13: mul r1.xyzw, r1.xyzw, r2.xxxx
  14: mul r1.w, r1.w, cb0[14].x
  15: mad r3.xy, v4.xyxx, cb0[7].xyxx, cb0[7].zwzz
  16: sample r4.xyzw, r3.xyxx, t3.xyzw, s2
  17: sample r3.xyzw, r3.xyxx, t7.xyzw, s7
  18: mul r4.xyzw, r2.yyyy, r4.xyzw
  19: mul r4.w, r4.w, cb0[14].y
  20: add r1.xyzw, r1.xyzw, r4.xyzw
  21: mad r4.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
  22: sample r5.xyzw, r4.xyxx, t4.xyzw, s3
  23: sample r4.xyzw, r4.xyxx, t8.xyzw, s8
  24: mul r5.xyzw, r2.zzzz, r5.xyzw
  25: mul r5.w, r5.w, cb0[14].z
  26: add r1.xyzw, r1.xyzw, r5.xyzw
  27: mad r5.xy, v4.xyxx, cb0[9].xyxx, cb0[9].zwzz
  28: sample r6.xyzw, r5.xyxx, t5.xyzw, s4
  29: sample r5.xyzw, r5.xyxx, t9.xyzw, s9
  30: mul r6.xyzw, r2.wwww, r6.xyzw
  31: mul r6.w, r6.w, cb0[14].w
  32: add r1.xyzw, r1.xyzw, r6.xyzw
  33: dp4 r3.z, r2.xyzw, cb0[13].xyzw
  34: mad r4.z, -r3.z, l(0.779084), l(0.779084)
  35: mul r6.xyz, r1.xyzx, r4.zzzz
  36: mul o0.xyz, r0.zzzz, r6.xyzx
  37: mov o0.w, l(1.000000)
  38: add r6.xyz, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  39: mad r1.xyz, r3.zzzz, r6.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  40: mul o1.xyzw, r0.zzzz, r1.xyzw
  41: mul r0.x, r0.w, r0.x
  42: mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  43: mul r1.xy, r0.xyxx, cb0[12].xxxx
  44: dp2 r0.x, r1.xyxx, r1.xyxx
  45: min r0.x, r0.x, l(1.000000)
  46: add r0.x, -r0.x, l(1.000000)
  47: sqrt r1.z, r0.x
  48: mul r3.x, r3.w, r3.x
  49: mad r0.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  50: mul r3.xy, r0.xyxx, cb0[12].yyyy
  51: dp2 r0.x, r3.xyxx, r3.xyxx
  52: min r0.x, r0.x, l(1.000000)
  53: add r0.x, -r0.x, l(1.000000)
  54: sqrt r3.z, r0.x
  55: mul r0.xyw, r2.yyyy, r3.xyxz
  56: mad r0.xyw, r1.xyxz, r2.xxxx, r0.xyxw
  57: mul r4.x, r4.w, r4.x
  58: mad r1.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  59: mul r1.xy, r1.xyxx, cb0[12].zzzz
  60: dp2 r1.w, r1.xyxx, r1.xyxx
  61: min r1.w, r1.w, l(1.000000)
  62: add r1.w, -r1.w, l(1.000000)
  63: sqrt r1.z, r1.w
  64: mad r0.xyw, r1.xyxz, r2.zzzz, r0.xyxw
  65: mul r5.x, r5.w, r5.x
  66: mad r1.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  67: mul r1.xy, r1.xyxx, cb0[12].wwww
  68: dp2 r1.w, r1.xyxx, r1.xyxx
  69: min r1.w, r1.w, l(1.000000)
  70: add r1.w, -r1.w, l(1.000000)
  71: sqrt r1.z, r1.w
  72: mad r0.xyw, r1.xyxz, r2.wwww, r0.xyxw
  73: add r0.w, r0.w, l(0.000010)
  74: sample r1.xyzw, v4.zwzz, t10.xyzw, s5
  75: mad r1.xyz, r1.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  76: dp3 r1.w, r1.xyzx, r1.xyzx
  77: rsq r1.w, r1.w
  78: mul r1.xyz, r1.wwww, r1.xyzx
  79: mul r2.xyz, r1.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  80: mad r2.xyz, r1.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r2.xyzx
  81: dp2 r1.w, r2.xzxx, r2.xzxx
  82: rsq r1.w, r1.w
  83: mul r2.xyz, r1.wwww, r2.xyzx
  84: mul r3.xyz, r1.zxyz, r2.yzxy
  85: mad r3.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
  86: dp3 r1.w, r3.xyzx, r3.xyzx
  87: rsq r1.w, r1.w
  88: mul r3.xyz, r1.wwww, r3.xyzx
  89: mul r3.xyz, r0.yyyy, r3.xyzx
  90: mad r2.xyz, r0.xxxx, r2.xyzx, r3.xyzx
  91: mad r0.xyw, r0.wwww, r1.xyxz, r2.xyxz
  92: dp3 r1.x, v1.xyzx, r0.xywx
  93: dp3 r1.y, v2.xyzx, r0.xywx
  94: dp3 r1.z, v3.xyzx, r0.xywx
  95: dp3 r0.x, r1.xyzx, r1.xyzx
  96: rsq r0.x, r0.x
  97: mul r0.xyw, r0.xxxx, r1.xyxz
  98: mad r0.xyw, r0.xyxw, l(0.500000, 0.500000, 0.000000, 0.500000), l(0.500000, 0.500000, 0.000000, 0.500000)
  99: mul o2.xyz, r0.zzzz, r0.xywx
 100: mul o3.xyzw, r0.zzzz, l(0.000000, 0.000000, 0.000000, 1.000000)
 101: mov o2.w, l(1.000000)
 102: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON LIGHTPROBE_SH UNITY_HDR_ON 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 117 math, 7 temp registers, 14 textures, 2 branches
Set 2D Texture "_TerrainHolesTexture" to slot 0 sampler slot 11
Set 2D Texture "_Control" to slot 1
Set 2D Texture "_Splat0" to slot 2
Set 2D Texture "_Splat1" to slot 3
Set 2D Texture "_Splat2" to slot 4
Set 2D Texture "_Splat3" to slot 5
Set 2D Texture "_Normal0" to slot 6 sampler slot 7
Set 2D Texture "_Normal1" to slot 7 sampler slot 8
Set 2D Texture "_Normal2" to slot 8 sampler slot 9
Set 2D Texture "_Normal3" to slot 9 sampler slot 10
Set 2D Texture "_TerrainNormalmapTexture" to slot 10 sampler slot 6
Set 3D Texture "unity_ProbeVolumeSH" to slot 11 sampler slot 0

Constant Buffer "$Globals" (256 bytes) on slot 0 {
  Vector4 _Control_TexelSize at 80
  Vector4 _Splat0_ST at 96
  Vector4 _Splat1_ST at 112
  Vector4 _Splat2_ST at 128
  Vector4 _Splat3_ST at 144
  Float _NormalScale0 at 192
  Float _NormalScale1 at 196
  Float _NormalScale2 at 200
  Float _NormalScale3 at 204
  Float _Metallic0 at 208
  Float _Metallic1 at 212
  Float _Metallic2 at 216
  Float _Metallic3 at 220
  Float _Smoothness0 at 224
  Float _Smoothness1 at 228
  Float _Smoothness2 at 232
  Float _Smoothness3 at 236
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float       
// TEXCOORD                 6   xyz         6     NONE   float   xyz 
// SV_InstanceID            0   x           7     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_sampler s8, mode_default
      dcl_sampler s9, mode_default
      dcl_sampler s10, mode_default
      dcl_sampler s11, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_resource_texture2d (float,float,float,float) t7
      dcl_resource_texture2d (float,float,float,float) t8
      dcl_resource_texture2d (float,float,float,float) t9
      dcl_resource_texture2d (float,float,float,float) t10
      dcl_resource_texture3d (float,float,float,float) t11
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v4.xyxx, t0.xyzw, s11
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: add r0.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
   4: mad r0.xy, v4.xyxx, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   5: mul r0.xy, r0.xyxx, cb0[5].xyxx
   6: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
   7: dp4 r1.x, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
   8: add r1.y, r1.x, l(0.001000)
   9: div r0.xyzw, r0.xyzw, r1.yyyy
  10: mad r1.yz, v4.xxyx, cb0[6].xxyx, cb0[6].zzwz
  11: mad r2.xy, v4.xyxx, cb0[7].xyxx, cb0[7].zwzz
  12: mad r2.zw, v4.xxxy, cb0[8].xxxy, cb0[8].zzzw
  13: mad r3.xy, v4.xyxx, cb0[9].xyxx, cb0[9].zwzz
  14: sample r4.xyzw, r1.yzyy, t2.xyzw, s2
  15: mul r4.xyzw, r0.xxxx, r4.xyzw
  16: mul r4.w, r4.w, cb0[14].x
  17: sample r5.xyzw, r2.xyxx, t3.xyzw, s3
  18: mul r5.xyzw, r0.yyyy, r5.xyzw
  19: mul r5.w, r5.w, cb0[14].y
  20: add r4.xyzw, r4.xyzw, r5.xyzw
  21: sample r5.xyzw, r2.zwzz, t4.xyzw, s4
  22: mul r5.xyzw, r0.zzzz, r5.xyzw
  23: mul r5.w, r5.w, cb0[14].z
  24: add r4.xyzw, r4.xyzw, r5.xyzw
  25: sample r5.xyzw, r3.xyxx, t5.xyzw, s5
  26: mul r5.xyzw, r0.wwww, r5.xyzw
  27: mul r5.w, r5.w, cb0[14].w
  28: add r4.xyzw, r4.xyzw, r5.xyzw
  29: sample r5.xyzw, r1.yzyy, t6.xyzw, s7
  30: mul r5.x, r5.w, r5.x
  31: mad r1.yz, r5.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  32: mul r5.xy, r1.yzyy, cb0[12].xxxx
  33: dp2 r1.y, r5.xyxx, r5.xyxx
  34: min r1.y, r1.y, l(1.000000)
  35: add r1.y, -r1.y, l(1.000000)
  36: sqrt r5.z, r1.y
  37: sample r6.xyzw, r2.xyxx, t7.xyzw, s8
  38: mul r6.x, r6.w, r6.x
  39: mad r1.yz, r6.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  40: mul r6.xy, r1.yzyy, cb0[12].yyyy
  41: dp2 r1.y, r6.xyxx, r6.xyxx
  42: min r1.y, r1.y, l(1.000000)
  43: add r1.y, -r1.y, l(1.000000)
  44: sqrt r6.z, r1.y
  45: mul r1.yzw, r0.yyyy, r6.xxyz
  46: mad r1.yzw, r5.xxyz, r0.xxxx, r1.yyzw
  47: sample r2.xyzw, r2.zwzz, t8.xyzw, s9
  48: mul r2.x, r2.w, r2.x
  49: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  50: mul r2.xy, r2.xyxx, cb0[12].zzzz
  51: dp2 r2.w, r2.xyxx, r2.xyxx
  52: min r2.w, r2.w, l(1.000000)
  53: add r2.w, -r2.w, l(1.000000)
  54: sqrt r2.z, r2.w
  55: mad r1.yzw, r2.xxyz, r0.zzzz, r1.yyzw
  56: sample r2.xyzw, r3.xyxx, t9.xyzw, s10
  57: mul r2.x, r2.w, r2.x
  58: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  59: mul r2.xy, r2.xyxx, cb0[12].wwww
  60: dp2 r2.w, r2.xyxx, r2.xyxx
  61: min r2.w, r2.w, l(1.000000)
  62: add r2.w, -r2.w, l(1.000000)
  63: sqrt r2.z, r2.w
  64: mad r1.yzw, r2.xxyz, r0.wwww, r1.yyzw
  65: add r1.w, r1.w, l(0.000010)
  66: sample r2.xyzw, v4.zwzz, t10.xyzw, s6
  67: mad r2.xyz, r2.xzyx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  68: dp3 r2.w, r2.xyzx, r2.xyzx
  69: rsq r2.w, r2.w
  70: mul r2.xyz, r2.wwww, r2.xyzx
  71: mul r3.xyz, r2.yzxy, l(0.000000, 0.000000, 1.000000, 0.000000)
  72: mad r3.xyz, r2.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r3.xyzx
  73: dp2 r2.w, r3.xzxx, r3.xzxx
  74: rsq r2.w, r2.w
  75: mul r3.xyz, r2.wwww, r3.xyzx
  76: mul r5.xyz, r2.zxyz, r3.yzxy
  77: mad r5.xyz, r3.zxyz, r2.yzxy, -r5.xyzx
  78: dp3 r2.w, r5.xyzx, r5.xyzx
  79: rsq r2.w, r2.w
  80: mul r5.xyz, r2.wwww, r5.xyzx
  81: mul r5.xyz, r1.zzzz, r5.xyzx
  82: mad r3.xyz, r1.yyyy, r3.xyzx, r5.xyzx
  83: mad r1.yzw, r1.wwww, r2.xxyz, r3.xxyz
  84: dp4 r0.x, r0.xyzw, cb0[13].xyzw
  85: dp3 r2.x, v1.xyzx, r1.yzwy
  86: dp3 r2.y, v2.xyzx, r1.yzwy
  87: dp3 r2.z, v3.xyzx, r1.yzwy
  88: dp3 r0.y, r2.xyzx, r2.xyzx
  89: rsq r0.y, r0.y
  90: mul r2.xyz, r0.yyyy, r2.xyzx
  91: eq r0.y, cb2[0].x, l(1.000000)
  92: if_nz r0.y
  93:   eq r0.y, cb2[0].y, l(1.000000)
  94:   mul r1.yzw, v2.wwww, cb2[2].xxyz
  95:   mad r1.yzw, cb2[1].xxyz, v1.wwww, r1.yyzw
  96:   mad r1.yzw, cb2[3].xxyz, v3.wwww, r1.yyzw
  97:   add r1.yzw, r1.yyzw, cb2[4].xxyz
  98:   mov r3.y, v1.w
  99:   mov r3.z, v2.w
 100:   mov r3.w, v3.w
 101:   movc r0.yzw, r0.yyyy, r1.yyzw, r3.yyzw
 102:   add r0.yzw, r0.yyzw, -cb2[6].xxyz
 103:   mul r3.yzw, r0.yyzw, cb2[5].xxyz
 104:   mul r0.y, r3.y, l(0.250000)
 105:   mul r0.z, cb2[0].z, l(0.500000)
 106:   mad r0.w, -cb2[0].z, l(0.500000), l(0.250000)
 107:   max r0.y, r0.z, r0.y
 108:   min r3.x, r0.w, r0.y
 109:   sample r5.xyzw, r3.xzwx, t11.xyzw, s0
 110:   add r0.yzw, r3.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
 111:   sample r6.xyzw, r0.yzwy, t11.xyzw, s0
 112:   add r0.yzw, r3.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
 113:   sample r3.xyzw, r0.yzwy, t11.xyzw, s0
 114:   mov r2.w, l(1.000000)
 115:   dp4 r5.x, r5.xyzw, r2.xyzw
 116:   dp4 r5.y, r6.xyzw, r2.xyzw
 117:   dp4 r5.z, r3.xyzw, r2.xyzw
 118: else 
 119:   mov r2.w, l(1.000000)
 120:   dp4 r5.x, cb1[39].xyzw, r2.xyzw
 121:   dp4 r5.y, cb1[40].xyzw, r2.xyzw
 122:   dp4 r5.z, cb1[41].xyzw, r2.xyzw
 123: endif 
 124: add r0.yzw, r5.xxyz, v6.xxyz
 125: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
 126: log r0.yzw, r0.yyzw
 127: mul r0.yzw, r0.yyzw, l(0.000000, 0.416667, 0.416667, 0.416667)
 128: exp r0.yzw, r0.yyzw
 129: mad r0.yzw, r0.yyzw, l(0.000000, 1.055000, 1.055000, 1.055000), l(0.000000, -0.055000, -0.055000, -0.055000)
 130: max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
 131: add r1.yzw, r4.xxyz, l(0.000000, -0.220916, -0.220916, -0.220916)
 132: mad r3.xyz, r0.xxxx, r1.yzwy, l(0.220916, 0.220916, 0.220916, 0.000000)
 133: mad r0.x, -r0.x, l(0.779084), l(0.779084)
 134: mul r1.yzw, r0.xxxx, r4.xxyz
 135: mul r0.xyz, r0.yzwy, r1.yzwy
 136: mad r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
 137: mul o0.xyz, r1.xxxx, r1.yzwy
 138: mov r3.w, r4.w
 139: mul o1.xyzw, r1.xxxx, r3.xyzw
 140: mul o2.xyz, r1.xxxx, r2.xyzx
 141: mov r0.w, l(1.000000)
 142: mul o3.xyzw, r1.xxxx, r0.xyzw
 143: mov o0.w, l(1.000000)
 144: mov o2.w, l(1.000000)
 145: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 36 avg math (31..42)
 // Stats for Fragment shader:
 //        d3d11: 1 math, 1 texture
 Pass {
  Name "ShadowCaster"
  Tags { "LIGHTMODE"="SHADOWCASTER" "QUEUE"="Geometry-100" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyzw
      dcl_temps 3
   0: mul r0.xyz, v2.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v2.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v2.zzzz, r0.xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb3[18].xyzw
  22: mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
  25: div r1.x, cb1[5].x, r0.w
  26: min r1.x, r1.x, l(0.000000)
  27: max r1.x, r1.x, l(-1.000000)
  28: add r0.z, r0.z, r1.x
  29: min r1.x, r0.w, r0.z
  30: mov o0.xyw, r0.xyxw
  31: add r0.x, -r0.z, r1.x
  32: mad o0.z, cb1[5].y, r0.x, r0.z
  33: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  34: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  35: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  36: mad o1.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  37: mov o2.xy, v3.xyxx
  38: mov o2.zw, l(0,0,0,0)
  39: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xyz         1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_CUBE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyzw
      dcl_temps 3
   0: mul r0.xyz, v2.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v2.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v2.zzzz, r0.xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb3[18].xyzw
  22: mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
  25: min r1.x, r0.w, r0.z
  26: add r1.x, -r0.z, r1.x
  27: mad o0.z, cb1[5].y, r1.x, r0.z
  28: mov o0.xyw, r0.xyxw
  29: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  30: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  31: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  32: mad o1.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  33: mov o2.xy, v3.xyxx
  34: mov o2.zw, l(0,0,0,0)
  35: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xyz         1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyzw
      dcl_temps 3
   0: mul r0.xyz, v2.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v2.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v2.zzzz, r0.xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb3[18].xyzw
  22: mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
  25: div r1.x, cb1[5].x, r0.w
  26: min r1.x, r1.x, l(0.000000)
  27: max r1.x, r1.x, l(-1.000000)
  28: add r0.z, r0.z, r1.x
  29: min r1.x, r0.w, r0.z
  30: mov o0.xyw, r0.xyxw
  31: add r0.x, -r0.z, r1.x
  32: mad o0.z, cb1[5].y, r0.x, r0.z
  33: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  34: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  35: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  36: mad o1.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  37: mov o2.xy, v3.xyxx
  38: mov o2.zw, l(0,0,0,0)
  39: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xyz         1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_CUBE 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyzw
      dcl_temps 3
   0: mul r0.xyz, v2.yyyy, cb2[1].xyzx
   1: mad r0.xyz, cb2[0].xyzx, v2.xxxx, r0.xyzx
   2: mad r0.xyz, cb2[2].xyzx, v2.zzzz, r0.xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb3[18].xyzw
  22: mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
  25: min r1.x, r0.w, r0.z
  26: add r1.x, -r0.z, r1.x
  27: mad o0.z, cb1[5].y, r1.x, r0.z
  28: mov o0.xyw, r0.xyxw
  29: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  30: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  31: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  32: mad o1.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  33: mov o2.xy, v3.xyxx
  34: mov o2.zw, l(0,0,0,0)
  35: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xyz         1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_DEPTH 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 42 math, 5 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 5 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 6 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// SV_InstanceID            0   x           3     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[6], immediateIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_constantbuffer CB6[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyzw
      dcl_output o3.x
      dcl_temps 5
   0: dp3 r0.x, cb3[1].xyzx, cb3[1].xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, cb3[1].xyzx
   3: iadd r0.w, v8.x, cb5[0].x
   4: mul r1.xyzw, cb0[10].xyzw, cb6[r0.w + 0].zzzz
   5: mul r2.xyzw, r1.xyzw, cb6[r0.w + 0].xyxy
   6: mad r2.xy, cb0[10].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), r2.xyxx
   7: mad o2.xy, v0.xyxx, r1.zwzz, r2.zwzz
   8: mad r1.xy, v0.xyxx, r1.xyxx, r2.xyxx
   9: sample_l r2.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
  10: mov o2.zw, r1.xxxy
  11: mul r1.x, r2.x, cb0[11].y
  12: mul r2.xyzw, r1.xxxx, cb3[1].xyzw
  13: mul r1.xyz, r1.xxxx, cb3[1].xyzx
  14: add r3.xy, v0.xyxx, cb6[r0.w + 0].xyxx
  15: mul r3.xy, r3.xyxx, cb0[11].xzxx
  16: mul r3.xy, r3.xyxx, cb6[r0.w + 0].zzzz
  17: mad r2.xyzw, cb3[0].xyzw, r3.xxxx, r2.xyzw
  18: mad r2.xyzw, cb3[2].xyzw, r3.yyyy, r2.xyzw
  19: add r2.xyzw, r2.xyzw, cb3[3].xyzw
  20: mad r4.xyz, -r2.xyzx, cb1[0].wwww, cb1[0].xyzx
  21: dp3 r0.w, r4.xyzx, r4.xyzx
  22: rsq r0.w, r0.w
  23: mul r4.xyz, r0.wwww, r4.xyzx
  24: dp3 r0.w, r0.xyzx, r4.xyzx
  25: mad r0.w, -r0.w, r0.w, l(1.000000)
  26: sqrt r0.w, r0.w
  27: mul r0.w, r0.w, cb2[5].z
  28: mad r0.xyz, -r0.xyzx, r0.wwww, r2.xyzx
  29: ne r0.w, cb2[5].z, l(0.000000)
  30: movc r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
  31: mul r4.xyzw, r0.yyyy, cb4[18].xyzw
  32: mad r4.xyzw, cb4[17].xyzw, r0.xxxx, r4.xyzw
  33: mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r4.xyzw
  34: mad r0.xyzw, cb4[20].xyzw, r2.wwww, r0.xyzw
  35: div r1.w, cb2[5].x, r0.w
  36: min r1.w, r1.w, l(0.000000)
  37: max r1.w, r1.w, l(-1.000000)
  38: add r0.z, r0.z, r1.w
  39: min r1.w, r0.w, r0.z
  40: mov o0.xyw, r0.xyxw
  41: add r0.x, -r0.z, r1.w
  42: mad o0.z, cb2[5].y, r0.x, r0.z
  43: mad r0.xyz, cb3[0].xyzx, r3.xxxx, r1.xyzx
  44: mad r0.xyz, cb3[2].xyzx, r3.yyyy, r0.xyzx
  45: add o1.xyz, r0.xyzx, cb3[3].xyzx
  46: mov o3.x, v8.x
  47: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_CUBE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (224 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 5 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 6 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// SV_InstanceID            0   x           3     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[6], immediateIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_constantbuffer CB6[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyzw
      dcl_output o3.x
      dcl_temps 5
   0: dp3 r0.x, cb3[1].xyzx, cb3[1].xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, cb3[1].xyzx
   3: iadd r0.w, v8.x, cb5[0].x
   4: mul r1.xyzw, cb0[10].xyzw, cb6[r0.w + 0].zzzz
   5: mul r2.xyzw, r1.xyzw, cb6[r0.w + 0].xyxy
   6: mad r2.xy, cb0[10].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), r2.xyxx
   7: mad o2.xy, v0.xyxx, r1.zwzz, r2.zwzz
   8: mad r1.xy, v0.xyxx, r1.xyxx, r2.xyxx
   9: sample_l r2.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
  10: mov o2.zw, r1.xxxy
  11: mul r1.x, r2.x, cb0[11].y
  12: mul r2.xyzw, r1.xxxx, cb3[1].xyzw
  13: mul r1.xyz, r1.xxxx, cb3[1].xyzx
  14: add r3.xy, v0.xyxx, cb6[r0.w + 0].xyxx
  15: mul r3.xy, r3.xyxx, cb0[11].xzxx
  16: mul r3.xy, r3.xyxx, cb6[r0.w + 0].zzzz
  17: mad r2.xyzw, cb3[0].xyzw, r3.xxxx, r2.xyzw
  18: mad r2.xyzw, cb3[2].xyzw, r3.yyyy, r2.xyzw
  19: add r2.xyzw, r2.xyzw, cb3[3].xyzw
  20: mad r4.xyz, -r2.xyzx, cb1[0].wwww, cb1[0].xyzx
  21: dp3 r0.w, r4.xyzx, r4.xyzx
  22: rsq r0.w, r0.w
  23: mul r4.xyz, r0.wwww, r4.xyzx
  24: dp3 r0.w, r0.xyzx, r4.xyzx
  25: mad r0.w, -r0.w, r0.w, l(1.000000)
  26: sqrt r0.w, r0.w
  27: mul r0.w, r0.w, cb2[5].z
  28: mad r0.xyz, -r0.xyzx, r0.wwww, r2.xyzx
  29: ne r0.w, cb2[5].z, l(0.000000)
  30: movc r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
  31: mul r4.xyzw, r0.yyyy, cb4[18].xyzw
  32: mad r4.xyzw, cb4[17].xyzw, r0.xxxx, r4.xyzw
  33: mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r4.xyzw
  34: mad r0.xyzw, cb4[20].xyzw, r2.wwww, r0.xyzw
  35: min r1.w, r0.w, r0.z
  36: add r1.w, -r0.z, r1.w
  37: mad o0.z, cb2[5].y, r1.w, r0.z
  38: mov o0.xyw, r0.xyxw
  39: mad r0.xyz, cb3[0].xyzx, r3.xxxx, r1.xyzx
  40: mad r0.xyz, cb3[2].xyzx, r3.yyyy, r0.xyzx
  41: add o1.xyz, r0.xyzx, cb3[3].xyzx
  42: mov o3.x, v8.x
  43: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_DEPTH 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 42 math, 5 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 5 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 6 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// SV_InstanceID            0   x           3     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[6], immediateIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_constantbuffer CB6[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyzw
      dcl_output o3.x
      dcl_temps 5
   0: dp3 r0.x, cb3[1].xyzx, cb3[1].xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, cb3[1].xyzx
   3: iadd r0.w, v8.x, cb5[0].x
   4: mul r1.xyzw, cb0[10].xyzw, cb6[r0.w + 0].zzzz
   5: mul r2.xyzw, r1.xyzw, cb6[r0.w + 0].xyxy
   6: mad r2.xy, cb0[10].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), r2.xyxx
   7: mad o2.xy, v0.xyxx, r1.zwzz, r2.zwzz
   8: mad r1.xy, v0.xyxx, r1.xyxx, r2.xyxx
   9: sample_l r2.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
  10: mov o2.zw, r1.xxxy
  11: mul r1.x, r2.x, cb0[11].y
  12: mul r2.xyzw, r1.xxxx, cb3[1].xyzw
  13: mul r1.xyz, r1.xxxx, cb3[1].xyzx
  14: add r3.xy, v0.xyxx, cb6[r0.w + 0].xyxx
  15: mul r3.xy, r3.xyxx, cb0[11].xzxx
  16: mul r3.xy, r3.xyxx, cb6[r0.w + 0].zzzz
  17: mad r2.xyzw, cb3[0].xyzw, r3.xxxx, r2.xyzw
  18: mad r2.xyzw, cb3[2].xyzw, r3.yyyy, r2.xyzw
  19: add r2.xyzw, r2.xyzw, cb3[3].xyzw
  20: mad r4.xyz, -r2.xyzx, cb1[0].wwww, cb1[0].xyzx
  21: dp3 r0.w, r4.xyzx, r4.xyzx
  22: rsq r0.w, r0.w
  23: mul r4.xyz, r0.wwww, r4.xyzx
  24: dp3 r0.w, r0.xyzx, r4.xyzx
  25: mad r0.w, -r0.w, r0.w, l(1.000000)
  26: sqrt r0.w, r0.w
  27: mul r0.w, r0.w, cb2[5].z
  28: mad r0.xyz, -r0.xyzx, r0.wwww, r2.xyzx
  29: ne r0.w, cb2[5].z, l(0.000000)
  30: movc r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
  31: mul r4.xyzw, r0.yyyy, cb4[18].xyzw
  32: mad r4.xyzw, cb4[17].xyzw, r0.xxxx, r4.xyzw
  33: mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r4.xyzw
  34: mad r0.xyzw, cb4[20].xyzw, r2.wwww, r0.xyzw
  35: div r1.w, cb2[5].x, r0.w
  36: min r1.w, r1.w, l(0.000000)
  37: max r1.w, r1.w, l(-1.000000)
  38: add r0.z, r0.z, r1.w
  39: min r1.w, r0.w, r0.z
  40: mov o0.xyw, r0.xyxw
  41: add r0.x, -r0.z, r1.w
  42: mad o0.z, cb2[5].y, r0.x, r0.z
  43: mad r0.xyz, cb3[0].xyzx, r3.xxxx, r1.xyzx
  44: mad r0.xyz, cb3[2].xyzx, r3.yyyy, r0.xyzx
  45: add o1.xyz, r0.xyzx, cb3[3].xyzx
  46: mov o3.x, v8.x
  47: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_CUBE 
Local Keywords: _NORMALMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"

Set 2D Texture "_TerrainHeightmapTexture" to slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _TerrainHeightmapRecipSize at 160
  Vector4 _TerrainHeightmapScale at 176
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityDrawCallInfo" (16 bytes) on slot 5 {
  ScalarInt unity_BaseInstanceID at 0
}
Constant Buffer "UnityInstancing_Terrain" (32 bytes) on slot 6 {
  Struct TerrainArray [16][2] at 0 {
    Vector4 _TerrainPatchInstanceData at 0
  }
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy  
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float       
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
// SV_InstanceID            0   x           8   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz 
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// SV_InstanceID            0   x           3     NONE    uint   x   
//
      vs_4_0
      dcl_constantbuffer CB0[12], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[6], immediateIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_constantbuffer CB6[2], dynamicIndexed
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input v0.xy
      dcl_input_sgv v8.x, instance_id
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyz
      dcl_output o2.xyzw
      dcl_output o3.x
      dcl_temps 5
   0: dp3 r0.x, cb3[1].xyzx, cb3[1].xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, cb3[1].xyzx
   3: iadd r0.w, v8.x, cb5[0].x
   4: mul r1.xyzw, cb0[10].xyzw, cb6[r0.w + 0].zzzz
   5: mul r2.xyzw, r1.xyzw, cb6[r0.w + 0].xyxy
   6: mad r2.xy, cb0[10].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), r2.xyxx
   7: mad o2.xy, v0.xyxx, r1.zwzz, r2.zwzz
   8: mad r1.xy, v0.xyxx, r1.xyxx, r2.xyxx
   9: sample_l r2.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
  10: mov o2.zw, r1.xxxy
  11: mul r1.x, r2.x, cb0[11].y
  12: mul r2.xyzw, r1.xxxx, cb3[1].xyzw
  13: mul r1.xyz, r1.xxxx, cb3[1].xyzx
  14: add r3.xy, v0.xyxx, cb6[r0.w + 0].xyxx
  15: mul r3.xy, r3.xyxx, cb0[11].xzxx
  16: mul r3.xy, r3.xyxx, cb6[r0.w + 0].zzzz
  17: mad r2.xyzw, cb3[0].xyzw, r3.xxxx, r2.xyzw
  18: mad r2.xyzw, cb3[2].xyzw, r3.yyyy, r2.xyzw
  19: add r2.xyzw, r2.xyzw, cb3[3].xyzw
  20: mad r4.xyz, -r2.xyzx, cb1[0].wwww, cb1[0].xyzx
  21: dp3 r0.w, r4.xyzx, r4.xyzx
  22: rsq r0.w, r0.w
  23: mul r4.xyz, r0.wwww, r4.xyzx
  24: dp3 r0.w, r0.xyzx, r4.xyzx
  25: mad r0.w, -r0.w, r0.w, l(1.000000)
  26: sqrt r0.w, r0.w
  27: mul r0.w, r0.w, cb2[5].z
  28: mad r0.xyz, -r0.xyzx, r0.wwww, r2.xyzx
  29: ne r0.w, cb2[5].z, l(0.000000)
  30: movc r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
  31: mul r4.xyzw, r0.yyyy, cb4[18].xyzw
  32: mad r4.xyzw, cb4[17].xyzw, r0.xxxx, r4.xyzw
  33: mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r4.xyzw
  34: mad r0.xyzw, cb4[20].xyzw, r2.wwww, r0.xyzw
  35: min r1.w, r0.w, r0.z
  36: add r1.w, -r0.z, r1.w
  37: mad o0.z, cb2[5].y, r1.w, r0.z
  38: mov o0.xyw, r0.xyxw
  39: mad r0.xyz, cb3[0].xyzx, r3.xxxx, r1.xyzx
  40: mad r0.xyz, cb3[2].xyzx, r3.yyyy, r0.xyzx
  41: add o1.xyz, r0.xyzx, cb3[3].xyzx
  42: mov o3.x, v8.x
  43: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 1 math, 1 temp registers, 1 textures
Set 2D Texture "_TerrainHolesTexture" to slot 0

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xyz         1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v2.xy
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v2.xyxx, t0.xyzw, s0
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: mov o0.xyzw, l(0,0,0,0)
   4: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_CUBE 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 1 math, 1 temp registers, 1 textures
Set 2D Texture "_TerrainHolesTexture" to slot 0

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xyz         1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v2.xy
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v2.xyxx, t0.xyzw, s0
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: mov o0.xyzw, l(0,0,0,0)
   4: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 1 math, 1 temp registers, 1 textures
Set 2D Texture "_TerrainHolesTexture" to slot 0

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xyz         1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v2.xy
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v2.xyxx, t0.xyzw, s0
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: mov o0.xyzw, l(0,0,0,0)
   4: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_CUBE 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 1 math, 1 temp registers, 1 textures
Set 2D Texture "_TerrainHolesTexture" to slot 0

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xyz         1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v2.xy
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v2.xyxx, t0.xyzw, s0
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: mov o0.xyzw, l(0,0,0,0)
   4: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_DEPTH 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xyz         1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float       
// SV_InstanceID            0   x           3     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_CUBE 
Local Keywords: <none>
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xyz         1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float       
// SV_InstanceID            0   x           3     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_DEPTH 
Local Keywords: _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xyz         1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float       
// SV_InstanceID            0   x           3     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_CUBE 
Local Keywords: _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xyz         1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float       
// SV_InstanceID            0   x           3     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_DEPTH 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 1 math, 1 temp registers, 1 textures
Set 2D Texture "_TerrainHolesTexture" to slot 0

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xyz         1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float   xy  
// SV_InstanceID            0   x           3     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v2.xy
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v2.xyxx, t0.xyzw, s0
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: mov o0.xyzw, l(0,0,0,0)
   4: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_CUBE 
Local Keywords: _ALPHATEST_ON 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 1 math, 1 temp registers, 1 textures
Set 2D Texture "_TerrainHolesTexture" to slot 0

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xyz         1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float   xy  
// SV_InstanceID            0   x           3     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v2.xy
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v2.xyxx, t0.xyzw, s0
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: mov o0.xyzw, l(0,0,0,0)
   4: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_DEPTH 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 1 math, 1 temp registers, 1 textures
Set 2D Texture "_TerrainHolesTexture" to slot 0

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xyz         1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float   xy  
// SV_InstanceID            0   x           3     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v2.xy
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v2.xyxx, t0.xyzw, s0
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: mov o0.xyzw, l(0,0,0,0)
   4: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: INSTANCING_ON SHADOWS_CUBE 
Local Keywords: _ALPHATEST_ON _NORMALMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 1 math, 1 temp registers, 1 textures
Set 2D Texture "_TerrainHolesTexture" to slot 0

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 1   xyz         1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float   xy  
// SV_InstanceID            0   x           3     NONE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v2.xy
      dcl_output o0.xyzw
      dcl_temps 1
   0: sample r0.xyzw, v2.xyxx, t0.xyzw, s0
   1: eq r0.x, r0.x, l(0.000000)
   2: discard_nz r0.x
   3: mov o0.xyzw, l(0,0,0,0)
   4: ret 
// Approximately 0 instruction slots used


 }
 UsePass "Hidden/Nature/Terrain/Utilities/PICKING"
 UsePass "Hidden/Nature/Terrain/Utilities/SELECTION"
}
Dependency "AddPassShader" = "Hidden/TerrainEngine/Splatmap/Standard-AddPass"
Dependency "BaseMapShader" = "Hidden/TerrainEngine/Splatmap/Standard-Base"
Dependency "BaseMapGenShader" = "Hidden/TerrainEngine/Splatmap/Standard-BaseGen"
Fallback "Nature/Terrain/Diffuse"
}